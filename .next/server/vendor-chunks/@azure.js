"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@azure";
exports.ids = ["vendor-chunks/@azure"];
exports.modules = {

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/commonjs/state.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/commonjs/state.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    instrumenterImplementation: undefined,\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2NvbW1vbmpzL3N0YXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS10cmFjaW5nL2Rpc3QvY29tbW9uanMvc3RhdGUuanM/N2QyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGF0ZSA9IHZvaWQgMDtcbi8qKlxuICogQGludGVybmFsXG4gKlxuICogSG9sZHMgdGhlIHNpbmdsZXRvbiBpbnN0cnVtZW50ZXIsIHRvIGJlIHNoYXJlZCBhY3Jvc3MgQ0pTIGFuZCBFU00gaW1wb3J0cy5cbiAqL1xuZXhwb3J0cy5zdGF0ZSA9IHtcbiAgICBpbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbjogdW5kZWZpbmVkLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLWNqcy5janMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/AbortError.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vQWJvcnRFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0L2VzbS9BYm9ydEVycm9yLmpzPzUxMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIFRoaXMgZXJyb3IgaXMgdGhyb3duIHdoZW4gYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlvbiBoYXMgYmVlbiBhYm9ydGVkLlxuICogQ2hlY2sgZm9yIHRoaXMgZXJyb3IgYnkgdGVzdGluZyB0aGUgYG5hbWVgIHRoYXQgdGhlIG5hbWUgcHJvcGVydHkgb2YgdGhlXG4gKiBlcnJvciBtYXRjaGVzIGBcIkFib3J0RXJyb3JcImAuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICogY29udHJvbGxlci5hYm9ydCgpO1xuICogdHJ5IHtcbiAqICAgZG9Bc3luY1dvcmsoY29udHJvbGxlci5zaWduYWwpXG4gKiB9IGNhdGNoIChlKSB7XG4gKiAgIGlmIChlLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xuICogICAgIC8vIGhhbmRsZSBhYm9ydCBlcnJvciBoZXJlLlxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBYm9ydEVycm9yXCI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJvcnRFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* reexport safe */ _AbortError_js__WEBPACK_IMPORTED_MODULE_0__.AbortError)\n/* harmony export */ });\n/* harmony import */ var _AbortError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortError.js */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vaW5kZXguanM/ZWMzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiLi9BYm9ydEVycm9yLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyCredential: () => (/* binding */ AzureKeyCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nclass AzureKeyCredential {\n    _key;\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\n//# sourceMappingURL=azureKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZUtleUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWF1dGgvZGlzdC9lc20vYXp1cmVLZXlDcmVkZW50aWFsLmpzPzVmNjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEEgc3RhdGljLWtleS1iYXNlZCBjcmVkZW50aWFsIHRoYXQgc3VwcG9ydHMgdXBkYXRpbmdcbiAqIHRoZSB1bmRlcmx5aW5nIGtleSB2YWx1ZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEF6dXJlS2V5Q3JlZGVudGlhbCB7XG4gICAgX2tleTtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIGtleSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgZ2V0IGtleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlS2V5Q3JlZGVudGlhbCBmb3IgdXNlXG4gICAgICogd2l0aCBhIHNlcnZpY2UgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBrZXkgdG8gdXNlIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioa2V5KSB7XG4gICAgICAgIGlmICgha2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJrZXkgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgdGhlIHZhbHVlIG9mIHRoZSBrZXkuXG4gICAgICpcbiAgICAgKiBVcGRhdGVzIHdpbGwgdGFrZSBlZmZlY3QgdXBvbiB0aGUgbmV4dCByZXF1ZXN0IGFmdGVyXG4gICAgICogdXBkYXRpbmcgdGhlIGtleSB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBuZXdLZXkgLSBUaGUgbmV3IGtleSB2YWx1ZSB0byBiZSB1c2VkXG4gICAgICovXG4gICAgdXBkYXRlKG5ld0tleSkge1xuICAgICAgICB0aGlzLl9rZXkgPSBuZXdLZXk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVLZXlDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureNamedKeyCredential: () => (/* binding */ AzureNamedKeyCredential),\n/* harmony export */   isNamedKeyCredential: () => (/* binding */ isNamedKeyCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nclass AzureNamedKeyCredential {\n    _key;\n    _name;\n    /**\n     * The value of the key to be used in authentication.\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * The value of the name to be used in authentication.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Create an instance of an AzureNamedKeyCredential for use\n     * with a service client.\n     *\n     * @param name - The initial value of the name to use in authentication.\n     * @param key - The initial value of the key to use in authentication.\n     */\n    constructor(name, key) {\n        if (!name || !key) {\n            throw new TypeError(\"name and key must be non-empty strings\");\n        }\n        this._name = name;\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newName - The new name value to be used.\n     * @param newKey - The new key value to be used.\n     */\n    update(newName, newKey) {\n        if (!newName || !newKey) {\n            throw new TypeError(\"newName and newKey must be non-empty strings\");\n        }\n        this._name = newName;\n        this._key = newKey;\n    }\n}\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nfunction isNamedKeyCredential(credential) {\n    return ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"name\", \"key\"]) &&\n        typeof credential.key === \"string\" &&\n        typeof credential.name === \"string\");\n}\n//# sourceMappingURL=azureNamedKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQzBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLHdFQUFzQjtBQUNsQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWF1dGgvZGlzdC9lc20vYXp1cmVOYW1lZEtleUNyZWRlbnRpYWwuanM/MDZlZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGlzT2JqZWN0V2l0aFByb3BlcnRpZXMgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuLyoqXG4gKiBBIHN0YXRpYyBuYW1lL2tleS1iYXNlZCBjcmVkZW50aWFsIHRoYXQgc3VwcG9ydHMgdXBkYXRpbmdcbiAqIHRoZSB1bmRlcmx5aW5nIG5hbWUgYW5kIGtleSB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBenVyZU5hbWVkS2V5Q3JlZGVudGlhbCB7XG4gICAgX2tleTtcbiAgICBfbmFtZTtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIGtleSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqL1xuICAgIGdldCBrZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9rZXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBvZiB0aGUgbmFtZSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqL1xuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlTmFtZWRLZXlDcmVkZW50aWFsIGZvciB1c2VcbiAgICAgKiB3aXRoIGEgc2VydmljZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBuYW1lIHRvIHVzZSBpbiBhdXRoZW50aWNhdGlvbi5cbiAgICAgKiBAcGFyYW0ga2V5IC0gVGhlIGluaXRpYWwgdmFsdWUgb2YgdGhlIGtleSB0byB1c2UgaW4gYXV0aGVudGljYXRpb24uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobmFtZSwga2V5KSB7XG4gICAgICAgIGlmICghbmFtZSB8fCAha2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwibmFtZSBhbmQga2V5IG11c3QgYmUgbm9uLWVtcHR5IHN0cmluZ3NcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuX2tleSA9IGtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlIHRoZSB2YWx1ZSBvZiB0aGUga2V5LlxuICAgICAqXG4gICAgICogVXBkYXRlcyB3aWxsIHRha2UgZWZmZWN0IHVwb24gdGhlIG5leHQgcmVxdWVzdCBhZnRlclxuICAgICAqIHVwZGF0aW5nIHRoZSBrZXkgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV3TmFtZSAtIFRoZSBuZXcgbmFtZSB2YWx1ZSB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSBuZXdLZXkgLSBUaGUgbmV3IGtleSB2YWx1ZSB0byBiZSB1c2VkLlxuICAgICAqL1xuICAgIHVwZGF0ZShuZXdOYW1lLCBuZXdLZXkpIHtcbiAgICAgICAgaWYgKCFuZXdOYW1lIHx8ICFuZXdLZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJuZXdOYW1lIGFuZCBuZXdLZXkgbXVzdCBiZSBub24tZW1wdHkgc3RyaW5nc1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9uYW1lID0gbmV3TmFtZTtcbiAgICAgICAgdGhpcy5fa2V5ID0gbmV3S2V5O1xuICAgIH1cbn1cbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgTmFtZWRLZXlDcmVkZW50aWFsLlxuICpcbiAqIEBwYXJhbSBjcmVkZW50aWFsIC0gVGhlIGFzc3VtZWQgTmFtZWRLZXlDcmVkZW50aWFsIHRvIGJlIHRlc3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTmFtZWRLZXlDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gKGlzT2JqZWN0V2l0aFByb3BlcnRpZXMoY3JlZGVudGlhbCwgW1wibmFtZVwiLCBcImtleVwiXSkgJiZcbiAgICAgICAgdHlwZW9mIGNyZWRlbnRpYWwua2V5ID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgIHR5cGVvZiBjcmVkZW50aWFsLm5hbWUgPT09IFwic3RyaW5nXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVOYW1lZEtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureSASCredential: () => (/* binding */ AzureSASCredential),\n/* harmony export */   isSASCredential: () => (/* binding */ isSASCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nclass AzureSASCredential {\n    _signature;\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get signature() {\n        return this._signature;\n    }\n    /**\n     * Create an instance of an AzureSASCredential for use\n     * with a service client.\n     *\n     * @param signature - The initial value of the shared access signature to use in authentication\n     */\n    constructor(signature) {\n        if (!signature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = signature;\n    }\n    /**\n     * Change the value of the signature.\n     *\n     * Updates will take effect upon the next request after\n     * updating the signature value.\n     *\n     * @param newSignature - The new shared access signature value to be used\n     */\n    update(newSignature) {\n        if (!newSignature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = newSignature;\n    }\n}\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nfunction isSASCredential(credential) {\n    return ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"signature\"]) && typeof credential.signature === \"string\");\n}\n//# sourceMappingURL=azureSASCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZVNBU0NyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUMwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLHdFQUFzQjtBQUNsQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9henVyZVNBU0NyZWRlbnRpYWwuanM/NDRiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGlzT2JqZWN0V2l0aFByb3BlcnRpZXMgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuLyoqXG4gKiBBIHN0YXRpYy1zaWduYXR1cmUtYmFzZWQgY3JlZGVudGlhbCB0aGF0IHN1cHBvcnRzIHVwZGF0aW5nXG4gKiB0aGUgdW5kZXJseWluZyBzaWduYXR1cmUgdmFsdWUuXG4gKi9cbmV4cG9ydCBjbGFzcyBBenVyZVNBU0NyZWRlbnRpYWwge1xuICAgIF9zaWduYXR1cmU7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIG9mIHRoZSBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgZ2V0IHNpZ25hdHVyZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlU0FTQ3JlZGVudGlhbCBmb3IgdXNlXG4gICAgICogd2l0aCBhIHNlcnZpY2UgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB0byB1c2UgaW4gYXV0aGVudGljYXRpb25cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzaWduYXR1cmUpIHtcbiAgICAgICAgaWYgKCFzaWduYXR1cmUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NpZ25hdHVyZSA9IHNpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlIHRoZSB2YWx1ZSBvZiB0aGUgc2lnbmF0dXJlLlxuICAgICAqXG4gICAgICogVXBkYXRlcyB3aWxsIHRha2UgZWZmZWN0IHVwb24gdGhlIG5leHQgcmVxdWVzdCBhZnRlclxuICAgICAqIHVwZGF0aW5nIHRoZSBzaWduYXR1cmUgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV3U2lnbmF0dXJlIC0gVGhlIG5ldyBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB2YWx1ZSB0byBiZSB1c2VkXG4gICAgICovXG4gICAgdXBkYXRlKG5ld1NpZ25hdHVyZSkge1xuICAgICAgICBpZiAoIW5ld1NpZ25hdHVyZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic2hhcmVkIGFjY2VzcyBzaWduYXR1cmUgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2lnbmF0dXJlID0gbmV3U2lnbmF0dXJlO1xuICAgIH1cbn1cbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgU0FTQ3JlZGVudGlhbC5cbiAqXG4gKiBAcGFyYW0gY3JlZGVudGlhbCAtIFRoZSBhc3N1bWVkIFNBU0NyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTQVNDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gKGlzT2JqZWN0V2l0aFByb3BlcnRpZXMoY3JlZGVudGlhbCwgW1wic2lnbmF0dXJlXCJdKSAmJiB0eXBlb2YgY3JlZGVudGlhbC5zaWduYXR1cmUgPT09IFwic3RyaW5nXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVTQVNDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyCredential: () => (/* reexport safe */ _azureKeyCredential_js__WEBPACK_IMPORTED_MODULE_0__.AzureKeyCredential),\n/* harmony export */   AzureNamedKeyCredential: () => (/* reexport safe */ _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__.AzureNamedKeyCredential),\n/* harmony export */   AzureSASCredential: () => (/* reexport safe */ _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__.AzureSASCredential),\n/* harmony export */   isKeyCredential: () => (/* reexport safe */ _keyCredential_js__WEBPACK_IMPORTED_MODULE_1__.isKeyCredential),\n/* harmony export */   isNamedKeyCredential: () => (/* reexport safe */ _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__.isNamedKeyCredential),\n/* harmony export */   isSASCredential: () => (/* reexport safe */ _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__.isSASCredential),\n/* harmony export */   isTokenCredential: () => (/* reexport safe */ _tokenCredential_js__WEBPACK_IMPORTED_MODULE_4__.isTokenCredential)\n/* harmony export */ });\n/* harmony import */ var _azureKeyCredential_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./azureKeyCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/esm/azureKeyCredential.js\");\n/* harmony import */ var _keyCredential_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keyCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js\");\n/* harmony import */ var _azureNamedKeyCredential_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./azureNamedKeyCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/esm/azureNamedKeyCredential.js\");\n/* harmony import */ var _azureSASCredential_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azureSASCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/esm/azureSASCredential.js\");\n/* harmony import */ var _tokenCredential_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tokenCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js\");\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBNkQ7QUFDUjtBQUN5QztBQUNoQjtBQUNwQjtBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWF1dGgvZGlzdC9lc20vaW5kZXguanM/YmY0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBBenVyZUtleUNyZWRlbnRpYWwgfSBmcm9tIFwiLi9henVyZUtleUNyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IGlzS2V5Q3JlZGVudGlhbCB9IGZyb20gXCIuL2tleUNyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IEF6dXJlTmFtZWRLZXlDcmVkZW50aWFsLCBpc05hbWVkS2V5Q3JlZGVudGlhbCwgfSBmcm9tIFwiLi9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qc1wiO1xuZXhwb3J0IHsgQXp1cmVTQVNDcmVkZW50aWFsLCBpc1NBU0NyZWRlbnRpYWwgfSBmcm9tIFwiLi9henVyZVNBU0NyZWRlbnRpYWwuanNcIjtcbmV4cG9ydCB7IGlzVG9rZW5DcmVkZW50aWFsLCB9IGZyb20gXCIuL3Rva2VuQ3JlZGVudGlhbC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/keyCredential.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isKeyCredential: () => (/* binding */ isKeyCredential)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nfunction isKeyCredential(credential) {\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObjectWithProperties)(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n//# sourceMappingURL=keyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9rZXlDcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUMwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdFQUFzQjtBQUNqQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS9rZXlDcmVkZW50aWFsLmpzPzkyODYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBpc09iamVjdFdpdGhQcm9wZXJ0aWVzIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgS2V5Q3JlZGVudGlhbC5cbiAqXG4gKiBAcGFyYW0gY3JlZGVudGlhbCAtIFRoZSBhc3N1bWVkIEtleUNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNLZXlDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gaXNPYmplY3RXaXRoUHJvcGVydGllcyhjcmVkZW50aWFsLCBbXCJrZXlcIl0pICYmIHR5cGVvZiBjcmVkZW50aWFsLmtleSA9PT0gXCJzdHJpbmdcIjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/esm/keyCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/esm/tokenCredential.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBearerToken: () => (/* binding */ isBearerToken),\n/* harmony export */   isPopToken: () => (/* binding */ isPopToken),\n/* harmony export */   isTokenCredential: () => (/* binding */ isTokenCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nfunction isBearerToken(accessToken) {\n    return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nfunction isPopToken(accessToken) {\n    return accessToken.tokenType === \"pop\";\n}\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2VzbS90b2tlbkNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWF1dGgvZGlzdC9lc20vdG9rZW5DcmVkZW50aWFsLmpzPzc1YWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIGFjY2Vzc1Rva2VuIC0gQWNjZXNzIHRva2VuXG4gKiBAcmV0dXJucyBXaGV0aGVyIGEgdG9rZW4gaXMgYmVhcmVyIHR5cGUgb3Igbm90XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0JlYXJlclRva2VuKGFjY2Vzc1Rva2VuKSB7XG4gICAgcmV0dXJuICFhY2Nlc3NUb2tlbi50b2tlblR5cGUgfHwgYWNjZXNzVG9rZW4udG9rZW5UeXBlID09PSBcIkJlYXJlclwiO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEBwYXJhbSBhY2Nlc3NUb2tlbiAtIEFjY2VzcyB0b2tlblxuICogQHJldHVybnMgV2hldGhlciBhIHRva2VuIGlzIFBvcCB0b2tlbiBvciBub3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUG9wVG9rZW4oYWNjZXNzVG9rZW4pIHtcbiAgICByZXR1cm4gYWNjZXNzVG9rZW4udG9rZW5UeXBlID09PSBcInBvcFwiO1xufVxuLyoqXG4gKiBUZXN0cyBhbiBvYmplY3QgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaW1wbGVtZW50cyBUb2tlbkNyZWRlbnRpYWwuXG4gKlxuICogQHBhcmFtIGNyZWRlbnRpYWwgLSBUaGUgYXNzdW1lZCBUb2tlbkNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNUb2tlbkNyZWRlbnRpYWwoY3JlZGVudGlhbCkge1xuICAgIC8vIENoZWNrIGZvciBhbiBvYmplY3Qgd2l0aCBhICdnZXRUb2tlbicgZnVuY3Rpb24gYW5kIHBvc3NpYmx5IHdpdGhcbiAgICAvLyBhICdzaWduUmVxdWVzdCcgZnVuY3Rpb24uICBXZSBkbyB0aGlzIGNoZWNrIHRvIG1ha2Ugc3VyZSB0aGF0XG4gICAgLy8gYSBTZXJ2aWNlQ2xpZW50Q3JlZGVudGlhbHMgaW1wbGVtZW50b3IgKGxpa2UgVG9rZW5DbGllbnRDcmVkZW50aWFsc1xuICAgIC8vIGluIG1zLXJlc3Qtbm9kZWF1dGgpIGRvZXNuJ3QgZ2V0IG1pc3Rha2VuIGZvciBhIFRva2VuQ3JlZGVudGlhbCBpZlxuICAgIC8vIGl0IGRvZXNuJ3QgYWN0dWFsbHkgaW1wbGVtZW50IFRva2VuQ3JlZGVudGlhbCBhbHNvLlxuICAgIGNvbnN0IGNhc3RDcmVkZW50aWFsID0gY3JlZGVudGlhbDtcbiAgICByZXR1cm4gKGNhc3RDcmVkZW50aWFsICYmXG4gICAgICAgIHR5cGVvZiBjYXN0Q3JlZGVudGlhbC5nZXRUb2tlbiA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIChjYXN0Q3JlZGVudGlhbC5zaWduUmVxdWVzdCA9PT0gdW5kZWZpbmVkIHx8IGNhc3RDcmVkZW50aWFsLmdldFRva2VuLmxlbmd0aCA+IDApKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRva2VuQ3JlZGVudGlhbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/esm/tokenCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/http/operation.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/http/operation.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getErrorFromResponse: () => (/* binding */ getErrorFromResponse),\n/* harmony export */   getOperationLocation: () => (/* binding */ getOperationLocation),\n/* harmony export */   getOperationStatus: () => (/* binding */ getOperationStatus),\n/* harmony export */   getResourceLocation: () => (/* binding */ getResourceLocation),\n/* harmony export */   getStatusFromInitialResponse: () => (/* binding */ getStatusFromInitialResponse),\n/* harmony export */   inferLroMode: () => (/* binding */ inferLroMode),\n/* harmony export */   initHttpOperation: () => (/* binding */ initHttpOperation),\n/* harmony export */   isOperationError: () => (/* binding */ isOperationError),\n/* harmony export */   parseRetryAfter: () => (/* binding */ parseRetryAfter),\n/* harmony export */   pollHttpOperation: () => (/* binding */ pollHttpOperation)\n/* harmony export */ });\n/* harmony import */ var _poller_operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../poller/operation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/operation.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/logger.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nfunction getOperationLocationPollingUrl(inputs) {\n    const { azureAsyncOperation, operationLocation } = inputs;\n    return operationLocation !== null && operationLocation !== void 0 ? operationLocation : azureAsyncOperation;\n}\nfunction getLocationHeader(rawResponse) {\n    return rawResponse.headers[\"location\"];\n}\nfunction getOperationLocationHeader(rawResponse) {\n    return rawResponse.headers[\"operation-location\"];\n}\nfunction getAzureAsyncOperationHeader(rawResponse) {\n    return rawResponse.headers[\"azure-asyncoperation\"];\n}\nfunction findResourceLocation(inputs) {\n    var _a;\n    const { location, requestMethod, requestPath, resourceLocationConfig } = inputs;\n    switch (requestMethod) {\n        case \"PUT\": {\n            return requestPath;\n        }\n        case \"DELETE\": {\n            return undefined;\n        }\n        case \"PATCH\": {\n            return (_a = getDefault()) !== null && _a !== void 0 ? _a : requestPath;\n        }\n        default: {\n            return getDefault();\n        }\n    }\n    function getDefault() {\n        switch (resourceLocationConfig) {\n            case \"azure-async-operation\": {\n                return undefined;\n            }\n            case \"original-uri\": {\n                return requestPath;\n            }\n            case \"location\":\n            default: {\n                return location;\n            }\n        }\n    }\n}\nfunction inferLroMode(inputs) {\n    const { rawResponse, requestMethod, requestPath, resourceLocationConfig } = inputs;\n    const operationLocation = getOperationLocationHeader(rawResponse);\n    const azureAsyncOperation = getAzureAsyncOperationHeader(rawResponse);\n    const pollingUrl = getOperationLocationPollingUrl({ operationLocation, azureAsyncOperation });\n    const location = getLocationHeader(rawResponse);\n    const normalizedRequestMethod = requestMethod === null || requestMethod === void 0 ? void 0 : requestMethod.toLocaleUpperCase();\n    if (pollingUrl !== undefined) {\n        return {\n            mode: \"OperationLocation\",\n            operationLocation: pollingUrl,\n            resourceLocation: findResourceLocation({\n                requestMethod: normalizedRequestMethod,\n                location,\n                requestPath,\n                resourceLocationConfig,\n            }),\n        };\n    }\n    else if (location !== undefined) {\n        return {\n            mode: \"ResourceLocation\",\n            operationLocation: location,\n        };\n    }\n    else if (normalizedRequestMethod === \"PUT\" && requestPath) {\n        return {\n            mode: \"Body\",\n            operationLocation: requestPath,\n        };\n    }\n    else {\n        return undefined;\n    }\n}\nfunction transformStatus(inputs) {\n    const { status, statusCode } = inputs;\n    if (typeof status !== \"string\" && status !== undefined) {\n        throw new Error(`Polling was unsuccessful. Expected status to have a string value or no value but it has instead: ${status}. This doesn't necessarily indicate the operation has failed. Check your Azure subscription or resource status for more information.`);\n    }\n    switch (status === null || status === void 0 ? void 0 : status.toLocaleLowerCase()) {\n        case undefined:\n            return toOperationStatus(statusCode);\n        case \"succeeded\":\n            return \"succeeded\";\n        case \"failed\":\n            return \"failed\";\n        case \"running\":\n        case \"accepted\":\n        case \"started\":\n        case \"canceling\":\n        case \"cancelling\":\n            return \"running\";\n        case \"canceled\":\n        case \"cancelled\":\n            return \"canceled\";\n        default: {\n            _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.verbose(`LRO: unrecognized operation status: ${status}`);\n            return status;\n        }\n    }\n}\nfunction getStatus(rawResponse) {\n    var _a;\n    const { status } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n    return transformStatus({ status, statusCode: rawResponse.statusCode });\n}\nfunction getProvisioningState(rawResponse) {\n    var _a, _b;\n    const { properties, provisioningState } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n    const status = (_b = properties === null || properties === void 0 ? void 0 : properties.provisioningState) !== null && _b !== void 0 ? _b : provisioningState;\n    return transformStatus({ status, statusCode: rawResponse.statusCode });\n}\nfunction toOperationStatus(statusCode) {\n    if (statusCode === 202) {\n        return \"running\";\n    }\n    else if (statusCode < 300) {\n        return \"succeeded\";\n    }\n    else {\n        return \"failed\";\n    }\n}\nfunction parseRetryAfter({ rawResponse }) {\n    const retryAfter = rawResponse.headers[\"retry-after\"];\n    if (retryAfter !== undefined) {\n        // Retry-After header value is either in HTTP date format, or in seconds\n        const retryAfterInSeconds = parseInt(retryAfter);\n        return isNaN(retryAfterInSeconds)\n            ? calculatePollingIntervalFromDate(new Date(retryAfter))\n            : retryAfterInSeconds * 1000;\n    }\n    return undefined;\n}\nfunction getErrorFromResponse(response) {\n    const error = accessBodyProperty(response, \"error\");\n    if (!error) {\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warning(`The long-running operation failed but there is no error property in the response's body`);\n        return;\n    }\n    if (!error.code || !error.message) {\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warning(`The long-running operation failed but the error property in the response's body doesn't contain code or message`);\n        return;\n    }\n    return error;\n}\nfunction calculatePollingIntervalFromDate(retryAfterDate) {\n    const timeNow = Math.floor(new Date().getTime());\n    const retryAfterTime = retryAfterDate.getTime();\n    if (timeNow < retryAfterTime) {\n        return retryAfterTime - timeNow;\n    }\n    return undefined;\n}\nfunction getStatusFromInitialResponse(inputs) {\n    const { response, state, operationLocation } = inputs;\n    function helper() {\n        var _a;\n        const mode = (_a = state.config.metadata) === null || _a === void 0 ? void 0 : _a[\"mode\"];\n        switch (mode) {\n            case undefined:\n                return toOperationStatus(response.rawResponse.statusCode);\n            case \"Body\":\n                return getOperationStatus(response, state);\n            default:\n                return \"running\";\n        }\n    }\n    const status = helper();\n    return status === \"running\" && operationLocation === undefined ? \"succeeded\" : status;\n}\n/**\n * Initiates the long-running operation.\n */\nasync function initHttpOperation(inputs) {\n    const { stateProxy, resourceLocationConfig, processResult, lro, setErrorAsResult } = inputs;\n    return (0,_poller_operation_js__WEBPACK_IMPORTED_MODULE_0__.initOperation)({\n        init: async () => {\n            const response = await lro.sendInitialRequest();\n            const config = inferLroMode({\n                rawResponse: response.rawResponse,\n                requestPath: lro.requestPath,\n                requestMethod: lro.requestMethod,\n                resourceLocationConfig,\n            });\n            return Object.assign({ response, operationLocation: config === null || config === void 0 ? void 0 : config.operationLocation, resourceLocation: config === null || config === void 0 ? void 0 : config.resourceLocation }, ((config === null || config === void 0 ? void 0 : config.mode) ? { metadata: { mode: config.mode } } : {}));\n        },\n        stateProxy,\n        processResult: processResult\n            ? ({ flatResponse }, state) => processResult(flatResponse, state)\n            : ({ flatResponse }) => flatResponse,\n        getOperationStatus: getStatusFromInitialResponse,\n        setErrorAsResult,\n    });\n}\nfunction getOperationLocation({ rawResponse }, state) {\n    var _a;\n    const mode = (_a = state.config.metadata) === null || _a === void 0 ? void 0 : _a[\"mode\"];\n    switch (mode) {\n        case \"OperationLocation\": {\n            return getOperationLocationPollingUrl({\n                operationLocation: getOperationLocationHeader(rawResponse),\n                azureAsyncOperation: getAzureAsyncOperationHeader(rawResponse),\n            });\n        }\n        case \"ResourceLocation\": {\n            return getLocationHeader(rawResponse);\n        }\n        case \"Body\":\n        default: {\n            return undefined;\n        }\n    }\n}\nfunction getOperationStatus({ rawResponse }, state) {\n    var _a;\n    const mode = (_a = state.config.metadata) === null || _a === void 0 ? void 0 : _a[\"mode\"];\n    switch (mode) {\n        case \"OperationLocation\": {\n            return getStatus(rawResponse);\n        }\n        case \"ResourceLocation\": {\n            return toOperationStatus(rawResponse.statusCode);\n        }\n        case \"Body\": {\n            return getProvisioningState(rawResponse);\n        }\n        default:\n            throw new Error(`Internal error: Unexpected operation mode: ${mode}`);\n    }\n}\nfunction accessBodyProperty({ flatResponse, rawResponse }, prop) {\n    var _a, _b;\n    return (_a = flatResponse === null || flatResponse === void 0 ? void 0 : flatResponse[prop]) !== null && _a !== void 0 ? _a : (_b = rawResponse.body) === null || _b === void 0 ? void 0 : _b[prop];\n}\nfunction getResourceLocation(res, state) {\n    const loc = accessBodyProperty(res, \"resourceLocation\");\n    if (loc && typeof loc === \"string\") {\n        state.config.resourceLocation = loc;\n    }\n    return state.config.resourceLocation;\n}\nfunction isOperationError(e) {\n    return e.name === \"RestError\";\n}\n/** Polls the long-running operation. */\nasync function pollHttpOperation(inputs) {\n    const { lro, stateProxy, options, processResult, updateState, setDelay, state, setErrorAsResult, } = inputs;\n    return (0,_poller_operation_js__WEBPACK_IMPORTED_MODULE_0__.pollOperation)({\n        state,\n        stateProxy,\n        setDelay,\n        processResult: processResult\n            ? ({ flatResponse }, inputState) => processResult(flatResponse, inputState)\n            : ({ flatResponse }) => flatResponse,\n        getError: getErrorFromResponse,\n        updateState,\n        getPollingInterval: parseRetryAfter,\n        getOperationLocation,\n        getOperationStatus,\n        isOperationError,\n        getResourceLocation,\n        options,\n        /**\n         * The expansion here is intentional because `lro` could be an object that\n         * references an inner this, so we need to preserve a reference to it.\n         */\n        poll: async (location, inputOptions) => lro.sendPollRequest(location, inputOptions),\n        setErrorAsResult,\n    });\n}\n//# sourceMappingURL=operation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/http/operation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/http/poller.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/http/poller.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHttpPoller: () => (/* binding */ createHttpPoller)\n/* harmony export */ });\n/* harmony import */ var _operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/http/operation.js\");\n/* harmony import */ var _poller_poller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../poller/poller.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/poller.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Creates a poller that can be used to poll a long-running operation.\n * @param lro - Description of the long-running operation\n * @param options - options to configure the poller\n * @returns an initialized poller\n */\nasync function createHttpPoller(lro, options) {\n    const { resourceLocationConfig, intervalInMs, processResult, restoreFrom, updateState, withOperationLocation, resolveOnUnsuccessful = false, } = options || {};\n    return (0,_poller_poller_js__WEBPACK_IMPORTED_MODULE_1__.buildCreatePoller)({\n        getStatusFromInitialResponse: _operation_js__WEBPACK_IMPORTED_MODULE_0__.getStatusFromInitialResponse,\n        getStatusFromPollResponse: _operation_js__WEBPACK_IMPORTED_MODULE_0__.getOperationStatus,\n        isOperationError: _operation_js__WEBPACK_IMPORTED_MODULE_0__.isOperationError,\n        getOperationLocation: _operation_js__WEBPACK_IMPORTED_MODULE_0__.getOperationLocation,\n        getResourceLocation: _operation_js__WEBPACK_IMPORTED_MODULE_0__.getResourceLocation,\n        getPollingInterval: _operation_js__WEBPACK_IMPORTED_MODULE_0__.parseRetryAfter,\n        getError: _operation_js__WEBPACK_IMPORTED_MODULE_0__.getErrorFromResponse,\n        resolveOnUnsuccessful,\n    })({\n        init: async () => {\n            const response = await lro.sendInitialRequest();\n            const config = (0,_operation_js__WEBPACK_IMPORTED_MODULE_0__.inferLroMode)({\n                rawResponse: response.rawResponse,\n                requestPath: lro.requestPath,\n                requestMethod: lro.requestMethod,\n                resourceLocationConfig,\n            });\n            return Object.assign({ response, operationLocation: config === null || config === void 0 ? void 0 : config.operationLocation, resourceLocation: config === null || config === void 0 ? void 0 : config.resourceLocation }, ((config === null || config === void 0 ? void 0 : config.mode) ? { metadata: { mode: config.mode } } : {}));\n        },\n        poll: lro.sendPollRequest,\n    }, {\n        intervalInMs,\n        withOperationLocation,\n        restoreFrom,\n        updateState,\n        processResult: processResult\n            ? ({ flatResponse }, state) => processResult(flatResponse, state)\n            : ({ flatResponse }) => flatResponse,\n    });\n}\n//# sourceMappingURL=poller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2h0dHAvcG9sbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDcU07QUFDN0k7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLHVJQUF1STtBQUNuSixXQUFXLG9FQUFpQjtBQUM1QixvQ0FBb0M7QUFDcEMsbUNBQW1DLDZEQUFrQjtBQUNyRCx3QkFBd0I7QUFDeEIsNEJBQTRCO0FBQzVCLDJCQUEyQjtBQUMzQiw0QkFBNEIsMERBQWU7QUFDM0Msa0JBQWtCLCtEQUFvQjtBQUN0QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLG1DQUFtQyxrTUFBa00scUVBQXFFLFlBQVksc0JBQXNCLElBQUk7QUFDaFYsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQixpQkFBaUIsY0FBYztBQUMvQixLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWxyby9kaXN0L2VzbS9odHRwL3BvbGxlci5qcz9iMWU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgZ2V0RXJyb3JGcm9tUmVzcG9uc2UsIGdldE9wZXJhdGlvbkxvY2F0aW9uLCBnZXRPcGVyYXRpb25TdGF0dXMsIGdldFJlc291cmNlTG9jYXRpb24sIGdldFN0YXR1c0Zyb21Jbml0aWFsUmVzcG9uc2UsIGluZmVyTHJvTW9kZSwgaXNPcGVyYXRpb25FcnJvciwgcGFyc2VSZXRyeUFmdGVyLCB9IGZyb20gXCIuL29wZXJhdGlvbi5qc1wiO1xuaW1wb3J0IHsgYnVpbGRDcmVhdGVQb2xsZXIgfSBmcm9tIFwiLi4vcG9sbGVyL3BvbGxlci5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgcG9sbGVyIHRoYXQgY2FuIGJlIHVzZWQgdG8gcG9sbCBhIGxvbmctcnVubmluZyBvcGVyYXRpb24uXG4gKiBAcGFyYW0gbHJvIC0gRGVzY3JpcHRpb24gb2YgdGhlIGxvbmctcnVubmluZyBvcGVyYXRpb25cbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9ucyB0byBjb25maWd1cmUgdGhlIHBvbGxlclxuICogQHJldHVybnMgYW4gaW5pdGlhbGl6ZWQgcG9sbGVyXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVIdHRwUG9sbGVyKGxybywgb3B0aW9ucykge1xuICAgIGNvbnN0IHsgcmVzb3VyY2VMb2NhdGlvbkNvbmZpZywgaW50ZXJ2YWxJbk1zLCBwcm9jZXNzUmVzdWx0LCByZXN0b3JlRnJvbSwgdXBkYXRlU3RhdGUsIHdpdGhPcGVyYXRpb25Mb2NhdGlvbiwgcmVzb2x2ZU9uVW5zdWNjZXNzZnVsID0gZmFsc2UsIH0gPSBvcHRpb25zIHx8IHt9O1xuICAgIHJldHVybiBidWlsZENyZWF0ZVBvbGxlcih7XG4gICAgICAgIGdldFN0YXR1c0Zyb21Jbml0aWFsUmVzcG9uc2UsXG4gICAgICAgIGdldFN0YXR1c0Zyb21Qb2xsUmVzcG9uc2U6IGdldE9wZXJhdGlvblN0YXR1cyxcbiAgICAgICAgaXNPcGVyYXRpb25FcnJvcixcbiAgICAgICAgZ2V0T3BlcmF0aW9uTG9jYXRpb24sXG4gICAgICAgIGdldFJlc291cmNlTG9jYXRpb24sXG4gICAgICAgIGdldFBvbGxpbmdJbnRlcnZhbDogcGFyc2VSZXRyeUFmdGVyLFxuICAgICAgICBnZXRFcnJvcjogZ2V0RXJyb3JGcm9tUmVzcG9uc2UsXG4gICAgICAgIHJlc29sdmVPblVuc3VjY2Vzc2Z1bCxcbiAgICB9KSh7XG4gICAgICAgIGluaXQ6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbHJvLnNlbmRJbml0aWFsUmVxdWVzdCgpO1xuICAgICAgICAgICAgY29uc3QgY29uZmlnID0gaW5mZXJMcm9Nb2RlKHtcbiAgICAgICAgICAgICAgICByYXdSZXNwb25zZTogcmVzcG9uc2UucmF3UmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgcmVxdWVzdFBhdGg6IGxyby5yZXF1ZXN0UGF0aCxcbiAgICAgICAgICAgICAgICByZXF1ZXN0TWV0aG9kOiBscm8ucmVxdWVzdE1ldGhvZCxcbiAgICAgICAgICAgICAgICByZXNvdXJjZUxvY2F0aW9uQ29uZmlnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IHJlc3BvbnNlLCBvcGVyYXRpb25Mb2NhdGlvbjogY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLm9wZXJhdGlvbkxvY2F0aW9uLCByZXNvdXJjZUxvY2F0aW9uOiBjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcucmVzb3VyY2VMb2NhdGlvbiB9LCAoKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5tb2RlKSA/IHsgbWV0YWRhdGE6IHsgbW9kZTogY29uZmlnLm1vZGUgfSB9IDoge30pKTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9sbDogbHJvLnNlbmRQb2xsUmVxdWVzdCxcbiAgICB9LCB7XG4gICAgICAgIGludGVydmFsSW5NcyxcbiAgICAgICAgd2l0aE9wZXJhdGlvbkxvY2F0aW9uLFxuICAgICAgICByZXN0b3JlRnJvbSxcbiAgICAgICAgdXBkYXRlU3RhdGUsXG4gICAgICAgIHByb2Nlc3NSZXN1bHQ6IHByb2Nlc3NSZXN1bHRcbiAgICAgICAgICAgID8gKHsgZmxhdFJlc3BvbnNlIH0sIHN0YXRlKSA9PiBwcm9jZXNzUmVzdWx0KGZsYXRSZXNwb25zZSwgc3RhdGUpXG4gICAgICAgICAgICA6ICh7IGZsYXRSZXNwb25zZSB9KSA9PiBmbGF0UmVzcG9uc2UsXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb2xsZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/http/poller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LroEngine: () => (/* reexport safe */ _legacy_lroEngine_index_js__WEBPACK_IMPORTED_MODULE_1__.LroEngine),\n/* harmony export */   Poller: () => (/* reexport safe */ _legacy_poller_js__WEBPACK_IMPORTED_MODULE_2__.Poller),\n/* harmony export */   PollerCancelledError: () => (/* reexport safe */ _legacy_poller_js__WEBPACK_IMPORTED_MODULE_2__.PollerCancelledError),\n/* harmony export */   PollerStoppedError: () => (/* reexport safe */ _legacy_poller_js__WEBPACK_IMPORTED_MODULE_2__.PollerStoppedError),\n/* harmony export */   createHttpPoller: () => (/* reexport safe */ _http_poller_js__WEBPACK_IMPORTED_MODULE_0__.createHttpPoller)\n/* harmony export */ });\n/* harmony import */ var _http_poller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http/poller.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/http/poller.js\");\n/* harmony import */ var _legacy_lroEngine_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legacy/lroEngine/index.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/index.js\");\n/* harmony import */ var _legacy_poller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacy/poller.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/poller.js\");\n/* harmony import */ var _legacy_pollOperation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legacy/pollOperation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/pollOperation.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This can be uncommented to expose the protocol-agnostic poller\n */\n// export {\n//   BuildCreatePollerOptions,\n//   Operation,\n//   CreatePollerOptions,\n//   OperationConfig,\n//   RestorableOperationState,\n// } from \"./poller/models\";\n// export { buildCreatePoller } from \"./poller/poller\";\n/** legacy */\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVksb0JBQW9CO0FBQ2hDO0FBQzRDO0FBQ1Q7QUFDTztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWxyby9kaXN0L2VzbS9pbmRleC5qcz84ZWQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZXhwb3J0IHsgY3JlYXRlSHR0cFBvbGxlciB9IGZyb20gXCIuL2h0dHAvcG9sbGVyLmpzXCI7XG4vKipcbiAqIFRoaXMgY2FuIGJlIHVuY29tbWVudGVkIHRvIGV4cG9zZSB0aGUgcHJvdG9jb2wtYWdub3N0aWMgcG9sbGVyXG4gKi9cbi8vIGV4cG9ydCB7XG4vLyAgIEJ1aWxkQ3JlYXRlUG9sbGVyT3B0aW9ucyxcbi8vICAgT3BlcmF0aW9uLFxuLy8gICBDcmVhdGVQb2xsZXJPcHRpb25zLFxuLy8gICBPcGVyYXRpb25Db25maWcsXG4vLyAgIFJlc3RvcmFibGVPcGVyYXRpb25TdGF0ZSxcbi8vIH0gZnJvbSBcIi4vcG9sbGVyL21vZGVsc1wiO1xuLy8gZXhwb3J0IHsgYnVpbGRDcmVhdGVQb2xsZXIgfSBmcm9tIFwiLi9wb2xsZXIvcG9sbGVyXCI7XG4vKiogbGVnYWN5ICovXG5leHBvcnQgKiBmcm9tIFwiLi9sZWdhY3kvbHJvRW5naW5lL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sZWdhY3kvcG9sbGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sZWdhY3kvcG9sbE9wZXJhdGlvbi5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LroEngine: () => (/* reexport safe */ _lroEngine_js__WEBPACK_IMPORTED_MODULE_0__.LroEngine)\n/* harmony export */ });\n/* harmony import */ var _lroEngine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lroEngine.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/lroEngine.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xlZ2FjeS9scm9FbmdpbmUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzJDO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xlZ2FjeS9scm9FbmdpbmUvaW5kZXguanM/ODI2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCB7IExyb0VuZ2luZSB9IGZyb20gXCIuL2xyb0VuZ2luZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/lroEngine.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/lroEngine.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LroEngine: () => (/* binding */ LroEngine)\n/* harmony export */ });\n/* harmony import */ var _operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/operation.js\");\n/* harmony import */ var _poller_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../poller/constants.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/constants.js\");\n/* harmony import */ var _poller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../poller.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/poller.js\");\n/* harmony import */ var _poller_operation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../poller/operation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/operation.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n/**\n * The LRO Engine, a class that performs polling.\n */\nclass LroEngine extends _poller_js__WEBPACK_IMPORTED_MODULE_2__.Poller {\n    constructor(lro, options) {\n        const { intervalInMs = _poller_constants_js__WEBPACK_IMPORTED_MODULE_1__.POLL_INTERVAL_IN_MS, resumeFrom, resolveOnUnsuccessful = false, isDone, lroResourceLocationConfig, processResult, updateState, } = options || {};\n        const state = resumeFrom\n            ? (0,_poller_operation_js__WEBPACK_IMPORTED_MODULE_3__.deserializeState)(resumeFrom)\n            : {};\n        const operation = new _operation_js__WEBPACK_IMPORTED_MODULE_0__.GenericPollOperation(state, lro, !resolveOnUnsuccessful, lroResourceLocationConfig, processResult, updateState, isDone);\n        super(operation);\n        this.resolveOnUnsuccessful = resolveOnUnsuccessful;\n        this.config = { intervalInMs: intervalInMs };\n        operation.setPollerConfig(this.config);\n    }\n    /**\n     * The method used by the poller to wait before attempting to update its operation.\n     */\n    delay() {\n        return new Promise((resolve) => setTimeout(() => resolve(), this.config.intervalInMs));\n    }\n}\n//# sourceMappingURL=lroEngine.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xlZ2FjeS9scm9FbmdpbmUvbHJvRW5naW5lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNzRDtBQUNVO0FBQzFCO0FBQ3VCO0FBQzdEO0FBQ0E7QUFDQTtBQUNPLHdCQUF3Qiw4Q0FBTTtBQUNyQztBQUNBLGdCQUFnQixlQUFlLHFFQUFtQiw4R0FBOEc7QUFDaEs7QUFDQSxjQUFjLHNFQUFnQjtBQUM5QjtBQUNBLDhCQUE4QiwrREFBb0I7QUFDbEQ7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWxyby9kaXN0L2VzbS9sZWdhY3kvbHJvRW5naW5lL2xyb0VuZ2luZS5qcz9mMWU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgR2VuZXJpY1BvbGxPcGVyYXRpb24gfSBmcm9tIFwiLi9vcGVyYXRpb24uanNcIjtcbmltcG9ydCB7IFBPTExfSU5URVJWQUxfSU5fTVMgfSBmcm9tIFwiLi4vLi4vcG9sbGVyL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IHsgUG9sbGVyIH0gZnJvbSBcIi4uL3BvbGxlci5qc1wiO1xuaW1wb3J0IHsgZGVzZXJpYWxpemVTdGF0ZSB9IGZyb20gXCIuLi8uLi9wb2xsZXIvb3BlcmF0aW9uLmpzXCI7XG4vKipcbiAqIFRoZSBMUk8gRW5naW5lLCBhIGNsYXNzIHRoYXQgcGVyZm9ybXMgcG9sbGluZy5cbiAqL1xuZXhwb3J0IGNsYXNzIExyb0VuZ2luZSBleHRlbmRzIFBvbGxlciB7XG4gICAgY29uc3RydWN0b3IobHJvLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgaW50ZXJ2YWxJbk1zID0gUE9MTF9JTlRFUlZBTF9JTl9NUywgcmVzdW1lRnJvbSwgcmVzb2x2ZU9uVW5zdWNjZXNzZnVsID0gZmFsc2UsIGlzRG9uZSwgbHJvUmVzb3VyY2VMb2NhdGlvbkNvbmZpZywgcHJvY2Vzc1Jlc3VsdCwgdXBkYXRlU3RhdGUsIH0gPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICBjb25zdCBzdGF0ZSA9IHJlc3VtZUZyb21cbiAgICAgICAgICAgID8gZGVzZXJpYWxpemVTdGF0ZShyZXN1bWVGcm9tKVxuICAgICAgICAgICAgOiB7fTtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uID0gbmV3IEdlbmVyaWNQb2xsT3BlcmF0aW9uKHN0YXRlLCBscm8sICFyZXNvbHZlT25VbnN1Y2Nlc3NmdWwsIGxyb1Jlc291cmNlTG9jYXRpb25Db25maWcsIHByb2Nlc3NSZXN1bHQsIHVwZGF0ZVN0YXRlLCBpc0RvbmUpO1xuICAgICAgICBzdXBlcihvcGVyYXRpb24pO1xuICAgICAgICB0aGlzLnJlc29sdmVPblVuc3VjY2Vzc2Z1bCA9IHJlc29sdmVPblVuc3VjY2Vzc2Z1bDtcbiAgICAgICAgdGhpcy5jb25maWcgPSB7IGludGVydmFsSW5NczogaW50ZXJ2YWxJbk1zIH07XG4gICAgICAgIG9wZXJhdGlvbi5zZXRQb2xsZXJDb25maWcodGhpcy5jb25maWcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgbWV0aG9kIHVzZWQgYnkgdGhlIHBvbGxlciB0byB3YWl0IGJlZm9yZSBhdHRlbXB0aW5nIHRvIHVwZGF0ZSBpdHMgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGRlbGF5KCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZSgpLCB0aGlzLmNvbmZpZy5pbnRlcnZhbEluTXMpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1scm9FbmdpbmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/lroEngine.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/operation.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/operation.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GenericPollOperation: () => (/* binding */ GenericPollOperation)\n/* harmony export */ });\n/* harmony import */ var _http_operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../http/operation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/http/operation.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../logger.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/logger.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst createStateProxy = () => ({\n    initState: (config) => ({ config, isStarted: true }),\n    setCanceled: (state) => (state.isCancelled = true),\n    setError: (state, error) => (state.error = error),\n    setResult: (state, result) => (state.result = result),\n    setRunning: (state) => (state.isStarted = true),\n    setSucceeded: (state) => (state.isCompleted = true),\n    setFailed: () => {\n        /** empty body */\n    },\n    getError: (state) => state.error,\n    getResult: (state) => state.result,\n    isCanceled: (state) => !!state.isCancelled,\n    isFailed: (state) => !!state.error,\n    isRunning: (state) => !!state.isStarted,\n    isSucceeded: (state) => Boolean(state.isCompleted && !state.isCancelled && !state.error),\n});\nclass GenericPollOperation {\n    constructor(state, lro, setErrorAsResult, lroResourceLocationConfig, processResult, updateState, isDone) {\n        this.state = state;\n        this.lro = lro;\n        this.setErrorAsResult = setErrorAsResult;\n        this.lroResourceLocationConfig = lroResourceLocationConfig;\n        this.processResult = processResult;\n        this.updateState = updateState;\n        this.isDone = isDone;\n    }\n    setPollerConfig(pollerConfig) {\n        this.pollerConfig = pollerConfig;\n    }\n    async update(options) {\n        var _a;\n        const stateProxy = createStateProxy();\n        if (!this.state.isStarted) {\n            this.state = Object.assign(Object.assign({}, this.state), (await (0,_http_operation_js__WEBPACK_IMPORTED_MODULE_0__.initHttpOperation)({\n                lro: this.lro,\n                stateProxy,\n                resourceLocationConfig: this.lroResourceLocationConfig,\n                processResult: this.processResult,\n                setErrorAsResult: this.setErrorAsResult,\n            })));\n        }\n        const updateState = this.updateState;\n        const isDone = this.isDone;\n        if (!this.state.isCompleted && this.state.error === undefined) {\n            await (0,_http_operation_js__WEBPACK_IMPORTED_MODULE_0__.pollHttpOperation)({\n                lro: this.lro,\n                state: this.state,\n                stateProxy,\n                processResult: this.processResult,\n                updateState: updateState\n                    ? (state, { rawResponse }) => updateState(state, rawResponse)\n                    : undefined,\n                isDone: isDone\n                    ? ({ flatResponse }, state) => isDone(flatResponse, state)\n                    : undefined,\n                options,\n                setDelay: (intervalInMs) => {\n                    this.pollerConfig.intervalInMs = intervalInMs;\n                },\n                setErrorAsResult: this.setErrorAsResult,\n            });\n        }\n        (_a = options === null || options === void 0 ? void 0 : options.fireProgress) === null || _a === void 0 ? void 0 : _a.call(options, this.state);\n        return this;\n    }\n    async cancel() {\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"`cancelOperation` is deprecated because it wasn't implemented\");\n        return this;\n    }\n    /**\n     * Serializes the Poller operation.\n     */\n    toString() {\n        return JSON.stringify({\n            state: this.state,\n        });\n    }\n}\n//# sourceMappingURL=operation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xlZ2FjeS9scm9FbmdpbmUvb3BlcmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDK0U7QUFDdEM7QUFDekM7QUFDQSw4QkFBOEIseUJBQXlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELHNCQUFzQixxRUFBaUI7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxRUFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxhQUFhO0FBQzdDO0FBQ0E7QUFDQSx5QkFBeUIsY0FBYztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4Q0FBTTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xlZ2FjeS9scm9FbmdpbmUvb3BlcmF0aW9uLmpzP2E1YzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBpbml0SHR0cE9wZXJhdGlvbiwgcG9sbEh0dHBPcGVyYXRpb24gfSBmcm9tIFwiLi4vLi4vaHR0cC9vcGVyYXRpb24uanNcIjtcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gXCIuLi8uLi9sb2dnZXIuanNcIjtcbmNvbnN0IGNyZWF0ZVN0YXRlUHJveHkgPSAoKSA9PiAoe1xuICAgIGluaXRTdGF0ZTogKGNvbmZpZykgPT4gKHsgY29uZmlnLCBpc1N0YXJ0ZWQ6IHRydWUgfSksXG4gICAgc2V0Q2FuY2VsZWQ6IChzdGF0ZSkgPT4gKHN0YXRlLmlzQ2FuY2VsbGVkID0gdHJ1ZSksXG4gICAgc2V0RXJyb3I6IChzdGF0ZSwgZXJyb3IpID0+IChzdGF0ZS5lcnJvciA9IGVycm9yKSxcbiAgICBzZXRSZXN1bHQ6IChzdGF0ZSwgcmVzdWx0KSA9PiAoc3RhdGUucmVzdWx0ID0gcmVzdWx0KSxcbiAgICBzZXRSdW5uaW5nOiAoc3RhdGUpID0+IChzdGF0ZS5pc1N0YXJ0ZWQgPSB0cnVlKSxcbiAgICBzZXRTdWNjZWVkZWQ6IChzdGF0ZSkgPT4gKHN0YXRlLmlzQ29tcGxldGVkID0gdHJ1ZSksXG4gICAgc2V0RmFpbGVkOiAoKSA9PiB7XG4gICAgICAgIC8qKiBlbXB0eSBib2R5ICovXG4gICAgfSxcbiAgICBnZXRFcnJvcjogKHN0YXRlKSA9PiBzdGF0ZS5lcnJvcixcbiAgICBnZXRSZXN1bHQ6IChzdGF0ZSkgPT4gc3RhdGUucmVzdWx0LFxuICAgIGlzQ2FuY2VsZWQ6IChzdGF0ZSkgPT4gISFzdGF0ZS5pc0NhbmNlbGxlZCxcbiAgICBpc0ZhaWxlZDogKHN0YXRlKSA9PiAhIXN0YXRlLmVycm9yLFxuICAgIGlzUnVubmluZzogKHN0YXRlKSA9PiAhIXN0YXRlLmlzU3RhcnRlZCxcbiAgICBpc1N1Y2NlZWRlZDogKHN0YXRlKSA9PiBCb29sZWFuKHN0YXRlLmlzQ29tcGxldGVkICYmICFzdGF0ZS5pc0NhbmNlbGxlZCAmJiAhc3RhdGUuZXJyb3IpLFxufSk7XG5leHBvcnQgY2xhc3MgR2VuZXJpY1BvbGxPcGVyYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlLCBscm8sIHNldEVycm9yQXNSZXN1bHQsIGxyb1Jlc291cmNlTG9jYXRpb25Db25maWcsIHByb2Nlc3NSZXN1bHQsIHVwZGF0ZVN0YXRlLCBpc0RvbmUpIHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgICB0aGlzLmxybyA9IGxybztcbiAgICAgICAgdGhpcy5zZXRFcnJvckFzUmVzdWx0ID0gc2V0RXJyb3JBc1Jlc3VsdDtcbiAgICAgICAgdGhpcy5scm9SZXNvdXJjZUxvY2F0aW9uQ29uZmlnID0gbHJvUmVzb3VyY2VMb2NhdGlvbkNvbmZpZztcbiAgICAgICAgdGhpcy5wcm9jZXNzUmVzdWx0ID0gcHJvY2Vzc1Jlc3VsdDtcbiAgICAgICAgdGhpcy51cGRhdGVTdGF0ZSA9IHVwZGF0ZVN0YXRlO1xuICAgICAgICB0aGlzLmlzRG9uZSA9IGlzRG9uZTtcbiAgICB9XG4gICAgc2V0UG9sbGVyQ29uZmlnKHBvbGxlckNvbmZpZykge1xuICAgICAgICB0aGlzLnBvbGxlckNvbmZpZyA9IHBvbGxlckNvbmZpZztcbiAgICB9XG4gICAgYXN5bmMgdXBkYXRlKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBzdGF0ZVByb3h5ID0gY3JlYXRlU3RhdGVQcm94eSgpO1xuICAgICAgICBpZiAoIXRoaXMuc3RhdGUuaXNTdGFydGVkKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKSwgKGF3YWl0IGluaXRIdHRwT3BlcmF0aW9uKHtcbiAgICAgICAgICAgICAgICBscm86IHRoaXMubHJvLFxuICAgICAgICAgICAgICAgIHN0YXRlUHJveHksXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VMb2NhdGlvbkNvbmZpZzogdGhpcy5scm9SZXNvdXJjZUxvY2F0aW9uQ29uZmlnLFxuICAgICAgICAgICAgICAgIHByb2Nlc3NSZXN1bHQ6IHRoaXMucHJvY2Vzc1Jlc3VsdCxcbiAgICAgICAgICAgICAgICBzZXRFcnJvckFzUmVzdWx0OiB0aGlzLnNldEVycm9yQXNSZXN1bHQsXG4gICAgICAgICAgICB9KSkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVwZGF0ZVN0YXRlID0gdGhpcy51cGRhdGVTdGF0ZTtcbiAgICAgICAgY29uc3QgaXNEb25lID0gdGhpcy5pc0RvbmU7XG4gICAgICAgIGlmICghdGhpcy5zdGF0ZS5pc0NvbXBsZXRlZCAmJiB0aGlzLnN0YXRlLmVycm9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGF3YWl0IHBvbGxIdHRwT3BlcmF0aW9uKHtcbiAgICAgICAgICAgICAgICBscm86IHRoaXMubHJvLFxuICAgICAgICAgICAgICAgIHN0YXRlOiB0aGlzLnN0YXRlLFxuICAgICAgICAgICAgICAgIHN0YXRlUHJveHksXG4gICAgICAgICAgICAgICAgcHJvY2Vzc1Jlc3VsdDogdGhpcy5wcm9jZXNzUmVzdWx0LFxuICAgICAgICAgICAgICAgIHVwZGF0ZVN0YXRlOiB1cGRhdGVTdGF0ZVxuICAgICAgICAgICAgICAgICAgICA/IChzdGF0ZSwgeyByYXdSZXNwb25zZSB9KSA9PiB1cGRhdGVTdGF0ZShzdGF0ZSwgcmF3UmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGlzRG9uZTogaXNEb25lXG4gICAgICAgICAgICAgICAgICAgID8gKHsgZmxhdFJlc3BvbnNlIH0sIHN0YXRlKSA9PiBpc0RvbmUoZmxhdFJlc3BvbnNlLCBzdGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgICBzZXREZWxheTogKGludGVydmFsSW5NcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvbGxlckNvbmZpZy5pbnRlcnZhbEluTXMgPSBpbnRlcnZhbEluTXM7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZXRFcnJvckFzUmVzdWx0OiB0aGlzLnNldEVycm9yQXNSZXN1bHQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZmlyZVByb2dyZXNzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChvcHRpb25zLCB0aGlzLnN0YXRlKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFzeW5jIGNhbmNlbCgpIHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKFwiYGNhbmNlbE9wZXJhdGlvbmAgaXMgZGVwcmVjYXRlZCBiZWNhdXNlIGl0IHdhc24ndCBpbXBsZW1lbnRlZFwiKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlcmlhbGl6ZXMgdGhlIFBvbGxlciBvcGVyYXRpb24uXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBzdGF0ZTogdGhpcy5zdGF0ZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BlcmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/lroEngine/operation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/pollOperation.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/legacy/pollOperation.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=pollOperation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xlZ2FjeS9wb2xsT3BlcmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWxyby9kaXN0L2VzbS9sZWdhY3kvcG9sbE9wZXJhdGlvbi5qcz8wYTExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9sbE9wZXJhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/pollOperation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/poller.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/legacy/poller.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poller: () => (/* binding */ Poller),\n/* harmony export */   PollerCancelledError: () => (/* binding */ PollerCancelledError),\n/* harmony export */   PollerStoppedError: () => (/* binding */ PollerStoppedError)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nclass PollerStoppedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PollerStoppedError\";\n        Object.setPrototypeOf(this, PollerStoppedError.prototype);\n    }\n}\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nclass PollerCancelledError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PollerCancelledError\";\n        Object.setPrototypeOf(this, PollerCancelledError.prototype);\n    }\n}\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nclass Poller {\n    /**\n     * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n     *\n     * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n     * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n     * operation has already been defined, at least its basic properties. The code below shows how to approach\n     * the definition of the constructor of a new custom poller.\n     *\n     * ```ts\n     * export class MyPoller extends Poller<MyOperationState, string> {\n     *   constructor({\n     *     // Anything you might need outside of the basics\n     *   }) {\n     *     let state: MyOperationState = {\n     *       privateProperty: private,\n     *       publicProperty: public,\n     *     };\n     *\n     *     const operation = {\n     *       state,\n     *       update,\n     *       cancel,\n     *       toString\n     *     }\n     *\n     *     // Sending the operation to the parent's constructor.\n     *     super(operation);\n     *\n     *     // You can assign more local properties here.\n     *   }\n     * }\n     * ```\n     *\n     * Inside of this constructor, a new promise is created. This will be used to\n     * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n     * resolve and reject methods are also used internally to control when to resolve\n     * or reject anyone waiting for the poller to finish.\n     *\n     * The constructor of a custom implementation of a poller is where any serialized version of\n     * a previous poller's operation should be deserialized into the operation sent to the\n     * base constructor. For example:\n     *\n     * ```ts\n     * export class MyPoller extends Poller<MyOperationState, string> {\n     *   constructor(\n     *     baseOperation: string | undefined\n     *   ) {\n     *     let state: MyOperationState = {};\n     *     if (baseOperation) {\n     *       state = {\n     *         ...JSON.parse(baseOperation).state,\n     *         ...state\n     *       };\n     *     }\n     *     const operation = {\n     *       state,\n     *       // ...\n     *     }\n     *     super(operation);\n     *   }\n     * }\n     * ```\n     *\n     * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n     */\n    constructor(operation) {\n        /** controls whether to throw an error if the operation failed or was canceled. */\n        this.resolveOnUnsuccessful = false;\n        this.stopped = true;\n        this.pollProgressCallbacks = [];\n        this.operation = operation;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n        // The above warning would get thrown if `poller.poll` is called, it returns an error,\n        // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n        this.promise.catch(() => {\n            /* intentionally blank */\n        });\n    }\n    /**\n     * Starts a loop that will break only if the poller is done\n     * or if the poller is stopped.\n     */\n    async startPolling(pollOptions = {}) {\n        if (this.stopped) {\n            this.stopped = false;\n        }\n        while (!this.isStopped() && !this.isDone()) {\n            await this.poll(pollOptions);\n            await this.delay();\n        }\n    }\n    /**\n     * pollOnce does one polling, by calling to the update method of the underlying\n     * poll operation to make any relevant change effective.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    async pollOnce(options = {}) {\n        if (!this.isDone()) {\n            this.operation = await this.operation.update({\n                abortSignal: options.abortSignal,\n                fireProgress: this.fireProgress.bind(this),\n            });\n        }\n        this.processUpdatedState();\n    }\n    /**\n     * fireProgress calls the functions passed in via onProgress the method of the poller.\n     *\n     * It loops over all of the callbacks received from onProgress, and executes them, sending them\n     * the current operation state.\n     *\n     * @param state - The current operation state.\n     */\n    fireProgress(state) {\n        for (const callback of this.pollProgressCallbacks) {\n            callback(state);\n        }\n    }\n    /**\n     * Invokes the underlying operation's cancel method.\n     */\n    async cancelOnce(options = {}) {\n        this.operation = await this.operation.cancel(options);\n    }\n    /**\n     * Returns a promise that will resolve once a single polling request finishes.\n     * It does this by calling the update method of the Poller's operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    poll(options = {}) {\n        if (!this.pollOncePromise) {\n            this.pollOncePromise = this.pollOnce(options);\n            const clearPollOncePromise = () => {\n                this.pollOncePromise = undefined;\n            };\n            this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n        }\n        return this.pollOncePromise;\n    }\n    processUpdatedState() {\n        if (this.operation.state.error) {\n            this.stopped = true;\n            if (!this.resolveOnUnsuccessful) {\n                this.reject(this.operation.state.error);\n                throw this.operation.state.error;\n            }\n        }\n        if (this.operation.state.isCancelled) {\n            this.stopped = true;\n            if (!this.resolveOnUnsuccessful) {\n                const error = new PollerCancelledError(\"Operation was canceled\");\n                this.reject(error);\n                throw error;\n            }\n        }\n        if (this.isDone() && this.resolve) {\n            // If the poller has finished polling, this means we now have a result.\n            // However, it can be the case that TResult is instantiated to void, so\n            // we are not expecting a result anyway. To assert that we might not\n            // have a result eventually after finishing polling, we cast the result\n            // to TResult.\n            this.resolve(this.getResult());\n        }\n    }\n    /**\n     * Returns a promise that will resolve once the underlying operation is completed.\n     */\n    async pollUntilDone(pollOptions = {}) {\n        if (this.stopped) {\n            this.startPolling(pollOptions).catch(this.reject);\n        }\n        // This is needed because the state could have been updated by\n        // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n        this.processUpdatedState();\n        return this.promise;\n    }\n    /**\n     * Invokes the provided callback after each polling is completed,\n     * sending the current state of the poller's operation.\n     *\n     * It returns a method that can be used to stop receiving updates on the given callback function.\n     */\n    onProgress(callback) {\n        this.pollProgressCallbacks.push(callback);\n        return () => {\n            this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n        };\n    }\n    /**\n     * Returns true if the poller has finished polling.\n     */\n    isDone() {\n        const state = this.operation.state;\n        return Boolean(state.isCompleted || state.isCancelled || state.error);\n    }\n    /**\n     * Stops the poller from continuing to poll.\n     */\n    stopPolling() {\n        if (!this.stopped) {\n            this.stopped = true;\n            if (this.reject) {\n                this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n            }\n        }\n    }\n    /**\n     * Returns true if the poller is stopped.\n     */\n    isStopped() {\n        return this.stopped;\n    }\n    /**\n     * Attempts to cancel the underlying operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * If it's called again before it finishes, it will throw an error.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    cancelOperation(options = {}) {\n        if (!this.cancelPromise) {\n            this.cancelPromise = this.cancelOnce(options);\n        }\n        else if (options.abortSignal) {\n            throw new Error(\"A cancel request is currently pending\");\n        }\n        return this.cancelPromise;\n    }\n    /**\n     * Returns the state of the operation.\n     *\n     * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n     * implementations of the pollers can customize what's shared with the public by writing their own\n     * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n     * and a public type representing a safe to share subset of the properties of the internal state.\n     * Their definition of getOperationState can then return their public type.\n     *\n     * Example:\n     *\n     * ```ts\n     * // Let's say we have our poller's operation state defined as:\n     * interface MyOperationState extends PollOperationState<ResultType> {\n     *   privateProperty?: string;\n     *   publicProperty?: string;\n     * }\n     *\n     * // To allow us to have a true separation of public and private state, we have to define another interface:\n     * interface PublicState extends PollOperationState<ResultType> {\n     *   publicProperty?: string;\n     * }\n     *\n     * // Then, we define our Poller as follows:\n     * export class MyPoller extends Poller<MyOperationState, ResultType> {\n     *   // ... More content is needed here ...\n     *\n     *   public getOperationState(): PublicState {\n     *     const state: PublicState = this.operation.state;\n     *     return {\n     *       // Properties from PollOperationState<TResult>\n     *       isStarted: state.isStarted,\n     *       isCompleted: state.isCompleted,\n     *       isCancelled: state.isCancelled,\n     *       error: state.error,\n     *       result: state.result,\n     *\n     *       // The only other property needed by PublicState.\n     *       publicProperty: state.publicProperty\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * You can see this in the tests of this repository, go to the file:\n     * `../test/utils/testPoller.ts`\n     * and look for the getOperationState implementation.\n     */\n    getOperationState() {\n        return this.operation.state;\n    }\n    /**\n     * Returns the result value of the operation,\n     * regardless of the state of the poller.\n     * It can return undefined or an incomplete form of the final TResult value\n     * depending on the implementation.\n     */\n    getResult() {\n        const state = this.operation.state;\n        return state.result;\n    }\n    /**\n     * Returns a serialized version of the poller's operation\n     * by invoking the operation's toString method.\n     */\n    toString() {\n        return this.operation.toString();\n    }\n}\n//# sourceMappingURL=poller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/legacy/poller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/logger.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/logger.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-lro\");\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxlQUFlLGlFQUFrQjtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWxyby9kaXN0L2VzbS9sb2dnZXIuanM/MTMzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG4vKipcbiAqIFRoZSBgQGF6dXJlL2xvZ2dlcmAgY29uZmlndXJhdGlvbiBmb3IgdGhpcyBwYWNrYWdlLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJjb3JlLWxyb1wiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/poller/constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POLL_INTERVAL_IN_MS: () => (/* binding */ POLL_INTERVAL_IN_MS),\n/* harmony export */   terminalStates: () => (/* binding */ terminalStates)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The default time interval to wait before sending the next polling request.\n */\nconst POLL_INTERVAL_IN_MS = 2000;\n/**\n * The closed set of terminal states.\n */\nconst terminalStates = [\"succeeded\", \"canceled\", \"failed\"];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL3BvbGxlci9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtbHJvL2Rpc3QvZXNtL3BvbGxlci9jb25zdGFudHMuanM/NTQwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogVGhlIGRlZmF1bHQgdGltZSBpbnRlcnZhbCB0byB3YWl0IGJlZm9yZSBzZW5kaW5nIHRoZSBuZXh0IHBvbGxpbmcgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGNvbnN0IFBPTExfSU5URVJWQUxfSU5fTVMgPSAyMDAwO1xuLyoqXG4gKiBUaGUgY2xvc2VkIHNldCBvZiB0ZXJtaW5hbCBzdGF0ZXMuXG4gKi9cbmV4cG9ydCBjb25zdCB0ZXJtaW5hbFN0YXRlcyA9IFtcInN1Y2NlZWRlZFwiLCBcImNhbmNlbGVkXCIsIFwiZmFpbGVkXCJdO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/operation.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/poller/operation.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializeState: () => (/* binding */ deserializeState),\n/* harmony export */   initOperation: () => (/* binding */ initOperation),\n/* harmony export */   pollOperation: () => (/* binding */ pollOperation)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/logger.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Deserializes the state\n */\nfunction deserializeState(serializedState) {\n    try {\n        return JSON.parse(serializedState).state;\n    }\n    catch (e) {\n        throw new Error(`Unable to deserialize input state: ${serializedState}`);\n    }\n}\nfunction setStateError(inputs) {\n    const { state, stateProxy, isOperationError } = inputs;\n    return (error) => {\n        if (isOperationError(error)) {\n            stateProxy.setError(state, error);\n            stateProxy.setFailed(state);\n        }\n        throw error;\n    };\n}\nfunction appendReadableErrorMessage(currentMessage, innerMessage) {\n    let message = currentMessage;\n    if (message.slice(-1) !== \".\") {\n        message = message + \".\";\n    }\n    return message + \" \" + innerMessage;\n}\nfunction simplifyError(err) {\n    let message = err.message;\n    let code = err.code;\n    let curErr = err;\n    while (curErr.innererror) {\n        curErr = curErr.innererror;\n        code = curErr.code;\n        message = appendReadableErrorMessage(message, curErr.message);\n    }\n    return {\n        code,\n        message,\n    };\n}\nfunction processOperationStatus(result) {\n    const { state, stateProxy, status, isDone, processResult, getError, response, setErrorAsResult } = result;\n    switch (status) {\n        case \"succeeded\": {\n            stateProxy.setSucceeded(state);\n            break;\n        }\n        case \"failed\": {\n            const err = getError === null || getError === void 0 ? void 0 : getError(response);\n            let postfix = \"\";\n            if (err) {\n                const { code, message } = simplifyError(err);\n                postfix = `. ${code}. ${message}`;\n            }\n            const errStr = `The long-running operation has failed${postfix}`;\n            stateProxy.setError(state, new Error(errStr));\n            stateProxy.setFailed(state);\n            _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.warning(errStr);\n            break;\n        }\n        case \"canceled\": {\n            stateProxy.setCanceled(state);\n            break;\n        }\n    }\n    if ((isDone === null || isDone === void 0 ? void 0 : isDone(response, state)) ||\n        (isDone === undefined &&\n            [\"succeeded\", \"canceled\"].concat(setErrorAsResult ? [] : [\"failed\"]).includes(status))) {\n        stateProxy.setResult(state, buildResult({\n            response,\n            state,\n            processResult,\n        }));\n    }\n}\nfunction buildResult(inputs) {\n    const { processResult, response, state } = inputs;\n    return processResult ? processResult(response, state) : response;\n}\n/**\n * Initiates the long-running operation.\n */\nasync function initOperation(inputs) {\n    const { init, stateProxy, processResult, getOperationStatus, withOperationLocation, setErrorAsResult, } = inputs;\n    const { operationLocation, resourceLocation, metadata, response } = await init();\n    if (operationLocation)\n        withOperationLocation === null || withOperationLocation === void 0 ? void 0 : withOperationLocation(operationLocation, false);\n    const config = {\n        metadata,\n        operationLocation,\n        resourceLocation,\n    };\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.verbose(`LRO: Operation description:`, config);\n    const state = stateProxy.initState(config);\n    const status = getOperationStatus({ response, state, operationLocation });\n    processOperationStatus({ state, status, stateProxy, response, setErrorAsResult, processResult });\n    return state;\n}\nasync function pollOperationHelper(inputs) {\n    const { poll, state, stateProxy, operationLocation, getOperationStatus, getResourceLocation, isOperationError, options, } = inputs;\n    const response = await poll(operationLocation, options).catch(setStateError({\n        state,\n        stateProxy,\n        isOperationError,\n    }));\n    const status = getOperationStatus(response, state);\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.verbose(`LRO: Status:\\n\\tPolling from: ${state.config.operationLocation}\\n\\tOperation status: ${status}\\n\\tPolling status: ${_constants_js__WEBPACK_IMPORTED_MODULE_1__.terminalStates.includes(status) ? \"Stopped\" : \"Running\"}`);\n    if (status === \"succeeded\") {\n        const resourceLocation = getResourceLocation(response, state);\n        if (resourceLocation !== undefined) {\n            return {\n                response: await poll(resourceLocation).catch(setStateError({ state, stateProxy, isOperationError })),\n                status,\n            };\n        }\n    }\n    return { response, status };\n}\n/** Polls the long-running operation. */\nasync function pollOperation(inputs) {\n    const { poll, state, stateProxy, options, getOperationStatus, getResourceLocation, getOperationLocation, isOperationError, withOperationLocation, getPollingInterval, processResult, getError, updateState, setDelay, isDone, setErrorAsResult, } = inputs;\n    const { operationLocation } = state.config;\n    if (operationLocation !== undefined) {\n        const { response, status } = await pollOperationHelper({\n            poll,\n            getOperationStatus,\n            state,\n            stateProxy,\n            operationLocation,\n            getResourceLocation,\n            isOperationError,\n            options,\n        });\n        processOperationStatus({\n            status,\n            response,\n            state,\n            stateProxy,\n            isDone,\n            processResult,\n            getError,\n            setErrorAsResult,\n        });\n        if (!_constants_js__WEBPACK_IMPORTED_MODULE_1__.terminalStates.includes(status)) {\n            const intervalInMs = getPollingInterval === null || getPollingInterval === void 0 ? void 0 : getPollingInterval(response);\n            if (intervalInMs)\n                setDelay(intervalInMs);\n            const location = getOperationLocation === null || getOperationLocation === void 0 ? void 0 : getOperationLocation(response, state);\n            if (location !== undefined) {\n                const isUpdated = operationLocation !== location;\n                state.config.operationLocation = location;\n                withOperationLocation === null || withOperationLocation === void 0 ? void 0 : withOperationLocation(location, isUpdated);\n            }\n            else\n                withOperationLocation === null || withOperationLocation === void 0 ? void 0 : withOperationLocation(operationLocation, false);\n        }\n        updateState === null || updateState === void 0 ? void 0 : updateState(state, response);\n    }\n}\n//# sourceMappingURL=operation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/operation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/poller.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-lro/dist/esm/poller/poller.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildCreatePoller: () => (/* binding */ buildCreatePoller)\n/* harmony export */ });\n/* harmony import */ var _operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operation.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/operation.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/constants.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst createStateProxy = () => ({\n    /**\n     * The state at this point is created to be of type OperationState<TResult>.\n     * It will be updated later to be of type TState when the\n     * customer-provided callback, `updateState`, is called during polling.\n     */\n    initState: (config) => ({ status: \"running\", config }),\n    setCanceled: (state) => (state.status = \"canceled\"),\n    setError: (state, error) => (state.error = error),\n    setResult: (state, result) => (state.result = result),\n    setRunning: (state) => (state.status = \"running\"),\n    setSucceeded: (state) => (state.status = \"succeeded\"),\n    setFailed: (state) => (state.status = \"failed\"),\n    getError: (state) => state.error,\n    getResult: (state) => state.result,\n    isCanceled: (state) => state.status === \"canceled\",\n    isFailed: (state) => state.status === \"failed\",\n    isRunning: (state) => state.status === \"running\",\n    isSucceeded: (state) => state.status === \"succeeded\",\n});\n/**\n * Returns a poller factory.\n */\nfunction buildCreatePoller(inputs) {\n    const { getOperationLocation, getStatusFromInitialResponse, getStatusFromPollResponse, isOperationError, getResourceLocation, getPollingInterval, getError, resolveOnUnsuccessful, } = inputs;\n    return async ({ init, poll }, options) => {\n        const { processResult, updateState, withOperationLocation: withOperationLocationCallback, intervalInMs = _constants_js__WEBPACK_IMPORTED_MODULE_1__.POLL_INTERVAL_IN_MS, restoreFrom, } = options || {};\n        const stateProxy = createStateProxy();\n        const withOperationLocation = withOperationLocationCallback\n            ? (() => {\n                let called = false;\n                return (operationLocation, isUpdated) => {\n                    if (isUpdated)\n                        withOperationLocationCallback(operationLocation);\n                    else if (!called)\n                        withOperationLocationCallback(operationLocation);\n                    called = true;\n                };\n            })()\n            : undefined;\n        const state = restoreFrom\n            ? (0,_operation_js__WEBPACK_IMPORTED_MODULE_0__.deserializeState)(restoreFrom)\n            : await (0,_operation_js__WEBPACK_IMPORTED_MODULE_0__.initOperation)({\n                init,\n                stateProxy,\n                processResult,\n                getOperationStatus: getStatusFromInitialResponse,\n                withOperationLocation,\n                setErrorAsResult: !resolveOnUnsuccessful,\n            });\n        let resultPromise;\n        const abortController = new AbortController();\n        const handlers = new Map();\n        const handleProgressEvents = async () => handlers.forEach((h) => h(state));\n        const cancelErrMsg = \"Operation was canceled\";\n        let currentPollIntervalInMs = intervalInMs;\n        const poller = {\n            getOperationState: () => state,\n            getResult: () => state.result,\n            isDone: () => [\"succeeded\", \"failed\", \"canceled\"].includes(state.status),\n            isStopped: () => resultPromise === undefined,\n            stopPolling: () => {\n                abortController.abort();\n            },\n            toString: () => JSON.stringify({\n                state,\n            }),\n            onProgress: (callback) => {\n                const s = Symbol();\n                handlers.set(s, callback);\n                return () => handlers.delete(s);\n            },\n            pollUntilDone: (pollOptions) => (resultPromise !== null && resultPromise !== void 0 ? resultPromise : (resultPromise = (async () => {\n                const { abortSignal: inputAbortSignal } = pollOptions || {};\n                // In the future we can use AbortSignal.any() instead\n                function abortListener() {\n                    abortController.abort();\n                }\n                const abortSignal = abortController.signal;\n                if (inputAbortSignal === null || inputAbortSignal === void 0 ? void 0 : inputAbortSignal.aborted) {\n                    abortController.abort();\n                }\n                else if (!abortSignal.aborted) {\n                    inputAbortSignal === null || inputAbortSignal === void 0 ? void 0 : inputAbortSignal.addEventListener(\"abort\", abortListener, { once: true });\n                }\n                try {\n                    if (!poller.isDone()) {\n                        await poller.poll({ abortSignal });\n                        while (!poller.isDone()) {\n                            await (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_2__.delay)(currentPollIntervalInMs, { abortSignal });\n                            await poller.poll({ abortSignal });\n                        }\n                    }\n                }\n                finally {\n                    inputAbortSignal === null || inputAbortSignal === void 0 ? void 0 : inputAbortSignal.removeEventListener(\"abort\", abortListener);\n                }\n                if (resolveOnUnsuccessful) {\n                    return poller.getResult();\n                }\n                else {\n                    switch (state.status) {\n                        case \"succeeded\":\n                            return poller.getResult();\n                        case \"canceled\":\n                            throw new Error(cancelErrMsg);\n                        case \"failed\":\n                            throw state.error;\n                        case \"notStarted\":\n                        case \"running\":\n                            throw new Error(`Polling completed without succeeding or failing`);\n                    }\n                }\n            })().finally(() => {\n                resultPromise = undefined;\n            }))),\n            async poll(pollOptions) {\n                if (resolveOnUnsuccessful) {\n                    if (poller.isDone())\n                        return;\n                }\n                else {\n                    switch (state.status) {\n                        case \"succeeded\":\n                            return;\n                        case \"canceled\":\n                            throw new Error(cancelErrMsg);\n                        case \"failed\":\n                            throw state.error;\n                    }\n                }\n                await (0,_operation_js__WEBPACK_IMPORTED_MODULE_0__.pollOperation)({\n                    poll,\n                    state,\n                    stateProxy,\n                    getOperationLocation,\n                    isOperationError,\n                    withOperationLocation,\n                    getPollingInterval,\n                    getOperationStatus: getStatusFromPollResponse,\n                    getResourceLocation,\n                    processResult,\n                    getError,\n                    updateState,\n                    options: pollOptions,\n                    setDelay: (pollIntervalInMs) => {\n                        currentPollIntervalInMs = pollIntervalInMs;\n                    },\n                    setErrorAsResult: !resolveOnUnsuccessful,\n                });\n                await handleProgressEvents();\n                if (!resolveOnUnsuccessful) {\n                    switch (state.status) {\n                        case \"canceled\":\n                            throw new Error(cancelErrMsg);\n                        case \"failed\":\n                            throw state.error;\n                    }\n                }\n            },\n        };\n        return poller;\n    };\n}\n//# sourceMappingURL=poller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-lro/dist/esm/poller/poller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_POLICY_COUNT: () => (/* binding */ DEFAULT_RETRY_POLICY_COUNT),\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst SDK_VERSION = \"1.22.1\";\nconst DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jb25zdGFudHMuanM/OGJmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBjb25zdCBTREtfVkVSU0lPTiA9IFwiMS4yMi4xXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgPSAzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineFromOptions: () => (/* binding */ createPipelineFromOptions)\n/* harmony export */ });\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n/* harmony import */ var _policies_wrapAbortSignalLikePolicy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/wrapAbortSignalLikePolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/wrapAbortSignalLikePolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nfunction createPipelineFromOptions(options) {\n    const pipeline = (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createEmptyPipeline)();\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy((0,_policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_11__.agentPolicy)(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy((0,_policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_12__.tlsPolicy)(options.tlsOptions));\n        }\n        pipeline.addPolicy((0,_policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__.proxyPolicy)(options.proxyOptions));\n        pipeline.addPolicy((0,_policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__.decompressResponsePolicy)());\n    }\n    pipeline.addPolicy((0,_policies_wrapAbortSignalLikePolicy_js__WEBPACK_IMPORTED_MODULE_14__.wrapAbortSignalLikePolicy)());\n    pipeline.addPolicy((0,_policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__.formDataPolicy)(), { beforePolicies: [_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicyName] });\n    pipeline.addPolicy((0,_policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__.userAgentPolicy)(options.userAgentOptions));\n    pipeline.addPolicy((0,_policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__.setClientRequestIdPolicy)(options.telemetryOptions?.clientRequestIdHeaderName));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy((0,_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicy)(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy((0,_policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__.defaultRetryPolicy)(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_13__.tracingPolicy)({ ...options.userAgentOptions, ...options.loggingOptions }), {\n        afterPhase: \"Retry\",\n    });\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy((0,_policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__.redirectPolicy)(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy((0,_policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__.logPolicy)(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ29EO0FBQ0E7QUFDVTtBQUNFO0FBQ3FCO0FBQ0g7QUFDWjtBQUNSO0FBQ2hCO0FBQ1U7QUFDMEI7QUFDMUI7QUFDSjtBQUNRO0FBQ3dCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsaUVBQW1CO0FBQ3hDLFFBQVEsd0RBQVU7QUFDbEI7QUFDQSwrQkFBK0Isc0VBQVc7QUFDMUM7QUFDQTtBQUNBLCtCQUErQixrRUFBUztBQUN4QztBQUNBLDJCQUEyQixxRUFBVztBQUN0QywyQkFBMkIsK0ZBQXdCO0FBQ25EO0FBQ0EsdUJBQXVCLGtHQUF5QjtBQUNoRCx1QkFBdUIsMkVBQWMsTUFBTSxpQkFBaUIsNkVBQW1CLEdBQUc7QUFDbEYsdUJBQXVCLDZFQUFlO0FBQ3RDLHVCQUF1QixnR0FBd0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDZFQUFlLE1BQU0sMkJBQTJCO0FBQ3ZFLHVCQUF1QixtRkFBa0IsMEJBQTBCLGdCQUFnQjtBQUNuRix1QkFBdUIsMEVBQWEsR0FBRyx3REFBd0Q7QUFDL0Y7QUFDQSxLQUFLO0FBQ0wsUUFBUSx3REFBVTtBQUNsQjtBQUNBO0FBQ0EsMkJBQTJCLDJFQUFjLDZCQUE2QixxQkFBcUI7QUFDM0Y7QUFDQSx1QkFBdUIsaUVBQVMsNEJBQTRCLG9CQUFvQjtBQUNoRjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL2NyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanM/MmY4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGxvZ1BvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2xvZ1BvbGljeS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlRW1wdHlQaXBlbGluZSB9IGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5pbXBvcnQgeyByZWRpcmVjdFBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzXCI7XG5pbXBvcnQgeyB1c2VyQWdlbnRQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanNcIjtcbmltcG9ydCB7IG11bHRpcGFydFBvbGljeSwgbXVsdGlwYXJ0UG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL211bHRpcGFydFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0UmV0cnlQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanNcIjtcbmltcG9ydCB7IGZvcm1EYXRhUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvZm9ybURhdGFQb2xpY3kuanNcIjtcbmltcG9ydCB7IGlzTm9kZUxpa2UgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuaW1wb3J0IHsgcHJveHlQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9wcm94eVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBhZ2VudFBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2FnZW50UG9saWN5LmpzXCI7XG5pbXBvcnQgeyB0bHNQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy90bHNQb2xpY3kuanNcIjtcbmltcG9ydCB7IHRyYWNpbmdQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy90cmFjaW5nUG9saWN5LmpzXCI7XG5pbXBvcnQgeyB3cmFwQWJvcnRTaWduYWxMaWtlUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvd3JhcEFib3J0U2lnbmFsTGlrZVBvbGljeS5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgcGlwZWxpbmUgd2l0aCBhIGRlZmF1bHQgc2V0IG9mIGN1c3RvbWl6YWJsZSBwb2xpY2llcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgYSBjdXN0b20gcGlwZWxpbmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zKG9wdGlvbnMpIHtcbiAgICBjb25zdCBwaXBlbGluZSA9IGNyZWF0ZUVtcHR5UGlwZWxpbmUoKTtcbiAgICBpZiAoaXNOb2RlTGlrZSkge1xuICAgICAgICBpZiAob3B0aW9ucy5hZ2VudCkge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KGFnZW50UG9saWN5KG9wdGlvbnMuYWdlbnQpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy50bHNPcHRpb25zKSB7XG4gICAgICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3kodGxzUG9saWN5KG9wdGlvbnMudGxzT3B0aW9ucykpO1xuICAgICAgICB9XG4gICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeShwcm94eVBvbGljeShvcHRpb25zLnByb3h5T3B0aW9ucykpO1xuICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3koZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5KCkpO1xuICAgIH1cbiAgICBwaXBlbGluZS5hZGRQb2xpY3kod3JhcEFib3J0U2lnbmFsTGlrZVBvbGljeSgpKTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3koZm9ybURhdGFQb2xpY3koKSwgeyBiZWZvcmVQb2xpY2llczogW211bHRpcGFydFBvbGljeU5hbWVdIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeSh1c2VyQWdlbnRQb2xpY3kob3B0aW9ucy51c2VyQWdlbnRPcHRpb25zKSk7XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KHNldENsaWVudFJlcXVlc3RJZFBvbGljeShvcHRpb25zLnRlbGVtZXRyeU9wdGlvbnM/LmNsaWVudFJlcXVlc3RJZEhlYWRlck5hbWUpKTtcbiAgICAvLyBUaGUgbXVsdGlwYXJ0IHBvbGljeSBpcyBhZGRlZCBhZnRlciBwb2xpY2llcyB3aXRoIG5vIHBoYXNlLCBzbyB0aGF0XG4gICAgLy8gcG9saWNpZXMgY2FuIGJlIGFkZGVkIGJldHdlZW4gaXQgYW5kIGZvcm1EYXRhUG9saWN5IHRvIG1vZGlmeVxuICAgIC8vIHByb3BlcnRpZXMgKGUuZy4sIG1ha2luZyB0aGUgYm91bmRhcnkgY29uc3RhbnQgaW4gcmVjb3JkZWQgdGVzdHMpLlxuICAgIHBpcGVsaW5lLmFkZFBvbGljeShtdWx0aXBhcnRQb2xpY3koKSwgeyBhZnRlclBoYXNlOiBcIkRlc2VyaWFsaXplXCIgfSk7XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KGRlZmF1bHRSZXRyeVBvbGljeShvcHRpb25zLnJldHJ5T3B0aW9ucyksIHsgcGhhc2U6IFwiUmV0cnlcIiB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3kodHJhY2luZ1BvbGljeSh7IC4uLm9wdGlvbnMudXNlckFnZW50T3B0aW9ucywgLi4ub3B0aW9ucy5sb2dnaW5nT3B0aW9ucyB9KSwge1xuICAgICAgICBhZnRlclBoYXNlOiBcIlJldHJ5XCIsXG4gICAgfSk7XG4gICAgaWYgKGlzTm9kZUxpa2UpIHtcbiAgICAgICAgLy8gQm90aCBYSFIgYW5kIEZldGNoIGV4cGVjdCB0byBoYW5kbGUgcmVkaXJlY3RzIGF1dG9tYXRpY2FsbHksXG4gICAgICAgIC8vIHNvIG9ubHkgaW5jbHVkZSB0aGlzIHBvbGljeSB3aGVuIHdlJ3JlIGluIE5vZGUuXG4gICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeShyZWRpcmVjdFBvbGljeShvcHRpb25zLnJlZGlyZWN0T3B0aW9ucyksIHsgYWZ0ZXJQaGFzZTogXCJSZXRyeVwiIH0pO1xuICAgIH1cbiAgICBwaXBlbGluZS5hZGRQb2xpY3kobG9nUG9saWN5KG9wdGlvbnMubG9nZ2luZ09wdGlvbnMpLCB7IGFmdGVyUGhhc2U6IFwiU2lnblwiIH0pO1xuICAgIHJldHVybiBwaXBlbGluZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultHttpClient: () => (/* binding */ createDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/index.js\");\n/* harmony import */ var _util_wrapAbortSignal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/wrapAbortSignal.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/wrapAbortSignal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nfunction createDefaultHttpClient() {\n    const client = (0,_typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__.createDefaultHttpClient)();\n    return {\n        async sendRequest(request) {\n            // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n            // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n            const { abortSignal, cleanup } = request.abortSignal\n                ? (0,_util_wrapAbortSignal_js__WEBPACK_IMPORTED_MODULE_1__.wrapAbortSignalLike)(request.abortSignal)\n                : {};\n            try {\n                // eslint-disable-next-line no-param-reassign\n                request.abortSignal = abortSignal;\n                return await client.sendRequest(request);\n            }\n            finally {\n                cleanup?.();\n            }\n        },\n    };\n}\n//# sourceMappingURL=defaultHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9kZWZhdWx0SHR0cENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ2tHO0FBQ2xDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsbUJBQW1CLGtGQUEwQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1QkFBdUI7QUFDM0Msa0JBQWtCLDZFQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9kZWZhdWx0SHR0cENsaWVudC5qcz9hZWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlRGVmYXVsdEh0dHBDbGllbnQgYXMgdHNwQ3JlYXRlRGVmYXVsdEh0dHBDbGllbnQgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZVwiO1xuaW1wb3J0IHsgd3JhcEFib3J0U2lnbmFsTGlrZSB9IGZyb20gXCIuL3V0aWwvd3JhcEFib3J0U2lnbmFsLmpzXCI7XG4vKipcbiAqIENyZWF0ZSB0aGUgY29ycmVjdCBIdHRwQ2xpZW50IGZvciB0aGUgY3VycmVudCBlbnZpcm9ubWVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50KCkge1xuICAgIGNvbnN0IGNsaWVudCA9IHRzcENyZWF0ZURlZmF1bHRIdHRwQ2xpZW50KCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICAgICAgLy8gd2Ugd3JhcCBhbnkgQWJvcnRTaWduYWxMaWtlIGhlcmUgc2luY2UgdGhlIFR5cGVTcGVjIHJ1bnRpbWUgZXhwZWN0cyBhIG5hdGl2ZSBBYm9ydFNpZ25hbC5cbiAgICAgICAgICAgIC8vIDk5JSBvZiB0aGUgdGltZSwgdGhpcyBzaG91bGQgYmUgYSBuby1vcCBzaW5jZSBhIG5hdGl2ZSBBYm9ydFNpZ25hbCBpcyBwYXNzZWQgaW4uXG4gICAgICAgICAgICBjb25zdCB7IGFib3J0U2lnbmFsLCBjbGVhbnVwIH0gPSByZXF1ZXN0LmFib3J0U2lnbmFsXG4gICAgICAgICAgICAgICAgPyB3cmFwQWJvcnRTaWduYWxMaWtlKHJlcXVlc3QuYWJvcnRTaWduYWwpXG4gICAgICAgICAgICAgICAgOiB7fTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICAgICAgcmVxdWVzdC5hYm9ydFNpZ25hbCA9IGFib3J0U2lnbmFsO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBjbGllbnQuc2VuZFJlcXVlc3QocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICBjbGVhbnVwPy4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdEh0dHBDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHttpHeaders: () => (/* binding */ createHttpHeaders)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nfunction createHttpHeaders(rawHeaders) {\n    return (0,_typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9odHRwSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDc0Y7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsNEVBQW9CO0FBQy9CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL2h0dHBIZWFkZXJzLmpzPzY2NGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycyBhcyB0c3BDcmVhdGVIdHRwSGVhZGVycyB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lXCI7XG4vKipcbiAqIENyZWF0ZXMgYW4gb2JqZWN0IHRoYXQgc2F0aXNmaWVzIHRoZSBgSHR0cEhlYWRlcnNgIGludGVyZmFjZS5cbiAqIEBwYXJhbSByYXdIZWFkZXJzIC0gQSBzaW1wbGUgb2JqZWN0IHJlcHJlc2VudGluZyBpbml0aWFsIGhlYWRlcnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUh0dHBIZWFkZXJzKHJhd0hlYWRlcnMpIHtcbiAgICByZXR1cm4gdHNwQ3JlYXRlSHR0cEhlYWRlcnMocmF3SGVhZGVycyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwSGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.RestError),\n/* harmony export */   agentPolicy: () => (/* reexport safe */ _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__.agentPolicy),\n/* harmony export */   agentPolicyName: () => (/* reexport safe */ _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__.agentPolicyName),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicyName),\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicyName),\n/* harmony export */   createDefaultHttpClient: () => (/* reexport safe */ _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__.createDefaultHttpClient),\n/* harmony export */   createEmptyPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline),\n/* harmony export */   createFile: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_25__.createFile),\n/* harmony export */   createFileFromStream: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_25__.createFileFromStream),\n/* harmony export */   createHttpHeaders: () => (/* reexport safe */ _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__.createHttpHeaders),\n/* harmony export */   createPipelineFromOptions: () => (/* reexport safe */ _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions),\n/* harmony export */   createPipelineRequest: () => (/* reexport safe */ _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__.createPipelineRequest),\n/* harmony export */   decompressResponsePolicy: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicyName),\n/* harmony export */   defaultRetryPolicy: () => (/* reexport safe */ _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__.defaultRetryPolicy),\n/* harmony export */   exponentialRetryPolicy: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicyName),\n/* harmony export */   formDataPolicy: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicyName),\n/* harmony export */   getDefaultProxySettings: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.getDefaultProxySettings),\n/* harmony export */   isRestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError),\n/* harmony export */   logPolicy: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicy),\n/* harmony export */   logPolicyName: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicyName),\n/* harmony export */   multipartPolicy: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicyName),\n/* harmony export */   ndJsonPolicy: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicyName),\n/* harmony export */   proxyPolicy: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicyName),\n/* harmony export */   redirectPolicy: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicyName),\n/* harmony export */   retryPolicy: () => (/* reexport safe */ _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__.retryPolicy),\n/* harmony export */   setClientRequestIdPolicy: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicyName),\n/* harmony export */   systemErrorRetryPolicy: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicyName),\n/* harmony export */   throttlingRetryPolicy: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicyName),\n/* harmony export */   tlsPolicy: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicyName),\n/* harmony export */   tracingPolicy: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicyName),\n/* harmony export */   userAgentPolicy: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createPipelineFromOptions.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\");\n/* harmony import */ var _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultHttpClient.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pipelineRequest.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./restError.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/retryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/ndJsonPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\");\n/* harmony import */ var _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/auxiliaryAuthenticationHeaderPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\");\n/* harmony import */ var _policies_agentPolicy_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\");\n/* harmony import */ var _util_file_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/file.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3FEO0FBQ3VCO0FBQ1g7QUFDWjtBQUNRO0FBQ0o7QUFDd0Q7QUFDTjtBQUNNO0FBQzlDO0FBQ2tCO0FBQ2E7QUFDZjtBQUN3QjtBQUNIO0FBQy9DO0FBQ3VCO0FBQ1Q7QUFDZTtBQUNuQjtBQUNlO0FBQ29EO0FBQzFEO0FBQ3NFO0FBQ3pFO0FBQ047QUFDbkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL2luZGV4LmpzP2UwZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBjcmVhdGVFbXB0eVBpcGVsaW5lLCB9IGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLCB9IGZyb20gXCIuL2NyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50IH0gZnJvbSBcIi4vZGVmYXVsdEh0dHBDbGllbnQuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUh0dHBIZWFkZXJzIH0gZnJvbSBcIi4vaHR0cEhlYWRlcnMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCB9IGZyb20gXCIuL3BpcGVsaW5lUmVxdWVzdC5qc1wiO1xuZXhwb3J0IHsgUmVzdEVycm9yLCBpc1Jlc3RFcnJvciwgfSBmcm9tIFwiLi9yZXN0RXJyb3IuanNcIjtcbmV4cG9ydCB7IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSwgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGV4cG9uZW50aWFsUmV0cnlQb2xpY3ksIGV4cG9uZW50aWFsUmV0cnlQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2V4cG9uZW50aWFsUmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHNldENsaWVudFJlcXVlc3RJZFBvbGljeSwgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGxvZ1BvbGljeSwgbG9nUG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL2xvZ1BvbGljeS5qc1wiO1xuZXhwb3J0IHsgbXVsdGlwYXJ0UG9saWN5LCBtdWx0aXBhcnRQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvbXVsdGlwYXJ0UG9saWN5LmpzXCI7XG5leHBvcnQgeyBwcm94eVBvbGljeSwgcHJveHlQb2xpY3lOYW1lLCBnZXREZWZhdWx0UHJveHlTZXR0aW5ncyB9IGZyb20gXCIuL3BvbGljaWVzL3Byb3h5UG9saWN5LmpzXCI7XG5leHBvcnQgeyByZWRpcmVjdFBvbGljeSwgcmVkaXJlY3RQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzXCI7XG5leHBvcnQgeyBzeXN0ZW1FcnJvclJldHJ5UG9saWN5LCBzeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0aHJvdHRsaW5nUmV0cnlQb2xpY3ksIHRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvdGhyb3R0bGluZ1JldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyByZXRyeVBvbGljeSwgfSBmcm9tIFwiLi9wb2xpY2llcy9yZXRyeVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgdHJhY2luZ1BvbGljeSwgdHJhY2luZ1BvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvdHJhY2luZ1BvbGljeS5qc1wiO1xuZXhwb3J0IHsgZGVmYXVsdFJldHJ5UG9saWN5LCB9IGZyb20gXCIuL3BvbGljaWVzL2RlZmF1bHRSZXRyeVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgdXNlckFnZW50UG9saWN5LCB1c2VyQWdlbnRQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3VzZXJBZ2VudFBvbGljeS5qc1wiO1xuZXhwb3J0IHsgdGxzUG9saWN5LCB0bHNQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvdGxzUG9saWN5LmpzXCI7XG5leHBvcnQgeyBmb3JtRGF0YVBvbGljeSwgZm9ybURhdGFQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvZm9ybURhdGFQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3ksIGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2JlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3kuanNcIjtcbmV4cG9ydCB7IG5kSnNvblBvbGljeSwgbmRKc29uUG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL25kSnNvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3ksIGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qc1wiO1xuZXhwb3J0IHsgYWdlbnRQb2xpY3ksIGFnZW50UG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL2FnZW50UG9saWN5LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVGaWxlLCBjcmVhdGVGaWxlRnJvbVN0cmVhbSwgfSBmcm9tIFwiLi91dGlsL2ZpbGUuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/log.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQzVDLGVBQWUsaUVBQWtCO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9sb2cuanM/ODJjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG5leHBvcnQgY29uc3QgbG9nZ2VyID0gY3JlYXRlQ2xpZW50TG9nZ2VyKFwiY29yZS1yZXN0LXBpcGVsaW5lXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyPipeline: () => (/* binding */ createEmptyPipeline)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nfunction createEmptyPipeline() {\n    return (0,_typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline)();\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9waXBlbGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDMEY7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsOEVBQXNCO0FBQ2pDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BpcGVsaW5lLmpzPzg3OTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVFbXB0eVBpcGVsaW5lIGFzIHRzcENyZWF0ZUVtcHR5UGlwZWxpbmUgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZVwiO1xuLyoqXG4gKiBDcmVhdGVzIGEgdG90YWxseSBlbXB0eSBwaXBlbGluZS5cbiAqIFVzZWZ1bCBmb3IgdGVzdGluZyBvciBjcmVhdGluZyBhIGN1c3RvbSBvbmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbXB0eVBpcGVsaW5lKCkge1xuICAgIHJldHVybiB0c3BDcmVhdGVFbXB0eVBpcGVsaW5lKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXBlbGluZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineRequest: () => (/* binding */ createPipelineRequest)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nfunction createPipelineRequest(options) {\n    // Cast required due to difference between ts-http-runtime requiring AbortSignal while core-rest-pipeline allows\n    // the more generic AbortSignalLike. The wrapAbortSignalLike pipeline policy will take care of ensuring that any AbortSignalLike in the request\n    // is converted into a true AbortSignal.\n    return (0,_typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9waXBlbGluZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQytGO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0ZBQXdCO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BpcGVsaW5lUmVxdWVzdC5qcz84ZDBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlUGlwZWxpbmVSZXF1ZXN0IGFzIHRzcENyZWF0ZVBpcGVsaW5lUmVxdWVzdCwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZVwiO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHBpcGVsaW5lIHJlcXVlc3Qgd2l0aCB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqIFRoaXMgbWV0aG9kIGlzIHRvIGFsbG93IGZvciB0aGUgZWFzeSBzZXR0aW5nIG9mIGRlZmF1bHQgdmFsdWVzIGFuZCBub3QgcmVxdWlyZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHRvIGNyZWF0ZSB0aGUgcmVxdWVzdCB3aXRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICAvLyBDYXN0IHJlcXVpcmVkIGR1ZSB0byBkaWZmZXJlbmNlIGJldHdlZW4gdHMtaHR0cC1ydW50aW1lIHJlcXVpcmluZyBBYm9ydFNpZ25hbCB3aGlsZSBjb3JlLXJlc3QtcGlwZWxpbmUgYWxsb3dzXG4gICAgLy8gdGhlIG1vcmUgZ2VuZXJpYyBBYm9ydFNpZ25hbExpa2UuIFRoZSB3cmFwQWJvcnRTaWduYWxMaWtlIHBpcGVsaW5lIHBvbGljeSB3aWxsIHRha2UgY2FyZSBvZiBlbnN1cmluZyB0aGF0IGFueSBBYm9ydFNpZ25hbExpa2UgaW4gdGhlIHJlcXVlc3RcbiAgICAvLyBpcyBjb252ZXJ0ZWQgaW50byBhIHRydWUgQWJvcnRTaWduYWwuXG4gICAgcmV0dXJuIHRzcENyZWF0ZVBpcGVsaW5lUmVxdWVzdChvcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcGVsaW5lUmVxdWVzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   agentPolicy: () => (/* binding */ agentPolicy),\n/* harmony export */   agentPolicyName: () => (/* binding */ agentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Name of the Agent Policy\n */\nconst agentPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.agentPolicyName;\n/**\n * Gets a pipeline policy that sets http.agent\n */\nfunction agentPolicy(agent) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.agentPolicy)(agent);\n}\n//# sourceMappingURL=agentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hZ2VudFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ29JO0FBQ3BJO0FBQ0E7QUFDQTtBQUNPLHdCQUF3Qix3RkFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdGQUFjO0FBQ3pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL2FnZW50UG9saWN5LmpzP2MyYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBhZ2VudFBvbGljeU5hbWUgYXMgdHNwQWdlbnRQb2xpY3lOYW1lLCBhZ2VudFBvbGljeSBhcyB0c3BBZ2VudFBvbGljeSwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9wb2xpY2llc1wiO1xuLyoqXG4gKiBOYW1lIG9mIHRoZSBBZ2VudCBQb2xpY3lcbiAqL1xuZXhwb3J0IGNvbnN0IGFnZW50UG9saWN5TmFtZSA9IHRzcEFnZW50UG9saWN5TmFtZTtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IHNldHMgaHR0cC5hZ2VudFxuICovXG5leHBvcnQgZnVuY3Rpb24gYWdlbnRQb2xpY3koYWdlbnQpIHtcbiAgICByZXR1cm4gdHNwQWdlbnRQb2xpY3koYWdlbnQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdlbnRQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* binding */ auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* binding */ auxiliaryAuthenticationHeaderPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the auxiliaryAuthenticationHeaderPolicy.\n */\nconst auxiliaryAuthenticationHeaderPolicyName = \"auxiliaryAuthenticationHeaderPolicy\";\nconst AUTHORIZATION_AUXILIARY_HEADER = \"x-ms-authorization-auxiliary\";\nasync function sendAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    return (await getAccessToken(scopes, getTokenOptions))?.token ?? \"\";\n}\n/**\n * A policy for external tokens to `x-ms-authorization-auxiliary` header.\n * This header will be used when creating a cross-tenant application we may need to handle authentication requests\n * for resources that are in different tenants.\n * You could see [ARM docs](https://learn.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant) for a rundown of how this feature works\n */\nfunction auxiliaryAuthenticationHeaderPolicy(options) {\n    const { credentials, scopes } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const tokenCyclerMap = new WeakMap();\n    return {\n        name: auxiliaryAuthenticationHeaderPolicyName,\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication for auxiliary header is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            if (!credentials || credentials.length === 0) {\n                logger.info(`${auxiliaryAuthenticationHeaderPolicyName} header will not be set due to empty credentials.`);\n                return next(request);\n            }\n            const tokenPromises = [];\n            for (const credential of credentials) {\n                let getAccessToken = tokenCyclerMap.get(credential);\n                if (!getAccessToken) {\n                    getAccessToken = (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential);\n                    tokenCyclerMap.set(credential, getAccessToken);\n                }\n                tokenPromises.push(sendAuthorizeRequest({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    getAccessToken,\n                    logger,\n                }));\n            }\n            const auxiliaryTokens = (await Promise.all(tokenPromises)).filter((token) => Boolean(token));\n            if (auxiliaryTokens.length === 0) {\n                logger.warning(`None of the auxiliary tokens are valid. ${AUTHORIZATION_AUXILIARY_HEADER} header will not be set.`);\n                return next(request);\n            }\n            request.headers.set(AUTHORIZATION_AUXILIARY_HEADER, auxiliaryTokens.map((token) => `Bearer ${token}`).join(\", \"));\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=auxiliaryAuthenticationHeaderPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUNWO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxzQkFBc0I7QUFDbEMscUNBQXFDLDJDQUFVO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IseUNBQXlDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx1RUFBaUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLGdDQUFnQztBQUMxRztBQUNBO0FBQ0EseUdBQXlHLE1BQU07QUFDL0c7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcz8wZDIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlVG9rZW5DeWNsZXIgfSBmcm9tIFwiLi4vdXRpbC90b2tlbkN5Y2xlci5qc1wiO1xuaW1wb3J0IHsgbG9nZ2VyIGFzIGNvcmVMb2dnZXIgfSBmcm9tIFwiLi4vbG9nLmpzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeU5hbWUgPSBcImF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5XCI7XG5jb25zdCBBVVRIT1JJWkFUSU9OX0FVWElMSUFSWV9IRUFERVIgPSBcIngtbXMtYXV0aG9yaXphdGlvbi1hdXhpbGlhcnlcIjtcbmFzeW5jIGZ1bmN0aW9uIHNlbmRBdXRob3JpemVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHNjb3BlcywgZ2V0QWNjZXNzVG9rZW4sIHJlcXVlc3QgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgZ2V0VG9rZW5PcHRpb25zID0ge1xuICAgICAgICBhYm9ydFNpZ25hbDogcmVxdWVzdC5hYm9ydFNpZ25hbCxcbiAgICAgICAgdHJhY2luZ09wdGlvbnM6IHJlcXVlc3QudHJhY2luZ09wdGlvbnMsXG4gICAgfTtcbiAgICByZXR1cm4gKGF3YWl0IGdldEFjY2Vzc1Rva2VuKHNjb3BlcywgZ2V0VG9rZW5PcHRpb25zKSk/LnRva2VuID8/IFwiXCI7XG59XG4vKipcbiAqIEEgcG9saWN5IGZvciBleHRlcm5hbCB0b2tlbnMgdG8gYHgtbXMtYXV0aG9yaXphdGlvbi1hdXhpbGlhcnlgIGhlYWRlci5cbiAqIFRoaXMgaGVhZGVyIHdpbGwgYmUgdXNlZCB3aGVuIGNyZWF0aW5nIGEgY3Jvc3MtdGVuYW50IGFwcGxpY2F0aW9uIHdlIG1heSBuZWVkIHRvIGhhbmRsZSBhdXRoZW50aWNhdGlvbiByZXF1ZXN0c1xuICogZm9yIHJlc291cmNlcyB0aGF0IGFyZSBpbiBkaWZmZXJlbnQgdGVuYW50cy5cbiAqIFlvdSBjb3VsZCBzZWUgW0FSTSBkb2NzXShodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vYXp1cmUvYXp1cmUtcmVzb3VyY2UtbWFuYWdlci9tYW5hZ2VtZW50L2F1dGhlbnRpY2F0ZS1tdWx0aS10ZW5hbnQpIGZvciBhIHJ1bmRvd24gb2YgaG93IHRoaXMgZmVhdHVyZSB3b3Jrc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3kob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY3JlZGVudGlhbHMsIHNjb3BlcyB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBsb2dnZXIgPSBvcHRpb25zLmxvZ2dlciB8fCBjb3JlTG9nZ2VyO1xuICAgIGNvbnN0IHRva2VuQ3ljbGVyTWFwID0gbmV3IFdlYWtNYXAoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC51cmwudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCZWFyZXIgdG9rZW4gYXV0aGVudGljYXRpb24gZm9yIGF1eGlsaWFyeSBoZWFkZXIgaXMgbm90IHBlcm1pdHRlZCBmb3Igbm9uLVRMUyBwcm90ZWN0ZWQgKG5vbi1odHRwcykgVVJMcy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWNyZWRlbnRpYWxzIHx8IGNyZWRlbnRpYWxzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke2F1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5TmFtZX0gaGVhZGVyIHdpbGwgbm90IGJlIHNldCBkdWUgdG8gZW1wdHkgY3JlZGVudGlhbHMuYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0b2tlblByb21pc2VzID0gW107XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNyZWRlbnRpYWwgb2YgY3JlZGVudGlhbHMpIHtcbiAgICAgICAgICAgICAgICBsZXQgZ2V0QWNjZXNzVG9rZW4gPSB0b2tlbkN5Y2xlck1hcC5nZXQoY3JlZGVudGlhbCk7XG4gICAgICAgICAgICAgICAgaWYgKCFnZXRBY2Nlc3NUb2tlbikge1xuICAgICAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbiA9IGNyZWF0ZVRva2VuQ3ljbGVyKGNyZWRlbnRpYWwpO1xuICAgICAgICAgICAgICAgICAgICB0b2tlbkN5Y2xlck1hcC5zZXQoY3JlZGVudGlhbCwgZ2V0QWNjZXNzVG9rZW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0b2tlblByb21pc2VzLnB1c2goc2VuZEF1dGhvcml6ZVJlcXVlc3Qoe1xuICAgICAgICAgICAgICAgICAgICBzY29wZXM6IEFycmF5LmlzQXJyYXkoc2NvcGVzKSA/IHNjb3BlcyA6IFtzY29wZXNdLFxuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGF1eGlsaWFyeVRva2VucyA9IChhd2FpdCBQcm9taXNlLmFsbCh0b2tlblByb21pc2VzKSkuZmlsdGVyKCh0b2tlbikgPT4gQm9vbGVhbih0b2tlbikpO1xuICAgICAgICAgICAgaWYgKGF1eGlsaWFyeVRva2Vucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhgTm9uZSBvZiB0aGUgYXV4aWxpYXJ5IHRva2VucyBhcmUgdmFsaWQuICR7QVVUSE9SSVpBVElPTl9BVVhJTElBUllfSEVBREVSfSBoZWFkZXIgd2lsbCBub3QgYmUgc2V0LmApO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChBVVRIT1JJWkFUSU9OX0FVWElMSUFSWV9IRUFERVIsIGF1eGlsaWFyeVRva2Vucy5tYXAoKHRva2VuKSA9PiBgQmVhcmVyICR7dG9rZW59YCkuam9pbihcIiwgXCIpKTtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* binding */ bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* binding */ bearerTokenAuthenticationPolicyName),\n/* harmony export */   parseChallenges: () => (/* binding */ parseChallenges)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../restError.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nconst bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(request, next) {\n    try {\n        return [await next(request), undefined];\n    }\n    catch (e) {\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_2__.isRestError)(e) && e.response) {\n            return [e.response, e];\n        }\n        else {\n            throw e;\n        }\n    }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    // Enable CAE true by default\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n        enableCae: true,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response) {\n    return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(onChallengeOptions, caeClaims) {\n    const { scopes } = onChallengeOptions;\n    const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n        enableCae: true,\n        claims: caeClaims,\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`);\n    return true;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nfunction bearerTokenAuthenticationPolicy(options) {\n    const { credential, scopes, challengeCallbacks } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const callbacks = {\n        authorizeRequest: challengeCallbacks?.authorizeRequest?.bind(challengeCallbacks) ?? defaultAuthorizeRequest,\n        authorizeRequestOnChallenge: challengeCallbacks?.authorizeRequestOnChallenge?.bind(challengeCallbacks),\n    };\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            let shouldSendRequest;\n            [response, error] = await trySendRequest(request, next);\n            if (isChallengeResponse(response)) {\n                let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                // Handle CAE by default when receive CAE claim\n                if (claims) {\n                    let parsedClaim;\n                    // Return the response immediately if claims is not a valid base64 encoded string\n                    try {\n                        parsedClaim = atob(claims);\n                    }\n                    catch (e) {\n                        logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                        return response;\n                    }\n                    shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        response,\n                        request,\n                        getAccessToken,\n                        logger,\n                    }, parsedClaim);\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                }\n                else if (callbacks.authorizeRequestOnChallenge) {\n                    // Handle custom challenges when client provides custom callback\n                    shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        request,\n                        response,\n                        getAccessToken,\n                        logger,\n                    });\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                    // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n                    if (isChallengeResponse(response)) {\n                        claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                        if (claims) {\n                            let parsedClaim;\n                            try {\n                                parsedClaim = atob(claims);\n                            }\n                            catch (e) {\n                                logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                                return response;\n                            }\n                            shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                                response,\n                                request,\n                                getAccessToken,\n                                logger,\n                            }, parsedClaim);\n                            // Send updated request and handle response for RestError\n                            if (shouldSendRequest) {\n                                [response, error] = await trySendRequest(request, next);\n                            }\n                        }\n                    }\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nfunction parseChallenges(challenges) {\n    // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n    // The challenge regex captures parameteres with either quotes values or unquoted values\n    const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n    // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n    // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n    const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n    const parsedChallenges = [];\n    let match;\n    // Iterate over each challenge match\n    while ((match = challengeRegex.exec(challenges)) !== null) {\n        const scheme = match[1];\n        const paramsString = match[2];\n        const params = {};\n        let paramMatch;\n        // Iterate over each parameter match\n        while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n            params[paramMatch[1]] = paramMatch[2];\n        }\n        parsedChallenges.push({ scheme, params });\n    }\n    return parsedChallenges;\n}\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges) {\n    if (!challenges) {\n        return;\n    }\n    // Find all challenges present in the header\n    const parsedChallenges = parseChallenges(challenges);\n    return parsedChallenges.find((x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\")?.params.claims;\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9iZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDMkQ7QUFDVjtBQUNIO0FBQzlDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0Qsa0JBQWtCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsK0RBQStELG1DQUFtQyxFQUFFLGtCQUFrQjtBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVkseUNBQXlDO0FBQ3JELHFDQUFxQywyQ0FBVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHVFQUFpQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsME1BQTBNLE9BQU87QUFDak47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtOQUFrTixPQUFPO0FBQ3pOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsNEJBQTRCLGtCQUFrQixJQUFJLHlCQUF5QixtQkFBbUI7QUFDNUc7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZ0JBQWdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL2JlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3kuanM/MDUwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRva2VuQ3ljbGVyIH0gZnJvbSBcIi4uL3V0aWwvdG9rZW5DeWNsZXIuanNcIjtcbmltcG9ydCB7IGxvZ2dlciBhcyBjb3JlTG9nZ2VyIH0gZnJvbSBcIi4uL2xvZy5qc1wiO1xuaW1wb3J0IHsgaXNSZXN0RXJyb3IgfSBmcm9tIFwiLi4vcmVzdEVycm9yLmpzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lID0gXCJiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5XCI7XG4vKipcbiAqIFRyeSB0byBzZW5kIHRoZSBnaXZlbiByZXF1ZXN0LlxuICpcbiAqIFdoZW4gYSByZXNwb25zZSBpcyByZWNlaXZlZCwgcmV0dXJucyBhIHR1cGxlIG9mIHRoZSByZXNwb25zZSByZWNlaXZlZCBhbmQsIGlmIHRoZSByZXNwb25zZSB3YXMgcmVjZWl2ZWRcbiAqIGluc2lkZSBhIHRocm93biBSZXN0RXJyb3IsIHRoZSBSZXN0RXJyb3IgdGhhdCB3YXMgdGhyb3duLlxuICpcbiAqIE90aGVyd2lzZSwgaWYgYW4gZXJyb3Igd2FzIHRocm93biB3aGlsZSBzZW5kaW5nIHRoZSByZXF1ZXN0IHRoYXQgZGlkIG5vdCBwcm92aWRlIGFuIHVuZGVybHlpbmcgcmVzcG9uc2UsIGl0XG4gKiB3aWxsIGJlIHJldGhyb3duLlxuICovXG5hc3luYyBmdW5jdGlvbiB0cnlTZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIFthd2FpdCBuZXh0KHJlcXVlc3QpLCB1bmRlZmluZWRdO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoaXNSZXN0RXJyb3IoZSkgJiYgZS5yZXNwb25zZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtlLnJlc3BvbnNlLCBlXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIERlZmF1bHQgYXV0aG9yaXplIHJlcXVlc3QgaGFuZGxlclxuICovXG5hc3luYyBmdW5jdGlvbiBkZWZhdWx0QXV0aG9yaXplUmVxdWVzdChvcHRpb25zKSB7XG4gICAgY29uc3QgeyBzY29wZXMsIGdldEFjY2Vzc1Rva2VuLCByZXF1ZXN0IH0gPSBvcHRpb25zO1xuICAgIC8vIEVuYWJsZSBDQUUgdHJ1ZSBieSBkZWZhdWx0XG4gICAgY29uc3QgZ2V0VG9rZW5PcHRpb25zID0ge1xuICAgICAgICBhYm9ydFNpZ25hbDogcmVxdWVzdC5hYm9ydFNpZ25hbCxcbiAgICAgICAgdHJhY2luZ09wdGlvbnM6IHJlcXVlc3QudHJhY2luZ09wdGlvbnMsXG4gICAgICAgIGVuYWJsZUNhZTogdHJ1ZSxcbiAgICB9O1xuICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgZ2V0QWNjZXNzVG9rZW4oc2NvcGVzLCBnZXRUb2tlbk9wdGlvbnMpO1xuICAgIGlmIChhY2Nlc3NUb2tlbikge1xuICAgICAgICBvcHRpb25zLnJlcXVlc3QuaGVhZGVycy5zZXQoXCJBdXRob3JpemF0aW9uXCIsIGBCZWFyZXIgJHthY2Nlc3NUb2tlbi50b2tlbn1gKTtcbiAgICB9XG59XG4vKipcbiAqIFdlIHdpbGwgcmV0cmlldmUgdGhlIGNoYWxsZW5nZSBvbmx5IGlmIHRoZSByZXNwb25zZSBzdGF0dXMgY29kZSB3YXMgNDAxLFxuICogYW5kIGlmIHRoZSByZXNwb25zZSBjb250YWluZWQgdGhlIGhlYWRlciBcIldXVy1BdXRoZW50aWNhdGVcIiB3aXRoIGEgbm9uLWVtcHR5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBpc0NoYWxsZW5nZVJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxICYmIHJlc3BvbnNlLmhlYWRlcnMuaGFzKFwiV1dXLUF1dGhlbnRpY2F0ZVwiKTtcbn1cbi8qKlxuICogUmUtYXV0aG9yaXplIHRoZSByZXF1ZXN0IGZvciBDQUUgY2hhbGxlbmdlLlxuICogVGhlIHJlc3BvbnNlIGNvbnRhaW5pbmcgdGhlIGNoYWxsZW5nZSBpcyBgb3B0aW9ucy5yZXNwb25zZWAuXG4gKiBJZiB0aGlzIG1ldGhvZCByZXR1cm5zIHRydWUsIHRoZSB1bmRlcmx5aW5nIHJlcXVlc3Qgd2lsbCBiZSBzZW50IG9uY2UgYWdhaW4uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGF1dGhvcml6ZVJlcXVlc3RPbkNhZUNoYWxsZW5nZShvbkNoYWxsZW5nZU9wdGlvbnMsIGNhZUNsYWltcykge1xuICAgIGNvbnN0IHsgc2NvcGVzIH0gPSBvbkNoYWxsZW5nZU9wdGlvbnM7XG4gICAgY29uc3QgYWNjZXNzVG9rZW4gPSBhd2FpdCBvbkNoYWxsZW5nZU9wdGlvbnMuZ2V0QWNjZXNzVG9rZW4oc2NvcGVzLCB7XG4gICAgICAgIGVuYWJsZUNhZTogdHJ1ZSxcbiAgICAgICAgY2xhaW1zOiBjYWVDbGFpbXMsXG4gICAgfSk7XG4gICAgaWYgKCFhY2Nlc3NUb2tlbikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG9uQ2hhbGxlbmdlT3B0aW9ucy5yZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQXV0aG9yaXphdGlvblwiLCBgJHthY2Nlc3NUb2tlbi50b2tlblR5cGUgPz8gXCJCZWFyZXJcIn0gJHthY2Nlc3NUb2tlbi50b2tlbn1gKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogQSBwb2xpY3kgdGhhdCBjYW4gcmVxdWVzdCBhIHRva2VuIGZyb20gYSBUb2tlbkNyZWRlbnRpYWwgaW1wbGVtZW50YXRpb24gYW5kXG4gKiB0aGVuIGFwcGx5IGl0IHRvIHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBvZiBhIHJlcXVlc3QgYXMgYSBCZWFyZXIgdG9rZW4uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGNyZWRlbnRpYWwsIHNjb3BlcywgY2hhbGxlbmdlQ2FsbGJhY2tzIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IGxvZ2dlciA9IG9wdGlvbnMubG9nZ2VyIHx8IGNvcmVMb2dnZXI7XG4gICAgY29uc3QgY2FsbGJhY2tzID0ge1xuICAgICAgICBhdXRob3JpemVSZXF1ZXN0OiBjaGFsbGVuZ2VDYWxsYmFja3M/LmF1dGhvcml6ZVJlcXVlc3Q/LmJpbmQoY2hhbGxlbmdlQ2FsbGJhY2tzKSA/PyBkZWZhdWx0QXV0aG9yaXplUmVxdWVzdCxcbiAgICAgICAgYXV0aG9yaXplUmVxdWVzdE9uQ2hhbGxlbmdlOiBjaGFsbGVuZ2VDYWxsYmFja3M/LmF1dGhvcml6ZVJlcXVlc3RPbkNoYWxsZW5nZT8uYmluZChjaGFsbGVuZ2VDYWxsYmFja3MpLFxuICAgIH07XG4gICAgLy8gVGhpcyBmdW5jdGlvbiBlbmNhcHN1bGF0ZXMgdGhlIGVudGlyZSBwcm9jZXNzIG9mIHJlbGlhYmx5IHJldHJpZXZpbmcgdGhlIHRva2VuXG4gICAgLy8gVGhlIG9wdGlvbnMgYXJlIGxlZnQgb3V0IG9mIHRoZSBwdWJsaWMgQVBJIHVudGlsIHRoZXJlJ3MgZGVtYW5kIHRvIGNvbmZpZ3VyZSB0aGlzLlxuICAgIC8vIFJlbWVtYmVyIHRvIGV4dGVuZCBgQmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU9wdGlvbnNgIHdpdGggYFRva2VuQ3ljbGVyT3B0aW9uc2BcbiAgICAvLyBpbiBvcmRlciB0byBwYXNzIHRocm91Z2ggdGhlIGBvcHRpb25zYCBvYmplY3QuXG4gICAgY29uc3QgZ2V0QWNjZXNzVG9rZW4gPSBjcmVkZW50aWFsXG4gICAgICAgID8gY3JlYXRlVG9rZW5DeWNsZXIoY3JlZGVudGlhbCAvKiAsIG9wdGlvbnMgKi8pXG4gICAgICAgIDogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKG51bGwpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lLFxuICAgICAgICAvKipcbiAgICAgICAgICogSWYgdGhlcmUncyBubyBjaGFsbGVuZ2UgcGFyYW1ldGVyOlxuICAgICAgICAgKiAtIEl0IHdpbGwgdHJ5IHRvIHJldHJpZXZlIHRoZSB0b2tlbiB1c2luZyB0aGUgY2FjaGUsIG9yIHRoZSBjcmVkZW50aWFsJ3MgZ2V0VG9rZW4uXG4gICAgICAgICAqIC0gVGhlbiBpdCB3aWxsIHRyeSB0aGUgbmV4dCBwb2xpY3kgd2l0aCBvciB3aXRob3V0IHRoZSByZXRyaWV2ZWQgdG9rZW4uXG4gICAgICAgICAqXG4gICAgICAgICAqIEl0IHVzZXMgdGhlIGNoYWxsZW5nZSBwYXJhbWV0ZXJzIHRvOlxuICAgICAgICAgKiAtIFNraXAgYSBmaXJzdCBhdHRlbXB0IHRvIGdldCB0aGUgdG9rZW4gZnJvbSB0aGUgY3JlZGVudGlhbCBpZiB0aGVyZSdzIG5vIGNhY2hlZCB0b2tlbixcbiAgICAgICAgICogICBzaW5jZSBpdCBleHBlY3RzIHRoZSB0b2tlbiB0byBiZSByZXRyaWV2YWJsZSBvbmx5IGFmdGVyIHRoZSBjaGFsbGVuZ2UuXG4gICAgICAgICAqIC0gUHJlcGFyZSB0aGUgb3V0Z29pbmcgcmVxdWVzdCBpZiB0aGUgYHByZXBhcmVSZXF1ZXN0YCBtZXRob2QgaGFzIGJlZW4gcHJvdmlkZWQuXG4gICAgICAgICAqIC0gU2VuZCBhbiBpbml0aWFsIHJlcXVlc3QgdG8gcmVjZWl2ZSB0aGUgY2hhbGxlbmdlIGlmIGl0IGZhaWxzLlxuICAgICAgICAgKiAtIFByb2Nlc3MgYSBjaGFsbGVuZ2UgaWYgdGhlIHJlc3BvbnNlIGNvbnRhaW5zIGl0LlxuICAgICAgICAgKiAtIFJldHJpZXZlIGEgdG9rZW4gd2l0aCB0aGUgY2hhbGxlbmdlIGluZm9ybWF0aW9uLCB0aGVuIHJlLXNlbmQgdGhlIHJlcXVlc3QuXG4gICAgICAgICAqL1xuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QudXJsLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQmVhcmVyIHRva2VuIGF1dGhlbnRpY2F0aW9uIGlzIG5vdCBwZXJtaXR0ZWQgZm9yIG5vbi1UTFMgcHJvdGVjdGVkIChub24taHR0cHMpIFVSTHMuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXdhaXQgY2FsbGJhY2tzLmF1dGhvcml6ZVJlcXVlc3Qoe1xuICAgICAgICAgICAgICAgIHNjb3BlczogQXJyYXkuaXNBcnJheShzY29wZXMpID8gc2NvcGVzIDogW3Njb3Blc10sXG4gICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbixcbiAgICAgICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgICAgIGxldCBlcnJvcjtcbiAgICAgICAgICAgIGxldCBzaG91bGRTZW5kUmVxdWVzdDtcbiAgICAgICAgICAgIFtyZXNwb25zZSwgZXJyb3JdID0gYXdhaXQgdHJ5U2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCk7XG4gICAgICAgICAgICBpZiAoaXNDaGFsbGVuZ2VSZXNwb25zZShyZXNwb25zZSkpIHtcbiAgICAgICAgICAgICAgICBsZXQgY2xhaW1zID0gZ2V0Q2FlQ2hhbGxlbmdlQ2xhaW1zKHJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwiV1dXLUF1dGhlbnRpY2F0ZVwiKSk7XG4gICAgICAgICAgICAgICAgLy8gSGFuZGxlIENBRSBieSBkZWZhdWx0IHdoZW4gcmVjZWl2ZSBDQUUgY2xhaW1cbiAgICAgICAgICAgICAgICBpZiAoY2xhaW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwYXJzZWRDbGFpbTtcbiAgICAgICAgICAgICAgICAgICAgLy8gUmV0dXJuIHRoZSByZXNwb25zZSBpbW1lZGlhdGVseSBpZiBjbGFpbXMgaXMgbm90IGEgdmFsaWQgYmFzZTY0IGVuY29kZWQgc3RyaW5nXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRDbGFpbSA9IGF0b2IoY2xhaW1zKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoYFRoZSBXV1ctQXV0aGVudGljYXRlIGhlYWRlciBjb250YWlucyBcImNsYWltc1wiIHRoYXQgY2Fubm90IGJlIHBhcnNlZC4gVW5hYmxlIHRvIHBlcmZvcm0gdGhlIENvbnRpbnVvdXMgQWNjZXNzIEV2YWx1YXRpb24gYXV0aGVudGljYXRpb24gZmxvdy4gVW5wYXJzYWJsZSBjbGFpbXM6ICR7Y2xhaW1zfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNob3VsZFNlbmRSZXF1ZXN0ID0gYXdhaXQgYXV0aG9yaXplUmVxdWVzdE9uQ2FlQ2hhbGxlbmdlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjb3BlczogQXJyYXkuaXNBcnJheShzY29wZXMpID8gc2NvcGVzIDogW3Njb3Blc10sXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlcixcbiAgICAgICAgICAgICAgICAgICAgfSwgcGFyc2VkQ2xhaW0pO1xuICAgICAgICAgICAgICAgICAgICAvLyBTZW5kIHVwZGF0ZWQgcmVxdWVzdCBhbmQgaGFuZGxlIHJlc3BvbnNlIGZvciBSZXN0RXJyb3JcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZFNlbmRSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzcG9uc2UsIGVycm9yXSA9IGF3YWl0IHRyeVNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNhbGxiYWNrcy5hdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIGN1c3RvbSBjaGFsbGVuZ2VzIHdoZW4gY2xpZW50IHByb3ZpZGVzIGN1c3RvbSBjYWxsYmFja1xuICAgICAgICAgICAgICAgICAgICBzaG91bGRTZW5kUmVxdWVzdCA9IGF3YWl0IGNhbGxiYWNrcy5hdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGVzOiBBcnJheS5pc0FycmF5KHNjb3BlcykgPyBzY29wZXMgOiBbc2NvcGVzXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldEFjY2Vzc1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VuZCB1cGRhdGVkIHJlcXVlc3QgYW5kIGhhbmRsZSByZXNwb25zZSBmb3IgUmVzdEVycm9yXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaG91bGRTZW5kUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgW3Jlc3BvbnNlLCBlcnJvcl0gPSBhd2FpdCB0cnlTZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBJZiB3ZSBnZXQgYW5vdGhlciBDQUUgQ2xhaW0sIHdlIHdpbGwgaGFuZGxlIGl0IGJ5IGRlZmF1bHQgYW5kIHJldHVybiB3aGF0ZXZlciB2YWx1ZSB3ZSByZWNlaXZlIGZvciB0aGlzXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0NoYWxsZW5nZVJlc3BvbnNlKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xhaW1zID0gZ2V0Q2FlQ2hhbGxlbmdlQ2xhaW1zKHJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwiV1dXLUF1dGhlbnRpY2F0ZVwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xhaW1zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBhcnNlZENsYWltO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZENsYWltID0gYXRvYihjbGFpbXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhgVGhlIFdXVy1BdXRoZW50aWNhdGUgaGVhZGVyIGNvbnRhaW5zIFwiY2xhaW1zXCIgdGhhdCBjYW5ub3QgYmUgcGFyc2VkLiBVbmFibGUgdG8gcGVyZm9ybSB0aGUgQ29udGludW91cyBBY2Nlc3MgRXZhbHVhdGlvbiBhdXRoZW50aWNhdGlvbiBmbG93LiBVbnBhcnNhYmxlIGNsYWltczogJHtjbGFpbXN9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdWxkU2VuZFJlcXVlc3QgPSBhd2FpdCBhdXRob3JpemVSZXF1ZXN0T25DYWVDaGFsbGVuZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY29wZXM6IEFycmF5LmlzQXJyYXkoc2NvcGVzKSA/IHNjb3BlcyA6IFtzY29wZXNdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0QWNjZXNzVG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBwYXJzZWRDbGFpbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2VuZCB1cGRhdGVkIHJlcXVlc3QgYW5kIGhhbmRsZSByZXNwb25zZSBmb3IgUmVzdEVycm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZFNlbmRSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtyZXNwb25zZSwgZXJyb3JdID0gYXdhaXQgdHJ5U2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogQ29udmVydHM6IGBCZWFyZXIgYT1cImJcIiwgYz1cImRcIiwgUG9wIGU9XCJmXCIsIGc9XCJoXCJgLlxuICogSW50bzogYFsgeyBzY2hlbWU6ICdCZWFyZXInLCBwYXJhbXM6IHsgYTogJ2InLCBjOiAnZCcgfSB9LCB7IHNjaGVtZTogJ1BvcCcsIHBhcmFtczogeyBlOiAnZicsIGc6ICdoJyB9IH0gXWAuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNoYWxsZW5nZXMoY2hhbGxlbmdlcykge1xuICAgIC8vIENoYWxsZW5nZSByZWdleCBzZXBlcmF0ZXMgdGhlIHN0cmluZyB0byBpbmRpdmlkdWFsIGNoYWxsZW5nZXMgd2l0aCBkaWZmZXJlbnQgc2NoZW1lcyBpbiB0aGUgZm9ybWF0IGBTY2hlbWUgYT1cImJcIiwgYz1kYFxuICAgIC8vIFRoZSBjaGFsbGVuZ2UgcmVnZXggY2FwdHVyZXMgcGFyYW1ldGVyZXMgd2l0aCBlaXRoZXIgcXVvdGVzIHZhbHVlcyBvciB1bnF1b3RlZCB2YWx1ZXNcbiAgICBjb25zdCBjaGFsbGVuZ2VSZWdleCA9IC8oXFx3KylcXHMrKCg/Olxcdys9KD86XCJbXlwiXSpcInxbXixdKiksP1xccyopKykvZztcbiAgICAvLyBQYXJhbWV0ZXIgcmVnZXggY2FwdHVyZXMgdGhlIGNsYWltcyBncm91cCByZW1vdmVkIGZyb20gdGhlIHNjaGVtZSBpbiB0aGUgZm9ybWF0IGBhPVwiYlwiYCBhbmQgYGM9XCJkXCJgXG4gICAgLy8gQ0FFIGNoYWxsZW5nZSBhbHdheXMgaGF2ZSBxdW90ZWQgcGFyYW1ldGVycy4gRm9yIG1vcmUgcmVmZXJlbmNlLCBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW50cmEvaWRlbnRpdHktcGxhdGZvcm0vY2xhaW1zLWNoYWxsZW5nZVxuICAgIGNvbnN0IHBhcmFtUmVnZXggPSAvKFxcdyspPVwiKFteXCJdKilcIi9nO1xuICAgIGNvbnN0IHBhcnNlZENoYWxsZW5nZXMgPSBbXTtcbiAgICBsZXQgbWF0Y2g7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIGVhY2ggY2hhbGxlbmdlIG1hdGNoXG4gICAgd2hpbGUgKChtYXRjaCA9IGNoYWxsZW5nZVJlZ2V4LmV4ZWMoY2hhbGxlbmdlcykpICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHNjaGVtZSA9IG1hdGNoWzFdO1xuICAgICAgICBjb25zdCBwYXJhbXNTdHJpbmcgPSBtYXRjaFsyXTtcbiAgICAgICAgY29uc3QgcGFyYW1zID0ge307XG4gICAgICAgIGxldCBwYXJhbU1hdGNoO1xuICAgICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBwYXJhbWV0ZXIgbWF0Y2hcbiAgICAgICAgd2hpbGUgKChwYXJhbU1hdGNoID0gcGFyYW1SZWdleC5leGVjKHBhcmFtc1N0cmluZykpICE9PSBudWxsKSB7XG4gICAgICAgICAgICBwYXJhbXNbcGFyYW1NYXRjaFsxXV0gPSBwYXJhbU1hdGNoWzJdO1xuICAgICAgICB9XG4gICAgICAgIHBhcnNlZENoYWxsZW5nZXMucHVzaCh7IHNjaGVtZSwgcGFyYW1zIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcGFyc2VkQ2hhbGxlbmdlcztcbn1cbi8qKlxuICogUGFyc2UgYSBwaXBlbGluZSByZXNwb25zZSBhbmQgbG9vayBmb3IgYSBDQUUgY2hhbGxlbmdlIHdpdGggXCJCZWFyZXJcIiBzY2hlbWVcbiAqIFJldHVybiB0aGUgdmFsdWUgaW4gdGhlIGhlYWRlciB3aXRob3V0IHBhcnNpbmcgdGhlIGNoYWxsZW5nZVxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIGdldENhZUNoYWxsZW5nZUNsYWltcyhjaGFsbGVuZ2VzKSB7XG4gICAgaWYgKCFjaGFsbGVuZ2VzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gRmluZCBhbGwgY2hhbGxlbmdlcyBwcmVzZW50IGluIHRoZSBoZWFkZXJcbiAgICBjb25zdCBwYXJzZWRDaGFsbGVuZ2VzID0gcGFyc2VDaGFsbGVuZ2VzKGNoYWxsZW5nZXMpO1xuICAgIHJldHVybiBwYXJzZWRDaGFsbGVuZ2VzLmZpbmQoKHgpID0+IHguc2NoZW1lID09PSBcIkJlYXJlclwiICYmIHgucGFyYW1zLmNsYWltcyAmJiB4LnBhcmFtcy5lcnJvciA9PT0gXCJpbnN1ZmZpY2llbnRfY2xhaW1zXCIpPy5wYXJhbXMuY2xhaW1zO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decompressResponsePolicy: () => (/* binding */ decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* binding */ decompressResponsePolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nconst decompressResponsePolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.decompressResponsePolicyName;\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nfunction decompressResponsePolicy() {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.decompressResponsePolicy)();\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUN3TDtBQUN4TDtBQUNBO0FBQ0E7QUFDTyxxQ0FBcUMscUdBQStCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHFHQUEyQjtBQUN0QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanM/MGEwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeU5hbWUgYXMgdHNwRGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSwgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5IGFzIHRzcERlY29tcHJlc3NSZXNwb25zZVBvbGljeSwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9wb2xpY2llc1wiO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGRlY29tcHJlc3NSZXNwb25zZVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeU5hbWUgPSB0c3BEZWNvbXByZXNzUmVzcG9uc2VQb2xpY3lOYW1lO1xuLyoqXG4gKiBBIHBvbGljeSB0byBlbmFibGUgcmVzcG9uc2UgZGVjb21wcmVzc2lvbiBhY2NvcmRpbmcgdG8gQWNjZXB0LUVuY29kaW5nIGhlYWRlclxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2VwdC1FbmNvZGluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5KCkge1xuICAgIHJldHVybiB0c3BEZWNvbXByZXNzUmVzcG9uc2VQb2xpY3koKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRetryPolicy: () => (/* binding */ defaultRetryPolicy),\n/* harmony export */   defaultRetryPolicyName: () => (/* binding */ defaultRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nconst defaultRetryPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.defaultRetryPolicyName;\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nfunction defaultRetryPolicy(options = {}) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.defaultRetryPolicy)(options);\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNnSztBQUNoSztBQUNBLGdCQUFnQjtBQUNoQjtBQUNPLCtCQUErQiwrRkFBeUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sd0NBQXdDO0FBQy9DLFdBQVcsK0ZBQXFCO0FBQ2hDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL2RlZmF1bHRSZXRyeVBvbGljeS5qcz80NjQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZGVmYXVsdFJldHJ5UG9saWN5TmFtZSBhcyB0c3BEZWZhdWx0UmV0cnlQb2xpY3lOYW1lLCBkZWZhdWx0UmV0cnlQb2xpY3kgYXMgdHNwRGVmYXVsdFJldHJ5UG9saWN5LCB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lL2ludGVybmFsL3BvbGljaWVzXCI7XG4vKipcbiAqIE5hbWUgb2YgdGhlIHtAbGluayBkZWZhdWx0UmV0cnlQb2xpY3l9XG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0UmV0cnlQb2xpY3lOYW1lID0gdHNwRGVmYXVsdFJldHJ5UG9saWN5TmFtZTtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCByZXRyaWVzIGFjY29yZGluZyB0byB0aHJlZSBzdHJhdGVnaWVzOlxuICogLSBXaGVuIHRoZSBzZXJ2ZXIgc2VuZHMgYSA0MjkgcmVzcG9uc2Ugd2l0aCBhIFJldHJ5LUFmdGVyIGhlYWRlci5cbiAqIC0gV2hlbiB0aGVyZSBhcmUgZXJyb3JzIGluIHRoZSB1bmRlcmx5aW5nIHRyYW5zcG9ydCBsYXllciAoZS5nLiBETlMgbG9va3VwIGZhaWx1cmVzKS5cbiAqIC0gT3Igb3RoZXJ3aXNlIGlmIHRoZSBvdXRnb2luZyByZXF1ZXN0IGZhaWxzLCBpdCB3aWxsIHJldHJ5IHdpdGggYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdFJldHJ5UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB0c3BEZWZhdWx0UmV0cnlQb2xpY3kob3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0UmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryPolicy: () => (/* binding */ exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* binding */ exponentialRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nconst exponentialRetryPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryPolicyName;\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nfunction exponentialRetryPolicy(options = {}) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryPolicy)(options);\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9leHBvbmVudGlhbFJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDZ0w7QUFDaEw7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLG1HQUE2QjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRDQUE0QztBQUNuRCxXQUFXLG1HQUF5QjtBQUNwQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9leHBvbmVudGlhbFJldHJ5UG9saWN5LmpzP2EwZGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBleHBvbmVudGlhbFJldHJ5UG9saWN5TmFtZSBhcyB0c3BFeHBvbmVudGlhbFJldHJ5UG9saWN5TmFtZSwgZXhwb25lbnRpYWxSZXRyeVBvbGljeSBhcyB0c3BFeHBvbmVudGlhbFJldHJ5UG9saWN5LCB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lL2ludGVybmFsL3BvbGljaWVzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgZXhwb25lbnRpYWxSZXRyeVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGV4cG9uZW50aWFsUmV0cnlQb2xpY3lOYW1lID0gdHNwRXhwb25lbnRpYWxSZXRyeVBvbGljeU5hbWU7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgYXR0ZW1wdHMgdG8gcmV0cnkgcmVxdWVzdHMgd2hpbGUgaW50cm9kdWNpbmcgYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5LlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRoYXQgY29uZmlndXJlIHJldHJ5IGxvZ2ljLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXhwb25lbnRpYWxSZXRyeVBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdHNwRXhwb25lbnRpYWxSZXRyeVBvbGljeShvcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cG9uZW50aWFsUmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataPolicy: () => (/* binding */ formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* binding */ formDataPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nconst formDataPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.formDataPolicyName;\n/**\n * A policy that encodes FormData on the request into the body.\n */\nfunction formDataPolicy() {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.formDataPolicy)();\n}\n//# sourceMappingURL=formDataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ2dKO0FBQ2hKO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQiwyRkFBcUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDJGQUFpQjtBQUM1QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qcz83ZDdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZm9ybURhdGFQb2xpY3lOYW1lIGFzIHRzcEZvcm1EYXRhUG9saWN5TmFtZSwgZm9ybURhdGFQb2xpY3kgYXMgdHNwRm9ybURhdGFQb2xpY3ksIH0gZnJvbSBcIkB0eXBlc3BlYy90cy1odHRwLXJ1bnRpbWUvaW50ZXJuYWwvcG9saWNpZXNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBmb3JtRGF0YVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGZvcm1EYXRhUG9saWN5TmFtZSA9IHRzcEZvcm1EYXRhUG9saWN5TmFtZTtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCBlbmNvZGVzIEZvcm1EYXRhIG9uIHRoZSByZXF1ZXN0IGludG8gdGhlIGJvZHkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtRGF0YVBvbGljeSgpIHtcbiAgICByZXR1cm4gdHNwRm9ybURhdGFQb2xpY3koKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1EYXRhUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logPolicy: () => (/* binding */ logPolicy),\n/* harmony export */   logPolicyName: () => (/* binding */ logPolicyName)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nconst logPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_1__.logPolicyName;\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nfunction logPolicy(options = {}) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_1__.logPolicy)({\n        logger: _log_js__WEBPACK_IMPORTED_MODULE_0__.logger.info,\n        ...options,\n    });\n}\n//# sourceMappingURL=logPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9sb2dQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDMkU7QUFDNUg7QUFDQTtBQUNBO0FBQ08sc0JBQXNCLHNGQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPLCtCQUErQjtBQUN0QyxXQUFXLHNGQUFZO0FBQ3ZCLGdCQUFnQiwyQ0FBVTtBQUMxQjtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9sb2dQb2xpY3kuanM/MWUwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGxvZ2dlciBhcyBjb3JlTG9nZ2VyIH0gZnJvbSBcIi4uL2xvZy5qc1wiO1xuaW1wb3J0IHsgbG9nUG9saWN5TmFtZSBhcyB0c3BMb2dQb2xpY3lOYW1lLCBsb2dQb2xpY3kgYXMgdHNwTG9nUG9saWN5LCB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lL2ludGVybmFsL3BvbGljaWVzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgbG9nUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgbG9nUG9saWN5TmFtZSA9IHRzcExvZ1BvbGljeU5hbWU7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgbG9ncyBhbGwgcmVxdWVzdHMgYW5kIHJlc3BvbnNlcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgbG9nUG9saWN5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9nUG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB0c3BMb2dQb2xpY3koe1xuICAgICAgICBsb2dnZXI6IGNvcmVMb2dnZXIuaW5mbyxcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ1BvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartPolicy: () => (/* binding */ multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* binding */ multipartPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n/* harmony import */ var _util_file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/file.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Name of multipart policy\n */\nconst multipartPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.multipartPolicyName;\n/**\n * Pipeline policy for multipart requests\n */\nfunction multipartPolicy() {\n    const tspPolicy = (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.multipartPolicy)();\n    return {\n        name: multipartPolicyName,\n        sendRequest: async (request, next) => {\n            if (request.multipartBody) {\n                for (const part of request.multipartBody.parts) {\n                    if ((0,_util_file_js__WEBPACK_IMPORTED_MODULE_1__.hasRawContent)(part.body)) {\n                        part.body = (0,_util_file_js__WEBPACK_IMPORTED_MODULE_1__.getRawContent)(part.body);\n                    }\n                }\n            }\n            return tspPolicy.sendRequest(request, next);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDb0o7QUFDckY7QUFDL0Q7QUFDQTtBQUNBO0FBQ08sNEJBQTRCLDRGQUFzQjtBQUN6RDtBQUNBO0FBQ0E7QUFDTztBQUNQLHNCQUFzQiw0RkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw0REFBYTtBQUNyQyxvQ0FBb0MsNERBQWE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanM/OTAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IG11bHRpcGFydFBvbGljeU5hbWUgYXMgdHNwTXVsdGlwYXJ0UG9saWN5TmFtZSwgbXVsdGlwYXJ0UG9saWN5IGFzIHRzcE11bHRpcGFydFBvbGljeSwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9wb2xpY2llc1wiO1xuaW1wb3J0IHsgZ2V0UmF3Q29udGVudCwgaGFzUmF3Q29udGVudCB9IGZyb20gXCIuLi91dGlsL2ZpbGUuanNcIjtcbi8qKlxuICogTmFtZSBvZiBtdWx0aXBhcnQgcG9saWN5XG4gKi9cbmV4cG9ydCBjb25zdCBtdWx0aXBhcnRQb2xpY3lOYW1lID0gdHNwTXVsdGlwYXJ0UG9saWN5TmFtZTtcbi8qKlxuICogUGlwZWxpbmUgcG9saWN5IGZvciBtdWx0aXBhcnQgcmVxdWVzdHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG11bHRpcGFydFBvbGljeSgpIHtcbiAgICBjb25zdCB0c3BQb2xpY3kgPSB0c3BNdWx0aXBhcnRQb2xpY3koKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBtdWx0aXBhcnRQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogYXN5bmMgKHJlcXVlc3QsIG5leHQpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0Lm11bHRpcGFydEJvZHkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHBhcnQgb2YgcmVxdWVzdC5tdWx0aXBhcnRCb2R5LnBhcnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChoYXNSYXdDb250ZW50KHBhcnQuYm9keSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnQuYm9keSA9IGdldFJhd0NvbnRlbnQocGFydC5ib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0c3BQb2xpY3kuc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpcGFydFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ndJsonPolicy: () => (/* binding */ ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* binding */ ndJsonPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nconst ndJsonPolicyName = \"ndJsonPolicy\";\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nfunction ndJsonPolicy() {\n    return {\n        name: ndJsonPolicyName,\n        async sendRequest(request, next) {\n            // There currently isn't a good way to bypass the serializer\n            if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n                const body = JSON.parse(request.body);\n                if (Array.isArray(body)) {\n                    request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=ndJsonPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanM/OGI3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBuZEpzb25Qb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBuZEpzb25Qb2xpY3lOYW1lID0gXCJuZEpzb25Qb2xpY3lcIjtcbi8qKlxuICogbmRKc29uUG9saWN5IGlzIGEgcG9saWN5IHVzZWQgdG8gY29udHJvbCBrZWVwIGFsaXZlIHNldHRpbmdzIGZvciBldmVyeSByZXF1ZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gbmRKc29uUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IG5kSnNvblBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIC8vIFRoZXJlIGN1cnJlbnRseSBpc24ndCBhIGdvb2Qgd2F5IHRvIGJ5cGFzcyB0aGUgc2VyaWFsaXplclxuICAgICAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0LmJvZHkgPT09IFwic3RyaW5nXCIgJiYgcmVxdWVzdC5ib2R5LnN0YXJ0c1dpdGgoXCJbXCIpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IEpTT04ucGFyc2UocmVxdWVzdC5ib2R5KTtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShib2R5KSkge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmJvZHkgPSBib2R5Lm1hcCgoaXRlbSkgPT4gSlNPTi5zdHJpbmdpZnkoaXRlbSkgKyBcIlxcblwiKS5qb2luKFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZEpzb25Qb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultProxySettings: () => (/* binding */ getDefaultProxySettings),\n/* harmony export */   proxyPolicy: () => (/* binding */ proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* binding */ proxyPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nconst proxyPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.proxyPolicyName;\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nfunction getDefaultProxySettings(proxyUrl) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.getDefaultProxySettings)(proxyUrl);\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nfunction proxyPolicy(proxySettings, options) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.proxyPolicy)(proxySettings, options);\n}\n//# sourceMappingURL=proxyPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9wcm94eVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUMyTDtBQUMzTDtBQUNBO0FBQ0E7QUFDTyx3QkFBd0Isd0ZBQWtCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLG9HQUEwQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdGQUFjO0FBQ3pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL3Byb3h5UG9saWN5LmpzPzlhMmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBwcm94eVBvbGljeSBhcyB0c3BQcm94eVBvbGljeSwgcHJveHlQb2xpY3lOYW1lIGFzIHRzcFByb3h5UG9saWN5TmFtZSwgZ2V0RGVmYXVsdFByb3h5U2V0dGluZ3MgYXMgdHNwR2V0RGVmYXVsdFByb3h5U2V0dGluZ3MsIH0gZnJvbSBcIkB0eXBlc3BlYy90cy1odHRwLXJ1bnRpbWUvaW50ZXJuYWwvcG9saWNpZXNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBwcm94eVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IHByb3h5UG9saWN5TmFtZSA9IHRzcFByb3h5UG9saWN5TmFtZTtcbi8qKlxuICogVGhpcyBtZXRob2QgY29udmVydHMgYSBwcm94eSB1cmwgaW50byBgUHJveHlTZXR0aW5nc2AgZm9yIHVzZSB3aXRoIFByb3h5UG9saWN5LlxuICogSWYgbm8gYXJndW1lbnQgaXMgZ2l2ZW4sIGl0IGF0dGVtcHRzIHRvIHBhcnNlIGEgcHJveHkgVVJMIGZyb20gdGhlIGVudmlyb25tZW50XG4gKiB2YXJpYWJsZXMgYEhUVFBTX1BST1hZYCBvciBgSFRUUF9QUk9YWWAuXG4gKiBAcGFyYW0gcHJveHlVcmwgLSBUaGUgdXJsIG9mIHRoZSBwcm94eSB0byB1c2UuIE1heSBjb250YWluIGF1dGhlbnRpY2F0aW9uIGluZm9ybWF0aW9uLlxuICogQGRlcHJlY2F0ZWQgLSBJbnRlcm5hbGx5IHRoaXMgbWV0aG9kIGlzIG5vIGxvbmdlciBuZWNlc3Nhcnkgd2hlbiBzZXR0aW5nIHByb3h5IGluZm9ybWF0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdFByb3h5U2V0dGluZ3MocHJveHlVcmwpIHtcbiAgICByZXR1cm4gdHNwR2V0RGVmYXVsdFByb3h5U2V0dGluZ3MocHJveHlVcmwpO1xufVxuLyoqXG4gKiBBIHBvbGljeSB0aGF0IGFsbG93cyBvbmUgdG8gYXBwbHkgcHJveHkgc2V0dGluZ3MgdG8gYWxsIHJlcXVlc3RzLlxuICogSWYgbm90IHBhc3NlZCBzdGF0aWMgc2V0dGluZ3MsIHRoZXkgd2lsbCBiZSByZXRyaWV2ZWQgZnJvbSB0aGUgSFRUUFNfUFJPWFlcbiAqIG9yIEhUVFBfUFJPWFkgZW52aXJvbm1lbnQgdmFyaWFibGVzLlxuICogQHBhcmFtIHByb3h5U2V0dGluZ3MgLSBQcm94eVNldHRpbmdzIHRvIHVzZSBvbiBlYWNoIHJlcXVlc3QuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIGFkZGl0aW9uYWwgc2V0dGluZ3MsIGZvciBleGFtcGxlLCBjdXN0b20gTk9fUFJPWFkgcGF0dGVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3h5UG9saWN5KHByb3h5U2V0dGluZ3MsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdHNwUHJveHlQb2xpY3kocHJveHlTZXR0aW5ncywgb3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm94eVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   redirectPolicy: () => (/* binding */ redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* binding */ redirectPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nconst redirectPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.redirectPolicyName;\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nfunction redirectPolicy(options = {}) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.redirectPolicy)(options);\n}\n//# sourceMappingURL=redirectPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ2dKO0FBQ2hKO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQiwyRkFBcUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDLFdBQVcsMkZBQWlCO0FBQzVCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzP2Y4YzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyByZWRpcmVjdFBvbGljeU5hbWUgYXMgdHNwUmVkaXJlY3RQb2xpY3lOYW1lLCByZWRpcmVjdFBvbGljeSBhcyB0c3BSZWRpcmVjdFBvbGljeSwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9wb2xpY2llc1wiO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIHJlZGlyZWN0UG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgcmVkaXJlY3RQb2xpY3lOYW1lID0gdHNwUmVkaXJlY3RQb2xpY3lOYW1lO1xuLyoqXG4gKiBBIHBvbGljeSB0byBmb2xsb3cgTG9jYXRpb24gaGVhZGVycyBmcm9tIHRoZSBzZXJ2ZXIgaW4gb3JkZXJcbiAqIHRvIHN1cHBvcnQgc2VydmVyLXNpZGUgcmVkaXJlY3Rpb24uXG4gKiBJbiB0aGUgYnJvd3NlciwgdGhpcyBwb2xpY3kgaXMgbm90IHVzZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY29udHJvbCBwb2xpY3kgYmVoYXZpb3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWRpcmVjdFBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdHNwUmVkaXJlY3RQb2xpY3kob3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWRpcmVjdFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   retryPolicy: () => (/* binding */ retryPolicy)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nconst retryPolicyLogger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline retryPolicy\");\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nfunction retryPolicy(strategies, options = { maxRetries: _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETRY_POLICY_COUNT }) {\n    // Cast is required since the TSP runtime retry strategy type is slightly different\n    // very deep down (using real AbortSignal vs. AbortSignalLike in RestError).\n    // In practice the difference doesn't actually matter.\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_2__.retryPolicy)(strategies, {\n        logger: retryPolicyLogger,\n        ...options,\n    });\n}\n//# sourceMappingURL=retryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9yZXRyeVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNtRDtBQUNVO0FBQ2dDO0FBQzdGLDBCQUEwQixpRUFBa0I7QUFDNUM7QUFDQTtBQUNBO0FBQ08sNkNBQTZDLFlBQVkscUVBQTBCLEVBQUU7QUFDNUY7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3RkFBYztBQUN6QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL3JldHJ5UG9saWN5LmpzPzkwYjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgeyByZXRyeVBvbGljeSBhcyB0c3BSZXRyeVBvbGljeSwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9wb2xpY2llc1wiO1xuY29uc3QgcmV0cnlQb2xpY3lMb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJjb3JlLXJlc3QtcGlwZWxpbmUgcmV0cnlQb2xpY3lcIik7XG4vKipcbiAqIHJldHJ5UG9saWN5IGlzIGEgZ2VuZXJpYyBwb2xpY3kgdG8gZW5hYmxlIHJldHJ5aW5nIHJlcXVlc3RzIHdoZW4gY2VydGFpbiBjb25kaXRpb25zIGFyZSBtZXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJldHJ5UG9saWN5KHN0cmF0ZWdpZXMsIG9wdGlvbnMgPSB7IG1heFJldHJpZXM6IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5UIH0pIHtcbiAgICAvLyBDYXN0IGlzIHJlcXVpcmVkIHNpbmNlIHRoZSBUU1AgcnVudGltZSByZXRyeSBzdHJhdGVneSB0eXBlIGlzIHNsaWdodGx5IGRpZmZlcmVudFxuICAgIC8vIHZlcnkgZGVlcCBkb3duICh1c2luZyByZWFsIEFib3J0U2lnbmFsIHZzLiBBYm9ydFNpZ25hbExpa2UgaW4gUmVzdEVycm9yKS5cbiAgICAvLyBJbiBwcmFjdGljZSB0aGUgZGlmZmVyZW5jZSBkb2Vzbid0IGFjdHVhbGx5IG1hdHRlci5cbiAgICByZXR1cm4gdHNwUmV0cnlQb2xpY3koc3RyYXRlZ2llcywge1xuICAgICAgICBsb2dnZXI6IHJldHJ5UG9saWN5TG9nZ2VyLFxuICAgICAgICAuLi5vcHRpb25zLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setClientRequestIdPolicy: () => (/* binding */ setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* binding */ setClientRequestIdPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nconst setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nfunction setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=setClientRequestIdPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzP2NiZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LlxuICovXG5leHBvcnQgY29uc3Qgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSA9IFwic2V0Q2xpZW50UmVxdWVzdElkUG9saWN5XCI7XG4vKipcbiAqIEVhY2ggUGlwZWxpbmVSZXF1ZXN0IGdldHMgYSB1bmlxdWUgaWQgdXBvbiBjcmVhdGlvbi5cbiAqIFRoaXMgcG9saWN5IHBhc3NlcyB0aGF0IHVuaXF1ZSBpZCBhbG9uZyB2aWEgYW4gSFRUUCBoZWFkZXIgdG8gZW5hYmxlIGJldHRlclxuICogdGVsZW1ldHJ5IGFuZCB0cmFjaW5nLlxuICogQHBhcmFtIHJlcXVlc3RJZEhlYWRlck5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyIHRvIHBhc3MgdGhlIHJlcXVlc3QgSUQgdG8uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kocmVxdWVzdElkSGVhZGVyTmFtZSA9IFwieC1tcy1jbGllbnQtcmVxdWVzdC1pZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LmhlYWRlcnMuaGFzKHJlcXVlc3RJZEhlYWRlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChyZXF1ZXN0SWRIZWFkZXJOYW1lLCByZXF1ZXN0LnJlcXVlc3RJZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   systemErrorRetryPolicy: () => (/* binding */ systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* binding */ systemErrorRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nconst systemErrorRetryPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.systemErrorRetryPolicyName;\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nfunction systemErrorRetryPolicy(options = {}) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.systemErrorRetryPolicy)(options);\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDZ0w7QUFDaEw7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTyxtQ0FBbUMsbUdBQTZCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRDQUE0QztBQUNuRCxXQUFXLG1HQUF5QjtBQUNwQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzPzg1NzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBzeXN0ZW1FcnJvclJldHJ5UG9saWN5IGFzIHRzcFN5c3RlbUVycm9yUmV0cnlQb2xpY3ksIHN5c3RlbUVycm9yUmV0cnlQb2xpY3lOYW1lIGFzIHRzcFN5c3RlbUVycm9yUmV0cnlQb2xpY3lOYW1lLCB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lL2ludGVybmFsL3BvbGljaWVzXCI7XG4vKipcbiAqIE5hbWUgb2YgdGhlIHtAbGluayBzeXN0ZW1FcnJvclJldHJ5UG9saWN5fVxuICovXG5leHBvcnQgY29uc3Qgc3lzdGVtRXJyb3JSZXRyeVBvbGljeU5hbWUgPSB0c3BTeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZTtcbi8qKlxuICogQSByZXRyeSBwb2xpY3kgdGhhdCBzcGVjaWZpY2FsbHkgc2Vla3MgdG8gaGFuZGxlIGVycm9ycyBpbiB0aGVcbiAqIHVuZGVybHlpbmcgdHJhbnNwb3J0IGxheWVyIChlLmcuIEROUyBsb29rdXAgZmFpbHVyZXMpIHJhdGhlciB0aGFuXG4gKiByZXRyeWFibGUgZXJyb3IgY29kZXMgZnJvbSB0aGUgc2VydmVyIGl0c2VsZi5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0aGF0IGN1c3RvbWl6ZSB0aGUgcG9saWN5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3lzdGVtRXJyb3JSZXRyeVBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdHNwU3lzdGVtRXJyb3JSZXRyeVBvbGljeShvcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5c3RlbUVycm9yUmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throttlingRetryPolicy: () => (/* binding */ throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* binding */ throttlingRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nconst throttlingRetryPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.throttlingRetryPolicyName;\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://learn.microsoft.com/azure/azure-resource-manager/resource-manager-request-limits,\n * https://learn.microsoft.com/azure/azure-subscription-service-limits and\n * https://learn.microsoft.com/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nfunction throttlingRetryPolicy(options = {}) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.throttlingRetryPolicy)(options);\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90aHJvdHRsaW5nUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUM0SztBQUM1SztBQUNBLGdCQUFnQjtBQUNoQjtBQUNPLGtDQUFrQyxrR0FBNEI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQ0FBMkM7QUFDbEQsV0FBVyxrR0FBd0I7QUFDbkM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvdGhyb3R0bGluZ1JldHJ5UG9saWN5LmpzPzUwYzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyB0aHJvdHRsaW5nUmV0cnlQb2xpY3lOYW1lIGFzIHRzcFRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUsIHRocm90dGxpbmdSZXRyeVBvbGljeSBhcyB0c3BUaHJvdHRsaW5nUmV0cnlQb2xpY3ksIH0gZnJvbSBcIkB0eXBlc3BlYy90cy1odHRwLXJ1bnRpbWUvaW50ZXJuYWwvcG9saWNpZXNcIjtcbi8qKlxuICogTmFtZSBvZiB0aGUge0BsaW5rIHRocm90dGxpbmdSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0IGNvbnN0IHRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUgPSB0c3BUaHJvdHRsaW5nUmV0cnlQb2xpY3lOYW1lO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IHJldHJpZXMgd2hlbiB0aGUgc2VydmVyIHNlbmRzIGEgNDI5IHJlc3BvbnNlIHdpdGggYSBSZXRyeS1BZnRlciBoZWFkZXIuXG4gKlxuICogVG8gbGVhcm4gbW9yZSwgcGxlYXNlIHJlZmVyIHRvXG4gKiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vYXp1cmUvYXp1cmUtcmVzb3VyY2UtbWFuYWdlci9yZXNvdXJjZS1tYW5hZ2VyLXJlcXVlc3QtbGltaXRzLFxuICogaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2F6dXJlL2F6dXJlLXN1YnNjcmlwdGlvbi1zZXJ2aWNlLWxpbWl0cyBhbmRcbiAqIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9henVyZS92aXJ0dWFsLW1hY2hpbmVzL3Ryb3VibGVzaG9vdGluZy90cm91Ymxlc2hvb3RpbmctdGhyb3R0bGluZy1lcnJvcnNcbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdGhhdCBjb25maWd1cmUgcmV0cnkgbG9naWMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsaW5nUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHRzcFRocm90dGxpbmdSZXRyeVBvbGljeShvcHRpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocm90dGxpbmdSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tlsPolicy: () => (/* binding */ tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* binding */ tlsPolicyName)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/policies */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/policies/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Name of the TLS Policy\n */\nconst tlsPolicyName = _typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.tlsPolicyName;\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nfunction tlsPolicy(tlsSettings) {\n    return (0,_typespec_ts_http_runtime_internal_policies__WEBPACK_IMPORTED_MODULE_0__.tlsPolicy)(tlsSettings);\n}\n//# sourceMappingURL=tlsPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90bHNQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUM0SDtBQUM1SDtBQUNBO0FBQ0E7QUFDTyxzQkFBc0Isc0ZBQWdCO0FBQzdDO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxzRkFBWTtBQUN2QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90bHNQb2xpY3kuanM/NDI5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHRsc1BvbGljeSBhcyB0c3BUbHNQb2xpY3ksIHRsc1BvbGljeU5hbWUgYXMgdHNwVGxzUG9saWN5TmFtZSwgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9wb2xpY2llc1wiO1xuLyoqXG4gKiBOYW1lIG9mIHRoZSBUTFMgUG9saWN5XG4gKi9cbmV4cG9ydCBjb25zdCB0bHNQb2xpY3lOYW1lID0gdHNwVGxzUG9saWN5TmFtZTtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IGFkZHMgdGhlIGNsaWVudCBjZXJ0aWZpY2F0ZSB0byB0aGUgSHR0cENsaWVudCBhZ2VudCBmb3IgYXV0aGVudGljYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0bHNQb2xpY3kodGxzU2V0dGluZ3MpIHtcbiAgICByZXR1cm4gdHNwVGxzUG9saWN5KHRsc1NldHRpbmdzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRsc1BvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tracingPolicy: () => (/* binding */ tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* binding */ tracingPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/userAgent.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../restError.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/util */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/util/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nconst tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nfunction tracingPolicy(options = {}) {\n    const userAgentPromise = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__.getUserAgentValue)(options.userAgentPrefix);\n    const sanitizer = new _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_6__.Sanitizer({\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    const tracingClient = tryCreateTracingClient();\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            if (!tracingClient) {\n                return next(request);\n            }\n            const userAgent = await userAgentPromise;\n            const spanAttributes = {\n                \"http.url\": sanitizer.sanitizeUrl(request.url),\n                \"http.method\": request.method,\n                \"http.user_agent\": userAgent,\n                requestId: request.requestId,\n            };\n            if (userAgent) {\n                spanAttributes[\"http.user_agent\"] = userAgent;\n            }\n            const { span, tracingContext } = tryCreateSpan(tracingClient, request, spanAttributes) ?? {};\n            if (!span || !tracingContext) {\n                return next(request);\n            }\n            try {\n                const response = await tracingClient.withContext(tracingContext, next, request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateTracingClient() {\n    try {\n        return (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n            namespace: \"\",\n            packageName: \"@azure/core-rest-pipeline\",\n            packageVersion: _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n        });\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Error when creating the TracingClient: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryCreateSpan(tracingClient, request, spanAttributes) {\n    try {\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span, updatedOptions } = tracingClient.startSpan(`HTTP ${request.method}`, { tracingOptions: request.tracingOptions }, {\n            spanKind: \"client\",\n            spanAttributes,\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        // set headers\n        const headers = tracingClient.createRequestHeaders(updatedOptions.tracingOptions.tracingContext);\n        for (const [key, value] of Object.entries(headers)) {\n            request.headers.set(key, value);\n        }\n        return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping creating a tracing span due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, error) {\n    try {\n        span.setStatus({\n            status: \"error\",\n            error: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.isError)(error) ? error : undefined,\n        });\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError)(error) && error.statusCode) {\n            span.setAttribute(\"http.status_code\", error.statusCode);\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n        // Otherwise, the status MUST remain unset.\n        // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n        if (response.status >= 400) {\n            span.setStatus({\n                status: \"error\",\n            });\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userAgentPolicy: () => (/* binding */ userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* binding */ userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/userAgent.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst UserAgentHeaderName = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentHeaderName)();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nconst userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nfunction userAgentPolicy(options = {}) {\n    const userAgentValue = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNpRjtBQUNqRiw0QkFBNEIsMEVBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFDQUFxQztBQUM1QywyQkFBMkIscUVBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzPzcyYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBnZXRVc2VyQWdlbnRIZWFkZXJOYW1lLCBnZXRVc2VyQWdlbnRWYWx1ZSB9IGZyb20gXCIuLi91dGlsL3VzZXJBZ2VudC5qc1wiO1xuY29uc3QgVXNlckFnZW50SGVhZGVyTmFtZSA9IGdldFVzZXJBZ2VudEhlYWRlck5hbWUoKTtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSB1c2VyQWdlbnRQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VyQWdlbnRQb2xpY3lOYW1lID0gXCJ1c2VyQWdlbnRQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCBzZXRzIHRoZSBVc2VyLUFnZW50IGhlYWRlciAob3IgZXF1aXZhbGVudCkgdG8gcmVmbGVjdFxuICogdGhlIGxpYnJhcnkgdmVyc2lvbi5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjdXN0b21pemUgdGhlIHVzZXIgYWdlbnQgdmFsdWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VyQWdlbnRQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgdXNlckFnZW50VmFsdWUgPSBnZXRVc2VyQWdlbnRWYWx1ZShvcHRpb25zLnVzZXJBZ2VudFByZWZpeCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogdXNlckFnZW50UG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LmhlYWRlcnMuaGFzKFVzZXJBZ2VudEhlYWRlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChVc2VyQWdlbnRIZWFkZXJOYW1lLCBhd2FpdCB1c2VyQWdlbnRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlckFnZW50UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/wrapAbortSignalLikePolicy.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/wrapAbortSignalLikePolicy.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapAbortSignalLikePolicy: () => (/* binding */ wrapAbortSignalLikePolicy),\n/* harmony export */   wrapAbortSignalLikePolicyName: () => (/* binding */ wrapAbortSignalLikePolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_wrapAbortSignal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/wrapAbortSignal.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/wrapAbortSignal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst wrapAbortSignalLikePolicyName = \"wrapAbortSignalLikePolicy\";\n/**\n * Policy that ensure that any AbortSignalLike is wrapped in a native AbortSignal for processing by the pipeline.\n * Since the ts-http-runtime expects a native AbortSignal, this policy is used to ensure that any AbortSignalLike is wrapped in a native AbortSignal.\n *\n * @returns - created policy\n */\nfunction wrapAbortSignalLikePolicy() {\n    return {\n        name: wrapAbortSignalLikePolicyName,\n        sendRequest: async (request, next) => {\n            if (!request.abortSignal) {\n                return next(request);\n            }\n            const { abortSignal, cleanup } = (0,_util_wrapAbortSignal_js__WEBPACK_IMPORTED_MODULE_0__.wrapAbortSignalLike)(request.abortSignal);\n            // eslint-disable-next-line no-param-reassign\n            request.abortSignal = abortSignal;\n            try {\n                return await next(request);\n            }\n            finally {\n                cleanup?.();\n            }\n        },\n    };\n}\n//# sourceMappingURL=wrapAbortSignalLikePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy93cmFwQWJvcnRTaWduYWxMaWtlUG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDaUU7QUFDMUQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1QkFBdUIsRUFBRSw2RUFBbUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL3dyYXBBYm9ydFNpZ25hbExpa2VQb2xpY3kuanM/NzE0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHdyYXBBYm9ydFNpZ25hbExpa2UgfSBmcm9tIFwiLi4vdXRpbC93cmFwQWJvcnRTaWduYWwuanNcIjtcbmV4cG9ydCBjb25zdCB3cmFwQWJvcnRTaWduYWxMaWtlUG9saWN5TmFtZSA9IFwid3JhcEFib3J0U2lnbmFsTGlrZVBvbGljeVwiO1xuLyoqXG4gKiBQb2xpY3kgdGhhdCBlbnN1cmUgdGhhdCBhbnkgQWJvcnRTaWduYWxMaWtlIGlzIHdyYXBwZWQgaW4gYSBuYXRpdmUgQWJvcnRTaWduYWwgZm9yIHByb2Nlc3NpbmcgYnkgdGhlIHBpcGVsaW5lLlxuICogU2luY2UgdGhlIHRzLWh0dHAtcnVudGltZSBleHBlY3RzIGEgbmF0aXZlIEFib3J0U2lnbmFsLCB0aGlzIHBvbGljeSBpcyB1c2VkIHRvIGVuc3VyZSB0aGF0IGFueSBBYm9ydFNpZ25hbExpa2UgaXMgd3JhcHBlZCBpbiBhIG5hdGl2ZSBBYm9ydFNpZ25hbC5cbiAqXG4gKiBAcmV0dXJucyAtIGNyZWF0ZWQgcG9saWN5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3cmFwQWJvcnRTaWduYWxMaWtlUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHdyYXBBYm9ydFNpZ25hbExpa2VQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogYXN5bmMgKHJlcXVlc3QsIG5leHQpID0+IHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5hYm9ydFNpZ25hbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgeyBhYm9ydFNpZ25hbCwgY2xlYW51cCB9ID0gd3JhcEFib3J0U2lnbmFsTGlrZShyZXF1ZXN0LmFib3J0U2lnbmFsKTtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgcmVxdWVzdC5hYm9ydFNpZ25hbCA9IGFib3J0U2lnbmFsO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIGNsZWFudXA/LigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwQWJvcnRTaWduYWxMaWtlUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/wrapAbortSignalLikePolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* binding */ RestError),\n/* harmony export */   isRestError: () => (/* binding */ isRestError)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A custom error type for failed pipeline requests.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst RestError = _typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__.RestError;\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nfunction isRestError(e) {\n    return (0,_typespec_ts_http_runtime__WEBPACK_IMPORTED_MODULE_0__.isRestError)(e);\n}\n//# sourceMappingURL=restError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXN0RXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNzRztBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNPLGtCQUFrQixnRUFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxzRUFBYztBQUN6QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXN0RXJyb3IuanM/ZTVmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IFJlc3RFcnJvciBhcyBUc3BSZXN0RXJyb3IsIGlzUmVzdEVycm9yIGFzIHRzcElzUmVzdEVycm9yLCB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lXCI7XG4vKipcbiAqIEEgY3VzdG9tIGVycm9yIHR5cGUgZm9yIGZhaWxlZCBwaXBlbGluZSByZXF1ZXN0cy5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1yZWRlY2xhcmVcbmV4cG9ydCBjb25zdCBSZXN0RXJyb3IgPSBUc3BSZXN0RXJyb3I7XG4vKipcbiAqIFR5cGVndWFyZCBmb3IgUmVzdEVycm9yXG4gKiBAcGFyYW0gZSAtIFNvbWV0aGluZyBjYXVnaHQgYnkgYSBjYXRjaCBjbGF1c2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1Jlc3RFcnJvcihlKSB7XG4gICAgcmV0dXJuIHRzcElzUmVzdEVycm9yKGUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFile: () => (/* binding */ createFile),\n/* harmony export */   createFileFromStream: () => (/* binding */ createFileFromStream),\n/* harmony export */   getRawContent: () => (/* binding */ getRawContent),\n/* harmony export */   hasRawContent: () => (/* binding */ hasRawContent)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nfunction isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nconst unimplementedMethods = {\n    arrayBuffer: () => {\n        throw new Error(\"Not implemented\");\n    },\n    bytes: () => {\n        throw new Error(\"Not implemented\");\n    },\n    slice: () => {\n        throw new Error(\"Not implemented\");\n    },\n    text: () => {\n        throw new Error(\"Not implemented\");\n    },\n};\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent = Symbol(\"rawContent\");\n/**\n * Type guard to check if a given object is a blob-like object with a raw content property.\n */\nfunction hasRawContent(x) {\n    return typeof x[rawContent] === \"function\";\n}\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the actual blob.\n *\n * @internal\n */\nfunction getRawContent(blob) {\n    if (hasRawContent(blob)) {\n        return blob[rawContent]();\n    }\n    else {\n        return blob;\n    }\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFileFromStream(stream, name, options = {}) {\n    return {\n        ...unimplementedMethods,\n        type: options.type ?? \"\",\n        lastModified: options.lastModified ?? new Date().getTime(),\n        webkitRelativePath: options.webkitRelativePath ?? \"\",\n        size: options.size ?? -1,\n        name,\n        stream: () => {\n            const s = stream();\n            if (isNodeReadableStream(s)) {\n                throw new Error(\"Not supported: a Node stream was provided as input to createFileFromStream.\");\n            }\n            return s;\n        },\n        [rawContent]: stream,\n    };\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFile(content, name, options = {}) {\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike) {\n        return {\n            ...unimplementedMethods,\n            type: options.type ?? \"\",\n            lastModified: options.lastModified ?? new Date().getTime(),\n            webkitRelativePath: options.webkitRelativePath ?? \"\",\n            size: content.byteLength,\n            name,\n            arrayBuffer: async () => content.buffer,\n            stream: () => new Blob([content]).stream(),\n            [rawContent]: () => content,\n        };\n    }\n    else {\n        return new File([content], name, options);\n    }\n}\n//# sourceMappingURL=file.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2ZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzhDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3REFBd0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtDQUErQztBQUN0RCxRQUFRLHdEQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3V0aWwvZmlsZS5qcz8zMmM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNOb2RlTGlrZSB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5mdW5jdGlvbiBpc05vZGVSZWFkYWJsZVN0cmVhbSh4KSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oeCAmJiB0eXBlb2YgeFtcInBpcGVcIl0gPT09IFwiZnVuY3Rpb25cIik7XG59XG5jb25zdCB1bmltcGxlbWVudGVkTWV0aG9kcyA9IHtcbiAgICBhcnJheUJ1ZmZlcjogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfSxcbiAgICBieXRlczogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfSxcbiAgICBzbGljZTogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfSxcbiAgICB0ZXh0OiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9LFxufTtcbi8qKlxuICogUHJpdmF0ZSBzeW1ib2wgdXNlZCBhcyBrZXkgb24gb2JqZWN0cyBjcmVhdGVkIHVzaW5nIGNyZWF0ZUZpbGUgY29udGFpbmluZyB0aGVcbiAqIG9yaWdpbmFsIHNvdXJjZSBvZiB0aGUgZmlsZSBvYmplY3QuXG4gKlxuICogVGhpcyBpcyB1c2VkIGluIE5vZGUgdG8gYWNjZXNzIHRoZSBvcmlnaW5hbCBOb2RlIHN0cmVhbSB3aXRob3V0IHVzaW5nIEJsb2Ijc3RyZWFtLCB3aGljaFxuICogcmV0dXJucyBhIHdlYiBzdHJlYW0uIFRoaXMgaXMgZG9uZSB0byBhdm9pZCBhIGNvdXBsZSBvZiBidWdzIHRvIGRvIHdpdGggQmxvYiNzdHJlYW0gYW5kXG4gKiBSZWFkYWJsZSN0by9mcm9tV2ViIGluIE5vZGUgdmVyc2lvbnMgd2Ugc3VwcG9ydDpcbiAqIC0gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy80MjY5NCAoZml4ZWQgaW4gTm9kZSAxOC4xNClcbiAqIC0gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy80ODkxNiAoZml4ZWQgaW4gTm9kZSAyMC42KVxuICpcbiAqIE9uY2UgdGhlc2UgdmVyc2lvbnMgYXJlIG5vIGxvbmdlciBzdXBwb3J0ZWQsIHdlIG1heSBiZSBhYmxlIHRvIHN0b3AgZG9pbmcgdGhpcy5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgcmF3Q29udGVudCA9IFN5bWJvbChcInJhd0NvbnRlbnRcIik7XG4vKipcbiAqIFR5cGUgZ3VhcmQgdG8gY2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaXMgYSBibG9iLWxpa2Ugb2JqZWN0IHdpdGggYSByYXcgY29udGVudCBwcm9wZXJ0eS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc1Jhd0NvbnRlbnQoeCkge1xuICAgIHJldHVybiB0eXBlb2YgeFtyYXdDb250ZW50XSA9PT0gXCJmdW5jdGlvblwiO1xufVxuLyoqXG4gKiBFeHRyYWN0IHRoZSByYXcgY29udGVudCBmcm9tIGEgZ2l2ZW4gYmxvYi1saWtlIG9iamVjdC4gSWYgdGhlIGlucHV0IHdhcyBjcmVhdGVkIHVzaW5nIGNyZWF0ZUZpbGVcbiAqIG9yIGNyZWF0ZUZpbGVGcm9tU3RyZWFtLCB0aGUgZXhhY3QgY29udGVudCBwYXNzZWQgaW50byBjcmVhdGVGaWxlL2NyZWF0ZUZpbGVGcm9tU3RyZWFtIHdpbGwgYmUgdXNlZC5cbiAqIEZvciB0cnVlIGluc3RhbmNlcyBvZiBCbG9iIGFuZCBGaWxlLCByZXR1cm5zIHRoZSBhY3R1YWwgYmxvYi5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhd0NvbnRlbnQoYmxvYikge1xuICAgIGlmIChoYXNSYXdDb250ZW50KGJsb2IpKSB7XG4gICAgICAgIHJldHVybiBibG9iW3Jhd0NvbnRlbnRdKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYmxvYjtcbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhbiBvYmplY3QgdGhhdCBpbXBsZW1lbnRzIHRoZSBGaWxlIGludGVyZmFjZS4gVGhpcyBvYmplY3QgaXMgaW50ZW5kZWQgdG8gYmVcbiAqIHBhc3NlZCBpbnRvIFJlcXVlc3RCb2R5VHlwZS5mb3JtRGF0YSwgYW5kIGlzIG5vdCBndWFyYW50ZWVkIHRvIHdvcmsgYXMgZXhwZWN0ZWQgaW5cbiAqIG90aGVyIHNpdHVhdGlvbnMuXG4gKlxuICogVXNlIHRoaXMgZnVuY3Rpb24gdG86XG4gKiAtIENyZWF0ZSBhIEZpbGUgb2JqZWN0IGZvciB1c2UgaW4gUmVxdWVzdEJvZHlUeXBlLmZvcm1EYXRhIGluIGVudmlyb25tZW50cyB3aGVyZSB0aGVcbiAqICAgZ2xvYmFsIEZpbGUgb2JqZWN0IGlzIHVuYXZhaWxhYmxlLlxuICogLSBDcmVhdGUgYSBGaWxlLWxpa2Ugb2JqZWN0IGZyb20gYSByZWFkYWJsZSBzdHJlYW0gd2l0aG91dCByZWFkaW5nIHRoZSBzdHJlYW0gaW50byBtZW1vcnkuXG4gKlxuICogQHBhcmFtIHN0cmVhbSAtIHRoZSBjb250ZW50IG9mIHRoZSBmaWxlIGFzIGEgY2FsbGJhY2sgcmV0dXJuaW5nIGEgc3RyZWFtLiBXaGVuIGEgRmlsZSBvYmplY3QgbWFkZSB1c2luZyBjcmVhdGVGaWxlIGlzXG4gKiAgICAgICAgICAgICAgICAgIHBhc3NlZCBpbiBhIHJlcXVlc3QncyBmb3JtIGRhdGEgbWFwLCB0aGUgc3RyZWFtIHdpbGwgbm90IGJlIHJlYWQgaW50byBtZW1vcnlcbiAqICAgICAgICAgICAgICAgICAgYW5kIGluc3RlYWQgd2lsbCBiZSBzdHJlYW1lZCB3aGVuIHRoZSByZXF1ZXN0IGlzIG1hZGUuIEluIHRoZSBldmVudCBvZiBhIHJldHJ5LCB0aGVcbiAqICAgICAgICAgICAgICAgICAgc3RyZWFtIG5lZWRzIHRvIGJlIHJlYWQgYWdhaW4sIHNvIHRoaXMgY2FsbGJhY2sgU0hPVUxEIHJldHVybiBhIGZyZXNoIHN0cmVhbSBpZiBwb3NzaWJsZS5cbiAqIEBwYXJhbSBuYW1lIC0gdGhlIG5hbWUgb2YgdGhlIGZpbGUuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIG9wdGlvbmFsIG1ldGFkYXRhIGFib3V0IHRoZSBmaWxlLCBlLmcuIGZpbGUgbmFtZSwgZmlsZSBzaXplLCBNSU1FIHR5cGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGaWxlRnJvbVN0cmVhbShzdHJlYW0sIG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnVuaW1wbGVtZW50ZWRNZXRob2RzLFxuICAgICAgICB0eXBlOiBvcHRpb25zLnR5cGUgPz8gXCJcIixcbiAgICAgICAgbGFzdE1vZGlmaWVkOiBvcHRpb25zLmxhc3RNb2RpZmllZCA/PyBuZXcgRGF0ZSgpLmdldFRpbWUoKSxcbiAgICAgICAgd2Via2l0UmVsYXRpdmVQYXRoOiBvcHRpb25zLndlYmtpdFJlbGF0aXZlUGF0aCA/PyBcIlwiLFxuICAgICAgICBzaXplOiBvcHRpb25zLnNpemUgPz8gLTEsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIHN0cmVhbTogKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcyA9IHN0cmVhbSgpO1xuICAgICAgICAgICAgaWYgKGlzTm9kZVJlYWRhYmxlU3RyZWFtKHMpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IHN1cHBvcnRlZDogYSBOb2RlIHN0cmVhbSB3YXMgcHJvdmlkZWQgYXMgaW5wdXQgdG8gY3JlYXRlRmlsZUZyb21TdHJlYW0uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHM7XG4gICAgICAgIH0sXG4gICAgICAgIFtyYXdDb250ZW50XTogc3RyZWFtLFxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhbiBvYmplY3QgdGhhdCBpbXBsZW1lbnRzIHRoZSBGaWxlIGludGVyZmFjZS4gVGhpcyBvYmplY3QgaXMgaW50ZW5kZWQgdG8gYmVcbiAqIHBhc3NlZCBpbnRvIFJlcXVlc3RCb2R5VHlwZS5mb3JtRGF0YSwgYW5kIGlzIG5vdCBndWFyYW50ZWVkIHRvIHdvcmsgYXMgZXhwZWN0ZWQgaW5cbiAqIG90aGVyIHNpdHVhdGlvbnMuXG4gKlxuICogVXNlIHRoaXMgZnVuY3Rpb24gY3JlYXRlIGEgRmlsZSBvYmplY3QgZm9yIHVzZSBpbiBSZXF1ZXN0Qm9keVR5cGUuZm9ybURhdGEgaW4gZW52aXJvbm1lbnRzIHdoZXJlIHRoZSBnbG9iYWwgRmlsZSBvYmplY3QgaXMgdW5hdmFpbGFibGUuXG4gKlxuICogQHBhcmFtIGNvbnRlbnQgLSB0aGUgY29udGVudCBvZiB0aGUgZmlsZSBhcyBhIFVpbnQ4QXJyYXkgaW4gbWVtb3J5LlxuICogQHBhcmFtIG5hbWUgLSB0aGUgbmFtZSBvZiB0aGUgZmlsZS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9uYWwgbWV0YWRhdGEgYWJvdXQgdGhlIGZpbGUsIGUuZy4gZmlsZSBuYW1lLCBmaWxlIHNpemUsIE1JTUUgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZpbGUoY29udGVudCwgbmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKGlzTm9kZUxpa2UpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnVuaW1wbGVtZW50ZWRNZXRob2RzLFxuICAgICAgICAgICAgdHlwZTogb3B0aW9ucy50eXBlID8/IFwiXCIsXG4gICAgICAgICAgICBsYXN0TW9kaWZpZWQ6IG9wdGlvbnMubGFzdE1vZGlmaWVkID8/IG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuICAgICAgICAgICAgd2Via2l0UmVsYXRpdmVQYXRoOiBvcHRpb25zLndlYmtpdFJlbGF0aXZlUGF0aCA/PyBcIlwiLFxuICAgICAgICAgICAgc2l6ZTogY29udGVudC5ieXRlTGVuZ3RoLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIGFycmF5QnVmZmVyOiBhc3luYyAoKSA9PiBjb250ZW50LmJ1ZmZlcixcbiAgICAgICAgICAgIHN0cmVhbTogKCkgPT4gbmV3IEJsb2IoW2NvbnRlbnRdKS5zdHJlYW0oKSxcbiAgICAgICAgICAgIFtyYXdDb250ZW50XTogKCkgPT4gY29udGVudCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgRmlsZShbY29udGVudF0sIG5hbWUsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CYCLER_OPTIONS: () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   createTokenCycler: () => (/* binding */ createTokenCycler)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = {\n        ...DEFAULT_CYCLER_OPTIONS,\n        ...tokenCyclerOptions,\n    };\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            if (cycler.isRefreshing) {\n                return false;\n            }\n            if (token?.refreshAfterTimestamp && token.refreshAfterTimestamp < Date.now()) {\n                return true;\n            }\n            return (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now();\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            token?.expiresOnTimestamp ?? Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAgentHeaderName: () => (/* binding */ getUserAgentHeaderName),\n/* harmony export */   getUserAgentValue: () => (/* binding */ getUserAgentValue)\n/* harmony export */ });\n/* harmony import */ var _userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userAgentPlatform.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nfunction getUserAgentHeaderName() {\n    return (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.getHeaderName)();\n}\n/**\n * @internal\n */\nasync function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION);\n    await (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.setPlatformSpecificData)(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNnRjtBQUNsQztBQUM5QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsSUFBSSxHQUFHLE1BQU07QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsb0VBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMENBQTBDLHNEQUFXO0FBQ3JELFVBQVUsOEVBQXVCO0FBQ2pDO0FBQ0EsdUNBQXVDLFFBQVEsRUFBRSxhQUFhO0FBQzlEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vdXRpbC91c2VyQWdlbnQuanM/MWI3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGdldEhlYWRlck5hbWUsIHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhIH0gZnJvbSBcIi4vdXNlckFnZW50UGxhdGZvcm0uanNcIjtcbmltcG9ydCB7IFNES19WRVJTSU9OIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuZnVuY3Rpb24gZ2V0VXNlckFnZW50U3RyaW5nKHRlbGVtZXRyeUluZm8pIHtcbiAgICBjb25zdCBwYXJ0cyA9IFtdO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHRlbGVtZXRyeUluZm8pIHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSB2YWx1ZSA/IGAke2tleX0vJHt2YWx1ZX1gIDoga2V5O1xuICAgICAgICBwYXJ0cy5wdXNoKHRva2VuKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcnRzLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJBZ2VudEhlYWRlck5hbWUoKSB7XG4gICAgcmV0dXJuIGdldEhlYWRlck5hbWUoKTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRVc2VyQWdlbnRWYWx1ZShwcmVmaXgpIHtcbiAgICBjb25zdCBydW50aW1lSW5mbyA9IG5ldyBNYXAoKTtcbiAgICBydW50aW1lSW5mby5zZXQoXCJjb3JlLXJlc3QtcGlwZWxpbmVcIiwgU0RLX1ZFUlNJT04pO1xuICAgIGF3YWl0IHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhKHJ1bnRpbWVJbmZvKTtcbiAgICBjb25zdCBkZWZhdWx0QWdlbnQgPSBnZXRVc2VyQWdlbnRTdHJpbmcocnVudGltZUluZm8pO1xuICAgIGNvbnN0IHVzZXJBZ2VudFZhbHVlID0gcHJlZml4ID8gYCR7cHJlZml4fSAke2RlZmF1bHRBZ2VudH1gIDogZGVmYXVsdEFnZW50O1xuICAgIHJldHVybiB1c2VyQWdlbnRWYWx1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXJBZ2VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeaderName: () => (/* binding */ getHeaderName),\n/* harmony export */   setPlatformSpecificData: () => (/* binding */ setPlatformSpecificData)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @internal\n */\nfunction getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nasync function setPlatformSpecificData(map) {\n    if (node_process__WEBPACK_IMPORTED_MODULE_1__ && node_process__WEBPACK_IMPORTED_MODULE_1__.versions) {\n        const versions = node_process__WEBPACK_IMPORTED_MODULE_1__.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${node_os__WEBPACK_IMPORTED_MODULE_0__.arch()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.type()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudFBsYXRmb3JtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3lCO0FBQ1U7QUFDbkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLHlDQUFPLElBQUksa0RBQWdCO0FBQ25DLHlCQUF5QixrREFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQU8sR0FBRyxHQUFHLHlDQUFPLEdBQUcsR0FBRyw0Q0FBVSxHQUFHO0FBQzdEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3V0aWwvdXNlckFnZW50UGxhdGZvcm0uanM/MGNmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCBvcyBmcm9tIFwibm9kZTpvc1wiO1xuaW1wb3J0IHByb2Nlc3MgZnJvbSBcIm5vZGU6cHJvY2Vzc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEhlYWRlck5hbWUoKSB7XG4gICAgcmV0dXJuIFwiVXNlci1BZ2VudFwiO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhKG1hcCkge1xuICAgIGlmIChwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnMpIHtcbiAgICAgICAgY29uc3QgdmVyc2lvbnMgPSBwcm9jZXNzLnZlcnNpb25zO1xuICAgICAgICBpZiAodmVyc2lvbnMuYnVuKSB7XG4gICAgICAgICAgICBtYXAuc2V0KFwiQnVuXCIsIHZlcnNpb25zLmJ1bik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmVyc2lvbnMuZGVubykge1xuICAgICAgICAgICAgbWFwLnNldChcIkRlbm9cIiwgdmVyc2lvbnMuZGVubyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmVyc2lvbnMubm9kZSkge1xuICAgICAgICAgICAgbWFwLnNldChcIk5vZGVcIiwgdmVyc2lvbnMubm9kZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbWFwLnNldChcIk9TXCIsIGAoJHtvcy5hcmNoKCl9LSR7b3MudHlwZSgpfS0ke29zLnJlbGVhc2UoKX0pYCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VyQWdlbnRQbGF0Zm9ybS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/wrapAbortSignal.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/wrapAbortSignal.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapAbortSignalLike: () => (/* binding */ wrapAbortSignalLike)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Creates a native AbortSignal which reflects the state of the provided AbortSignalLike.\n * If the AbortSignalLike is already a native AbortSignal, it is returned as is.\n * @param abortSignalLike - The AbortSignalLike to wrap.\n * @returns - An object containing the native AbortSignal and an optional cleanup function. The cleanup function should be called when the AbortSignal is no longer needed.\n */\nfunction wrapAbortSignalLike(abortSignalLike) {\n    if (abortSignalLike instanceof AbortSignal) {\n        return { abortSignal: abortSignalLike };\n    }\n    if (abortSignalLike.aborted) {\n        return { abortSignal: AbortSignal.abort(abortSignalLike.reason) };\n    }\n    const controller = new AbortController();\n    let needsCleanup = true;\n    function cleanup() {\n        if (needsCleanup) {\n            abortSignalLike.removeEventListener(\"abort\", listener);\n            needsCleanup = false;\n        }\n    }\n    function listener() {\n        controller.abort(abortSignalLike.reason);\n        cleanup();\n    }\n    abortSignalLike.addEventListener(\"abort\", listener);\n    return { abortSignal: controller.signal, cleanup };\n}\n//# sourceMappingURL=wrapAbortSignal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3dyYXBBYm9ydFNpZ25hbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3V0aWwvd3JhcEFib3J0U2lnbmFsLmpzPzVkNTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIENyZWF0ZXMgYSBuYXRpdmUgQWJvcnRTaWduYWwgd2hpY2ggcmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBwcm92aWRlZCBBYm9ydFNpZ25hbExpa2UuXG4gKiBJZiB0aGUgQWJvcnRTaWduYWxMaWtlIGlzIGFscmVhZHkgYSBuYXRpdmUgQWJvcnRTaWduYWwsIGl0IGlzIHJldHVybmVkIGFzIGlzLlxuICogQHBhcmFtIGFib3J0U2lnbmFsTGlrZSAtIFRoZSBBYm9ydFNpZ25hbExpa2UgdG8gd3JhcC5cbiAqIEByZXR1cm5zIC0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIG5hdGl2ZSBBYm9ydFNpZ25hbCBhbmQgYW4gb3B0aW9uYWwgY2xlYW51cCBmdW5jdGlvbi4gVGhlIGNsZWFudXAgZnVuY3Rpb24gc2hvdWxkIGJlIGNhbGxlZCB3aGVuIHRoZSBBYm9ydFNpZ25hbCBpcyBubyBsb25nZXIgbmVlZGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gd3JhcEFib3J0U2lnbmFsTGlrZShhYm9ydFNpZ25hbExpa2UpIHtcbiAgICBpZiAoYWJvcnRTaWduYWxMaWtlIGluc3RhbmNlb2YgQWJvcnRTaWduYWwpIHtcbiAgICAgICAgcmV0dXJuIHsgYWJvcnRTaWduYWw6IGFib3J0U2lnbmFsTGlrZSB9O1xuICAgIH1cbiAgICBpZiAoYWJvcnRTaWduYWxMaWtlLmFib3J0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHsgYWJvcnRTaWduYWw6IEFib3J0U2lnbmFsLmFib3J0KGFib3J0U2lnbmFsTGlrZS5yZWFzb24pIH07XG4gICAgfVxuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgbGV0IG5lZWRzQ2xlYW51cCA9IHRydWU7XG4gICAgZnVuY3Rpb24gY2xlYW51cCgpIHtcbiAgICAgICAgaWYgKG5lZWRzQ2xlYW51cCkge1xuICAgICAgICAgICAgYWJvcnRTaWduYWxMaWtlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICBuZWVkc0NsZWFudXAgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgICAgY29udHJvbGxlci5hYm9ydChhYm9ydFNpZ25hbExpa2UucmVhc29uKTtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgIH1cbiAgICBhYm9ydFNpZ25hbExpa2UuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGxpc3RlbmVyKTtcbiAgICByZXR1cm4geyBhYm9ydFNpZ25hbDogY29udHJvbGxlci5zaWduYWwsIGNsZWFudXAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBBYm9ydFNpZ25hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/wrapAbortSignal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* reexport safe */ _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__.createTracingClient),\n/* harmony export */   useInstrumenter: () => (/* reexport safe */ _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingClient.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNvRDtBQUNLO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbmRleC5qcz9iZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgdXNlSW5zdHJ1bWVudGVyIH0gZnJvbSBcIi4vaW5zdHJ1bWVudGVyLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVUcmFjaW5nQ2xpZW50IH0gZnJvbSBcIi4vdHJhY2luZ0NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/instrumenter.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultInstrumenter: () => (/* binding */ createDefaultInstrumenter),\n/* harmony export */   createDefaultTracingSpan: () => (/* binding */ createDefaultTracingSpan),\n/* harmony export */   getInstrumenter: () => (/* binding */ getInstrumenter),\n/* harmony export */   useInstrumenter: () => (/* binding */ useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracingContext.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction createDefaultTracingSpan() {\n    return {\n        end: () => {\n            // noop\n        },\n        isRecording: () => false,\n        recordException: () => {\n            // noop\n        },\n        setAttribute: () => {\n            // noop\n        },\n        setStatus: () => {\n            // noop\n        },\n        addEvent: () => {\n            // noop\n        },\n    };\n}\nfunction createDefaultInstrumenter() {\n    return {\n        createRequestHeaders: () => {\n            return {};\n        },\n        parseTraceparentHeader: () => {\n            return undefined;\n        },\n        startSpan: (_name, spanOptions) => {\n            return {\n                span: createDefaultTracingSpan(),\n                tracingContext: (0,_tracingContext_js__WEBPACK_IMPORTED_MODULE_0__.createTracingContext)({ parentContext: spanOptions.tracingContext }),\n            };\n        },\n        withContext(_context, callback, ...callbackArgs) {\n            return callback(...callbackArgs);\n        },\n    };\n}\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nfunction useInstrumenter(instrumenter) {\n    _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = instrumenter;\n}\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nfunction getInstrumenter() {\n    if (!_state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation) {\n        _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = createDefaultInstrumenter();\n    }\n    return _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation;\n}\n//# sourceMappingURL=instrumenter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbnN0cnVtZW50ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUN4QjtBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdFQUFvQixHQUFHLDJDQUEyQztBQUNsRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLDRDQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLDRDQUFLO0FBQ2QsUUFBUSw0Q0FBSztBQUNiO0FBQ0EsV0FBVyw0Q0FBSztBQUNoQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbnN0cnVtZW50ZXIuanM/NmU2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYWNpbmdDb250ZXh0IH0gZnJvbSBcIi4vdHJhY2luZ0NvbnRleHQuanNcIjtcbmltcG9ydCB7IHN0YXRlIH0gZnJvbSBcIi4vc3RhdGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0VHJhY2luZ1NwYW4oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZW5kOiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgICAgIGlzUmVjb3JkaW5nOiAoKSA9PiBmYWxzZSxcbiAgICAgICAgcmVjb3JkRXhjZXB0aW9uOiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgICAgIHNldEF0dHJpYnV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm9vcFxuICAgICAgICB9LFxuICAgICAgICBzZXRTdGF0dXM6ICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgfSxcbiAgICAgICAgYWRkRXZlbnQ6ICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRJbnN0cnVtZW50ZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY3JlYXRlUmVxdWVzdEhlYWRlcnM6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2VUcmFjZXBhcmVudEhlYWRlcjogKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgc3RhcnRTcGFuOiAoX25hbWUsIHNwYW5PcHRpb25zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHNwYW46IGNyZWF0ZURlZmF1bHRUcmFjaW5nU3BhbigpLFxuICAgICAgICAgICAgICAgIHRyYWNpbmdDb250ZXh0OiBjcmVhdGVUcmFjaW5nQ29udGV4dCh7IHBhcmVudENvbnRleHQ6IHNwYW5PcHRpb25zLnRyYWNpbmdDb250ZXh0IH0pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgd2l0aENvbnRleHQoX2NvbnRleHQsIGNhbGxiYWNrLCAuLi5jYWxsYmFja0FyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayguLi5jYWxsYmFja0FyZ3MpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIEV4dGVuZHMgdGhlIEF6dXJlIFNESyB3aXRoIHN1cHBvcnQgZm9yIGEgZ2l2ZW4gaW5zdHJ1bWVudGVyIGltcGxlbWVudGF0aW9uLlxuICpcbiAqIEBwYXJhbSBpbnN0cnVtZW50ZXIgLSBUaGUgaW5zdHJ1bWVudGVyIGltcGxlbWVudGF0aW9uIHRvIHVzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUluc3RydW1lbnRlcihpbnN0cnVtZW50ZXIpIHtcbiAgICBzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbiA9IGluc3RydW1lbnRlcjtcbn1cbi8qKlxuICogR2V0cyB0aGUgY3VycmVudGx5IHNldCBpbnN0cnVtZW50ZXIsIGEgTm8tT3AgaW5zdHJ1bWVudGVyIGJ5IGRlZmF1bHQuXG4gKlxuICogQHJldHVybnMgVGhlIGN1cnJlbnRseSBzZXQgaW5zdHJ1bWVudGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnN0cnVtZW50ZXIoKSB7XG4gICAgaWYgKCFzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbikge1xuICAgICAgICBzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbiA9IGNyZWF0ZURlZmF1bHRJbnN0cnVtZW50ZXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXRlLmluc3RydW1lbnRlckltcGxlbWVudGF0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1bWVudGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/state.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/state.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNPLGNBQWMscURBQVE7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS10cmFjaW5nL2Rpc3QvZXNtL3N0YXRlLmpzP2FlOWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vLyBAdHMtZXhwZWN0LWVycm9yIFRoZSByZWNvbW1lbmRlZCBhcHByb2FjaCB0byBzaGFyaW5nIG1vZHVsZSBzdGF0ZSBiZXR3ZWVuIEVTTSBhbmQgQ0pTLlxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pc2FhY3MvdHNoeS9ibG9iL21haW4vUkVBRE1FLm1kI21vZHVsZS1sb2NhbC1zdGF0ZSBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi5cbmltcG9ydCB7IHN0YXRlIGFzIGNqc1N0YXRlIH0gZnJvbSBcIi4uL2NvbW1vbmpzL3N0YXRlLmpzXCI7XG4vKipcbiAqIERlZmluZXMgdGhlIHNoYXJlZCBzdGF0ZSBiZXR3ZWVuIENKUyBhbmQgRVNNIGJ5IHJlLWV4cG9ydGluZyB0aGUgQ0pTIHN0YXRlLlxuICovXG5leHBvcnQgY29uc3Qgc3RhdGUgPSBjanNTdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* binding */ createTracingClient)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingContext.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nfunction createTracingClient(options) {\n    const { namespace, packageName, packageVersion } = options;\n    function startSpan(name, operationOptions, spanOptions) {\n        const startSpanResult = (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().startSpan(name, {\n            ...spanOptions,\n            packageName: packageName,\n            packageVersion: packageVersion,\n            tracingContext: operationOptions?.tracingOptions?.tracingContext,\n        });\n        let tracingContext = startSpanResult.tracingContext;\n        const span = startSpanResult.span;\n        if (!tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace)) {\n            tracingContext = tracingContext.setValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace, namespace);\n        }\n        span.setAttribute(\"az.namespace\", tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace));\n        const updatedOptions = Object.assign({}, operationOptions, {\n            tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n        });\n        return {\n            span,\n            updatedOptions,\n        };\n    }\n    async function withSpan(name, operationOptions, callback, spanOptions) {\n        const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n        try {\n            const result = await withContext(updatedOptions.tracingOptions.tracingContext, () => Promise.resolve(callback(updatedOptions, span)));\n            span.setStatus({ status: \"success\" });\n            return result;\n        }\n        catch (err) {\n            span.setStatus({ status: \"error\", error: err });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    function withContext(context, callback, ...callbackArgs) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().withContext(context, callback, ...callbackArgs);\n    }\n    /**\n     * Parses a traceparent header value into a span identifier.\n     *\n     * @param traceparentHeader - The traceparent header to parse.\n     * @returns An implementation-specific identifier for the span.\n     */\n    function parseTraceparentHeader(traceparentHeader) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().parseTraceparentHeader(traceparentHeader);\n    }\n    /**\n     * Creates a set of request headers to propagate tracing information to a backend.\n     *\n     * @param tracingContext - The context containing the span to serialize.\n     * @returns The set of headers to add to a request.\n     */\n    function createRequestHeaders(tracingContext) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().createRequestHeaders(tracingContext);\n    }\n    return {\n        startSpan,\n        withSpan,\n        withContext,\n        parseTraceparentHeader,\n        createRequestHeaders,\n    };\n}\n//# sourceMappingURL=tracingClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDRztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvQkFBb0I7QUFDbEQ7QUFDTztBQUNQLFlBQVkseUNBQXlDO0FBQ3JEO0FBQ0EsZ0NBQWdDLGlFQUFlO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQ0FBcUMsZ0VBQWdCO0FBQ3JELHFEQUFxRCxnRUFBZ0I7QUFDckU7QUFDQSxrRUFBa0UsZ0VBQWdCO0FBQ2xGLCtDQUErQztBQUMvQyw4QkFBOEIscURBQXFEO0FBQ25GLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2QkFBNkI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ2xpZW50LmpzP2Q5NzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBnZXRJbnN0cnVtZW50ZXIgfSBmcm9tIFwiLi9pbnN0cnVtZW50ZXIuanNcIjtcbmltcG9ydCB7IGtub3duQ29udGV4dEtleXMgfSBmcm9tIFwiLi90cmFjaW5nQ29udGV4dC5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHRyYWNpbmcgY2xpZW50LlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgdHJhY2luZyBjbGllbnQuXG4gKiBAcmV0dXJucyAtIEFuIGluc3RhbmNlIG9mIHtAbGluayBUcmFjaW5nQ2xpZW50fS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYWNpbmdDbGllbnQob3B0aW9ucykge1xuICAgIGNvbnN0IHsgbmFtZXNwYWNlLCBwYWNrYWdlTmFtZSwgcGFja2FnZVZlcnNpb24gfSA9IG9wdGlvbnM7XG4gICAgZnVuY3Rpb24gc3RhcnRTcGFuKG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMsIHNwYW5PcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0U3BhblJlc3VsdCA9IGdldEluc3RydW1lbnRlcigpLnN0YXJ0U3BhbihuYW1lLCB7XG4gICAgICAgICAgICAuLi5zcGFuT3B0aW9ucyxcbiAgICAgICAgICAgIHBhY2thZ2VOYW1lOiBwYWNrYWdlTmFtZSxcbiAgICAgICAgICAgIHBhY2thZ2VWZXJzaW9uOiBwYWNrYWdlVmVyc2lvbixcbiAgICAgICAgICAgIHRyYWNpbmdDb250ZXh0OiBvcGVyYXRpb25PcHRpb25zPy50cmFjaW5nT3B0aW9ucz8udHJhY2luZ0NvbnRleHQsXG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgdHJhY2luZ0NvbnRleHQgPSBzdGFydFNwYW5SZXN1bHQudHJhY2luZ0NvbnRleHQ7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBzdGFydFNwYW5SZXN1bHQuc3BhbjtcbiAgICAgICAgaWYgKCF0cmFjaW5nQ29udGV4dC5nZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLm5hbWVzcGFjZSkpIHtcbiAgICAgICAgICAgIHRyYWNpbmdDb250ZXh0ID0gdHJhY2luZ0NvbnRleHQuc2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UsIG5hbWVzcGFjZSk7XG4gICAgICAgIH1cbiAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoXCJhei5uYW1lc3BhY2VcIiwgdHJhY2luZ0NvbnRleHQuZ2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UpKTtcbiAgICAgICAgY29uc3QgdXBkYXRlZE9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBvcGVyYXRpb25PcHRpb25zLCB7XG4gICAgICAgICAgICB0cmFjaW5nT3B0aW9uczogeyAuLi5vcGVyYXRpb25PcHRpb25zPy50cmFjaW5nT3B0aW9ucywgdHJhY2luZ0NvbnRleHQgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgdXBkYXRlZE9wdGlvbnMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGFzeW5jIGZ1bmN0aW9uIHdpdGhTcGFuKG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMsIGNhbGxiYWNrLCBzcGFuT3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHNwYW4sIHVwZGF0ZWRPcHRpb25zIH0gPSBzdGFydFNwYW4obmFtZSwgb3BlcmF0aW9uT3B0aW9ucywgc3Bhbk9wdGlvbnMpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgd2l0aENvbnRleHQodXBkYXRlZE9wdGlvbnMudHJhY2luZ09wdGlvbnMudHJhY2luZ0NvbnRleHQsICgpID0+IFByb21pc2UucmVzb2x2ZShjYWxsYmFjayh1cGRhdGVkT3B0aW9ucywgc3BhbikpKTtcbiAgICAgICAgICAgIHNwYW4uc2V0U3RhdHVzKHsgc3RhdHVzOiBcInN1Y2Nlc3NcIiB9KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoeyBzdGF0dXM6IFwiZXJyb3JcIiwgZXJyb3I6IGVyciB9KTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gd2l0aENvbnRleHQoY29udGV4dCwgY2FsbGJhY2ssIC4uLmNhbGxiYWNrQXJncykge1xuICAgICAgICByZXR1cm4gZ2V0SW5zdHJ1bWVudGVyKCkud2l0aENvbnRleHQoY29udGV4dCwgY2FsbGJhY2ssIC4uLmNhbGxiYWNrQXJncyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyBhIHRyYWNlcGFyZW50IGhlYWRlciB2YWx1ZSBpbnRvIGEgc3BhbiBpZGVudGlmaWVyLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRyYWNlcGFyZW50SGVhZGVyIC0gVGhlIHRyYWNlcGFyZW50IGhlYWRlciB0byBwYXJzZS5cbiAgICAgKiBAcmV0dXJucyBBbiBpbXBsZW1lbnRhdGlvbi1zcGVjaWZpYyBpZGVudGlmaWVyIGZvciB0aGUgc3Bhbi5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwYXJzZVRyYWNlcGFyZW50SGVhZGVyKHRyYWNlcGFyZW50SGVhZGVyKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnN0cnVtZW50ZXIoKS5wYXJzZVRyYWNlcGFyZW50SGVhZGVyKHRyYWNlcGFyZW50SGVhZGVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNldCBvZiByZXF1ZXN0IGhlYWRlcnMgdG8gcHJvcGFnYXRlIHRyYWNpbmcgaW5mb3JtYXRpb24gdG8gYSBiYWNrZW5kLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRyYWNpbmdDb250ZXh0IC0gVGhlIGNvbnRleHQgY29udGFpbmluZyB0aGUgc3BhbiB0byBzZXJpYWxpemUuXG4gICAgICogQHJldHVybnMgVGhlIHNldCBvZiBoZWFkZXJzIHRvIGFkZCB0byBhIHJlcXVlc3QuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlUmVxdWVzdEhlYWRlcnModHJhY2luZ0NvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIGdldEluc3RydW1lbnRlcigpLmNyZWF0ZVJlcXVlc3RIZWFkZXJzKHRyYWNpbmdDb250ZXh0KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhcnRTcGFuLFxuICAgICAgICB3aXRoU3BhbixcbiAgICAgICAgd2l0aENvbnRleHQsXG4gICAgICAgIHBhcnNlVHJhY2VwYXJlbnRIZWFkZXIsXG4gICAgICAgIGNyZWF0ZVJlcXVlc3RIZWFkZXJzLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingContext.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TracingContextImpl: () => (/* binding */ TracingContextImpl),\n/* harmony export */   createTracingContext: () => (/* binding */ createTracingContext),\n/* harmony export */   knownContextKeys: () => (/* binding */ knownContextKeys)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @internal */\nconst knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nfunction createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nclass TracingContextImpl {\n    _contextMap;\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n//# sourceMappingURL=tracingContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ08sMENBQTBDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXRyYWNpbmcvZGlzdC9lc20vdHJhY2luZ0NvbnRleHQuanM/OWU4YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjb25zdCBrbm93bkNvbnRleHRLZXlzID0ge1xuICAgIHNwYW46IFN5bWJvbC5mb3IoXCJAYXp1cmUvY29yZS10cmFjaW5nIHNwYW5cIiksXG4gICAgbmFtZXNwYWNlOiBTeW1ib2wuZm9yKFwiQGF6dXJlL2NvcmUtdHJhY2luZyBuYW1lc3BhY2VcIiksXG59O1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHtAbGluayBUcmFjaW5nQ29udGV4dH0gd2l0aCB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gQSBzZXQgb2Yga25vd24ga2V5cyB0aGF0IG1heSBiZSBzZXQgb24gdGhlIGNvbnRleHQuXG4gKiBAcmV0dXJucyBBIG5ldyB7QGxpbmsgVHJhY2luZ0NvbnRleHR9IHdpdGggdGhlIGdpdmVuIG9wdGlvbnMuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUcmFjaW5nQ29udGV4dChvcHRpb25zID0ge30pIHtcbiAgICBsZXQgY29udGV4dCA9IG5ldyBUcmFjaW5nQ29udGV4dEltcGwob3B0aW9ucy5wYXJlbnRDb250ZXh0KTtcbiAgICBpZiAob3B0aW9ucy5zcGFuKSB7XG4gICAgICAgIGNvbnRleHQgPSBjb250ZXh0LnNldFZhbHVlKGtub3duQ29udGV4dEtleXMuc3Bhbiwgb3B0aW9ucy5zcGFuKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMubmFtZXNwYWNlKSB7XG4gICAgICAgIGNvbnRleHQgPSBjb250ZXh0LnNldFZhbHVlKGtub3duQ29udGV4dEtleXMubmFtZXNwYWNlLCBvcHRpb25zLm5hbWVzcGFjZSk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufVxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNsYXNzIFRyYWNpbmdDb250ZXh0SW1wbCB7XG4gICAgX2NvbnRleHRNYXA7XG4gICAgY29uc3RydWN0b3IoaW5pdGlhbENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5fY29udGV4dE1hcCA9XG4gICAgICAgICAgICBpbml0aWFsQ29udGV4dCBpbnN0YW5jZW9mIFRyYWNpbmdDb250ZXh0SW1wbFxuICAgICAgICAgICAgICAgID8gbmV3IE1hcChpbml0aWFsQ29udGV4dC5fY29udGV4dE1hcClcbiAgICAgICAgICAgICAgICA6IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgc2V0VmFsdWUoa2V5LCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBuZXdDb250ZXh0ID0gbmV3IFRyYWNpbmdDb250ZXh0SW1wbCh0aGlzKTtcbiAgICAgICAgbmV3Q29udGV4dC5fY29udGV4dE1hcC5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXdDb250ZXh0O1xuICAgIH1cbiAgICBnZXRWYWx1ZShrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbnRleHRNYXAuZ2V0KGtleSk7XG4gICAgfVxuICAgIGRlbGV0ZVZhbHVlKGtleSkge1xuICAgICAgICBjb25zdCBuZXdDb250ZXh0ID0gbmV3IFRyYWNpbmdDb250ZXh0SW1wbCh0aGlzKTtcbiAgICAgICAgbmV3Q29udGV4dC5fY29udGV4dE1hcC5kZWxldGUoa2V5KTtcbiAgICAgICAgcmV0dXJuIG5ld0NvbnRleHQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2luZ0NvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/aborterUtils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelablePromiseRace: () => (/* binding */ cancelablePromiseRace)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nasync function cancelablePromiseRace(abortablePromiseBuilders, options) {\n    const aborter = new AbortController();\n    function abortHandler() {\n        aborter.abort();\n    }\n    options?.abortSignal?.addEventListener(\"abort\", abortHandler);\n    try {\n        return await Promise.race(abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })));\n    }\n    finally {\n        aborter.abort();\n        options?.abortSignal?.removeEventListener(\"abort\", abortHandler);\n    }\n}\n//# sourceMappingURL=aborterUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9hYm9ydGVyVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSw2QkFBNkI7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL2Fib3J0ZXJVdGlscy5qcz9kOGIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBwcm9taXNlLnJhY2UoKSB3cmFwcGVyIHRoYXQgYWJvcnRzIHJlc3Qgb2YgcHJvbWlzZXMgYXMgc29vbiBhcyB0aGUgZmlyc3QgcHJvbWlzZSBzZXR0bGVzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2FuY2VsYWJsZVByb21pc2VSYWNlKGFib3J0YWJsZVByb21pc2VCdWlsZGVycywgb3B0aW9ucykge1xuICAgIGNvbnN0IGFib3J0ZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgZnVuY3Rpb24gYWJvcnRIYW5kbGVyKCkge1xuICAgICAgICBhYm9ydGVyLmFib3J0KCk7XG4gICAgfVxuICAgIG9wdGlvbnM/LmFib3J0U2lnbmFsPy5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgYWJvcnRIYW5kbGVyKTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgUHJvbWlzZS5yYWNlKGFib3J0YWJsZVByb21pc2VCdWlsZGVycy5tYXAoKHApID0+IHAoeyBhYm9ydFNpZ25hbDogYWJvcnRlci5zaWduYWwgfSkpKTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGFib3J0ZXIuYWJvcnQoKTtcbiAgICAgICAgb3B0aW9ucz8uYWJvcnRTaWduYWw/LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBhYm9ydEhhbmRsZXIpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFib3J0ZXJVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAbortablePromise: () => (/* binding */ createAbortablePromise)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nfunction createAbortablePromise(buildPromise, options) {\n    const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n    return new Promise((resolve, reject) => {\n        function rejectOnAbort() {\n            reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n        }\n        function removeListeners() {\n            abortSignal?.removeEventListener(\"abort\", onAbort);\n        }\n        function onAbort() {\n            cleanupBeforeAbort?.();\n            removeListeners();\n            rejectOnAbort();\n        }\n        if (abortSignal?.aborted) {\n            return rejectOnAbort();\n        }\n        try {\n            buildPromise((x) => {\n                removeListeners();\n                resolve(x);\n            }, (x) => {\n                removeListeners();\n                reject(x);\n            });\n        }\n        catch (err) {\n            reject(err);\n        }\n        abortSignal?.addEventListener(\"abort\", onAbort);\n    });\n}\n//# sourceMappingURL=createAbortablePromise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQVU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL2NyZWF0ZUFib3J0YWJsZVByb21pc2UuanM/MGUwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXJcIjtcbi8qKlxuICogQ3JlYXRlcyBhbiBhYm9ydGFibGUgcHJvbWlzZS5cbiAqIEBwYXJhbSBidWlsZFByb21pc2UgLSBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgdGhlIHJlc29sdmUgYW5kIHJlamVjdCBmdW5jdGlvbnMgYXMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSBhYm9ydGFibGUgcHJvbWlzZS5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IGNhbiBiZSBhYm9ydGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQWJvcnRhYmxlUHJvbWlzZShidWlsZFByb21pc2UsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGNsZWFudXBCZWZvcmVBYm9ydCwgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgPz8ge307XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0T25BYm9ydCgpIHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgQWJvcnRFcnJvcihhYm9ydEVycm9yTXNnID8/IFwiVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC5cIikpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICAgICAgICAgIGFib3J0U2lnbmFsPy5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb25BYm9ydCgpIHtcbiAgICAgICAgICAgIGNsZWFudXBCZWZvcmVBYm9ydD8uKCk7XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlamVjdE9uQWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWJvcnRTaWduYWw/LmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGJ1aWxkUHJvbWlzZSgoeCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeCk7XG4gICAgICAgICAgICB9LCAoeCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHJlamVjdCh4KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGFib3J0U2lnbmFsPy5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/delay.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/delay.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRetryDelay: () => (/* binding */ calculateRetryDelay),\n/* harmony export */   delay: () => (/* binding */ delay)\n/* harmony export */ });\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/util */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/util/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nfunction delay(timeInMs, options) {\n    let token;\n    const { abortSignal, abortErrorMsg } = options ?? {};\n    return (0,_createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__.createAbortablePromise)((resolve) => {\n        token = setTimeout(resolve, timeInMs);\n    }, {\n        cleanupBeforeAbort: () => clearTimeout(token),\n        abortSignal,\n        abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    });\n}\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nfunction calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + (0,_typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_1__.getRandomIntegerInclusive)(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9kZWxheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNxRTtBQUNlO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLFdBQVcsa0ZBQXNCO0FBQ2pDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGtHQUF5QjtBQUN2RSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9lc20vZGVsYXkuanM/ZTI0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUFib3J0YWJsZVByb21pc2UgfSBmcm9tIFwiLi9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzXCI7XG5pbXBvcnQgeyBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlIH0gZnJvbSBcIkB0eXBlc3BlYy90cy1odHRwLXJ1bnRpbWUvaW50ZXJuYWwvdXRpbFwiO1xuY29uc3QgU3RhbmRhcmRBYm9ydE1lc3NhZ2UgPSBcIlRoZSBkZWxheSB3YXMgYWJvcnRlZC5cIjtcbi8qKlxuICogQSB3cmFwcGVyIGZvciBzZXRUaW1lb3V0IHRoYXQgcmVzb2x2ZXMgYSBwcm9taXNlIGFmdGVyIHRpbWVJbk1zIG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSB0aW1lSW5NcyAtIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGJlIGRlbGF5ZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciBkZWxheSAtIGN1cnJlbnRseSBhYm9ydCBvcHRpb25zXG4gKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgaXMgcmVzb2x2ZWQgYWZ0ZXIgdGltZUluTXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGF5KHRpbWVJbk1zLCBvcHRpb25zKSB7XG4gICAgbGV0IHRva2VuO1xuICAgIGNvbnN0IHsgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgPz8ge307XG4gICAgcmV0dXJuIGNyZWF0ZUFib3J0YWJsZVByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgdG9rZW4gPSBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVJbk1zKTtcbiAgICB9LCB7XG4gICAgICAgIGNsZWFudXBCZWZvcmVBYm9ydDogKCkgPT4gY2xlYXJUaW1lb3V0KHRva2VuKSxcbiAgICAgICAgYWJvcnRTaWduYWwsXG4gICAgICAgIGFib3J0RXJyb3JNc2c6IGFib3J0RXJyb3JNc2cgPz8gU3RhbmRhcmRBYm9ydE1lc3NhZ2UsXG4gICAgfSk7XG59XG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGRlbGF5IGludGVydmFsIGZvciByZXRyeSBhdHRlbXB0cyB1c2luZyBleHBvbmVudGlhbCBkZWxheSB3aXRoIGppdHRlci5cbiAqIEBwYXJhbSByZXRyeUF0dGVtcHQgLSBUaGUgY3VycmVudCByZXRyeSBhdHRlbXB0IG51bWJlci5cbiAqIEBwYXJhbSBjb25maWcgLSBUaGUgZXhwb25lbnRpYWwgcmV0cnkgY29uZmlndXJhdGlvbi5cbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBjYWxjdWxhdGVkIHJldHJ5IGRlbGF5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlUmV0cnlEZWxheShyZXRyeUF0dGVtcHQsIGNvbmZpZykge1xuICAgIC8vIEV4cG9uZW50aWFsbHkgaW5jcmVhc2UgdGhlIGRlbGF5IGVhY2ggdGltZVxuICAgIGNvbnN0IGV4cG9uZW50aWFsRGVsYXkgPSBjb25maWcucmV0cnlEZWxheUluTXMgKiBNYXRoLnBvdygyLCByZXRyeUF0dGVtcHQpO1xuICAgIC8vIERvbid0IGxldCB0aGUgZGVsYXkgZXhjZWVkIHRoZSBtYXhpbXVtXG4gICAgY29uc3QgY2xhbXBlZERlbGF5ID0gTWF0aC5taW4oY29uZmlnLm1heFJldHJ5RGVsYXlJbk1zLCBleHBvbmVudGlhbERlbGF5KTtcbiAgICAvLyBBbGxvdyB0aGUgZmluYWwgdmFsdWUgdG8gaGF2ZSBzb21lIFwiaml0dGVyXCIgKHdpdGhpbiA1MCUgb2YgdGhlIGRlbGF5IHNpemUpIHNvXG4gICAgLy8gdGhhdCByZXRyaWVzIGFjcm9zcyBtdWx0aXBsZSBjbGllbnRzIGRvbid0IG9jY3VyIHNpbXVsdGFuZW91c2x5LlxuICAgIGNvbnN0IHJldHJ5QWZ0ZXJJbk1zID0gY2xhbXBlZERlbGF5IC8gMiArIGdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUoMCwgY2xhbXBlZERlbGF5IC8gMik7XG4gICAgcmV0dXJuIHsgcmV0cnlBZnRlckluTXMgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGF5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/delay.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/error.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/error.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/util */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/util/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nfunction getErrorMessage(e) {\n    if ((0,_typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isError)(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLGdGQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFlBQVk7QUFDNUM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9lcnJvci5qcz9lZmZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaXNFcnJvciB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lL2ludGVybmFsL3V0aWxcIjtcbi8qKlxuICogR2l2ZW4gd2hhdCBpcyB0aG91Z2h0IHRvIGJlIGFuIGVycm9yIG9iamVjdCwgcmV0dXJuIHRoZSBtZXNzYWdlIGlmIHBvc3NpYmxlLlxuICogSWYgdGhlIG1lc3NhZ2UgaXMgbWlzc2luZywgcmV0dXJucyBhIHN0cmluZ2lmaWVkIHZlcnNpb24gb2YgdGhlIGlucHV0LlxuICogQHBhcmFtIGUgLSBTb21ldGhpbmcgdGhyb3duIGZyb20gYSB0cnkgYmxvY2tcbiAqIEByZXR1cm5zIFRoZSBlcnJvciBtZXNzYWdlIG9yIGEgc3RyaW5nIG9mIHRoZSBpbnB1dFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlKGUpIHtcbiAgICBpZiAoaXNFcnJvcihlKSkge1xuICAgICAgICByZXR1cm4gZS5tZXNzYWdlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IHN0cmluZ2lmaWVkO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBlID09PSBcIm9iamVjdFwiICYmIGUpIHtcbiAgICAgICAgICAgICAgICBzdHJpbmdpZmllZCA9IEpTT04uc3RyaW5naWZ5KGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RyaW5naWZpZWQgPSBTdHJpbmcoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgc3RyaW5naWZpZWQgPSBcIlt1bmFibGUgdG8gc3RyaW5naWZ5IGlucHV0XVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgVW5rbm93biBlcnJvciAke3N0cmluZ2lmaWVkfWA7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateRetryDelay: () => (/* binding */ calculateRetryDelay),\n/* harmony export */   cancelablePromiseRace: () => (/* reexport safe */ _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__.cancelablePromiseRace),\n/* harmony export */   computeSha256Hash: () => (/* binding */ computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* binding */ computeSha256Hmac),\n/* harmony export */   createAbortablePromise: () => (/* reexport safe */ _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__.createAbortablePromise),\n/* harmony export */   delay: () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_3__.delay),\n/* harmony export */   getErrorMessage: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage),\n/* harmony export */   getRandomIntegerInclusive: () => (/* binding */ getRandomIntegerInclusive),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isBun: () => (/* binding */ isBun),\n/* harmony export */   isDefined: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_5__.isDefined),\n/* harmony export */   isDeno: () => (/* binding */ isDeno),\n/* harmony export */   isError: () => (/* binding */ isError),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isNodeLike: () => (/* binding */ isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* binding */ isNodeRuntime),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isObjectWithProperties: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_5__.isObjectWithProperties),\n/* harmony export */   isReactNative: () => (/* binding */ isReactNative),\n/* harmony export */   isWebWorker: () => (/* binding */ isWebWorker),\n/* harmony export */   objectHasProperty: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_5__.objectHasProperty),\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID),\n/* harmony export */   stringToUint8Array: () => (/* binding */ stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* binding */ uint8ArrayToString)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/util */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/util/internal.js\");\n/* harmony import */ var _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aborterUtils.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\");\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delay.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/delay.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/error.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./typeGuards.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n *\n * @param retryAttempt - The current retry attempt number.\n *\n * @param config - The exponential retry configuration.\n *\n * @returns An object containing the calculated retry delay.\n */\nfunction calculateRetryDelay(retryAttempt, config) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.calculateRetryDelay(retryAttempt, config);\n}\n/**\n * Generates a SHA-256 hash.\n *\n * @param content - The data to be included in the hash.\n *\n * @param encoding - The textual encoding to use for the returned hash.\n */\nfunction computeSha256Hash(content, encoding) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.computeSha256Hash(content, encoding);\n}\n/**\n * Generates a SHA-256 HMAC signature.\n *\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n *\n * @param stringToSign - The data to be signed.\n *\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nfunction computeSha256Hmac(key, stringToSign, encoding) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.computeSha256Hmac(key, stringToSign, encoding);\n}\n/**\n * Returns a random integer value between a lower and upper bound, inclusive of both bounds. Note that this uses Math.random and isn't secure. If you need to use this for any kind of security purpose, find a better source of random.\n *\n * @param min - The smallest integer value allowed.\n *\n * @param max - The largest integer value allowed.\n */\nfunction getRandomIntegerInclusive(min, max) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.getRandomIntegerInclusive(min, max);\n}\n/**\n * Typeguard for an error object shape (has name and message)\n *\n * @param e - Something caught by a catch clause.\n */\nfunction isError(e) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isError(e);\n}\n/**\n * Helper to determine when an input is a generic JS object.\n *\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isObject(input);\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction randomUUID() {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.randomUUID();\n}\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\nconst isBrowser = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isBrowser;\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nconst isBun = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isBun;\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nconst isDeno = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n *\n * @deprecated\n *\n * Use `isNodeLike` instead.\n */\nconst isNode = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nconst isNodeLike = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nconst isNodeRuntime = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isNodeRuntime;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\nconst isReactNative = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isReactNative;\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nconst isWebWorker = _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.isWebWorker;\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nfunction uint8ArrayToString(bytes, format) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString(bytes, format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nfunction stringToUint8Array(value, format) {\n    return _typespec_ts_http_runtime_internal_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array(value, format);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NFO0FBQ1g7QUFDVztBQUNuQztBQUNVO0FBQzBDO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx3RkFBOEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxzRkFBNEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsc0ZBQTRCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsOEZBQW9DO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyw0RUFBa0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDZFQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsK0VBQXFCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0JBQWtCLDhFQUFvQjtBQUM3QztBQUNBO0FBQ0E7QUFDTyxjQUFjLDBFQUFnQjtBQUNyQztBQUNBO0FBQ0E7QUFDTyxlQUFlLDJFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGVBQWUsK0VBQXFCO0FBQzNDO0FBQ0E7QUFDQTtBQUNPLG1CQUFtQiwrRUFBcUI7QUFDL0M7QUFDQTtBQUNBO0FBQ08sc0JBQXNCLGtGQUF3QjtBQUNyRDtBQUNBO0FBQ0E7QUFDTyxzQkFBc0Isa0ZBQXdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQixnRkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHVGQUE2QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyx1RkFBNkI7QUFDeEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9lc20vaW5kZXguanM/NTJlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCAqIGFzIHRzcFJ1bnRpbWUgZnJvbSBcIkB0eXBlc3BlYy90cy1odHRwLXJ1bnRpbWUvaW50ZXJuYWwvdXRpbFwiO1xuZXhwb3J0IHsgY2FuY2VsYWJsZVByb21pc2VSYWNlLCB9IGZyb20gXCIuL2Fib3J0ZXJVdGlscy5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQWJvcnRhYmxlUHJvbWlzZSwgfSBmcm9tIFwiLi9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzXCI7XG5leHBvcnQgeyBkZWxheSB9IGZyb20gXCIuL2RlbGF5LmpzXCI7XG5leHBvcnQgeyBnZXRFcnJvck1lc3NhZ2UgfSBmcm9tIFwiLi9lcnJvci5qc1wiO1xuZXhwb3J0IHsgaXNEZWZpbmVkLCBpc09iamVjdFdpdGhQcm9wZXJ0aWVzLCBvYmplY3RIYXNQcm9wZXJ0eSB9IGZyb20gXCIuL3R5cGVHdWFyZHMuanNcIjtcbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgZGVsYXkgaW50ZXJ2YWwgZm9yIHJldHJ5IGF0dGVtcHRzIHVzaW5nIGV4cG9uZW50aWFsIGRlbGF5IHdpdGggaml0dGVyLlxuICpcbiAqIEBwYXJhbSByZXRyeUF0dGVtcHQgLSBUaGUgY3VycmVudCByZXRyeSBhdHRlbXB0IG51bWJlci5cbiAqXG4gKiBAcGFyYW0gY29uZmlnIC0gVGhlIGV4cG9uZW50aWFsIHJldHJ5IGNvbmZpZ3VyYXRpb24uXG4gKlxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGNhbGN1bGF0ZWQgcmV0cnkgZGVsYXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVSZXRyeURlbGF5KHJldHJ5QXR0ZW1wdCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRzcFJ1bnRpbWUuY2FsY3VsYXRlUmV0cnlEZWxheShyZXRyeUF0dGVtcHQsIGNvbmZpZyk7XG59XG4vKipcbiAqIEdlbmVyYXRlcyBhIFNIQS0yNTYgaGFzaC5cbiAqXG4gKiBAcGFyYW0gY29udGVudCAtIFRoZSBkYXRhIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBoYXNoLlxuICpcbiAqIEBwYXJhbSBlbmNvZGluZyAtIFRoZSB0ZXh0dWFsIGVuY29kaW5nIHRvIHVzZSBmb3IgdGhlIHJldHVybmVkIGhhc2guXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlU2hhMjU2SGFzaChjb250ZW50LCBlbmNvZGluZykge1xuICAgIHJldHVybiB0c3BSdW50aW1lLmNvbXB1dGVTaGEyNTZIYXNoKGNvbnRlbnQsIGVuY29kaW5nKTtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgU0hBLTI1NiBITUFDIHNpZ25hdHVyZS5cbiAqXG4gKiBAcGFyYW0ga2V5IC0gVGhlIEhNQUMga2V5IHJlcHJlc2VudGVkIGFzIGEgYmFzZTY0IHN0cmluZywgdXNlZCB0byBnZW5lcmF0ZSB0aGUgY3J5cHRvZ3JhcGhpYyBITUFDIGhhc2guXG4gKlxuICogQHBhcmFtIHN0cmluZ1RvU2lnbiAtIFRoZSBkYXRhIHRvIGJlIHNpZ25lZC5cbiAqXG4gKiBAcGFyYW0gZW5jb2RpbmcgLSBUaGUgdGV4dHVhbCBlbmNvZGluZyB0byB1c2UgZm9yIHRoZSByZXR1cm5lZCBITUFDIGRpZ2VzdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVTaGEyNTZIbWFjKGtleSwgc3RyaW5nVG9TaWduLCBlbmNvZGluZykge1xuICAgIHJldHVybiB0c3BSdW50aW1lLmNvbXB1dGVTaGEyNTZIbWFjKGtleSwgc3RyaW5nVG9TaWduLCBlbmNvZGluZyk7XG59XG4vKipcbiAqIFJldHVybnMgYSByYW5kb20gaW50ZWdlciB2YWx1ZSBiZXR3ZWVuIGEgbG93ZXIgYW5kIHVwcGVyIGJvdW5kLCBpbmNsdXNpdmUgb2YgYm90aCBib3VuZHMuIE5vdGUgdGhhdCB0aGlzIHVzZXMgTWF0aC5yYW5kb20gYW5kIGlzbid0IHNlY3VyZS4gSWYgeW91IG5lZWQgdG8gdXNlIHRoaXMgZm9yIGFueSBraW5kIG9mIHNlY3VyaXR5IHB1cnBvc2UsIGZpbmQgYSBiZXR0ZXIgc291cmNlIG9mIHJhbmRvbS5cbiAqXG4gKiBAcGFyYW0gbWluIC0gVGhlIHNtYWxsZXN0IGludGVnZXIgdmFsdWUgYWxsb3dlZC5cbiAqXG4gKiBAcGFyYW0gbWF4IC0gVGhlIGxhcmdlc3QgaW50ZWdlciB2YWx1ZSBhbGxvd2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tSW50ZWdlckluY2x1c2l2ZShtaW4sIG1heCkge1xuICAgIHJldHVybiB0c3BSdW50aW1lLmdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUobWluLCBtYXgpO1xufVxuLyoqXG4gKiBUeXBlZ3VhcmQgZm9yIGFuIGVycm9yIG9iamVjdCBzaGFwZSAoaGFzIG5hbWUgYW5kIG1lc3NhZ2UpXG4gKlxuICogQHBhcmFtIGUgLSBTb21ldGhpbmcgY2F1Z2h0IGJ5IGEgY2F0Y2ggY2xhdXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNFcnJvcihlKSB7XG4gICAgcmV0dXJuIHRzcFJ1bnRpbWUuaXNFcnJvcihlKTtcbn1cbi8qKlxuICogSGVscGVyIHRvIGRldGVybWluZSB3aGVuIGFuIGlucHV0IGlzIGEgZ2VuZXJpYyBKUyBvYmplY3QuXG4gKlxuICogQHJldHVybnMgdHJ1ZSB3aGVuIGlucHV0IGlzIGFuIG9iamVjdCB0eXBlIHRoYXQgaXMgbm90IG51bGwsIEFycmF5LCBSZWdFeHAsIG9yIERhdGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdChpbnB1dCkge1xuICAgIHJldHVybiB0c3BSdW50aW1lLmlzT2JqZWN0KGlucHV0KTtcbn1cbi8qKlxuICogR2VuZXJhdGVkIFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyXG4gKlxuICogQHJldHVybnMgUkZDNDEyMiB2NCBVVUlELlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tVVVJRCgpIHtcbiAgICByZXR1cm4gdHNwUnVudGltZS5yYW5kb21VVUlEKCk7XG59XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBhIFdlYiBCcm93c2VyLlxuICovXG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gdHNwUnVudGltZS5pc0Jyb3dzZXI7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBCdW4uc2guXG4gKi9cbmV4cG9ydCBjb25zdCBpc0J1biA9IHRzcFJ1bnRpbWUuaXNCdW47XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBEZW5vLlxuICovXG5leHBvcnQgY29uc3QgaXNEZW5vID0gdHNwUnVudGltZS5pc0Rlbm87XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBhIE5vZGUuanMgY29tcGF0aWJsZSBlbnZpcm9ubWVudC5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICpcbiAqIFVzZSBgaXNOb2RlTGlrZWAgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzTm9kZSA9IHRzcFJ1bnRpbWUuaXNOb2RlTGlrZTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgTm9kZS5qcyBjb21wYXRpYmxlIGVudmlyb25tZW50LlxuICovXG5leHBvcnQgY29uc3QgaXNOb2RlTGlrZSA9IHRzcFJ1bnRpbWUuaXNOb2RlTGlrZTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIE5vZGUuSlMuXG4gKi9cbmV4cG9ydCBjb25zdCBpc05vZGVSdW50aW1lID0gdHNwUnVudGltZS5pc05vZGVSdW50aW1lO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgaW4gUmVhY3QtTmF0aXZlLlxuICovXG5leHBvcnQgY29uc3QgaXNSZWFjdE5hdGl2ZSA9IHRzcFJ1bnRpbWUuaXNSZWFjdE5hdGl2ZTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgV2ViIFdvcmtlci5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzV2ViV29ya2VyID0gdHNwUnVudGltZS5pc1dlYldvcmtlcjtcbi8qKlxuICogVGhlIGhlbHBlciB0aGF0IHRyYW5zZm9ybXMgYnl0ZXMgd2l0aCBzcGVjaWZpYyBjaGFyYWN0ZXIgZW5jb2RpbmcgaW50byBzdHJpbmdcbiAqIEBwYXJhbSBieXRlcyAtIHRoZSB1aW50OGFycmF5IGJ5dGVzXG4gKiBAcGFyYW0gZm9ybWF0IC0gdGhlIGZvcm1hdCB3ZSB1c2UgdG8gZW5jb2RlIHRoZSBieXRlXG4gKiBAcmV0dXJucyBhIHN0cmluZyBvZiB0aGUgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVpbnQ4QXJyYXlUb1N0cmluZyhieXRlcywgZm9ybWF0KSB7XG4gICAgcmV0dXJuIHRzcFJ1bnRpbWUudWludDhBcnJheVRvU3RyaW5nKGJ5dGVzLCBmb3JtYXQpO1xufVxuLyoqXG4gKiBUaGUgaGVscGVyIHRoYXQgdHJhbnNmb3JtcyBzdHJpbmcgdG8gc3BlY2lmaWMgY2hhcmFjdGVyIGVuY29kZWQgYnl0ZXMgYXJyYXkuXG4gKiBAcGFyYW0gdmFsdWUgLSB0aGUgc3RyaW5nIHRvIGJlIGNvbnZlcnRlZFxuICogQHBhcmFtIGZvcm1hdCAtIHRoZSBmb3JtYXQgd2UgdXNlIHRvIGRlY29kZSB0aGUgdmFsdWVcbiAqIEByZXR1cm5zIGEgdWludDhhcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nVG9VaW50OEFycmF5KHZhbHVlLCBmb3JtYXQpIHtcbiAgICByZXR1cm4gdHNwUnVudGltZS5zdHJpbmdUb1VpbnQ4QXJyYXkodmFsdWUsIGZvcm1hdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/typeGuards.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/typeGuards.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined),\n/* harmony export */   isObjectWithProperties: () => (/* binding */ isObjectWithProperties),\n/* harmony export */   objectHasProperty: () => (/* binding */ objectHasProperty)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nfunction isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nfunction objectHasProperty(thing, property) {\n    return (isDefined(thing) && typeof thing === \"object\" && property in thing);\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS90eXBlR3VhcmRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS90eXBlR3VhcmRzLmpzP2NiY2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgc29tZXRoaW5nIGlzIGRlZmluZWQgb3Igbm90LlxuICogQHBhcmFtIHRoaW5nIC0gQW55dGhpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRGVmaW5lZCh0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgIT09IFwidW5kZWZpbmVkXCIgJiYgdGhpbmcgIT09IG51bGw7XG59XG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgdGhlIGlucHV0IGlzIGFuIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgcHJvcGVydGllcy5cbiAqIEBwYXJhbSB0aGluZyAtIEFueXRoaW5nLlxuICogQHBhcmFtIHByb3BlcnRpZXMgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IHNob3VsZCBhcHBlYXIgaW4gdGhlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0V2l0aFByb3BlcnRpZXModGhpbmcsIHByb3BlcnRpZXMpIHtcbiAgICBpZiAoIWlzRGVmaW5lZCh0aGluZykgfHwgdHlwZW9mIHRoaW5nICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBvZiBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmICghb2JqZWN0SGFzUHJvcGVydHkodGhpbmcsIHByb3BlcnR5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBIZWxwZXIgVHlwZUd1YXJkIHRoYXQgY2hlY2tzIGlmIHRoZSBpbnB1dCBpcyBhbiBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIHByb3BlcnR5LlxuICogQHBhcmFtIHRoaW5nIC0gQW55IG9iamVjdC5cbiAqIEBwYXJhbSBwcm9wZXJ0eSAtIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0aGF0IHNob3VsZCBhcHBlYXIgaW4gdGhlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdEhhc1Byb3BlcnR5KHRoaW5nLCBwcm9wZXJ0eSkge1xuICAgIHJldHVybiAoaXNEZWZpbmVkKHRoaW5nKSAmJiB0eXBlb2YgdGhpbmcgPT09IFwib2JqZWN0XCIgJiYgcHJvcGVydHkgaW4gdGhpbmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZUd1YXJkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedIterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/ChangeFeedIterator.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedIterator: () => (/* binding */ ChangeFeedIterator)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChangeFeedResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedResponse.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n/**\n * Provides iterator for change feed.\n *\n * Use `Items.changeFeed()` to get an instance of the iterator.\n */\nclass ChangeFeedIterator {\n    clientContext;\n    resourceId;\n    resourceLink;\n    partitionKey;\n    changeFeedOptions;\n    static IfNoneMatchAllHeaderValue = \"*\";\n    nextIfNoneMatch;\n    ifModifiedSince;\n    lastStatusCode;\n    isPartitionSpecified;\n    /**\n     * @internal\n     */\n    constructor(clientContext, resourceId, resourceLink, partitionKey, changeFeedOptions) {\n        this.clientContext = clientContext;\n        this.resourceId = resourceId;\n        this.resourceLink = resourceLink;\n        this.partitionKey = partitionKey;\n        this.changeFeedOptions = changeFeedOptions;\n        // partition key XOR partition key range id\n        const partitionKeyValid = partitionKey !== undefined;\n        this.isPartitionSpecified = partitionKeyValid;\n        let canUseStartFromBeginning = true;\n        if (changeFeedOptions.continuation) {\n            this.nextIfNoneMatch = changeFeedOptions.continuation;\n            canUseStartFromBeginning = false;\n        }\n        if (changeFeedOptions.startTime) {\n            // .toUTCString() is platform specific, but most platforms use RFC 1123.\n            // In ECMAScript 2018, this was standardized to RFC 1123.\n            // See for more info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n            this.ifModifiedSince = changeFeedOptions.startTime.toUTCString();\n            canUseStartFromBeginning = false;\n        }\n        if (canUseStartFromBeginning && !changeFeedOptions.startFromBeginning) {\n            this.nextIfNoneMatch = ChangeFeedIterator.IfNoneMatchAllHeaderValue;\n        }\n    }\n    /**\n     * Gets a value indicating whether there are potentially additional results that can be retrieved.\n     *\n     * Initially returns true. This value is set based on whether the last execution returned a continuation token.\n     *\n     * @returns Boolean value representing if whether there are potentially additional results that can be retrieved.\n     */\n    get hasMoreResults() {\n        return this.lastStatusCode !== _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.NotModified;\n    }\n    /**\n     * Gets an async iterator which will yield pages of results from Azure Cosmos DB.\n     */\n    async *getAsyncIterator() {\n        do {\n            const result = await this.fetchNext();\n            if (result.count > 0) {\n                yield result;\n            }\n        } while (this.hasMoreResults);\n    }\n    /**\n     * Read feed and retrieves the next page of results in Azure Cosmos DB.\n     */\n    async fetchNext() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const response = await this.getFeedResponse(diagnosticNode);\n            this.lastStatusCode = response.statusCode;\n            this.nextIfNoneMatch = response.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ETag];\n            return response;\n        }, this.clientContext);\n    }\n    async getFeedResponse(diagnosticNode) {\n        if (!this.isPartitionSpecified) {\n            throw new Error(\"Container is partitioned, but no partition key or partition key range id was specified.\");\n        }\n        const feedOptions = { initialHeaders: {}, useIncrementalFeed: true };\n        if (typeof this.changeFeedOptions.maxItemCount === \"number\") {\n            feedOptions.maxItemCount = this.changeFeedOptions.maxItemCount;\n        }\n        if (this.changeFeedOptions.sessionToken) {\n            feedOptions.sessionToken = this.changeFeedOptions.sessionToken;\n        }\n        if (this.nextIfNoneMatch) {\n            feedOptions.accessCondition = {\n                type: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfNoneMatch,\n                condition: this.nextIfNoneMatch,\n            };\n        }\n        if (this.ifModifiedSince) {\n            feedOptions.initialHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfModifiedSince] = this.ifModifiedSince;\n        }\n        const response = await this.clientContext.queryFeed({\n            path: this.resourceLink,\n            resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n            resourceId: this.resourceId,\n            resultFn: (result) => (result ? result.Documents : []),\n            query: undefined,\n            options: feedOptions,\n            partitionKey: this.partitionKey,\n            diagnosticNode: diagnosticNode,\n        }); // TODO: some funky issues with query feed. Probably need to change it up.\n        return new _ChangeFeedResponse_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedResponse(response.result, response.result ? response.result.length : 0, response.code, response.headers, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n    }\n}\n//# sourceMappingURL=ChangeFeedIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9DaGFuZ2VGZWVkSXRlcmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2RDtBQUNZO0FBQ1c7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMseURBQVc7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0VBQWU7QUFDOUI7QUFDQTtBQUNBLG9EQUFvRCx1REFBUztBQUM3RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVEQUFTO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwREFBWTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLEdBQUc7QUFDWixtQkFBbUIsc0VBQWtCLGlHQUFpRyxnRkFBeUI7QUFDL0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9DaGFuZ2VGZWVkSXRlcmF0b3IuanM/NDU4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VGZWVkUmVzcG9uc2UgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkUmVzcG9uc2UuanNcIjtcbmltcG9ydCB7IENvbnN0YW50cywgUmVzb3VyY2VUeXBlLCBTdGF0dXNDb2RlcyB9IGZyb20gXCIuL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcywgd2l0aERpYWdub3N0aWNzIH0gZnJvbSBcIi4vdXRpbHMvZGlhZ25vc3RpY3MuanNcIjtcbi8qKlxuICogUHJvdmlkZXMgaXRlcmF0b3IgZm9yIGNoYW5nZSBmZWVkLlxuICpcbiAqIFVzZSBgSXRlbXMuY2hhbmdlRmVlZCgpYCB0byBnZXQgYW4gaW5zdGFuY2Ugb2YgdGhlIGl0ZXJhdG9yLlxuICovXG5leHBvcnQgY2xhc3MgQ2hhbmdlRmVlZEl0ZXJhdG9yIHtcbiAgICBjbGllbnRDb250ZXh0O1xuICAgIHJlc291cmNlSWQ7XG4gICAgcmVzb3VyY2VMaW5rO1xuICAgIHBhcnRpdGlvbktleTtcbiAgICBjaGFuZ2VGZWVkT3B0aW9ucztcbiAgICBzdGF0aWMgSWZOb25lTWF0Y2hBbGxIZWFkZXJWYWx1ZSA9IFwiKlwiO1xuICAgIG5leHRJZk5vbmVNYXRjaDtcbiAgICBpZk1vZGlmaWVkU2luY2U7XG4gICAgbGFzdFN0YXR1c0NvZGU7XG4gICAgaXNQYXJ0aXRpb25TcGVjaWZpZWQ7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2xpZW50Q29udGV4dCwgcmVzb3VyY2VJZCwgcmVzb3VyY2VMaW5rLCBwYXJ0aXRpb25LZXksIGNoYW5nZUZlZWRPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgICAgIHRoaXMucmVzb3VyY2VJZCA9IHJlc291cmNlSWQ7XG4gICAgICAgIHRoaXMucmVzb3VyY2VMaW5rID0gcmVzb3VyY2VMaW5rO1xuICAgICAgICB0aGlzLnBhcnRpdGlvbktleSA9IHBhcnRpdGlvbktleTtcbiAgICAgICAgdGhpcy5jaGFuZ2VGZWVkT3B0aW9ucyA9IGNoYW5nZUZlZWRPcHRpb25zO1xuICAgICAgICAvLyBwYXJ0aXRpb24ga2V5IFhPUiBwYXJ0aXRpb24ga2V5IHJhbmdlIGlkXG4gICAgICAgIGNvbnN0IHBhcnRpdGlvbktleVZhbGlkID0gcGFydGl0aW9uS2V5ICE9PSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuaXNQYXJ0aXRpb25TcGVjaWZpZWQgPSBwYXJ0aXRpb25LZXlWYWxpZDtcbiAgICAgICAgbGV0IGNhblVzZVN0YXJ0RnJvbUJlZ2lubmluZyA9IHRydWU7XG4gICAgICAgIGlmIChjaGFuZ2VGZWVkT3B0aW9ucy5jb250aW51YXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMubmV4dElmTm9uZU1hdGNoID0gY2hhbmdlRmVlZE9wdGlvbnMuY29udGludWF0aW9uO1xuICAgICAgICAgICAgY2FuVXNlU3RhcnRGcm9tQmVnaW5uaW5nID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYW5nZUZlZWRPcHRpb25zLnN0YXJ0VGltZSkge1xuICAgICAgICAgICAgLy8gLnRvVVRDU3RyaW5nKCkgaXMgcGxhdGZvcm0gc3BlY2lmaWMsIGJ1dCBtb3N0IHBsYXRmb3JtcyB1c2UgUkZDIDExMjMuXG4gICAgICAgICAgICAvLyBJbiBFQ01BU2NyaXB0IDIwMTgsIHRoaXMgd2FzIHN0YW5kYXJkaXplZCB0byBSRkMgMTEyMy5cbiAgICAgICAgICAgIC8vIFNlZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9EYXRlL3RvVVRDU3RyaW5nXG4gICAgICAgICAgICB0aGlzLmlmTW9kaWZpZWRTaW5jZSA9IGNoYW5nZUZlZWRPcHRpb25zLnN0YXJ0VGltZS50b1VUQ1N0cmluZygpO1xuICAgICAgICAgICAgY2FuVXNlU3RhcnRGcm9tQmVnaW5uaW5nID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhblVzZVN0YXJ0RnJvbUJlZ2lubmluZyAmJiAhY2hhbmdlRmVlZE9wdGlvbnMuc3RhcnRGcm9tQmVnaW5uaW5nKSB7XG4gICAgICAgICAgICB0aGlzLm5leHRJZk5vbmVNYXRjaCA9IENoYW5nZUZlZWRJdGVyYXRvci5JZk5vbmVNYXRjaEFsbEhlYWRlclZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB2YWx1ZSBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlcmUgYXJlIHBvdGVudGlhbGx5IGFkZGl0aW9uYWwgcmVzdWx0cyB0aGF0IGNhbiBiZSByZXRyaWV2ZWQuXG4gICAgICpcbiAgICAgKiBJbml0aWFsbHkgcmV0dXJucyB0cnVlLiBUaGlzIHZhbHVlIGlzIHNldCBiYXNlZCBvbiB3aGV0aGVyIHRoZSBsYXN0IGV4ZWN1dGlvbiByZXR1cm5lZCBhIGNvbnRpbnVhdGlvbiB0b2tlbi5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEJvb2xlYW4gdmFsdWUgcmVwcmVzZW50aW5nIGlmIHdoZXRoZXIgdGhlcmUgYXJlIHBvdGVudGlhbGx5IGFkZGl0aW9uYWwgcmVzdWx0cyB0aGF0IGNhbiBiZSByZXRyaWV2ZWQuXG4gICAgICovXG4gICAgZ2V0IGhhc01vcmVSZXN1bHRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sYXN0U3RhdHVzQ29kZSAhPT0gU3RhdHVzQ29kZXMuTm90TW9kaWZpZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYW4gYXN5bmMgaXRlcmF0b3Igd2hpY2ggd2lsbCB5aWVsZCBwYWdlcyBvZiByZXN1bHRzIGZyb20gQXp1cmUgQ29zbW9zIERCLlxuICAgICAqL1xuICAgIGFzeW5jICpnZXRBc3luY0l0ZXJhdG9yKCkge1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmZldGNoTmV4dCgpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5jb3VudCA+IDApIHtcbiAgICAgICAgICAgICAgICB5aWVsZCByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gd2hpbGUgKHRoaXMuaGFzTW9yZVJlc3VsdHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGZlZWQgYW5kIHJldHJpZXZlcyB0aGUgbmV4dCBwYWdlIG9mIHJlc3VsdHMgaW4gQXp1cmUgQ29zbW9zIERCLlxuICAgICAqL1xuICAgIGFzeW5jIGZldGNoTmV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhEaWFnbm9zdGljcyhhc3luYyAoZGlhZ25vc3RpY05vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5nZXRGZWVkUmVzcG9uc2UoZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICAgICAgdGhpcy5sYXN0U3RhdHVzQ29kZSA9IHJlc3BvbnNlLnN0YXR1c0NvZGU7XG4gICAgICAgICAgICB0aGlzLm5leHRJZk5vbmVNYXRjaCA9IHJlc3BvbnNlLmhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkVUYWddO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbiAgICBhc3luYyBnZXRGZWVkUmVzcG9uc2UoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzUGFydGl0aW9uU3BlY2lmaWVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb250YWluZXIgaXMgcGFydGl0aW9uZWQsIGJ1dCBubyBwYXJ0aXRpb24ga2V5IG9yIHBhcnRpdGlvbiBrZXkgcmFuZ2UgaWQgd2FzIHNwZWNpZmllZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmVlZE9wdGlvbnMgPSB7IGluaXRpYWxIZWFkZXJzOiB7fSwgdXNlSW5jcmVtZW50YWxGZWVkOiB0cnVlIH07XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5jaGFuZ2VGZWVkT3B0aW9ucy5tYXhJdGVtQ291bnQgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIGZlZWRPcHRpb25zLm1heEl0ZW1Db3VudCA9IHRoaXMuY2hhbmdlRmVlZE9wdGlvbnMubWF4SXRlbUNvdW50O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNoYW5nZUZlZWRPcHRpb25zLnNlc3Npb25Ub2tlbikge1xuICAgICAgICAgICAgZmVlZE9wdGlvbnMuc2Vzc2lvblRva2VuID0gdGhpcy5jaGFuZ2VGZWVkT3B0aW9ucy5zZXNzaW9uVG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubmV4dElmTm9uZU1hdGNoKSB7XG4gICAgICAgICAgICBmZWVkT3B0aW9ucy5hY2Nlc3NDb25kaXRpb24gPSB7XG4gICAgICAgICAgICAgICAgdHlwZTogQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklmTm9uZU1hdGNoLFxuICAgICAgICAgICAgICAgIGNvbmRpdGlvbjogdGhpcy5uZXh0SWZOb25lTWF0Y2gsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmlmTW9kaWZpZWRTaW5jZSkge1xuICAgICAgICAgICAgZmVlZE9wdGlvbnMuaW5pdGlhbEhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklmTW9kaWZpZWRTaW5jZV0gPSB0aGlzLmlmTW9kaWZpZWRTaW5jZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50Q29udGV4dC5xdWVyeUZlZWQoe1xuICAgICAgICAgICAgcGF0aDogdGhpcy5yZXNvdXJjZUxpbmssXG4gICAgICAgICAgICByZXNvdXJjZVR5cGU6IFJlc291cmNlVHlwZS5pdGVtLFxuICAgICAgICAgICAgcmVzb3VyY2VJZDogdGhpcy5yZXNvdXJjZUlkLFxuICAgICAgICAgICAgcmVzdWx0Rm46IChyZXN1bHQpID0+IChyZXN1bHQgPyByZXN1bHQuRG9jdW1lbnRzIDogW10pLFxuICAgICAgICAgICAgcXVlcnk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG9wdGlvbnM6IGZlZWRPcHRpb25zLFxuICAgICAgICAgICAgcGFydGl0aW9uS2V5OiB0aGlzLnBhcnRpdGlvbktleSxcbiAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlOiBkaWFnbm9zdGljTm9kZSxcbiAgICAgICAgfSk7IC8vIFRPRE86IHNvbWUgZnVua3kgaXNzdWVzIHdpdGggcXVlcnkgZmVlZC4gUHJvYmFibHkgbmVlZCB0byBjaGFuZ2UgaXQgdXAuXG4gICAgICAgIHJldHVybiBuZXcgQ2hhbmdlRmVlZFJlc3BvbnNlKHJlc3BvbnNlLnJlc3VsdCwgcmVzcG9uc2UucmVzdWx0ID8gcmVzcG9uc2UucmVzdWx0Lmxlbmd0aCA6IDAsIHJlc3BvbnNlLmNvZGUsIHJlc3BvbnNlLmhlYWRlcnMsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZEl0ZXJhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedResponse.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/ChangeFeedResponse.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedResponse: () => (/* binding */ ChangeFeedResponse)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n\n/**\n * A single response page from the Azure Cosmos DB Change Feed\n */\nclass ChangeFeedResponse {\n    result;\n    count;\n    statusCode;\n    diagnostics;\n    /**\n     * @internal\n     */\n    constructor(\n    /**\n     * Gets the items returned in the response from Azure Cosmos DB\n     */\n    result, \n    /**\n     * Gets the number of items returned in the response from Azure Cosmos DB\n     */\n    count, \n    /**\n     * Gets the status code of the response from Azure Cosmos DB\n     */\n    statusCode, headers, diagnostics) {\n        this.result = result;\n        this.count = count;\n        this.statusCode = statusCode;\n        this.diagnostics = diagnostics;\n        this.headers = Object.freeze(headers);\n    }\n    /**\n     * Gets the request charge for this request from the Azure Cosmos DB service.\n     */\n    get requestCharge() {\n        const rus = this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge];\n        return rus ? parseInt(rus, 10) : null;\n    }\n    /**\n     * Gets the activity ID for the request from the Azure Cosmos DB service.\n     */\n    get activityId() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId];\n    }\n    /**\n     * Gets the continuation token to be used for continuing enumeration of the Azure Cosmos DB service.\n     *\n     * This is equivalent to the `etag` property.\n     */\n    get continuation() {\n        return this.etag;\n    }\n    /**\n     * Gets the session token for use in session consistency reads from the Azure Cosmos DB service.\n     */\n    get sessionToken() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.SessionToken];\n    }\n    /**\n     * Gets the entity tag associated with last transaction in the Azure Cosmos DB service,\n     * which can be used as If-Non-Match Access condition for ReadFeed REST request or\n     * `continuation` property of `ChangeFeedOptions` parameter for\n     * `Items.changeFeed()`\n     * to get feed changes since the transaction specified by this entity tag.\n     *\n     * This is equivalent to the `continuation` property.\n     */\n    get etag() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ETag];\n    }\n    /**\n     * Response headers of the response from Azure Cosmos DB\n     */\n    headers;\n}\n//# sourceMappingURL=ChangeFeedResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9DaGFuZ2VGZWVkUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdURBQVM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVEQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVEQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdURBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL0NoYW5nZUZlZWRSZXNwb25zZS5qcz9kYzg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gXCIuL2NvbW1vbi9pbmRleC5qc1wiO1xuLyoqXG4gKiBBIHNpbmdsZSByZXNwb25zZSBwYWdlIGZyb20gdGhlIEF6dXJlIENvc21vcyBEQiBDaGFuZ2UgRmVlZFxuICovXG5leHBvcnQgY2xhc3MgQ2hhbmdlRmVlZFJlc3BvbnNlIHtcbiAgICByZXN1bHQ7XG4gICAgY291bnQ7XG4gICAgc3RhdHVzQ29kZTtcbiAgICBkaWFnbm9zdGljcztcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBpdGVtcyByZXR1cm5lZCBpbiB0aGUgcmVzcG9uc2UgZnJvbSBBenVyZSBDb3Ntb3MgREJcbiAgICAgKi9cbiAgICByZXN1bHQsIFxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIG51bWJlciBvZiBpdGVtcyByZXR1cm5lZCBpbiB0aGUgcmVzcG9uc2UgZnJvbSBBenVyZSBDb3Ntb3MgREJcbiAgICAgKi9cbiAgICBjb3VudCwgXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgc3RhdHVzIGNvZGUgb2YgdGhlIHJlc3BvbnNlIGZyb20gQXp1cmUgQ29zbW9zIERCXG4gICAgICovXG4gICAgc3RhdHVzQ29kZSwgaGVhZGVycywgZGlhZ25vc3RpY3MpIHtcbiAgICAgICAgdGhpcy5yZXN1bHQgPSByZXN1bHQ7XG4gICAgICAgIHRoaXMuY291bnQgPSBjb3VudDtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcbiAgICAgICAgdGhpcy5kaWFnbm9zdGljcyA9IGRpYWdub3N0aWNzO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBPYmplY3QuZnJlZXplKGhlYWRlcnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSByZXF1ZXN0IGNoYXJnZSBmb3IgdGhpcyByZXF1ZXN0IGZyb20gdGhlIEF6dXJlIENvc21vcyBEQiBzZXJ2aWNlLlxuICAgICAqL1xuICAgIGdldCByZXF1ZXN0Q2hhcmdlKCkge1xuICAgICAgICBjb25zdCBydXMgPSB0aGlzLmhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlJlcXVlc3RDaGFyZ2VdO1xuICAgICAgICByZXR1cm4gcnVzID8gcGFyc2VJbnQocnVzLCAxMCkgOiBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhY3Rpdml0eSBJRCBmb3IgdGhlIHJlcXVlc3QgZnJvbSB0aGUgQXp1cmUgQ29zbW9zIERCIHNlcnZpY2UuXG4gICAgICovXG4gICAgZ2V0IGFjdGl2aXR5SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkFjdGl2aXR5SWRdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBjb250aW51YXRpb24gdG9rZW4gdG8gYmUgdXNlZCBmb3IgY29udGludWluZyBlbnVtZXJhdGlvbiBvZiB0aGUgQXp1cmUgQ29zbW9zIERCIHNlcnZpY2UuXG4gICAgICpcbiAgICAgKiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGBldGFnYCBwcm9wZXJ0eS5cbiAgICAgKi9cbiAgICBnZXQgY29udGludWF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ldGFnO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBzZXNzaW9uIHRva2VuIGZvciB1c2UgaW4gc2Vzc2lvbiBjb25zaXN0ZW5jeSByZWFkcyBmcm9tIHRoZSBBenVyZSBDb3Ntb3MgREIgc2VydmljZS5cbiAgICAgKi9cbiAgICBnZXQgc2Vzc2lvblRva2VuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5TZXNzaW9uVG9rZW5dO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBlbnRpdHkgdGFnIGFzc29jaWF0ZWQgd2l0aCBsYXN0IHRyYW5zYWN0aW9uIGluIHRoZSBBenVyZSBDb3Ntb3MgREIgc2VydmljZSxcbiAgICAgKiB3aGljaCBjYW4gYmUgdXNlZCBhcyBJZi1Ob24tTWF0Y2ggQWNjZXNzIGNvbmRpdGlvbiBmb3IgUmVhZEZlZWQgUkVTVCByZXF1ZXN0IG9yXG4gICAgICogYGNvbnRpbnVhdGlvbmAgcHJvcGVydHkgb2YgYENoYW5nZUZlZWRPcHRpb25zYCBwYXJhbWV0ZXIgZm9yXG4gICAgICogYEl0ZW1zLmNoYW5nZUZlZWQoKWBcbiAgICAgKiB0byBnZXQgZmVlZCBjaGFuZ2VzIHNpbmNlIHRoZSB0cmFuc2FjdGlvbiBzcGVjaWZpZWQgYnkgdGhpcyBlbnRpdHkgdGFnLlxuICAgICAqXG4gICAgICogVGhpcyBpcyBlcXVpdmFsZW50IHRvIHRoZSBgY29udGludWF0aW9uYCBwcm9wZXJ0eS5cbiAgICAgKi9cbiAgICBnZXQgZXRhZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuRVRhZ107XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc3BvbnNlIGhlYWRlcnMgb2YgdGhlIHJlc3BvbnNlIGZyb20gQXp1cmUgQ29zbW9zIERCXG4gICAgICovXG4gICAgaGVhZGVycztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNoYW5nZUZlZWRSZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/ClientContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/ClientContext.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientContext: () => (/* binding */ ClientContext)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _common_helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./plugins/Plugin.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/plugins/Plugin.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _request_request_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./request/request.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/request.js\");\n/* harmony import */ var _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./request/RequestHandler.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/RequestHandler.js\");\n/* harmony import */ var _session_sessionContainer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session/sessionContainer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/session/sessionContainer.js\");\n/* harmony import */ var _utils_checkURL_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/checkURL.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js\");\n/* harmony import */ var _utils_supportedQueryFeaturesBuilder_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/supportedQueryFeaturesBuilder.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/supportedQueryFeaturesBuilder.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _diagnostics_DiagnosticWriter_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./diagnostics/DiagnosticWriter.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticWriter.js\");\n/* harmony import */ var _diagnostics_DiagnosticFormatter_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diagnostics/DiagnosticFormatter.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticFormatter.js\");\n/* harmony import */ var _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diagnostics/CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _common_platform_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./common/platform.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/platform.js\");\n/* harmony import */ var _routing_partitionKeyRangeCache_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./routing/partitionKeyRangeCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/partitionKeyRangeCache.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_12__.createClientLogger)(\"ClientContext\");\nconst QueryJsonContentType = \"application/query+json\";\nconst HttpHeaders = _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders;\n/**\n * @hidden\n */\nclass ClientContext {\n    cosmosClientOptions;\n    globalEndpointManager;\n    clientConfig;\n    diagnosticLevel;\n    globalPartitionEndpointManager;\n    sessionContainer;\n    connectionPolicy;\n    pipeline;\n    diagnosticWriter;\n    diagnosticFormatter;\n    partitionKeyDefinitionCache; // TODO: PartitionKeyDefinitionCache\n    /** @internal */\n    partitionKeyRangeCache;\n    /** boolean flag to support operations with client-side encryption */\n    enableEncryption = false;\n    constructor(cosmosClientOptions, globalEndpointManager, clientConfig, diagnosticLevel, globalPartitionEndpointManager) {\n        this.cosmosClientOptions = cosmosClientOptions;\n        this.globalEndpointManager = globalEndpointManager;\n        this.clientConfig = clientConfig;\n        this.diagnosticLevel = diagnosticLevel;\n        this.globalPartitionEndpointManager = globalPartitionEndpointManager;\n        if (cosmosClientOptions.clientEncryptionOptions) {\n            this.enableEncryption = true;\n        }\n        this.connectionPolicy = cosmosClientOptions.connectionPolicy;\n        this.sessionContainer = new _session_sessionContainer_js__WEBPACK_IMPORTED_MODULE_9__.SessionContainer();\n        this.partitionKeyDefinitionCache = {};\n        this.pipeline = null;\n        if (cosmosClientOptions.aadCredentials) {\n            this.pipeline = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline)();\n            const hrefEndpoint = (0,_utils_checkURL_js__WEBPACK_IMPORTED_MODULE_10__.sanitizeEndpoint)(cosmosClientOptions.endpoint);\n            const scope = `${hrefEndpoint}/.default`;\n            this.pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.bearerTokenAuthenticationPolicy)({\n                credential: cosmosClientOptions.aadCredentials,\n                scopes: scope,\n                challengeCallbacks: {\n                    async authorizeRequest({ request, getAccessToken }) {\n                        const tokenResponse = await getAccessToken([scope], {});\n                        const AUTH_PREFIX = `type=aad&ver=1.0&sig=`;\n                        const authorizationToken = `${AUTH_PREFIX}${tokenResponse.token}`;\n                        request.headers.set(\"Authorization\", authorizationToken);\n                    },\n                },\n            }));\n        }\n        this.initializeDiagnosticSettings(diagnosticLevel);\n        this.partitionKeyRangeCache = new _routing_partitionKeyRangeCache_js__WEBPACK_IMPORTED_MODULE_18__.PartitionKeyRangeCache(this);\n    }\n    /** @hidden */\n    async read({ path, resourceType, resourceId, options = {}, partitionKey, diagnosticNode, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.get,\n                path,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read,\n                resourceId,\n                options,\n                resourceType,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read,\n                resourceType,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            if (resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.clientencryptionkey) {\n                request.headers[HttpHeaders.AllowCachedReadsHeader] = true;\n                if (options.databaseRid) {\n                    request.headers[HttpHeaders.DatabaseRidHeader] = options.databaseRid;\n                }\n            }\n            this.applySessionToken(request);\n            // read will use ReadEndpoint since it uses GET operation\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read, response.headers);\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    async queryFeed({ path, resourceType, resourceId, resultFn, query, options, diagnosticNode, partitionKeyRangeId, partitionKey, startEpk, endEpk, correlatedActivityId, }) {\n        // Query operations will use ReadEndpoint even though it uses\n        // GET(for queryFeed) and POST(for regular query operations)\n        const request = {\n            ...this.getContextDerivedPropsForRequestCreation(),\n            method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.get,\n            path,\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Query,\n            partitionKeyRangeId,\n            resourceId,\n            resourceType,\n            options,\n            body: query,\n            partitionKey,\n        };\n        diagnosticNode.addData({\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Query,\n            resourceType,\n        });\n        const requestId = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_16__.randomUUID)();\n        if (query !== undefined) {\n            request.method = _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post;\n        }\n        request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n        request.headers = await this.buildHeaders(request);\n        if (startEpk !== undefined && endEpk !== undefined) {\n            request.headers[HttpHeaders.StartEpk] = startEpk;\n            request.headers[HttpHeaders.EndEpk] = endEpk;\n            request.headers[HttpHeaders.ReadFeedKeyType] = \"EffectivePartitionKeyRange\";\n        }\n        if (query !== undefined) {\n            if (correlatedActivityId !== undefined) {\n                request.headers[HttpHeaders.CorrelatedActivityId] = correlatedActivityId;\n            }\n            request.headers[HttpHeaders.IsQuery] = \"true\";\n            request.headers[HttpHeaders.ContentType] = QueryJsonContentType;\n            if (typeof query === \"string\") {\n                request.body = { query }; // Converts query text to query object.\n            }\n        }\n        this.applySessionToken(request);\n        logger.info(\"query \" +\n            requestId +\n            \" started\" +\n            (request.partitionKeyRangeId ? \" pkrid: \" + request.partitionKeyRangeId : \"\"));\n        logger.verbose(request);\n        const start = Date.now();\n        const response = await _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request(request, diagnosticNode);\n        logger.info(\"query \" + requestId + \" finished - \" + (Date.now() - start) + \"ms\");\n        this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Query, response.headers);\n        return this.processQueryFeedResponse(response, !!query, resultFn);\n    }\n    async getQueryPlan(path, resourceType, resourceId, query, options = {}, diagnosticNode, correlatedActivityId) {\n        const request = {\n            ...this.getContextDerivedPropsForRequestCreation(),\n            method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post,\n            path,\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read,\n            resourceId,\n            resourceType,\n            options,\n            body: query,\n        };\n        diagnosticNode.addData({\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read,\n            resourceType,\n        });\n        request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n        request.headers = await this.buildHeaders(request);\n        if (correlatedActivityId !== undefined) {\n            request.headers[HttpHeaders.CorrelatedActivityId] = correlatedActivityId;\n        }\n        request.headers[HttpHeaders.IsQueryPlan] = \"True\";\n        request.headers[HttpHeaders.QueryVersion] = \"1.4\";\n        request.headers[HttpHeaders.ContentType] = QueryJsonContentType;\n        request.headers[HttpHeaders.SupportedQueryFeatures] = (0,_utils_supportedQueryFeaturesBuilder_js__WEBPACK_IMPORTED_MODULE_11__.supportedQueryFeaturesBuilder)(options);\n        if (typeof query === \"string\") {\n            request.body = { query }; // Converts query text to query object.\n        }\n        this.applySessionToken(request);\n        const response = await _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request(request, diagnosticNode);\n        this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Query, response.headers);\n        return response;\n    }\n    queryPartitionKeyRanges(collectionLink, query, options) {\n        const path = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.getPathFromLink)(collectionLink, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.pkranges);\n        const id = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.getIdFromLink)(collectionLink);\n        const cb = async (diagNode, innerOptions) => {\n            const response = await this.queryFeed({\n                path,\n                resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.pkranges,\n                resourceId: id,\n                resultFn: (result) => result.PartitionKeyRanges,\n                query,\n                options: innerOptions,\n                diagnosticNode: diagNode,\n            });\n            return response;\n        };\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_6__.QueryIterator(this, query, options, cb);\n    }\n    async delete({ path, resourceType, resourceId, options = {}, partitionKey, method = _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.delete, diagnosticNode, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: method,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Delete,\n                path,\n                resourceType,\n                options,\n                resourceId,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Delete,\n                resourceType,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            this.applySessionToken(request);\n            // deleteResource will use WriteEndpoint since it uses DELETE operation\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            if ((0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.parseLink)(path).type !== \"colls\") {\n                this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Delete, response.headers);\n            }\n            else {\n                this.clearSessionToken(path);\n            }\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    async patch({ body, path, resourceType, resourceId, options = {}, partitionKey, diagnosticNode, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.patch,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Patch,\n                path,\n                resourceType,\n                body,\n                resourceId,\n                options,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Patch,\n                resourceType,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            this.applySessionToken(request);\n            // patch will use WriteEndpoint\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Patch, response.headers);\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    async create({ body, path, resourceType, resourceId, diagnosticNode, options = {}, partitionKey, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Create,\n                path,\n                resourceType,\n                resourceId,\n                body,\n                options,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Create,\n                resourceType,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            // create will use WriteEndpoint since it uses POST operation\n            this.applySessionToken(request);\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Create, response.headers);\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    processQueryFeedResponse(res, isQuery, resultFn) {\n        if (isQuery) {\n            return {\n                result: resultFn(res.result),\n                headers: res.headers,\n                code: res.code,\n            };\n        }\n        else {\n            const newResult = resultFn(res.result).map((body) => body);\n            return {\n                result: newResult,\n                headers: res.headers,\n                code: res.code,\n            };\n        }\n    }\n    applySessionToken(requestContext) {\n        const request = this.getSessionParams(requestContext.path);\n        if (requestContext.headers && requestContext.headers[HttpHeaders.SessionToken]) {\n            return;\n        }\n        const sessionConsistency = requestContext.headers[HttpHeaders.ConsistencyLevel];\n        if (!sessionConsistency) {\n            return;\n        }\n        if (sessionConsistency !== _documents_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsistencyLevel.Session) {\n            return;\n        }\n        if (request.resourceAddress) {\n            const sessionToken = this.sessionContainer.get(request);\n            if (sessionToken) {\n                requestContext.headers[HttpHeaders.SessionToken] = sessionToken;\n            }\n        }\n    }\n    async replace({ body, path, resourceType, resourceId, options = {}, partitionKey, diagnosticNode, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.put,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Replace,\n                path,\n                resourceType,\n                body,\n                resourceId,\n                options,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Replace,\n                resourceType,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            this.applySessionToken(request);\n            // replace will use WriteEndpoint since it uses PUT operation\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Replace, response.headers);\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    async upsert({ body, path, resourceType, resourceId, options = {}, partitionKey, diagnosticNode, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert,\n                path,\n                resourceType,\n                body,\n                resourceId,\n                options,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert,\n                resourceType,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            request.headers[HttpHeaders.IsUpsert] = true;\n            this.applySessionToken(request);\n            // upsert will use WriteEndpoint since it uses POST operation\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, response.headers);\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    async execute({ sprocLink, params, options = {}, partitionKey, diagnosticNode, partitionKeyRangeId, }) {\n        // Accept a single parameter or an array of parameters.\n        // Didn't add type annotation for this because we should legacy this behavior\n        if (params !== null && params !== undefined && !Array.isArray(params)) {\n            params = [params];\n        }\n        const path = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.getPathFromLink)(sprocLink);\n        const id = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.getIdFromLink)(sprocLink);\n        const request = {\n            ...this.getContextDerivedPropsForRequestCreation(),\n            method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post,\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Execute,\n            path,\n            resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.sproc,\n            options,\n            resourceId: id,\n            body: params,\n            partitionKey,\n        };\n        diagnosticNode.addData({\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Execute,\n            resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.sproc,\n        });\n        request.headers = await this.buildHeaders(request);\n        request.partitionKeyRangeId = partitionKeyRangeId;\n        // executeStoredProcedure will use WriteEndpoint since it uses POST operation\n        request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n        const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n        return response;\n    }\n    /**\n     * Gets the Database account information.\n     * @param options - `urlConnection` in the options is the endpoint url whose database account needs to be retrieved.\n     * If not present, current client's url will be used.\n     */\n    async getDatabaseAccount(diagnosticNode, options = {}) {\n        const endpoint = options.urlConnection || this.cosmosClientOptions.endpoint;\n        const request = {\n            ...this.getContextDerivedPropsForRequestCreation(),\n            endpoint,\n            method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.get,\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read,\n            path: \"\",\n            resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.none,\n            options,\n        };\n        diagnosticNode.addData({\n            operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Read,\n            resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.none,\n        });\n        request.headers = await this.buildHeaders(request);\n        // await options.beforeOperation({ endpoint, request, headers: requestHeaders });\n        const { result, headers, code, substatus, diagnostics } = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n        const databaseAccount = new _documents_index_js__WEBPACK_IMPORTED_MODULE_4__.DatabaseAccount(result, headers);\n        return {\n            result: databaseAccount,\n            headers,\n            diagnostics,\n            code: code,\n            substatus: substatus,\n        };\n    }\n    getWriteEndpoint(diagnosticNode) {\n        return this.globalEndpointManager.getWriteEndpoint(diagnosticNode);\n    }\n    getReadEndpoint(diagnosticNode) {\n        return this.globalEndpointManager.getReadEndpoint(diagnosticNode);\n    }\n    getWriteEndpoints() {\n        return this.globalEndpointManager.getWriteEndpoints();\n    }\n    getReadEndpoints() {\n        return this.globalEndpointManager.getReadEndpoints();\n    }\n    async batch({ body, path, partitionKey, resourceId, options = {}, diagnosticNode, partitionKeyRangeId, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch,\n                path,\n                body,\n                resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n                resourceId,\n                options,\n                partitionKey,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch,\n                resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            request.headers[HttpHeaders.IsBatchRequest] = true;\n            request.headers[HttpHeaders.IsBatchAtomic] = true;\n            this.applySessionToken(request);\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch, response.headers);\n            response.diagnostics = diagnosticNode.toDiagnostic(this.getClientConfig());\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    async bulk({ body, path, partitionKeyRangeId, resourceId, bulkOptions = {}, options = {}, diagnosticNode, }) {\n        try {\n            const request = {\n                ...this.getContextDerivedPropsForRequestCreation(),\n                method: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post,\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch,\n                path,\n                body,\n                resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n                resourceId,\n                options,\n            };\n            diagnosticNode.addData({\n                operationType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch,\n                resourceType: _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n            });\n            request.headers = await this.buildHeaders(request);\n            request.partitionKeyRangeId = partitionKeyRangeId;\n            request.headers[HttpHeaders.IsBatchRequest] = true;\n            request.headers[HttpHeaders.PartitionKeyRangeID] = partitionKeyRangeId;\n            request.headers[HttpHeaders.IsBatchAtomic] = false;\n            request.headers[HttpHeaders.BatchContinueOnError] = bulkOptions.continueOnError ?? true;\n            this.applySessionToken(request);\n            request.endpoint = await this.globalEndpointManager.resolveServiceEndpoint(diagnosticNode, request.resourceType, request.operationType);\n            const response = await (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.executePlugins)(diagnosticNode, request, _request_RequestHandler_js__WEBPACK_IMPORTED_MODULE_8__.RequestHandler.request, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_5__.PluginOn.operation);\n            this.captureSessionToken(undefined, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch, response.headers);\n            return response;\n        }\n        catch (err) {\n            this.captureSessionToken(err, path, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Upsert, err.headers);\n            throw err;\n        }\n    }\n    captureSessionToken(err, path, operationType, resHeaders) {\n        const request = this.getSessionParams(path);\n        request.operationType = operationType;\n        if (!err ||\n            (!this.isMasterResource(request.resourceType) &&\n                (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.PreconditionFailed ||\n                    err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.Conflict ||\n                    (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.NotFound &&\n                        err.substatus !== _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.SubStatusCodes.ReadSessionNotAvailable)))) {\n            this.sessionContainer.set(request, resHeaders);\n        }\n    }\n    clearSessionToken(path) {\n        const request = this.getSessionParams(path);\n        this.sessionContainer.remove(request);\n    }\n    recordDiagnostics(diagnostic) {\n        const formatted = this.diagnosticFormatter.format(diagnostic);\n        this.diagnosticWriter.write(formatted);\n    }\n    initializeDiagnosticSettings(diagnosticLevel) {\n        this.diagnosticFormatter = new _diagnostics_DiagnosticFormatter_js__WEBPACK_IMPORTED_MODULE_14__.DefaultDiagnosticFormatter();\n        switch (diagnosticLevel) {\n            case _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_15__.CosmosDbDiagnosticLevel.info:\n                this.diagnosticWriter = new _diagnostics_DiagnosticWriter_js__WEBPACK_IMPORTED_MODULE_13__.NoOpDiagnosticWriter();\n                break;\n            default:\n                this.diagnosticWriter = new _diagnostics_DiagnosticWriter_js__WEBPACK_IMPORTED_MODULE_13__.LogDiagnosticWriter();\n        }\n    }\n    // TODO: move\n    getSessionParams(resourceLink) {\n        const resourceId = null;\n        let resourceAddress = null;\n        const parserOutput = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.parseLink)(resourceLink);\n        resourceAddress = parserOutput.objectBody.self;\n        const resourceType = parserOutput.type;\n        return {\n            resourceId,\n            resourceAddress,\n            resourceType,\n            isNameBased: true,\n        };\n    }\n    isMasterResource(resourceType) {\n        if (resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.OffersPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.DatabasesPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.UsersPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.PermissionsPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.TopologyPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.DatabaseAccountPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.PartitionKeyRangesPathSegment ||\n            resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.CollectionsPathSegment) {\n            return true;\n        }\n        return false;\n    }\n    buildHeaders(requestContext) {\n        return (0,_request_request_js__WEBPACK_IMPORTED_MODULE_7__.getHeaders)({\n            clientOptions: this.cosmosClientOptions,\n            defaultHeaders: {\n                ...this.cosmosClientOptions.defaultHeaders,\n                ...requestContext.options.initialHeaders,\n            },\n            verb: requestContext.method,\n            path: requestContext.path,\n            resourceId: requestContext.resourceId,\n            resourceType: requestContext.resourceType,\n            options: requestContext.options,\n            partitionKeyRangeId: requestContext.partitionKeyRangeId,\n            useMultipleWriteLocations: this.connectionPolicy.useMultipleWriteLocations,\n            partitionKey: requestContext.partitionKey !== undefined\n                ? (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_4__.convertToInternalPartitionKey)(requestContext.partitionKey)\n                : undefined, // TODO: Move this check from here to PartitionKey\n            operationType: requestContext.operationType,\n        });\n    }\n    /**\n     * Returns collection of properties which are derived from the context for Request Creation.\n     * These properties have client wide scope, as opposed to request specific scope.\n     * @returns\n     */\n    getContextDerivedPropsForRequestCreation() {\n        return {\n            globalEndpointManager: this.globalEndpointManager,\n            requestAgent: this.cosmosClientOptions.agent,\n            connectionPolicy: this.connectionPolicy,\n            client: this,\n            plugins: this.cosmosClientOptions.plugins,\n            pipeline: this.pipeline,\n            httpClient: this.cosmosClientOptions.httpClient,\n            globalPartitionEndpointManager: this.globalPartitionEndpointManager,\n        };\n    }\n    getClientConfig() {\n        return this.clientConfig;\n    }\n    /**\n     * @internal\n     */\n    refreshUserAgent(hostFramework) {\n        const updatedUserAgent = (0,_common_platform_js__WEBPACK_IMPORTED_MODULE_17__.getUserAgent)(this.cosmosClientOptions, hostFramework);\n        this.cosmosClientOptions.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.UserAgent] = updatedUserAgent;\n        this.cosmosClientOptions.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.CustomUserAgent] =\n            updatedUserAgent;\n    }\n    /**\n     * @internal\n     */\n    getRetryOptions() {\n        return this.connectionPolicy.retryOptions;\n    }\n    /**\n     * @internal\n     */\n    isPartitionLevelFailOverEnabled() {\n        return (this.connectionPolicy.enablePartitionLevelFailover ||\n            this.connectionPolicy.enablePartitionLevelCircuitBreaker);\n    }\n}\n//# sourceMappingURL=ClientContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/ClientContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosClient.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/CosmosClient.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosClient: () => (/* binding */ CosmosClient)\n/* harmony export */ });\n/* harmony import */ var _client_Database_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client/Database/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/index.js\");\n/* harmony import */ var _client_Offer_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client/Offer/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js\");\n/* harmony import */ var _ClientContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ClientContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/ClientContext.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _common_platform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/platform.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/platform.js\");\n/* harmony import */ var _diagnostics_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./diagnostics/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/index.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _encryption_EncryptionManager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encryption/EncryptionManager.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionManager.js\");\n/* harmony import */ var _globalEndpointManager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./globalEndpointManager.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/globalEndpointManager.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _utils_checkURL_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/checkURL.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _globalPartitionEndpointManager_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./globalPartitionEndpointManager.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/globalPartitionEndpointManager.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Provides a client-side logical representation of the Azure Cosmos DB database account.\n * This client is used to configure and execute requests in the Azure Cosmos DB database service.\n * @example Instantiate a client and create a new database\n * ```ts snippet:CosmosClientCreate\n * import { CosmosClient } from \"@azure/cosmos\";\n *\n * const endpoint = \"https://your-account.documents.azure.com\";\n * const key = \"<database account masterkey>\";\n * const client = new CosmosClient({ endpoint, key });\n * ```\n * @example Instantiate a client with custom Connection Policy\n * ```ts snippet:CosmosClientWithConnectionPolicy\n * import { CosmosClient } from \"@azure/cosmos\";\n *\n * const endpoint = \"https://your-account.documents.azure.com\";\n * const key = \"<database account masterkey>\";\n * const client = new CosmosClient({\n *   endpoint,\n *   key,\n *   connectionPolicy: {\n *     requestTimeout: 10000,\n *   },\n * });\n * ```\n */\nclass CosmosClient {\n    /**\n     * Used for creating new databases, or querying/reading all databases.\n     *\n     * Use `.database(id)` to read, replace, or delete a specific, existing database by id.\n     *\n     * @example Create a new database\n     * ```ts snippet:CosmosClientDatabases\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { resource: databaseDefinition, database } = await client.databases.create({\n     *   id: \"<name here>\",\n     * });\n     * ```\n     */\n    databases;\n    /**\n     * Used for querying & reading all offers.\n     *\n     * Use `.offer(id)` to read, or replace existing offers.\n     */\n    offers;\n    clientContext;\n    endpointRefresher;\n    /**\n     * @internal\n     */\n    encryptionManager;\n    /** @internal */\n    globalPartitionEndpointManager;\n    constructor(optionsOrConnectionString) {\n        if (typeof optionsOrConnectionString === \"string\") {\n            optionsOrConnectionString = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseConnectionString)(optionsOrConnectionString);\n        }\n        else if (optionsOrConnectionString.connectionString) {\n            const { endpoint, key } = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseConnectionString)(optionsOrConnectionString.connectionString);\n            optionsOrConnectionString.endpoint = endpoint;\n            optionsOrConnectionString.key = key;\n        }\n        const endpoint = (0,_utils_checkURL_js__WEBPACK_IMPORTED_MODULE_12__.checkURL)(optionsOrConnectionString.endpoint);\n        if (!endpoint) {\n            throw new Error(\"Invalid endpoint specified\");\n        }\n        if (optionsOrConnectionString.clientEncryptionOptions) {\n            if (!optionsOrConnectionString.clientEncryptionOptions.keyEncryptionKeyResolver) {\n                throw new Error(\"KeyEncryptionKeyResolver needs to be provided to enable client-side encryption.\");\n            }\n            if (optionsOrConnectionString.clientEncryptionOptions.encryptionKeyTimeToLiveInSeconds &&\n                optionsOrConnectionString.clientEncryptionOptions.encryptionKeyTimeToLiveInSeconds < 60) {\n                throw new Error(\"EncryptionKeyTimeToLiveInSeconds needs to be >= 60 seconds.\");\n            }\n            this.encryptionManager = new _encryption_EncryptionManager_js__WEBPACK_IMPORTED_MODULE_9__.EncryptionManager(optionsOrConnectionString.clientEncryptionOptions.keyEncryptionKeyResolver, optionsOrConnectionString.clientEncryptionOptions.encryptionKeyTimeToLiveInSeconds);\n        }\n        const clientConfig = this.initializeClientConfigDiagnostic(optionsOrConnectionString);\n        optionsOrConnectionString.connectionPolicy = Object.assign({}, _documents_index_js__WEBPACK_IMPORTED_MODULE_8__.defaultConnectionPolicy, optionsOrConnectionString.connectionPolicy);\n        optionsOrConnectionString.defaultHeaders = optionsOrConnectionString.defaultHeaders || {};\n        optionsOrConnectionString.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.CacheControl] = \"no-cache\";\n        optionsOrConnectionString.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.Version] =\n            _common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.CurrentVersion;\n        if (optionsOrConnectionString.consistencyLevel !== undefined) {\n            optionsOrConnectionString.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.ConsistencyLevel] =\n                optionsOrConnectionString.consistencyLevel;\n        }\n        if (optionsOrConnectionString.throughputBucket !== undefined) {\n            optionsOrConnectionString.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.ThroughputBucket] =\n                optionsOrConnectionString.throughputBucket;\n        }\n        const userAgent = (0,_common_platform_js__WEBPACK_IMPORTED_MODULE_5__.getUserAgent)(optionsOrConnectionString);\n        optionsOrConnectionString.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.UserAgent] = userAgent;\n        optionsOrConnectionString.defaultHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.CustomUserAgent] = userAgent;\n        const globalEndpointManager = new _globalEndpointManager_js__WEBPACK_IMPORTED_MODULE_10__.GlobalEndpointManager(optionsOrConnectionString, async (diagnosticNode, opts) => this.getDatabaseAccountInternal(diagnosticNode, opts));\n        if (optionsOrConnectionString.connectionPolicy.enablePartitionLevelFailover ||\n            optionsOrConnectionString.connectionPolicy.enablePartitionLevelCircuitBreaker) {\n            if (!optionsOrConnectionString.connectionPolicy.enableEndpointDiscovery) {\n                throw new Error(\"enableEndpointDiscovery must be set to true to use partition level failover or circuit breaker.\");\n            }\n            this.globalPartitionEndpointManager = new _globalPartitionEndpointManager_js__WEBPACK_IMPORTED_MODULE_14__.GlobalPartitionEndpointManager(optionsOrConnectionString, globalEndpointManager);\n        }\n        this.clientContext = new _ClientContext_js__WEBPACK_IMPORTED_MODULE_2__.ClientContext(optionsOrConnectionString, globalEndpointManager, clientConfig, (0,_diagnostics_index_js__WEBPACK_IMPORTED_MODULE_6__.determineDiagnosticLevel)(optionsOrConnectionString.diagnosticLevel, (0,_diagnostics_index_js__WEBPACK_IMPORTED_MODULE_6__.getDiagnosticLevelFromEnvironment)()), this.globalPartitionEndpointManager);\n        if (optionsOrConnectionString.connectionPolicy?.enableEndpointDiscovery &&\n            optionsOrConnectionString.connectionPolicy?.enableBackgroundEndpointRefreshing) {\n            this.backgroundRefreshEndpointList(globalEndpointManager, optionsOrConnectionString.connectionPolicy.endpointRefreshRateInMs ||\n                _documents_index_js__WEBPACK_IMPORTED_MODULE_8__.defaultConnectionPolicy.endpointRefreshRateInMs);\n        }\n        this.databases = new _client_Database_index_js__WEBPACK_IMPORTED_MODULE_0__.Databases(this, this.clientContext, this.encryptionManager);\n        this.offers = new _client_Offer_index_js__WEBPACK_IMPORTED_MODULE_1__.Offers(this, this.clientContext);\n    }\n    initializeClientConfigDiagnostic(optionsOrConnectionString) {\n        return {\n            endpoint: optionsOrConnectionString.endpoint,\n            resourceTokensConfigured: optionsOrConnectionString.resourceTokens !== undefined,\n            tokenProviderConfigured: optionsOrConnectionString.tokenProvider !== undefined,\n            aadCredentialsConfigured: optionsOrConnectionString.aadCredentials !== undefined,\n            connectionPolicyConfigured: optionsOrConnectionString.connectionPolicy !== undefined,\n            consistencyLevel: optionsOrConnectionString.consistencyLevel,\n            defaultHeaders: optionsOrConnectionString.defaultHeaders,\n            agentConfigured: optionsOrConnectionString.agent !== undefined,\n            userAgentSuffix: optionsOrConnectionString.userAgentSuffix,\n            diagnosticLevel: optionsOrConnectionString.diagnosticLevel,\n            pluginsConfigured: optionsOrConnectionString.plugins !== undefined,\n            sDKVersion: _common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.SDKVersion,\n        };\n    }\n    /**\n     * Get information about the current {@link DatabaseAccount} (including which regions are supported, etc.)\n     */\n    async getDatabaseAccount(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            return this.getDatabaseAccountInternal(diagnosticNode, options);\n        }, this.clientContext);\n    }\n    /**\n     * @hidden\n     */\n    async getDatabaseAccountInternal(diagnosticNode, options) {\n        const response = await this.clientContext.getDatabaseAccount(diagnosticNode, options);\n        return new _request_index_js__WEBPACK_IMPORTED_MODULE_11__.ResourceResponse(response.result, response.headers, response.code, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.getEmptyCosmosDiagnostics)(), response.substatus);\n    }\n    /**\n     * Gets the currently used write endpoint url. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    async getWriteEndpoint() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            return this.clientContext.getWriteEndpoint(diagnosticNode);\n        }, this.clientContext);\n    }\n    /**\n     * Gets the currently used read endpoint. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    async getReadEndpoint() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            return this.clientContext.getReadEndpoint(diagnosticNode);\n        }, this.clientContext);\n    }\n    /**\n     * Gets the known write endpoints. Useful for troubleshooting purposes.\n     *\n     * The urls may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    getWriteEndpoints() {\n        return this.clientContext.getWriteEndpoints();\n    }\n    /**\n     * Gets the currently used read endpoint. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    getReadEndpoints() {\n        return this.clientContext.getReadEndpoints();\n    }\n    /**\n     * Used for reading, updating, or deleting a existing database by id or accessing containers belonging to that database.\n     *\n     * This does not make a network call. Use `.read` to get info about the database after getting the {@link Database} object.\n     *\n     * @param id - The id of the database.\n     * @example Create a new container off of an existing database\n     * ```ts snippet:CosmosClientDatabaseCreateContainer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const container = client.database(\"<database id>\").containers.create({\n     *   id: \"<name here>\",\n     * });\n     * ```\n     *\n     * @example Delete an existing database\n     * ```ts snippet:CosmosClientDatabaseDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * await client.database(\"<id here>\").delete();\n     * ```\n     */\n    database(id) {\n        return new _client_Database_index_js__WEBPACK_IMPORTED_MODULE_0__.Database(this, id, this.clientContext, this.encryptionManager);\n    }\n    /**\n     * Used for reading, or updating a existing offer by id.\n     * @param id - The id of the offer.\n     */\n    offer(id) {\n        return new _client_Offer_index_js__WEBPACK_IMPORTED_MODULE_1__.Offer(this, id, this.clientContext);\n    }\n    /**\n     * Clears background endpoint refresher. Use client.dispose() when destroying the CosmosClient within another process.\n     */\n    dispose() {\n        clearTimeout(this.endpointRefresher);\n        if (this.clientContext.enableEncryption) {\n            clearTimeout(this.encryptionManager.encryptionKeyStoreProvider.cacheRefresher);\n            clearTimeout(this.encryptionManager.protectedDataEncryptionKeyCache.cacheRefresher);\n        }\n        if (this.globalPartitionEndpointManager) {\n            this.globalPartitionEndpointManager.dispose();\n        }\n    }\n    async backgroundRefreshEndpointList(globalEndpointManager, refreshRate) {\n        this.endpointRefresher = setInterval(() => {\n            try {\n                return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n                    return globalEndpointManager.refreshEndpointList(diagnosticNode);\n                }, this.clientContext, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_7__.DiagnosticNodeType.BACKGROUND_REFRESH_THREAD);\n            }\n            catch (e) {\n                console.warn(\"Failed to refresh endpoints\", e);\n            }\n        }, refreshRate);\n        if (this.endpointRefresher.unref && typeof this.endpointRefresher.unref === \"function\") {\n            this.endpointRefresher.unref();\n        }\n    }\n    /**\n     * Update the host framework. If provided host framework will be used to generate the defualt SDK user agent.\n     * @param hostFramework - A custom string.\n     * @internal\n     */\n    async updateHostFramework(hostFramework) {\n        this.clientContext.refreshUserAgent(hostFramework);\n    }\n}\n//# sourceMappingURL=CosmosClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosDiagnostics: () => (/* binding */ CosmosDiagnostics),\n/* harmony export */   MetadataLookUpType: () => (/* binding */ MetadataLookUpType),\n/* harmony export */   getRootNode: () => (/* binding */ getRootNode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n *  * This is a Cosmos Diagnostic type that holds collected diagnostic information during a client operations. ie. Item.read(), Container.create().\n * It has three members -\n * 1. `clientSideRequestStatistics` member contains aggregate diagnostic information, including -\n *   - metadata lookups. Here all the server requests, apart from the final intended resource are considered as metadata calls.\n *    i.e. for item.read(id), if the client makes server call to discover endpoints it would be considered as metadata call.\n *   - retries\n *   - endpoints contacted.\n *   - request, response payload stats.\n *   - gatewayStatistics - Information corresponding to main operation. For example during Item.read(), the client might perform many operations\n *    i.e. metadata lookup etc, but gatewayStatistics represents the diagnostics information for actual read operation.\n *\n * 2. diagnosticNode - Is a tree like structure which captures detailed diagnostic information. By default it is disabled, and is intended to be\n * used only for debugging on non production environments. The kind of details captured in diagnosticNode is controlled by `CosmosDbDiagnosticLevel`.\n * - CosmosDbDiagnosticLevel.info - Is default value. In this level only clientSideRequestStatistics are captured. Is is meant for production environments.\n * - CosmosDbDiagnosticLevel.debug - Captures diagnosticNode and clientConfig. No request and response payloads are captured. Is not meant to be used\n * in production environment.\n * - CosmosDbDiagnosticLevel.debug-unsafe - In addition to data captured in CosmosDbDiagnosticLevel.debug, also captures request and response payloads.\n * Is not meant to be used in production environment.\n * 3. clientConfig - Captures information related to how client was configured during initialization.\n */\nclass CosmosDiagnostics {\n    clientSideRequestStatistics;\n    diagnosticNode;\n    clientConfig;\n    /**\n     * @internal\n     */\n    constructor(clientSideRequestStatistics, diagnosticNode, clientConfig) {\n        this.clientSideRequestStatistics = clientSideRequestStatistics;\n        this.diagnosticNode = diagnosticNode;\n        this.clientConfig = clientConfig;\n    }\n}\n/**\n * This is enum for Type of Metadata lookups possible.\n */\nvar MetadataLookUpType;\n(function (MetadataLookUpType) {\n    MetadataLookUpType[\"PartitionKeyRangeLookUp\"] = \"PARTITION_KEY_RANGE_LOOK_UP\";\n    MetadataLookUpType[\"DatabaseAccountLookUp\"] = \"DATABASE_ACCOUNT_LOOK_UP\";\n    MetadataLookUpType[\"QueryPlanLookUp\"] = \"QUERY_PLAN_LOOK_UP\";\n    MetadataLookUpType[\"DatabaseLookUp\"] = \"DATABASE_LOOK_UP\";\n    MetadataLookUpType[\"ContainerLookUp\"] = \"CONTAINER_LOOK_UP\";\n})(MetadataLookUpType || (MetadataLookUpType = {}));\nfunction getRootNode(node) {\n    if (node.parent)\n        return getRootNode(node.parent);\n    else\n        return node;\n}\n//# sourceMappingURL=CosmosDiagnostics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9Db3Ntb3NEaWFnbm9zdGljcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdEO0FBQzFDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9Db3Ntb3NEaWFnbm9zdGljcy5qcz9hODg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiAgKiBUaGlzIGlzIGEgQ29zbW9zIERpYWdub3N0aWMgdHlwZSB0aGF0IGhvbGRzIGNvbGxlY3RlZCBkaWFnbm9zdGljIGluZm9ybWF0aW9uIGR1cmluZyBhIGNsaWVudCBvcGVyYXRpb25zLiBpZS4gSXRlbS5yZWFkKCksIENvbnRhaW5lci5jcmVhdGUoKS5cbiAqIEl0IGhhcyB0aHJlZSBtZW1iZXJzIC1cbiAqIDEuIGBjbGllbnRTaWRlUmVxdWVzdFN0YXRpc3RpY3NgIG1lbWJlciBjb250YWlucyBhZ2dyZWdhdGUgZGlhZ25vc3RpYyBpbmZvcm1hdGlvbiwgaW5jbHVkaW5nIC1cbiAqICAgLSBtZXRhZGF0YSBsb29rdXBzLiBIZXJlIGFsbCB0aGUgc2VydmVyIHJlcXVlc3RzLCBhcGFydCBmcm9tIHRoZSBmaW5hbCBpbnRlbmRlZCByZXNvdXJjZSBhcmUgY29uc2lkZXJlZCBhcyBtZXRhZGF0YSBjYWxscy5cbiAqICAgIGkuZS4gZm9yIGl0ZW0ucmVhZChpZCksIGlmIHRoZSBjbGllbnQgbWFrZXMgc2VydmVyIGNhbGwgdG8gZGlzY292ZXIgZW5kcG9pbnRzIGl0IHdvdWxkIGJlIGNvbnNpZGVyZWQgYXMgbWV0YWRhdGEgY2FsbC5cbiAqICAgLSByZXRyaWVzXG4gKiAgIC0gZW5kcG9pbnRzIGNvbnRhY3RlZC5cbiAqICAgLSByZXF1ZXN0LCByZXNwb25zZSBwYXlsb2FkIHN0YXRzLlxuICogICAtIGdhdGV3YXlTdGF0aXN0aWNzIC0gSW5mb3JtYXRpb24gY29ycmVzcG9uZGluZyB0byBtYWluIG9wZXJhdGlvbi4gRm9yIGV4YW1wbGUgZHVyaW5nIEl0ZW0ucmVhZCgpLCB0aGUgY2xpZW50IG1pZ2h0IHBlcmZvcm0gbWFueSBvcGVyYXRpb25zXG4gKiAgICBpLmUuIG1ldGFkYXRhIGxvb2t1cCBldGMsIGJ1dCBnYXRld2F5U3RhdGlzdGljcyByZXByZXNlbnRzIHRoZSBkaWFnbm9zdGljcyBpbmZvcm1hdGlvbiBmb3IgYWN0dWFsIHJlYWQgb3BlcmF0aW9uLlxuICpcbiAqIDIuIGRpYWdub3N0aWNOb2RlIC0gSXMgYSB0cmVlIGxpa2Ugc3RydWN0dXJlIHdoaWNoIGNhcHR1cmVzIGRldGFpbGVkIGRpYWdub3N0aWMgaW5mb3JtYXRpb24uIEJ5IGRlZmF1bHQgaXQgaXMgZGlzYWJsZWQsIGFuZCBpcyBpbnRlbmRlZCB0byBiZVxuICogdXNlZCBvbmx5IGZvciBkZWJ1Z2dpbmcgb24gbm9uIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzLiBUaGUga2luZCBvZiBkZXRhaWxzIGNhcHR1cmVkIGluIGRpYWdub3N0aWNOb2RlIGlzIGNvbnRyb2xsZWQgYnkgYENvc21vc0RiRGlhZ25vc3RpY0xldmVsYC5cbiAqIC0gQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuaW5mbyAtIElzIGRlZmF1bHQgdmFsdWUuIEluIHRoaXMgbGV2ZWwgb25seSBjbGllbnRTaWRlUmVxdWVzdFN0YXRpc3RpY3MgYXJlIGNhcHR1cmVkLiBJcyBpcyBtZWFudCBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMuXG4gKiAtIENvc21vc0RiRGlhZ25vc3RpY0xldmVsLmRlYnVnIC0gQ2FwdHVyZXMgZGlhZ25vc3RpY05vZGUgYW5kIGNsaWVudENvbmZpZy4gTm8gcmVxdWVzdCBhbmQgcmVzcG9uc2UgcGF5bG9hZHMgYXJlIGNhcHR1cmVkLiBJcyBub3QgbWVhbnQgdG8gYmUgdXNlZFxuICogaW4gcHJvZHVjdGlvbiBlbnZpcm9ubWVudC5cbiAqIC0gQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuZGVidWctdW5zYWZlIC0gSW4gYWRkaXRpb24gdG8gZGF0YSBjYXB0dXJlZCBpbiBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5kZWJ1ZywgYWxzbyBjYXB0dXJlcyByZXF1ZXN0IGFuZCByZXNwb25zZSBwYXlsb2Fkcy5cbiAqIElzIG5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnQuXG4gKiAzLiBjbGllbnRDb25maWcgLSBDYXB0dXJlcyBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIGhvdyBjbGllbnQgd2FzIGNvbmZpZ3VyZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLlxuICovXG5leHBvcnQgY2xhc3MgQ29zbW9zRGlhZ25vc3RpY3Mge1xuICAgIGNsaWVudFNpZGVSZXF1ZXN0U3RhdGlzdGljcztcbiAgICBkaWFnbm9zdGljTm9kZTtcbiAgICBjbGllbnRDb25maWc7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2xpZW50U2lkZVJlcXVlc3RTdGF0aXN0aWNzLCBkaWFnbm9zdGljTm9kZSwgY2xpZW50Q29uZmlnKSB7XG4gICAgICAgIHRoaXMuY2xpZW50U2lkZVJlcXVlc3RTdGF0aXN0aWNzID0gY2xpZW50U2lkZVJlcXVlc3RTdGF0aXN0aWNzO1xuICAgICAgICB0aGlzLmRpYWdub3N0aWNOb2RlID0gZGlhZ25vc3RpY05vZGU7XG4gICAgICAgIHRoaXMuY2xpZW50Q29uZmlnID0gY2xpZW50Q29uZmlnO1xuICAgIH1cbn1cbi8qKlxuICogVGhpcyBpcyBlbnVtIGZvciBUeXBlIG9mIE1ldGFkYXRhIGxvb2t1cHMgcG9zc2libGUuXG4gKi9cbmV4cG9ydCB2YXIgTWV0YWRhdGFMb29rVXBUeXBlO1xuKGZ1bmN0aW9uIChNZXRhZGF0YUxvb2tVcFR5cGUpIHtcbiAgICBNZXRhZGF0YUxvb2tVcFR5cGVbXCJQYXJ0aXRpb25LZXlSYW5nZUxvb2tVcFwiXSA9IFwiUEFSVElUSU9OX0tFWV9SQU5HRV9MT09LX1VQXCI7XG4gICAgTWV0YWRhdGFMb29rVXBUeXBlW1wiRGF0YWJhc2VBY2NvdW50TG9va1VwXCJdID0gXCJEQVRBQkFTRV9BQ0NPVU5UX0xPT0tfVVBcIjtcbiAgICBNZXRhZGF0YUxvb2tVcFR5cGVbXCJRdWVyeVBsYW5Mb29rVXBcIl0gPSBcIlFVRVJZX1BMQU5fTE9PS19VUFwiO1xuICAgIE1ldGFkYXRhTG9va1VwVHlwZVtcIkRhdGFiYXNlTG9va1VwXCJdID0gXCJEQVRBQkFTRV9MT09LX1VQXCI7XG4gICAgTWV0YWRhdGFMb29rVXBUeXBlW1wiQ29udGFpbmVyTG9va1VwXCJdID0gXCJDT05UQUlORVJfTE9PS19VUFwiO1xufSkoTWV0YWRhdGFMb29rVXBUeXBlIHx8IChNZXRhZGF0YUxvb2tVcFR5cGUgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJvb3ROb2RlKG5vZGUpIHtcbiAgICBpZiAobm9kZS5wYXJlbnQpXG4gICAgICAgIHJldHVybiBnZXRSb290Tm9kZShub2RlLnBhcmVudCk7XG4gICAgZWxzZVxuICAgICAgICByZXR1cm4gbm9kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvc21vc0RpYWdub3N0aWNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/PartitionKeyRangeFailoverInfo.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/PartitionKeyRangeFailoverInfo.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartitionKeyRangeFailoverInfo: () => (/* binding */ PartitionKeyRangeFailoverInfo)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\");\n/* harmony import */ var semaphore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! semaphore */ \"(rsc)/./node_modules/semaphore/lib/semaphore.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @hidden\n * This class manages the failover information for partition key ranges in Cosmos DB.\n * It tracks the current endpoint, failed endpoints, and the number of consecutive read/write request failures.\n */\nclass PartitionKeyRangeFailoverInfo {\n    failedEndPoints = [];\n    currentEndPoint;\n    consecutiveReadRequestFailureCount = 0;\n    consecutiveWriteRequestFailureCount = 0;\n    firstRequestFailureTime = Date.now();\n    lastRequestFailureTime = Date.now();\n    failureCountSemaphore;\n    tryMoveNextLocationSemaphore;\n    /**\n     * @internal\n     */\n    constructor(currentEndpoint) {\n        this.currentEndPoint = currentEndpoint;\n        this.failureCountSemaphore = semaphore__WEBPACK_IMPORTED_MODULE_1__(1);\n        this.tryMoveNextLocationSemaphore = semaphore__WEBPACK_IMPORTED_MODULE_1__(1);\n    }\n    /**\n     * Checks if the circuit breaker can trigger a partition failover based on the failure counts.\n     * Returns true if the number of consecutive failures exceeds the defined thresholds for read or write requests.\n     */\n    async canCircuitBreakerTriggerPartitionFailOver(isReadOnlyRequest) {\n        const { consecutiveReadRequestFailureCount, consecutiveWriteRequestFailureCount } = await this.snapshotConsecutiveRequestFailureCount();\n        return isReadOnlyRequest\n            ? consecutiveReadRequestFailureCount > _index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ReadRequestFailureCountThreshold\n            : consecutiveWriteRequestFailureCount > _index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.WriteRequestFailureCountThreshold;\n    }\n    /**\n     * Increments the failure counts for read or write requests and updates the timestamps.\n     * If the time since the last failure exceeds the reset window, it resets the failure counts.\n     */\n    async incrementRequestFailureCounts(isReadOnlyRequest, currentTimeInMilliseconds) {\n        return new Promise((resolve, reject) => {\n            this.failureCountSemaphore.take(async () => {\n                try {\n                    const { lastRequestFailureTime } = await this.snapshotPartitionFailoverTimestamps();\n                    if (currentTimeInMilliseconds - lastRequestFailureTime >\n                        _index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ConsecutiveFailureCountResetIntervalInMS) {\n                        this.consecutiveReadRequestFailureCount = 0;\n                        this.consecutiveWriteRequestFailureCount = 0;\n                    }\n                    if (isReadOnlyRequest) {\n                        this.consecutiveReadRequestFailureCount++;\n                    }\n                    else {\n                        this.consecutiveWriteRequestFailureCount++;\n                    }\n                    this.lastRequestFailureTime = currentTimeInMilliseconds;\n                    return resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n                finally {\n                    // Release the semaphore lock\n                    this.failureCountSemaphore.leave();\n                }\n            });\n        });\n    }\n    /**\n     * Returns a snapshot of the first and last request failure timestamps.\n     * This method is used to retrieve the current state of failure timestamps without modifying them.\n     */\n    async snapshotPartitionFailoverTimestamps() {\n        return {\n            firstRequestFailureTime: this.firstRequestFailureTime,\n            lastRequestFailureTime: this.lastRequestFailureTime,\n        };\n    }\n    /**\n     * Attempts to move to the next available location for the partition key range.\n     * If the current endpoint is the same as the failed endpoint, it tries to find a new endpoint\n     * from the provided list of endpoints. If a new endpoint is found, it updates the current endpoint\n     * and returns true. If no new endpoint is found, it returns false.\n     */\n    async tryMoveNextLocation(endPoints, failedEndPoint, diagnosticNode, partitionKeyRangeId) {\n        if (failedEndPoint !== this.currentEndPoint) {\n            return true;\n        }\n        return new Promise((resolve, reject) => {\n            this.tryMoveNextLocationSemaphore.take(() => {\n                try {\n                    for (const endpoint of endPoints) {\n                        if (this.currentEndPoint === endpoint) {\n                            continue;\n                        }\n                        if (this.failedEndPoints.includes(endpoint)) {\n                            continue;\n                        }\n                        this.failedEndPoints.push(failedEndPoint);\n                        this.currentEndPoint = endpoint;\n                        return resolve(true);\n                    }\n                    diagnosticNode.addData({\n                        partitionKeyRangeFailoverInfo: `PartitionKeyRangeId: ${partitionKeyRangeId}, failedLocations: ${this.failedEndPoints}, newLocation: ${this.currentEndPoint}`,\n                    });\n                    return resolve(false);\n                }\n                catch (err) {\n                    reject(err);\n                }\n                finally {\n                    this.tryMoveNextLocationSemaphore.leave();\n                }\n            });\n        });\n    }\n    /** Returns the current endpoint being used for partition key range operations.*/\n    getCurrentEndPoint() {\n        return this.currentEndPoint;\n    }\n    /**\n     * Returns a snapshot of the current consecutive request failure counts for read and write requests.\n     * This method is used to retrieve the current state of failure counts without modifying them.\n     */\n    async snapshotConsecutiveRequestFailureCount() {\n        return {\n            consecutiveReadRequestFailureCount: this.consecutiveReadRequestFailureCount,\n            consecutiveWriteRequestFailureCount: this.consecutiveWriteRequestFailureCount,\n        };\n    }\n}\n//# sourceMappingURL=PartitionKeyRangeFailoverInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/PartitionKeyRangeFailoverInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/auth.js":
/*!*****************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/auth.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthorizationTokenUsingResourceTokens: () => (/* binding */ getAuthorizationTokenUsingResourceTokens),\n/* harmony export */   setAuthorizationHeader: () => (/* binding */ setAuthorizationHeader),\n/* harmony export */   setAuthorizationTokenHeaderUsingMasterKey: () => (/* binding */ setAuthorizationTokenHeaderUsingMasterKey)\n/* harmony export */ });\n/* harmony import */ var _utils_headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/headers.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/headers.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @hidden\n */\nasync function setAuthorizationHeader(clientOptions, verb, path, resourceId, resourceType, headers) {\n    if (clientOptions.permissionFeed) {\n        clientOptions.resourceTokens = {};\n        for (const permission of clientOptions.permissionFeed) {\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getResourceIdFromPath)(permission.resource);\n            if (!id) {\n                throw new Error(`authorization error: ${id} \\\n                          is an invalid resourceId in permissionFeed`);\n            }\n            clientOptions.resourceTokens[id] = permission._token; // TODO: any\n        }\n    }\n    if (clientOptions.key) {\n        await setAuthorizationTokenHeaderUsingMasterKey(verb, resourceId, resourceType, headers, clientOptions.key);\n    }\n    else if (clientOptions.resourceTokens) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Authorization] = encodeURIComponent(getAuthorizationTokenUsingResourceTokens(clientOptions.resourceTokens, path, resourceId));\n    }\n    else if (clientOptions.tokenProvider) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Authorization] = encodeURIComponent(await clientOptions.tokenProvider({ verb, path, resourceId, resourceType, headers }));\n    }\n}\n/**\n * The default function for setting header token using the masterKey\n * @hidden\n */\nasync function setAuthorizationTokenHeaderUsingMasterKey(verb, resourceId, resourceType, headers, masterKey) {\n    // TODO This should live in cosmos-sign\n    if (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.offer) {\n        resourceId = resourceId && resourceId.toLowerCase();\n    }\n    headers = Object.assign(headers, await (0,_utils_headers_js__WEBPACK_IMPORTED_MODULE_0__.generateHeaders)(masterKey, verb, resourceType, resourceId));\n}\n/**\n * @hidden\n */\n// TODO: Resource tokens\nfunction getAuthorizationTokenUsingResourceTokens(resourceTokens, path, resourceId) {\n    if (resourceTokens && Object.keys(resourceTokens).length > 0) {\n        // For database account access(through getDatabaseAccount API), path and resourceId are \"\",\n        // so in this case we return the first token to be used for creating the auth header as the\n        // service will accept any token in this case\n        if (!path && !resourceId) {\n            return resourceTokens[Object.keys(resourceTokens)[0]];\n        }\n        // If we have exact resource token for the path use it\n        if (resourceId && resourceTokens[resourceId]) {\n            return resourceTokens[resourceId];\n        }\n        // minimum valid path /dbs\n        if (!path || path.length < 4) {\n            // TODO: This should throw an error\n            return null;\n        }\n        path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(path);\n        const pathSegments = (path && path.split(\"/\")) || [];\n        // Item path\n        if (pathSegments.length === 6) {\n            // Look for a container token matching the item path\n            const containerPath = pathSegments.slice(0, 4).map(decodeURIComponent).join(\"/\");\n            if (resourceTokens[containerPath]) {\n                return resourceTokens[containerPath];\n            }\n        }\n        // TODO remove in v4: This is legacy behavior that lets someone use a resource token pointing ONLY at an ID\n        // It was used when _rid was exposed by the SDK, but now that we are using user provided ids it is not needed\n        // However removing it now would be a breaking change\n        // if it's an incomplete path like /dbs/db1/colls/, start from the parent resource\n        let index = pathSegments.length % 2 === 0 ? pathSegments.length - 1 : pathSegments.length - 2;\n        for (; index > 0; index -= 2) {\n            const id = decodeURI(pathSegments[index]);\n            if (resourceTokens[id]) {\n                return resourceTokens[id];\n            }\n        }\n    }\n    // TODO: This should throw an error\n    return null;\n}\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9hdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUMwRDtBQUMvRztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1RUFBcUI7QUFDNUM7QUFDQSx3REFBd0QsSUFBSTtBQUM1RDtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1REFBUztBQUN6QjtBQUNBO0FBQ0EsZ0JBQWdCLHVEQUFTLHFGQUFxRiwrQ0FBK0M7QUFDN0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHlCQUF5QiwwREFBWTtBQUNyQztBQUNBO0FBQ0EsMkNBQTJDLGtFQUFlO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyRUFBeUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsV0FBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vYXV0aC5qcz9jNDE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZ2VuZXJhdGVIZWFkZXJzIH0gZnJvbSBcIi4vdXRpbHMvaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgQ29uc3RhbnRzLCBnZXRSZXNvdXJjZUlkRnJvbVBhdGgsIFJlc291cmNlVHlwZSwgdHJpbVNsYXNoRnJvbUxlZnRBbmRSaWdodCwgfSBmcm9tIFwiLi9jb21tb24vaW5kZXguanNcIjtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0QXV0aG9yaXphdGlvbkhlYWRlcihjbGllbnRPcHRpb25zLCB2ZXJiLCBwYXRoLCByZXNvdXJjZUlkLCByZXNvdXJjZVR5cGUsIGhlYWRlcnMpIHtcbiAgICBpZiAoY2xpZW50T3B0aW9ucy5wZXJtaXNzaW9uRmVlZCkge1xuICAgICAgICBjbGllbnRPcHRpb25zLnJlc291cmNlVG9rZW5zID0ge307XG4gICAgICAgIGZvciAoY29uc3QgcGVybWlzc2lvbiBvZiBjbGllbnRPcHRpb25zLnBlcm1pc3Npb25GZWVkKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGdldFJlc291cmNlSWRGcm9tUGF0aChwZXJtaXNzaW9uLnJlc291cmNlKTtcbiAgICAgICAgICAgIGlmICghaWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGF1dGhvcml6YXRpb24gZXJyb3I6ICR7aWR9IFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGFuIGludmFsaWQgcmVzb3VyY2VJZCBpbiBwZXJtaXNzaW9uRmVlZGApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xpZW50T3B0aW9ucy5yZXNvdXJjZVRva2Vuc1tpZF0gPSBwZXJtaXNzaW9uLl90b2tlbjsgLy8gVE9ETzogYW55XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGNsaWVudE9wdGlvbnMua2V5KSB7XG4gICAgICAgIGF3YWl0IHNldEF1dGhvcml6YXRpb25Ub2tlbkhlYWRlclVzaW5nTWFzdGVyS2V5KHZlcmIsIHJlc291cmNlSWQsIHJlc291cmNlVHlwZSwgaGVhZGVycywgY2xpZW50T3B0aW9ucy5rZXkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjbGllbnRPcHRpb25zLnJlc291cmNlVG9rZW5zKSB7XG4gICAgICAgIGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkF1dGhvcml6YXRpb25dID0gZW5jb2RlVVJJQ29tcG9uZW50KGdldEF1dGhvcml6YXRpb25Ub2tlblVzaW5nUmVzb3VyY2VUb2tlbnMoY2xpZW50T3B0aW9ucy5yZXNvdXJjZVRva2VucywgcGF0aCwgcmVzb3VyY2VJZCkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjbGllbnRPcHRpb25zLnRva2VuUHJvdmlkZXIpIHtcbiAgICAgICAgaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuQXV0aG9yaXphdGlvbl0gPSBlbmNvZGVVUklDb21wb25lbnQoYXdhaXQgY2xpZW50T3B0aW9ucy50b2tlblByb3ZpZGVyKHsgdmVyYiwgcGF0aCwgcmVzb3VyY2VJZCwgcmVzb3VyY2VUeXBlLCBoZWFkZXJzIH0pKTtcbiAgICB9XG59XG4vKipcbiAqIFRoZSBkZWZhdWx0IGZ1bmN0aW9uIGZvciBzZXR0aW5nIGhlYWRlciB0b2tlbiB1c2luZyB0aGUgbWFzdGVyS2V5XG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRBdXRob3JpemF0aW9uVG9rZW5IZWFkZXJVc2luZ01hc3RlcktleSh2ZXJiLCByZXNvdXJjZUlkLCByZXNvdXJjZVR5cGUsIGhlYWRlcnMsIG1hc3RlcktleSkge1xuICAgIC8vIFRPRE8gVGhpcyBzaG91bGQgbGl2ZSBpbiBjb3Ntb3Mtc2lnblxuICAgIGlmIChyZXNvdXJjZVR5cGUgPT09IFJlc291cmNlVHlwZS5vZmZlcikge1xuICAgICAgICByZXNvdXJjZUlkID0gcmVzb3VyY2VJZCAmJiByZXNvdXJjZUlkLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKGhlYWRlcnMsIGF3YWl0IGdlbmVyYXRlSGVhZGVycyhtYXN0ZXJLZXksIHZlcmIsIHJlc291cmNlVHlwZSwgcmVzb3VyY2VJZCkpO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbi8vIFRPRE86IFJlc291cmNlIHRva2Vuc1xuZXhwb3J0IGZ1bmN0aW9uIGdldEF1dGhvcml6YXRpb25Ub2tlblVzaW5nUmVzb3VyY2VUb2tlbnMocmVzb3VyY2VUb2tlbnMsIHBhdGgsIHJlc291cmNlSWQpIHtcbiAgICBpZiAocmVzb3VyY2VUb2tlbnMgJiYgT2JqZWN0LmtleXMocmVzb3VyY2VUb2tlbnMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gRm9yIGRhdGFiYXNlIGFjY291bnQgYWNjZXNzKHRocm91Z2ggZ2V0RGF0YWJhc2VBY2NvdW50IEFQSSksIHBhdGggYW5kIHJlc291cmNlSWQgYXJlIFwiXCIsXG4gICAgICAgIC8vIHNvIGluIHRoaXMgY2FzZSB3ZSByZXR1cm4gdGhlIGZpcnN0IHRva2VuIHRvIGJlIHVzZWQgZm9yIGNyZWF0aW5nIHRoZSBhdXRoIGhlYWRlciBhcyB0aGVcbiAgICAgICAgLy8gc2VydmljZSB3aWxsIGFjY2VwdCBhbnkgdG9rZW4gaW4gdGhpcyBjYXNlXG4gICAgICAgIGlmICghcGF0aCAmJiAhcmVzb3VyY2VJZCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlVG9rZW5zW09iamVjdC5rZXlzKHJlc291cmNlVG9rZW5zKVswXV07XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgd2UgaGF2ZSBleGFjdCByZXNvdXJjZSB0b2tlbiBmb3IgdGhlIHBhdGggdXNlIGl0XG4gICAgICAgIGlmIChyZXNvdXJjZUlkICYmIHJlc291cmNlVG9rZW5zW3Jlc291cmNlSWRdKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzb3VyY2VUb2tlbnNbcmVzb3VyY2VJZF07XG4gICAgICAgIH1cbiAgICAgICAgLy8gbWluaW11bSB2YWxpZCBwYXRoIC9kYnNcbiAgICAgICAgaWYgKCFwYXRoIHx8IHBhdGgubGVuZ3RoIDwgNCkge1xuICAgICAgICAgICAgLy8gVE9ETzogVGhpcyBzaG91bGQgdGhyb3cgYW4gZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHBhdGggPSB0cmltU2xhc2hGcm9tTGVmdEFuZFJpZ2h0KHBhdGgpO1xuICAgICAgICBjb25zdCBwYXRoU2VnbWVudHMgPSAocGF0aCAmJiBwYXRoLnNwbGl0KFwiL1wiKSkgfHwgW107XG4gICAgICAgIC8vIEl0ZW0gcGF0aFxuICAgICAgICBpZiAocGF0aFNlZ21lbnRzLmxlbmd0aCA9PT0gNikge1xuICAgICAgICAgICAgLy8gTG9vayBmb3IgYSBjb250YWluZXIgdG9rZW4gbWF0Y2hpbmcgdGhlIGl0ZW0gcGF0aFxuICAgICAgICAgICAgY29uc3QgY29udGFpbmVyUGF0aCA9IHBhdGhTZWdtZW50cy5zbGljZSgwLCA0KS5tYXAoZGVjb2RlVVJJQ29tcG9uZW50KS5qb2luKFwiL1wiKTtcbiAgICAgICAgICAgIGlmIChyZXNvdXJjZVRva2Vuc1tjb250YWluZXJQYXRoXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNvdXJjZVRva2Vuc1tjb250YWluZXJQYXRoXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBUT0RPIHJlbW92ZSBpbiB2NDogVGhpcyBpcyBsZWdhY3kgYmVoYXZpb3IgdGhhdCBsZXRzIHNvbWVvbmUgdXNlIGEgcmVzb3VyY2UgdG9rZW4gcG9pbnRpbmcgT05MWSBhdCBhbiBJRFxuICAgICAgICAvLyBJdCB3YXMgdXNlZCB3aGVuIF9yaWQgd2FzIGV4cG9zZWQgYnkgdGhlIFNESywgYnV0IG5vdyB0aGF0IHdlIGFyZSB1c2luZyB1c2VyIHByb3ZpZGVkIGlkcyBpdCBpcyBub3QgbmVlZGVkXG4gICAgICAgIC8vIEhvd2V2ZXIgcmVtb3ZpbmcgaXQgbm93IHdvdWxkIGJlIGEgYnJlYWtpbmcgY2hhbmdlXG4gICAgICAgIC8vIGlmIGl0J3MgYW4gaW5jb21wbGV0ZSBwYXRoIGxpa2UgL2Ricy9kYjEvY29sbHMvLCBzdGFydCBmcm9tIHRoZSBwYXJlbnQgcmVzb3VyY2VcbiAgICAgICAgbGV0IGluZGV4ID0gcGF0aFNlZ21lbnRzLmxlbmd0aCAlIDIgPT09IDAgPyBwYXRoU2VnbWVudHMubGVuZ3RoIC0gMSA6IHBhdGhTZWdtZW50cy5sZW5ndGggLSAyO1xuICAgICAgICBmb3IgKDsgaW5kZXggPiAwOyBpbmRleCAtPSAyKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGRlY29kZVVSSShwYXRoU2VnbWVudHNbaW5kZXhdKTtcbiAgICAgICAgICAgIGlmIChyZXNvdXJjZVRva2Vuc1tpZF0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2VUb2tlbnNbaWRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFRPRE86IFRoaXMgc2hvdWxkIHRocm93IGFuIGVycm9yXG4gICAgcmV0dXJuIG51bGw7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/auth.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/Batcher.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/Batcher.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Batcher: () => (/* binding */ Batcher)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\");\n/* harmony import */ var _utils_batch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n/**\n * Maintains a batch of operations and dispatches it as a unit of work.\n * Execution of the request is done by the @see {@link ExecuteCallback} and retry is done by the @see {@link RetryCallback}.\n * @hidden\n */\nclass Batcher {\n    batchOperationsList;\n    currentSize;\n    toBeDispatched;\n    executor;\n    retrier;\n    diagnosticLevel;\n    encryptionEnabled;\n    encryptionProcessor;\n    clientConfigDiagnostics;\n    limiter;\n    processedOperationCountRef;\n    constructor(limiter, executor, retrier, diagnosticLevel, encryptionEnabled, clientConfig, encryptionProcessor, processedOperationCountRef) {\n        this.limiter = limiter;\n        this.batchOperationsList = [];\n        this.executor = executor;\n        this.retrier = retrier;\n        this.diagnosticLevel = diagnosticLevel;\n        this.encryptionEnabled = encryptionEnabled;\n        this.encryptionProcessor = encryptionProcessor;\n        this.clientConfigDiagnostics = clientConfig;\n        this.currentSize = 0;\n        this.toBeDispatched = false;\n        this.processedOperationCountRef = processedOperationCountRef;\n    }\n    /**\n     * Attempts to add an operation to the current batch.\n     * Returns false if the batch is full or already dispatched.\n     */\n    tryAdd(operation) {\n        if (this.toBeDispatched) {\n            return false;\n        }\n        if (!operation) {\n            throw new _index_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Operation is not defined\");\n        }\n        if (!operation.operationContext) {\n            throw new _index_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Operation context is not defined\");\n        }\n        if (this.batchOperationsList.length === _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.MaxBulkOperationsCount) {\n            return false;\n        }\n        const currentOperationSize = (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_4__.calculateObjectSizeInBytes)(operation.operationInput);\n        if (this.batchOperationsList.length > 0 &&\n            this.currentSize + currentOperationSize > _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.DefaultMaxBulkRequestBodySizeInBytes) {\n            return false;\n        }\n        this.currentSize += currentOperationSize;\n        this.batchOperationsList.push(operation);\n        return true;\n    }\n    isEmpty() {\n        return this.batchOperationsList.length === 0;\n    }\n    /**\n     * Dispatches the current batch of operations.\n     * Handles retries for failed operations and updates the ordered response.\n     */\n    async dispatch(partitionMetric) {\n        this.toBeDispatched = true;\n        const startTime = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentTimestampInMs)();\n        const diagnosticNode = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_2__.DiagnosticNodeInternal(this.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_2__.DiagnosticNodeType.BATCH_REQUEST, null);\n        try {\n            const response = await this.executor(this.batchOperationsList, diagnosticNode);\n            const hasThrottles = 1;\n            const noThrottle = 0;\n            const numThrottle = response?.results?.some((result) => \"code\" in result && result.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.TooManyRequests)\n                ? hasThrottles\n                : noThrottle;\n            const splitOrMerge = response?.results?.some((result) => \"code\" in result && result.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.Gone)\n                ? true\n                : false;\n            if (splitOrMerge) {\n                await this.limiter.pauseAndClear(_common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.Gone, diagnosticNode);\n            }\n            partitionMetric.add(this.batchOperationsList.length, (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentTimestampInMs)() - startTime, numThrottle);\n            for (let i = 0; i < response.operations.length; i++) {\n                const operation = response.operations[i];\n                const bulkOperationResult = response.results[i];\n                if (bulkOperationResult instanceof _index_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse) {\n                    const shouldRetry = await operation.operationContext.retryPolicy.shouldRetry(bulkOperationResult, operation.operationContext.diagnosticNode);\n                    if (shouldRetry) {\n                        await this.retrier(operation, operation.operationContext.diagnosticNode);\n                        continue;\n                    }\n                }\n                try {\n                    if (this.encryptionEnabled && bulkOperationResult.resourceBody) {\n                        operation.operationContext.diagnosticNode.beginEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n                        const { body: decryptedBody, propertiesDecryptedCount } = await this.encryptionProcessor.decrypt(bulkOperationResult.resourceBody);\n                        bulkOperationResult.resourceBody = decryptedBody;\n                        operation.operationContext.diagnosticNode.endEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, propertiesDecryptedCount);\n                    }\n                }\n                catch (error) {\n                    // if decryption fails after successful write operation, fail the operation with internal server error\n                    if (operation.operationInput.operationType !== \"Read\") {\n                        const decryptionError = new _index_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(`Item ${operation.operationInput.operationType} operation was successful but response decryption failed: + ${error.message}`);\n                        decryptionError.code = _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.ServiceUnavailable;\n                        throw decryptionError;\n                    }\n                }\n                operation.operationContext.addDiagnosticChild(diagnosticNode);\n                bulkOperationResult.diagnostics = operation.operationContext.diagnosticNode.toDiagnostic(this.clientConfigDiagnostics);\n                const bulkItemResponse = {\n                    operationInput: operation.unencryptedOperationInput,\n                };\n                if (bulkOperationResult instanceof _index_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse) {\n                    bulkItemResponse.error = bulkOperationResult;\n                }\n                else {\n                    bulkItemResponse.response = bulkOperationResult;\n                }\n                operation.operationContext.complete(bulkItemResponse);\n                this.processedOperationCountRef.count++;\n            }\n        }\n        catch (error) {\n            // Mark all operations in the batch as failed\n            for (const operation of this.batchOperationsList) {\n                const response = {\n                    operationInput: operation.operationInput,\n                    error: Object.assign(new _index_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(error.message), {\n                        code: _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.InternalServerError,\n                        diagnostics: operation.operationContext.diagnosticNode.toDiagnostic(this.clientConfigDiagnostics),\n                    }),\n                };\n                operation.operationContext.fail(response);\n                this.processedOperationCountRef.count++;\n            }\n        }\n        finally {\n            // Clean up batch state\n            this.batchOperationsList = [];\n        }\n    }\n    getOperations() {\n        return this.batchOperationsList;\n    }\n}\n//# sourceMappingURL=Batcher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/Batcher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/BulkHelper.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/BulkHelper.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BulkHelper: () => (/* binding */ BulkHelper)\n/* harmony export */ });\n/* harmony import */ var _client_ClientUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _common_helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _documents_PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../documents/PartitionKeyInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyInternal.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\");\n/* harmony import */ var _retry_bulkExecutionRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../retry/bulkExecutionRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/bulkExecutionRetryPolicy.js\");\n/* harmony import */ var _retry_resourceThrottleRetryPolicy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../retry/resourceThrottleRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/resourceThrottleRetryPolicy.js\");\n/* harmony import */ var _utils_batch_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/hashing/hash.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/hash.js\");\n/* harmony import */ var _HelperPerPartition_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./HelperPerPartition.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/HelperPerPartition.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * BulkHelper for bulk operations in a container.\n * It maintains one @see {@link HelperPerPartition} for each Partition Key Range, which allows independent execution of requests. Queue based limiters @see {@link LimiterQueue}\n * rate limit requestsbat the helper / Partition Key Range level, this means that we can send parallel and independent requests to different Partition Key Ranges, but for the same Range, requests\n * will be limited. Two callback implementations define how a particular request should be executed, and how operations should be retried. When the helper dispatches a batch\n * the batch will create a request and call the execute callback (executeRequest), if conditions are met, it might call the retry callback (reBatchOperation).\n * @hidden\n */\nclass BulkHelper {\n    container;\n    clientContext;\n    partitionKeyRangeCache;\n    helpersByPartitionKeyRangeId;\n    options;\n    partitionKeyDefinition;\n    partitionKeyDefinitionPromise;\n    isCancelled;\n    processedOperationCountRef = { count: 0 };\n    operationPromisesList = [];\n    congestionControlTimer;\n    congestionControlDelayInMs = 1000;\n    staleRidError;\n    operationsPerSleep = 100; // Number of operations to add per sleep\n    intervalForPartialBatchInMs = 1000; // Sleep interval before adding partial batch to dispatch queue\n    /**\n     * @internal\n     */\n    constructor(container, clientContext, partitionKeyRangeCache, options) {\n        this.container = container;\n        this.clientContext = clientContext;\n        this.partitionKeyRangeCache = partitionKeyRangeCache;\n        this.helpersByPartitionKeyRangeId = new Map();\n        this.options = options;\n        this.executeRequest = this.executeRequest.bind(this);\n        this.reBatchOperation = this.reBatchOperation.bind(this);\n        this.refreshPartitionKeyRangeCache = this.refreshPartitionKeyRangeCache.bind(this);\n        this.isCancelled = false;\n        this.runCongestionControlTimer();\n    }\n    /**\n     * adds operation(s) to the helper\n     * @param operationInput - bulk operation or list of bulk operations\n     */\n    async execute(operationInput) {\n        const addOperationPromises = [];\n        const minimalPause = 0; // minimal pause (0 ms) inserted periodically during processing.\n        try {\n            for (let i = 0; i < operationInput.length; i++) {\n                // After every 100 operations,sleep of 0 ms is added to allow the event loop to process any pending\n                // callbacks/tasks such as fetching partition key definition and dispatching batches from queue. This helps\n                // to prevent blocking and improves overall responsiveness.\n                if (i % this.operationsPerSleep === 0) {\n                    await (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.sleep)(minimalPause);\n                }\n                addOperationPromises.push(this.addOperation(operationInput[i], i));\n            }\n            await Promise.allSettled(addOperationPromises);\n            // After processing all operations via addOperation, it's possible that the current batch in each helper is not completely full.\n            // In such cases, addPartialBatchToQueue is called to ensure that all the operations are added to the dispatch queue.\n            // while loop below waits until the count of processed operations equals the number of input operations. This is necessary because\n            // some operations might fail and then again get added to current batch for retry.\n            while (this.processedOperationCountRef.count < operationInput.length) {\n                this.helpersByPartitionKeyRangeId.forEach((helper) => {\n                    helper.addPartialBatchToQueue();\n                });\n                // Pause for 1000 ms to give pending operations chance to accumulate into a batch to avoid sending multiple small batches.\n                await (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.sleep)(this.intervalForPartialBatchInMs);\n            }\n        }\n        finally {\n            if (this.congestionControlTimer) {\n                clearInterval(this.congestionControlTimer);\n            }\n        }\n        const settledResults = await Promise.allSettled(this.operationPromisesList);\n        if (this.isCancelled && this.staleRidError) {\n            throw this.staleRidError;\n        }\n        const bulkOperationResults = settledResults.map((result) => result.status === \"fulfilled\" ? result.value : result.reason);\n        // Formatting result: if an error is present, removing the stack trace details.\n        const formattedResults = bulkOperationResults.map((result) => {\n            if (result && result.error) {\n                const { stack, ...otherProps } = result.error;\n                const trimmedError = { message: result.error.message, ...otherProps };\n                return {\n                    ...result,\n                    error: trimmedError,\n                };\n            }\n            return result;\n        });\n        return formattedResults;\n    }\n    async addOperation(operation, idx) {\n        if (this.isCancelled) {\n            return;\n        }\n        if (!operation) {\n            this.operationPromisesList[idx] = Promise.resolve({\n                operationInput: operation,\n                error: Object.assign(new _index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(\"Operation cannot be null or undefined.\"), {\n                    code: _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.InternalServerError,\n                }),\n            });\n            return;\n        }\n        // Checks for id and partition key in input body\n        if (operation.operationType === \"Create\" ||\n            operation.operationType === \"Upsert\" ||\n            operation.operationType === \"Replace\") {\n            if (!operation.resourceBody.id) {\n                this.operationPromisesList[idx] = Promise.resolve({\n                    operationInput: operation,\n                    error: Object.assign(new _index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(`Operation resource body must have an 'id' for ${operation.operationType} operations.`), { code: _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.InternalServerError }),\n                });\n                this.processedOperationCountRef.count++;\n                return;\n            }\n        }\n        if (operation.partitionKey === undefined) {\n            this.operationPromisesList[idx] = Promise.resolve({\n                operationInput: operation,\n                error: Object.assign(new _index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(`PartitionKey is required for ${operation.operationType} operations.`), { code: _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.InternalServerError }),\n            });\n            this.processedOperationCountRef.count++;\n            return;\n        }\n        let operationError;\n        let diagnosticNode;\n        let unencryptedOperation;\n        let partitionKeyRangeId;\n        try {\n            diagnosticNode = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_4__.DiagnosticNodeInternal(this.clientContext.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_4__.DiagnosticNodeType.CLIENT_REQUEST_NODE, null);\n            // Ensure partition key definition is available.\n            if (!this.partitionKeyDefinition) {\n                if (!this.partitionKeyDefinitionPromise) {\n                    this.partitionKeyDefinitionPromise = (async () => {\n                        try {\n                            const partitionKeyDefinition = await (0,_client_ClientUtils_js__WEBPACK_IMPORTED_MODULE_0__.readPartitionKeyDefinition)(diagnosticNode, this.container);\n                            this.partitionKeyDefinition = partitionKeyDefinition;\n                            return partitionKeyDefinition;\n                        }\n                        finally {\n                            this.partitionKeyDefinitionPromise = null;\n                        }\n                    })();\n                }\n                await this.partitionKeyDefinitionPromise;\n            }\n            unencryptedOperation = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.copyObject)(operation);\n            // If encryption is enabled, encrypt the operation input.\n            if (this.clientContext.enableEncryption) {\n                operation = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.copyObject)(operation);\n                await this.container.checkAndInitializeEncryption();\n                diagnosticNode.beginEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation);\n                const { operation: encryptedOp, totalPropertiesEncryptedCount } = await (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_9__.encryptOperationInput)(this.container.encryptionProcessor, operation, 0);\n                operation = encryptedOp;\n                diagnosticNode.endEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation, totalPropertiesEncryptedCount);\n            }\n            // Resolve the partition key range id.\n            partitionKeyRangeId = await this.resolvePartitionKeyRangeId(operation, diagnosticNode);\n        }\n        catch (error) {\n            operationError = error;\n        }\n        // Get helper & context.\n        const helperForPartition = this.getHelperForPKRange(partitionKeyRangeId);\n        const retryPolicy = this.getRetryPolicy();\n        const context = new _index_js__WEBPACK_IMPORTED_MODULE_13__.ItemOperationContext(partitionKeyRangeId, retryPolicy, diagnosticNode);\n        const itemOperation = {\n            unencryptedOperationInput: unencryptedOperation,\n            operationInput: operation,\n            operationContext: context,\n        };\n        // Assign the promise (ensuring position matches input order)\n        this.operationPromisesList[idx] = context.operationPromise;\n        if (operationError) {\n            const response = {\n                operationInput: unencryptedOperation,\n                error: Object.assign(new _index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(operationError.message), {\n                    code: _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.InternalServerError,\n                    diagnostics: diagnosticNode?.toDiagnostic(this.clientContext.getClientConfig()),\n                }),\n            };\n            context.fail(response);\n            this.processedOperationCountRef.count++;\n            return;\n        }\n        // Add the operation to the helper.\n        return helperForPartition.add(itemOperation);\n    }\n    async resolvePartitionKeyRangeId(operation, diagnosticNode) {\n        const partitionKeyRanges = (await this.partitionKeyRangeCache.onCollectionRoutingMap(this.container.url, diagnosticNode)).getOrderedParitionKeyRanges();\n        const partitionKey = (0,_documents_PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_5__.convertToInternalPartitionKey)(operation.partitionKey);\n        const hashedKey = (0,_utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_11__.hashPartitionKey)(partitionKey, this.partitionKeyDefinition);\n        const matchingRange = partitionKeyRanges.find((range) => (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_9__.isKeyInRange)(range.minInclusive, range.maxExclusive, hashedKey));\n        if (!matchingRange) {\n            throw new Error(\"No matching partition key range found for the operation.\");\n        }\n        return matchingRange.id;\n    }\n    getRetryPolicy() {\n        const nextRetryPolicy = new _retry_resourceThrottleRetryPolicy_js__WEBPACK_IMPORTED_MODULE_8__.ResourceThrottleRetryPolicy(this.clientContext.getRetryOptions());\n        return new _retry_bulkExecutionRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.BulkExecutionRetryPolicy(nextRetryPolicy);\n    }\n    async executeRequest(operations, diagnosticNode) {\n        if (this.isCancelled) {\n            throw new _index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(\"Bulk execution cancelled due to a previous error.\");\n        }\n        if (!operations.length)\n            return;\n        const pkRangeId = operations[0].operationContext.pkRangeId;\n        const path = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_2__.getPathFromLink)(this.container.url, _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n        const requestBody = [];\n        for (const itemOperation of operations) {\n            requestBody.push(this.prepareOperation(itemOperation.operationInput));\n        }\n        if (!this.options.containerRid) {\n            this.options.containerRid = this.container._rid;\n        }\n        try {\n            const response = await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_10__.addDiagnosticChild)(async (childNode) => this.clientContext.bulk({\n                body: requestBody,\n                partitionKeyRangeId: pkRangeId,\n                path: path,\n                resourceId: this.container.url,\n                options: this.options,\n                diagnosticNode: childNode,\n            }), diagnosticNode, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_4__.DiagnosticNodeType.BATCH_REQUEST);\n            if (!response) {\n                throw new _index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(\"Failed to fetch bulk response.\");\n            }\n            return _index_js__WEBPACK_IMPORTED_MODULE_13__.BulkResponse.fromResponseMessage(response, operations);\n        }\n        catch (error) {\n            if (this.clientContext.enableEncryption) {\n                try {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                catch (err) {\n                    await this.cancelExecution(err);\n                    return _index_js__WEBPACK_IMPORTED_MODULE_13__.BulkResponse.createEmptyResponse(operations, 0, 0, {});\n                }\n            }\n            return _index_js__WEBPACK_IMPORTED_MODULE_13__.BulkResponse.fromResponseMessage(error, operations);\n        }\n    }\n    prepareOperation(operationInput) {\n        operationInput.partitionKey = (0,_documents_PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_5__.convertToInternalPartitionKey)(operationInput.partitionKey);\n        return {\n            ...operationInput,\n            partitionKey: JSON.stringify(operationInput.partitionKey),\n        };\n    }\n    async reBatchOperation(operation, diagnosticNode) {\n        const partitionKeyRangeId = await this.resolvePartitionKeyRangeId(operation.operationInput, diagnosticNode);\n        operation.operationContext.updatePKRangeId(partitionKeyRangeId);\n        const helper = this.getHelperForPKRange(partitionKeyRangeId);\n        await helper.add(operation);\n    }\n    async cancelExecution(error) {\n        this.isCancelled = true;\n        this.staleRidError = error;\n        for (const helper of this.helpersByPartitionKeyRangeId.values()) {\n            await helper.dispose();\n        }\n        this.helpersByPartitionKeyRangeId.clear();\n    }\n    getHelperForPKRange(pkRangeId) {\n        if (this.helpersByPartitionKeyRangeId.has(pkRangeId)) {\n            return this.helpersByPartitionKeyRangeId.get(pkRangeId);\n        }\n        const newHelper = new _HelperPerPartition_js__WEBPACK_IMPORTED_MODULE_12__.HelperPerPartition(this.executeRequest, this.reBatchOperation, this.refreshPartitionKeyRangeCache, this.clientContext.diagnosticLevel, this.clientContext.enableEncryption, this.clientContext.getClientConfig(), this.container.encryptionProcessor, this.processedOperationCountRef);\n        this.helpersByPartitionKeyRangeId.set(pkRangeId, newHelper);\n        return newHelper;\n    }\n    runCongestionControlTimer() {\n        this.congestionControlTimer = setInterval(() => {\n            this.helpersByPartitionKeyRangeId.forEach((helper) => {\n                helper.runCongestionAlgorithm();\n            });\n        }, this.congestionControlDelayInMs);\n    }\n    async refreshPartitionKeyRangeCache(diagnosticNode) {\n        await this.partitionKeyRangeCache.onCollectionRoutingMap(this.container.url, diagnosticNode, true);\n    }\n}\n//# sourceMappingURL=BulkHelper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/BulkHelper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/BulkResponse.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/BulkResponse.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BulkResponse: () => (/* binding */ BulkResponse)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\");\n/* harmony import */ var _utils_batch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * Represents a batch response for bulk request.\n * @hidden\n */\nclass BulkResponse {\n    statusCode;\n    subStatusCode;\n    headers;\n    operations;\n    results = [];\n    diagnostics;\n    constructor(statusCode, subStatusCode, headers, operations) {\n        this.statusCode = statusCode;\n        this.subStatusCode = subStatusCode;\n        this.headers = headers;\n        this.operations = operations;\n    }\n    /**\n     * Generate empty response object\n     */\n    static createEmptyResponse(operations, statusCode, subStatusCode, headers) {\n        const bulkResponse = new BulkResponse(statusCode, subStatusCode, headers, operations);\n        bulkResponse.createAndPopulateResults(operations, 0, new _index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse());\n        return bulkResponse;\n    }\n    /**\n     * static method to create BulkResponse from Response object\n     */\n    static fromResponseMessage(responseMessage, operations) {\n        // Create and populate the response object\n        let bulkResponse = this.populateFromResponse(responseMessage, operations);\n        if (!bulkResponse.results || bulkResponse.results.length !== operations.length) {\n            // Server should be guaranteeing number of results equal to operations when\n            // batch request is successful - so fail as InternalServerError if this is not the case.\n            if ((0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_3__.isSuccessStatusCode)(responseMessage.code)) {\n                bulkResponse = new BulkResponse(_common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.InternalServerError, _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.Unknown, responseMessage.headers, operations);\n            }\n            // When the overall response status code is TooManyRequests, propagate the RetryAfter into the individual operations.\n            let retryAfterMilliseconds = 0;\n            if (responseMessage.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.TooManyRequests) {\n                const retryAfter = responseMessage.headers?.[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RetryAfterInMs];\n                retryAfterMilliseconds = !retryAfter || isNaN(Number(retryAfter)) ? 0 : Number(retryAfter);\n            }\n            bulkResponse.createAndPopulateResults(operations, retryAfterMilliseconds, responseMessage);\n        }\n        return bulkResponse;\n    }\n    static populateFromResponse(responseMessage, operations) {\n        const results = [];\n        if (responseMessage.result) {\n            for (let i = 0; i < operations.length; i++) {\n                const itemResponse = responseMessage.result[i];\n                if ((0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_3__.isSuccessStatusCode)(itemResponse?.statusCode)) {\n                    const result = {\n                        statusCode: itemResponse?.statusCode,\n                        eTag: itemResponse?.eTag,\n                        activityId: responseMessage.headers?.[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId],\n                        sessionToken: responseMessage.headers?.[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.SessionToken],\n                        requestCharge: itemResponse?.requestCharge,\n                        resourceBody: itemResponse?.resourceBody,\n                        // diagnostics will be filled in Batcher dispatch to capture the complete diagnostics(e.g. decryption)\n                        diagnostics: null,\n                        headers: responseMessage.headers,\n                    };\n                    results.push(result);\n                }\n                else {\n                    const error = new _index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse();\n                    error.code = itemResponse?.statusCode;\n                    error.substatus = itemResponse?.subStatusCode;\n                    error.message = itemResponse?.message;\n                    error.requestCharge = itemResponse?.requestCharge;\n                    error.body = itemResponse?.resourceBody;\n                    error.headers = responseMessage.headers;\n                    error.activityId = responseMessage.headers?.[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId];\n                    error.retryAfterInMs = itemResponse?.retryAfterMilliseconds;\n                    error.diagnostics = responseMessage.diagnostics;\n                    results.push(error);\n                }\n            }\n        }\n        let statusCode = responseMessage.code;\n        let subStatusCode = responseMessage.substatus;\n        if (responseMessage.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.MultiStatus) {\n            for (const result of results) {\n                if (result instanceof _index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse &&\n                    result.statusCode !== _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.FailedDependency &&\n                    result.statusCode >= _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.BadRequest) {\n                    statusCode = typeof result.code === \"number\" ? result.code : Number(result.code);\n                    subStatusCode = result.substatus;\n                    break;\n                }\n            }\n        }\n        const bulkResponse = new BulkResponse(statusCode, subStatusCode, responseMessage.headers, operations);\n        bulkResponse.results = results;\n        return bulkResponse;\n    }\n    createAndPopulateResults(operations, retryAfterInMs, error) {\n        this.results = operations.map(() => {\n            const errorResponse = new _index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse();\n            errorResponse.message = error.message;\n            errorResponse.code = this.statusCode;\n            errorResponse.substatus = this.subStatusCode;\n            errorResponse.retryAfterInMs = retryAfterInMs;\n            errorResponse.activityId = this.headers?.[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId];\n            errorResponse.body = error.body;\n            errorResponse.diagnostics = error.diagnostics;\n            errorResponse.headers = this.headers;\n            errorResponse.requestCharge = error.requestCharge;\n            return errorResponse;\n        });\n    }\n}\n//# sourceMappingURL=BulkResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/BulkResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/CongestionAlgorithm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/CongestionAlgorithm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CongestionAlgorithm: () => (/* binding */ CongestionAlgorithm)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This class implements a congestion control algorithm which dynamically adjusts the degree\n * of concurrency based on the throttling and number of processed items.\n * For example, if it sees any throttling in requests from the last time the algorithm ran, it will decrease the\n * degree of concurrency (either by a factor of 5 or half the current degree of concurrency, whichever is smaller)\n * and increase the wait time to run the algorithm again by 1 second.\n * If it sees no throttling and the number of items processed increased, it will increase the degree of concurrency\n * (by a factor of 1) which cannot exceed the max degree of concurrency (Min(20, concurrency set by user)).\n * It uses the @see {@link PartitionMetric} to capture the metrics.\n * @hidden\n */\nclass CongestionAlgorithm {\n    // The semaphore to control the degree of concurrency.\n    limiterQueue;\n    // captures metrics upto previous requests for a partition.\n    oldPartitionMetric;\n    // captures metrics upto current request for a partition.\n    partitionMetric;\n    // time to wait before adjusting the degree of concurrency.\n    congestionWaitTimeInMs = 1000;\n    congestionIncreaseFactor = 1;\n    congestionDecreaseFactor = 5;\n    currentDegreeOfConcurrency;\n    constructor(limiterQueue, partitionMetric, oldPartitionMetric) {\n        this.limiterQueue = limiterQueue;\n        this.oldPartitionMetric = oldPartitionMetric;\n        this.partitionMetric = partitionMetric;\n        this.currentDegreeOfConcurrency = 1;\n    }\n    run() {\n        const elapsedTimeInMs = this.partitionMetric.timeTakenInMs - this.oldPartitionMetric.timeTakenInMs;\n        if (elapsedTimeInMs >= this.congestionWaitTimeInMs) {\n            const diffThrottle = this.partitionMetric.numberOfThrottles - this.oldPartitionMetric.numberOfThrottles;\n            const changeItemsCount = this.partitionMetric.numberOfItemsOperatedOn -\n                this.oldPartitionMetric.numberOfItemsOperatedOn;\n            this.oldPartitionMetric.add(changeItemsCount, elapsedTimeInMs, diffThrottle);\n            // if the number of throttles increased, decrease the degree of concurrency.\n            if (diffThrottle > 0) {\n                this.decreaseConcurrency();\n            }\n            // if there's no throttling and the number of items processed increased, increase the degree of concurrency.\n            if (changeItemsCount > 0 && diffThrottle === 0) {\n                this.increaseConcurrency();\n            }\n        }\n    }\n    decreaseConcurrency() {\n        // decrease should not lead the degree of concurrency as 0.\n        const decreaseCount = Math.min(this.congestionDecreaseFactor, Math.floor(this.currentDegreeOfConcurrency / 2));\n        this.currentDegreeOfConcurrency -= decreaseCount;\n        this.limiterQueue.setConcurrency(this.currentDegreeOfConcurrency);\n        // In case of throttling increase the wait time to adjust the degree of concurrency.\n        this.congestionWaitTimeInMs += 1000;\n    }\n    increaseConcurrency() {\n        if (this.currentDegreeOfConcurrency + this.congestionIncreaseFactor <=\n            _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.BulkMaxDegreeOfConcurrency) {\n            this.currentDegreeOfConcurrency += this.congestionIncreaseFactor;\n            this.limiterQueue.setConcurrency(this.currentDegreeOfConcurrency);\n        }\n    }\n}\n//# sourceMappingURL=CongestionAlgorithm.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9idWxrL0Nvbmdlc3Rpb25BbGdvcml0aG0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUJBQXVCO0FBQzVDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vYnVsay9Db25nZXN0aW9uQWxnb3JpdGhtLmpzP2FmY2YiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vY29tbW9uL2NvbnN0YW50cy5qc1wiO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgYSBjb25nZXN0aW9uIGNvbnRyb2wgYWxnb3JpdGhtIHdoaWNoIGR5bmFtaWNhbGx5IGFkanVzdHMgdGhlIGRlZ3JlZVxuICogb2YgY29uY3VycmVuY3kgYmFzZWQgb24gdGhlIHRocm90dGxpbmcgYW5kIG51bWJlciBvZiBwcm9jZXNzZWQgaXRlbXMuXG4gKiBGb3IgZXhhbXBsZSwgaWYgaXQgc2VlcyBhbnkgdGhyb3R0bGluZyBpbiByZXF1ZXN0cyBmcm9tIHRoZSBsYXN0IHRpbWUgdGhlIGFsZ29yaXRobSByYW4sIGl0IHdpbGwgZGVjcmVhc2UgdGhlXG4gKiBkZWdyZWUgb2YgY29uY3VycmVuY3kgKGVpdGhlciBieSBhIGZhY3RvciBvZiA1IG9yIGhhbGYgdGhlIGN1cnJlbnQgZGVncmVlIG9mIGNvbmN1cnJlbmN5LCB3aGljaGV2ZXIgaXMgc21hbGxlcilcbiAqIGFuZCBpbmNyZWFzZSB0aGUgd2FpdCB0aW1lIHRvIHJ1biB0aGUgYWxnb3JpdGhtIGFnYWluIGJ5IDEgc2Vjb25kLlxuICogSWYgaXQgc2VlcyBubyB0aHJvdHRsaW5nIGFuZCB0aGUgbnVtYmVyIG9mIGl0ZW1zIHByb2Nlc3NlZCBpbmNyZWFzZWQsIGl0IHdpbGwgaW5jcmVhc2UgdGhlIGRlZ3JlZSBvZiBjb25jdXJyZW5jeVxuICogKGJ5IGEgZmFjdG9yIG9mIDEpIHdoaWNoIGNhbm5vdCBleGNlZWQgdGhlIG1heCBkZWdyZWUgb2YgY29uY3VycmVuY3kgKE1pbigyMCwgY29uY3VycmVuY3kgc2V0IGJ5IHVzZXIpKS5cbiAqIEl0IHVzZXMgdGhlIEBzZWUge0BsaW5rIFBhcnRpdGlvbk1ldHJpY30gdG8gY2FwdHVyZSB0aGUgbWV0cmljcy5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIENvbmdlc3Rpb25BbGdvcml0aG0ge1xuICAgIC8vIFRoZSBzZW1hcGhvcmUgdG8gY29udHJvbCB0aGUgZGVncmVlIG9mIGNvbmN1cnJlbmN5LlxuICAgIGxpbWl0ZXJRdWV1ZTtcbiAgICAvLyBjYXB0dXJlcyBtZXRyaWNzIHVwdG8gcHJldmlvdXMgcmVxdWVzdHMgZm9yIGEgcGFydGl0aW9uLlxuICAgIG9sZFBhcnRpdGlvbk1ldHJpYztcbiAgICAvLyBjYXB0dXJlcyBtZXRyaWNzIHVwdG8gY3VycmVudCByZXF1ZXN0IGZvciBhIHBhcnRpdGlvbi5cbiAgICBwYXJ0aXRpb25NZXRyaWM7XG4gICAgLy8gdGltZSB0byB3YWl0IGJlZm9yZSBhZGp1c3RpbmcgdGhlIGRlZ3JlZSBvZiBjb25jdXJyZW5jeS5cbiAgICBjb25nZXN0aW9uV2FpdFRpbWVJbk1zID0gMTAwMDtcbiAgICBjb25nZXN0aW9uSW5jcmVhc2VGYWN0b3IgPSAxO1xuICAgIGNvbmdlc3Rpb25EZWNyZWFzZUZhY3RvciA9IDU7XG4gICAgY3VycmVudERlZ3JlZU9mQ29uY3VycmVuY3k7XG4gICAgY29uc3RydWN0b3IobGltaXRlclF1ZXVlLCBwYXJ0aXRpb25NZXRyaWMsIG9sZFBhcnRpdGlvbk1ldHJpYykge1xuICAgICAgICB0aGlzLmxpbWl0ZXJRdWV1ZSA9IGxpbWl0ZXJRdWV1ZTtcbiAgICAgICAgdGhpcy5vbGRQYXJ0aXRpb25NZXRyaWMgPSBvbGRQYXJ0aXRpb25NZXRyaWM7XG4gICAgICAgIHRoaXMucGFydGl0aW9uTWV0cmljID0gcGFydGl0aW9uTWV0cmljO1xuICAgICAgICB0aGlzLmN1cnJlbnREZWdyZWVPZkNvbmN1cnJlbmN5ID0gMTtcbiAgICB9XG4gICAgcnVuKCkge1xuICAgICAgICBjb25zdCBlbGFwc2VkVGltZUluTXMgPSB0aGlzLnBhcnRpdGlvbk1ldHJpYy50aW1lVGFrZW5Jbk1zIC0gdGhpcy5vbGRQYXJ0aXRpb25NZXRyaWMudGltZVRha2VuSW5NcztcbiAgICAgICAgaWYgKGVsYXBzZWRUaW1lSW5NcyA+PSB0aGlzLmNvbmdlc3Rpb25XYWl0VGltZUluTXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpZmZUaHJvdHRsZSA9IHRoaXMucGFydGl0aW9uTWV0cmljLm51bWJlck9mVGhyb3R0bGVzIC0gdGhpcy5vbGRQYXJ0aXRpb25NZXRyaWMubnVtYmVyT2ZUaHJvdHRsZXM7XG4gICAgICAgICAgICBjb25zdCBjaGFuZ2VJdGVtc0NvdW50ID0gdGhpcy5wYXJ0aXRpb25NZXRyaWMubnVtYmVyT2ZJdGVtc09wZXJhdGVkT24gLVxuICAgICAgICAgICAgICAgIHRoaXMub2xkUGFydGl0aW9uTWV0cmljLm51bWJlck9mSXRlbXNPcGVyYXRlZE9uO1xuICAgICAgICAgICAgdGhpcy5vbGRQYXJ0aXRpb25NZXRyaWMuYWRkKGNoYW5nZUl0ZW1zQ291bnQsIGVsYXBzZWRUaW1lSW5NcywgZGlmZlRocm90dGxlKTtcbiAgICAgICAgICAgIC8vIGlmIHRoZSBudW1iZXIgb2YgdGhyb3R0bGVzIGluY3JlYXNlZCwgZGVjcmVhc2UgdGhlIGRlZ3JlZSBvZiBjb25jdXJyZW5jeS5cbiAgICAgICAgICAgIGlmIChkaWZmVGhyb3R0bGUgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZWNyZWFzZUNvbmN1cnJlbmN5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiB0aGVyZSdzIG5vIHRocm90dGxpbmcgYW5kIHRoZSBudW1iZXIgb2YgaXRlbXMgcHJvY2Vzc2VkIGluY3JlYXNlZCwgaW5jcmVhc2UgdGhlIGRlZ3JlZSBvZiBjb25jdXJyZW5jeS5cbiAgICAgICAgICAgIGlmIChjaGFuZ2VJdGVtc0NvdW50ID4gMCAmJiBkaWZmVGhyb3R0bGUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluY3JlYXNlQ29uY3VycmVuY3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWNyZWFzZUNvbmN1cnJlbmN5KCkge1xuICAgICAgICAvLyBkZWNyZWFzZSBzaG91bGQgbm90IGxlYWQgdGhlIGRlZ3JlZSBvZiBjb25jdXJyZW5jeSBhcyAwLlxuICAgICAgICBjb25zdCBkZWNyZWFzZUNvdW50ID0gTWF0aC5taW4odGhpcy5jb25nZXN0aW9uRGVjcmVhc2VGYWN0b3IsIE1hdGguZmxvb3IodGhpcy5jdXJyZW50RGVncmVlT2ZDb25jdXJyZW5jeSAvIDIpKTtcbiAgICAgICAgdGhpcy5jdXJyZW50RGVncmVlT2ZDb25jdXJyZW5jeSAtPSBkZWNyZWFzZUNvdW50O1xuICAgICAgICB0aGlzLmxpbWl0ZXJRdWV1ZS5zZXRDb25jdXJyZW5jeSh0aGlzLmN1cnJlbnREZWdyZWVPZkNvbmN1cnJlbmN5KTtcbiAgICAgICAgLy8gSW4gY2FzZSBvZiB0aHJvdHRsaW5nIGluY3JlYXNlIHRoZSB3YWl0IHRpbWUgdG8gYWRqdXN0IHRoZSBkZWdyZWUgb2YgY29uY3VycmVuY3kuXG4gICAgICAgIHRoaXMuY29uZ2VzdGlvbldhaXRUaW1lSW5NcyArPSAxMDAwO1xuICAgIH1cbiAgICBpbmNyZWFzZUNvbmN1cnJlbmN5KCkge1xuICAgICAgICBpZiAodGhpcy5jdXJyZW50RGVncmVlT2ZDb25jdXJyZW5jeSArIHRoaXMuY29uZ2VzdGlvbkluY3JlYXNlRmFjdG9yIDw9XG4gICAgICAgICAgICBDb25zdGFudHMuQnVsa01heERlZ3JlZU9mQ29uY3VycmVuY3kpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudERlZ3JlZU9mQ29uY3VycmVuY3kgKz0gdGhpcy5jb25nZXN0aW9uSW5jcmVhc2VGYWN0b3I7XG4gICAgICAgICAgICB0aGlzLmxpbWl0ZXJRdWV1ZS5zZXRDb25jdXJyZW5jeSh0aGlzLmN1cnJlbnREZWdyZWVPZkNvbmN1cnJlbmN5KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmdlc3Rpb25BbGdvcml0aG0uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/CongestionAlgorithm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/HelperPerPartition.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/HelperPerPartition.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HelperPerPartition: () => (/* binding */ HelperPerPartition)\n/* harmony export */ });\n/* harmony import */ var semaphore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! semaphore */ \"(rsc)/./node_modules/semaphore/lib/semaphore.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _Batcher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Batcher.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/Batcher.js\");\n/* harmony import */ var _CongestionAlgorithm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CongestionAlgorithm.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/CongestionAlgorithm.js\");\n/* harmony import */ var _PartitionMetric_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PartitionMetric.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/PartitionMetric.js\");\n/* harmony import */ var _Limiter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Limiter.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/Limiter.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n/**\n * Handles operations batching and queuing for dispatch. Fills batches efficiently. There is always one batch at a time being filled. When the batch is full, it is added to the\n * dispatch queue and a new batch is created.\n * @hidden\n */\nclass HelperPerPartition {\n    executor;\n    retrier;\n    currentBatcher;\n    lock;\n    partitionMetric;\n    oldPartitionMetric;\n    diagnosticLevel;\n    encryptionEnabled;\n    encryptionProcessor;\n    clientConfigDiagnostics;\n    congestionControlAlgorithm;\n    dispatchLimiterQueue;\n    initialConcurrency = 1;\n    processedOperationCountRef;\n    constructor(executor, retrier, refreshpartitionKeyRangeCache, diagnosticLevel, encryptionEnabled, clientConfig, encryptionProcessor, processedOperationCountRef) {\n        this.executor = executor;\n        this.retrier = retrier;\n        this.diagnosticLevel = diagnosticLevel;\n        this.encryptionEnabled = encryptionEnabled;\n        this.encryptionProcessor = encryptionProcessor;\n        this.clientConfigDiagnostics = clientConfig;\n        this.oldPartitionMetric = new _PartitionMetric_js__WEBPACK_IMPORTED_MODULE_4__.PartitionMetric();\n        this.partitionMetric = new _PartitionMetric_js__WEBPACK_IMPORTED_MODULE_4__.PartitionMetric();\n        this.processedOperationCountRef = processedOperationCountRef;\n        this.lock = semaphore__WEBPACK_IMPORTED_MODULE_0__(1);\n        this.dispatchLimiterQueue = new _Limiter_js__WEBPACK_IMPORTED_MODULE_5__.LimiterQueue(this.initialConcurrency, this.partitionMetric, this.retrier, refreshpartitionKeyRangeCache);\n        this.congestionControlAlgorithm = new _CongestionAlgorithm_js__WEBPACK_IMPORTED_MODULE_3__.CongestionAlgorithm(this.dispatchLimiterQueue, this.partitionMetric, this.oldPartitionMetric);\n        this.currentBatcher = this.createBatcher();\n    }\n    /**\n     * Enqueues an operation into the current batch.\n     * If the operation does not fit because the batch is full, the full batch is enqueued in the dispatch queue\n     * and a new batch is created. The promise resolves when the operation has been successfully added.\n     */\n    async add(operation) {\n        return new Promise((resolve, reject) => {\n            this.lock.take(() => {\n                try {\n                    // If the current batch is full, move it to the dispatch queue until the operation fits.\n                    while (!this.currentBatcher.tryAdd(operation)) {\n                        const fullBatch = this.getBatchToQueueAndCreate();\n                        if (fullBatch) {\n                            this.dispatchLimiterQueue.push(fullBatch);\n                        }\n                    }\n                    // At this point the operation was added.\n                    resolve();\n                }\n                catch (err) {\n                    const response = {\n                        operationInput: operation.unencryptedOperationInput,\n                        error: Object.assign(new Error(err.message), {\n                            code: _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.InternalServerError,\n                            diagnostics: operation.operationContext.diagnosticNode.toDiagnostic(this.clientConfigDiagnostics),\n                        }),\n                    };\n                    operation.operationContext.fail(response);\n                    this.processedOperationCountRef.count++;\n                    reject(err);\n                }\n                finally {\n                    this.lock.leave();\n                }\n            });\n        });\n    }\n    /**\n     * @returns the batch to be dispatched and creates a new one\n     */\n    getBatchToQueueAndCreate() {\n        if (this.currentBatcher.isEmpty())\n            return null;\n        const previousBatcher = this.currentBatcher;\n        this.currentBatcher = this.createBatcher();\n        return previousBatcher;\n    }\n    /**\n     * In case there are leftover operations that did not fill a full batch,\n     * dispatchUnfilledBatch will add those operations as a batch in the dispatch queue.\n     */\n    addPartialBatchToQueue() {\n        this.lock.take(() => {\n            try {\n                if (!this.currentBatcher.isEmpty()) {\n                    const batch = this.currentBatcher;\n                    this.currentBatcher = this.createBatcher();\n                    this.dispatchLimiterQueue.push(batch);\n                }\n            }\n            finally {\n                this.lock.leave();\n            }\n        });\n    }\n    createBatcher() {\n        return new _Batcher_js__WEBPACK_IMPORTED_MODULE_2__.Batcher(this.dispatchLimiterQueue, this.executor, this.retrier, this.diagnosticLevel, this.encryptionEnabled, this.clientConfigDiagnostics, this.encryptionProcessor, this.processedOperationCountRef);\n    }\n    /**\n     * Runs congestion algo for a partition.\n     * Controlled by a single timer for all the partitions.\n     */\n    runCongestionAlgorithm() {\n        this.congestionControlAlgorithm.run();\n    }\n    /**\n     * Empties the dispatch queue and clears the current batch.\n     * This is used in case of stale container Rid detected for encryption operations\n     */\n    async dispose() {\n        await this.dispatchLimiterQueue.pauseAndClear(null);\n        this.currentBatcher = undefined;\n    }\n}\n//# sourceMappingURL=HelperPerPartition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/HelperPerPartition.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/ItemOperationContext.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/ItemOperationContext.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ItemOperationContext: () => (/* binding */ ItemOperationContext)\n/* harmony export */ });\n/* harmony import */ var _utils_batch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Context for a particular @see {@link ItemOperation}.\n * @hidden\n */\nclass ItemOperationContext {\n    pkRangeId;\n    retryPolicy;\n    diagnosticNode;\n    taskCompletionSource;\n    constructor(pkRangeId, retryPolicy, diagnosticNode) {\n        this.pkRangeId = pkRangeId;\n        this.retryPolicy = retryPolicy;\n        this.diagnosticNode = diagnosticNode;\n        this.taskCompletionSource = new _utils_batch_js__WEBPACK_IMPORTED_MODULE_0__.TaskCompletionSource();\n    }\n    get operationPromise() {\n        return this.taskCompletionSource.task;\n    }\n    addDiagnosticChild(diagnosticNode) {\n        this.diagnosticNode.addBulkChildNode(diagnosticNode, this.diagnosticNode.diagnosticLevel);\n        diagnosticNode.updateTimestamp();\n    }\n    updatePKRangeId(pkRangeId) {\n        this.pkRangeId = pkRangeId;\n    }\n    complete(result) {\n        this.taskCompletionSource.setResult(result);\n    }\n    fail(error) {\n        this.taskCompletionSource.setException(error.error);\n    }\n}\n//# sourceMappingURL=ItemOperationContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9idWxrL0l0ZW1PcGVyYXRpb25Db250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUN5RDtBQUN6RDtBQUNBLGtDQUFrQyxvQkFBb0I7QUFDdEQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxpRUFBb0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2J1bGsvSXRlbU9wZXJhdGlvbkNvbnRleHQuanM/NzFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IFRhc2tDb21wbGV0aW9uU291cmNlIH0gZnJvbSBcIi4uL3V0aWxzL2JhdGNoLmpzXCI7XG4vKipcbiAqIENvbnRleHQgZm9yIGEgcGFydGljdWxhciBAc2VlIHtAbGluayBJdGVtT3BlcmF0aW9ufS5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIEl0ZW1PcGVyYXRpb25Db250ZXh0IHtcbiAgICBwa1JhbmdlSWQ7XG4gICAgcmV0cnlQb2xpY3k7XG4gICAgZGlhZ25vc3RpY05vZGU7XG4gICAgdGFza0NvbXBsZXRpb25Tb3VyY2U7XG4gICAgY29uc3RydWN0b3IocGtSYW5nZUlkLCByZXRyeVBvbGljeSwgZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgdGhpcy5wa1JhbmdlSWQgPSBwa1JhbmdlSWQ7XG4gICAgICAgIHRoaXMucmV0cnlQb2xpY3kgPSByZXRyeVBvbGljeTtcbiAgICAgICAgdGhpcy5kaWFnbm9zdGljTm9kZSA9IGRpYWdub3N0aWNOb2RlO1xuICAgICAgICB0aGlzLnRhc2tDb21wbGV0aW9uU291cmNlID0gbmV3IFRhc2tDb21wbGV0aW9uU291cmNlKCk7XG4gICAgfVxuICAgIGdldCBvcGVyYXRpb25Qcm9taXNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrQ29tcGxldGlvblNvdXJjZS50YXNrO1xuICAgIH1cbiAgICBhZGREaWFnbm9zdGljQ2hpbGQoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgdGhpcy5kaWFnbm9zdGljTm9kZS5hZGRCdWxrQ2hpbGROb2RlKGRpYWdub3N0aWNOb2RlLCB0aGlzLmRpYWdub3N0aWNOb2RlLmRpYWdub3N0aWNMZXZlbCk7XG4gICAgICAgIGRpYWdub3N0aWNOb2RlLnVwZGF0ZVRpbWVzdGFtcCgpO1xuICAgIH1cbiAgICB1cGRhdGVQS1JhbmdlSWQocGtSYW5nZUlkKSB7XG4gICAgICAgIHRoaXMucGtSYW5nZUlkID0gcGtSYW5nZUlkO1xuICAgIH1cbiAgICBjb21wbGV0ZShyZXN1bHQpIHtcbiAgICAgICAgdGhpcy50YXNrQ29tcGxldGlvblNvdXJjZS5zZXRSZXN1bHQocmVzdWx0KTtcbiAgICB9XG4gICAgZmFpbChlcnJvcikge1xuICAgICAgICB0aGlzLnRhc2tDb21wbGV0aW9uU291cmNlLnNldEV4Y2VwdGlvbihlcnJvci5lcnJvcik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SXRlbU9wZXJhdGlvbkNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/ItemOperationContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/Limiter.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/Limiter.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LimiterQueue: () => (/* binding */ LimiterQueue)\n/* harmony export */ });\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nclass ListNode {\n    value;\n    next = null;\n    prev = null;\n    constructor(value) {\n        this.value = value;\n    }\n}\nclass DoublyLinkedList {\n    head = null;\n    tail = null;\n    length = 0;\n    push(value) {\n        const node = new ListNode(value);\n        if (!this.head) {\n            this.head = this.tail = node;\n        }\n        else {\n            this.tail.next = node;\n            node.prev = this.tail;\n            this.tail = node;\n        }\n        this.length++;\n    }\n    shift() {\n        if (!this.head)\n            return null;\n        const value = this.head.value;\n        this.head = this.head.next;\n        if (this.head) {\n            this.head.prev = null;\n        }\n        else {\n            this.tail = null;\n        }\n        this.length--;\n        return value;\n    }\n    clear() {\n        this.head = null;\n        this.tail = null;\n        this.length = 0;\n    }\n    isEmpty() {\n        return this.length === 0;\n    }\n}\n/**\n * Returns a function that will schedule the given callback using the best available method.\n */\nfunction scheduleCallback(fn) {\n    if (typeof process !== \"undefined\" && typeof process.nextTick === \"function\") {\n        process.nextTick(fn);\n    }\n    else if (typeof setImmediate === \"function\") {\n        setImmediate(fn);\n    }\n    else {\n        // eslint-disable-next-line promise/catch-or-return\n        Promise.resolve().then(fn);\n    }\n}\n/**\n * HighPerformanceQueue processes tasks concurrently.\n * If pauseAndClear() is called, it permanently halts processing,\n * clears queued tasks (resolving them with a custom value), and\n * any subsequent push() calls will immediately resolve with that value.\n */\nclass LimiterQueue {\n    // maximum number of tasks allowed to run concurrently\n    concurrency;\n    // number of tasks currently executing\n    running = 0;\n    // doubly linked list to store batchers and resolve/reject functions for dispatch tasks\n    tasks = new DoublyLinkedList();\n    // boolean flag that indicates whether the queue has been permanently paused\n    terminated = false;\n    // value to resolve with when the queue is terminated\n    terminatedValue;\n    // indicates if the processing cycle has been scheduled via the asynchronous scheduler\n    scheduled = false;\n    // indicates whether the queue is currently in the process of dequeueing and executing tasks\n    processing = false;\n    // retry callback to retry all the queued operations in case of split/merge error\n    retrier;\n    // partiton metric for collecting metrics for the requests\n    partitionMetric;\n    // callback used to refresh the partition key range cache in case of split/merge error\n    refreshPartitionKeyRangeCache;\n    refreshPKRangeCachePromise = undefined;\n    /**\n     * Creates a new HighPerformanceQueue.\n     */\n    constructor(concurrency, partitionMetric, retrier, refreshPartitionKeyRangeCache) {\n        this.concurrency = concurrency;\n        this.partitionMetric = partitionMetric;\n        this.retrier = retrier;\n        this.refreshPartitionKeyRangeCache = refreshPartitionKeyRangeCache;\n    }\n    /**\n     * Enqueue a task and return a Promise that resolves or rejects when the task completes.\n     * If the queue has been terminated via pauseAndClear, the promise resolves immediately with the terminated value.\n     */\n    push(batcher) {\n        if (this.terminated) {\n            const ops = batcher.getOperations();\n            ops.forEach((op) => this.retrier(op, op.operationContext.diagnosticNode));\n            return Promise.resolve(this.terminatedValue);\n        }\n        return new Promise((resolve, reject) => {\n            this.tasks.push({ batcher, resolve, reject });\n            this.scheduleProcess();\n        });\n    }\n    /**\n     * Permanently pauses processing and clears the queue.\n     * All queued tasks and subsequent push() calls will immediately resolve with the provided custom value.\n     */\n    async pauseAndClear(customValue, diagnosticNode) {\n        this.terminated = true;\n        this.terminatedValue = customValue;\n        const operationsList = [];\n        while (!this.tasks.isEmpty()) {\n            const queueItem = this.tasks.shift();\n            if (!queueItem)\n                break;\n            if (customValue === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.Gone) {\n                const operations = queueItem.batcher.getOperations();\n                operationsList.push(...operations);\n            }\n            queueItem.resolve(customValue);\n        }\n        if (customValue === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.Gone) {\n            // Multiple requests could result in 410 error for one partition based on degree of concurrency.\n            // The refreshPKRangeCachePromise is added to ensure that only one refreshPartitionKeyRangeCache() call is made\n            // to backend for one partition.\n            if (this.refreshPKRangeCachePromise) {\n                await this.refreshPKRangeCachePromise;\n            }\n            else {\n                this.refreshPKRangeCachePromise = this.refreshPartitionKeyRangeCache(diagnosticNode);\n                await this.refreshPKRangeCachePromise;\n            }\n            for (const operation of operationsList) {\n                await this.retrier(operation, operation.operationContext.diagnosticNode);\n            }\n        }\n    }\n    /**\n     * Schedules the processing loop using the best available asynchronous scheduler.\n     */\n    scheduleProcess() {\n        if (this.scheduled || this.processing || this.terminated)\n            return;\n        this.scheduled = true;\n        scheduleCallback(() => {\n            this.scheduled = false;\n            this.process();\n        });\n    }\n    /**\n     * Processes tasks up to the concurrency limit.\n     */\n    process() {\n        if (this.terminated)\n            return;\n        this.processing = true;\n        try {\n            while (!this.terminated && this.running < this.concurrency && !this.tasks.isEmpty()) {\n                const queueItem = this.tasks.shift();\n                if (!queueItem)\n                    break;\n                this.running++;\n                // Handle synchronous exceptions\n                let dispatchPromise;\n                try {\n                    dispatchPromise = queueItem.batcher.dispatch(this.partitionMetric);\n                }\n                catch (err) {\n                    // Handle synchronous errors\n                    queueItem.reject(err);\n                    this.running--;\n                    continue;\n                }\n                void dispatchPromise\n                    // eslint-disable-next-line promise/always-return\n                    .then((result) => {\n                    queueItem.resolve(result);\n                })\n                    .catch((err) => {\n                    queueItem.reject(err);\n                })\n                    .finally(() => {\n                    this.running--;\n                    if (!this.terminated && this.running < this.concurrency && !this.tasks.isEmpty()) {\n                        this.scheduleProcess();\n                    }\n                });\n            }\n        }\n        catch (err) {\n            console.error(\"Unexpected error in task queue processing:\", err);\n        }\n        finally {\n            this.processing = false;\n        }\n    }\n    /**\n     * Dynamically updates the concurrency limit.\n     */\n    setConcurrency(newConcurrency) {\n        if (newConcurrency < 1) {\n            throw new Error(\"Concurrency must be at least 1\");\n        }\n        this.concurrency = newConcurrency;\n        if (!this.terminated && this.running < this.concurrency) {\n            // Use the scheduleCallback helper for consistency\n            this.scheduleProcess();\n        }\n    }\n}\n//# sourceMappingURL=Limiter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/Limiter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/PartitionMetric.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/PartitionMetric.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartitionMetric: () => (/* binding */ PartitionMetric)\n/* harmony export */ });\n/* harmony import */ var semaphore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! semaphore */ \"(rsc)/./node_modules/semaphore/lib/semaphore.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Captures the metrics for the requests made for bulk.\n */\nclass PartitionMetric {\n    numberOfItemsOperatedOn;\n    timeTakenInMs;\n    numberOfThrottles;\n    semaphore;\n    constructor() {\n        this.numberOfItemsOperatedOn = 0;\n        this.timeTakenInMs = 0;\n        this.numberOfThrottles = 0;\n        this.semaphore = semaphore__WEBPACK_IMPORTED_MODULE_0__(1);\n    }\n    add(numberOfDoc, timeTakenInMs, numOfThrottles) {\n        // these operations should be atomic as multiple dispatch could be updating these values\n        this.semaphore.take(() => {\n            try {\n                this.numberOfItemsOperatedOn += numberOfDoc;\n                this.timeTakenInMs += timeTakenInMs;\n                this.numberOfThrottles += numOfThrottles;\n            }\n            finally {\n                this.semaphore.leave();\n            }\n        });\n    }\n}\n//# sourceMappingURL=PartitionMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9idWxrL1BhcnRpdGlvbk1ldHJpYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNDQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2J1bGsvUGFydGl0aW9uTWV0cmljLmpzPzk1ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgc2VtYXBob3JlIGZyb20gXCJzZW1hcGhvcmVcIjtcbi8qKlxuICogQ2FwdHVyZXMgdGhlIG1ldHJpY3MgZm9yIHRoZSByZXF1ZXN0cyBtYWRlIGZvciBidWxrLlxuICovXG5leHBvcnQgY2xhc3MgUGFydGl0aW9uTWV0cmljIHtcbiAgICBudW1iZXJPZkl0ZW1zT3BlcmF0ZWRPbjtcbiAgICB0aW1lVGFrZW5Jbk1zO1xuICAgIG51bWJlck9mVGhyb3R0bGVzO1xuICAgIHNlbWFwaG9yZTtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5udW1iZXJPZkl0ZW1zT3BlcmF0ZWRPbiA9IDA7XG4gICAgICAgIHRoaXMudGltZVRha2VuSW5NcyA9IDA7XG4gICAgICAgIHRoaXMubnVtYmVyT2ZUaHJvdHRsZXMgPSAwO1xuICAgICAgICB0aGlzLnNlbWFwaG9yZSA9IHNlbWFwaG9yZSgxKTtcbiAgICB9XG4gICAgYWRkKG51bWJlck9mRG9jLCB0aW1lVGFrZW5Jbk1zLCBudW1PZlRocm90dGxlcykge1xuICAgICAgICAvLyB0aGVzZSBvcGVyYXRpb25zIHNob3VsZCBiZSBhdG9taWMgYXMgbXVsdGlwbGUgZGlzcGF0Y2ggY291bGQgYmUgdXBkYXRpbmcgdGhlc2UgdmFsdWVzXG4gICAgICAgIHRoaXMuc2VtYXBob3JlLnRha2UoKCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLm51bWJlck9mSXRlbXNPcGVyYXRlZE9uICs9IG51bWJlck9mRG9jO1xuICAgICAgICAgICAgICAgIHRoaXMudGltZVRha2VuSW5NcyArPSB0aW1lVGFrZW5Jbk1zO1xuICAgICAgICAgICAgICAgIHRoaXMubnVtYmVyT2ZUaHJvdHRsZXMgKz0gbnVtT2ZUaHJvdHRsZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbWFwaG9yZS5sZWF2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aXRpb25NZXRyaWMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/PartitionMetric.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/bulk/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BulkResponse: () => (/* reexport safe */ _BulkResponse_js__WEBPACK_IMPORTED_MODULE_1__.BulkResponse),\n/* harmony export */   ItemOperationContext: () => (/* reexport safe */ _ItemOperationContext_js__WEBPACK_IMPORTED_MODULE_0__.ItemOperationContext)\n/* harmony export */ });\n/* harmony import */ var _ItemOperationContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ItemOperationContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/ItemOperationContext.js\");\n/* harmony import */ var _BulkResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BulkResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/BulkResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9idWxrL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2lFO0FBQ2hCO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9idWxrL2luZGV4LmpzPzQ2ODQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBJdGVtT3BlcmF0aW9uQ29udGV4dCB9IGZyb20gXCIuL0l0ZW1PcGVyYXRpb25Db250ZXh0LmpzXCI7XG5leHBvcnQgeyBCdWxrUmVzcG9uc2UgfSBmcm9tIFwiLi9CdWxrUmVzcG9uc2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedEnums.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedEnums.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedResourceType: () => (/* binding */ ChangeFeedResourceType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Enum to specify the resource for which change feed is being fetched.\n */\nvar ChangeFeedResourceType;\n(function (ChangeFeedResourceType) {\n    ChangeFeedResourceType[ChangeFeedResourceType[\"FeedRange\"] = 0] = \"FeedRange\";\n    ChangeFeedResourceType[ChangeFeedResourceType[\"PartitionKey\"] = 1] = \"PartitionKey\";\n})(ChangeFeedResourceType || (ChangeFeedResourceType = {}));\n//# sourceMappingURL=ChangeFeedEnums.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkRW51bXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0RBQXdEO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkRW51bXMuanM/OTRiNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogRW51bSB0byBzcGVjaWZ5IHRoZSByZXNvdXJjZSBmb3Igd2hpY2ggY2hhbmdlIGZlZWQgaXMgYmVpbmcgZmV0Y2hlZC5cbiAqL1xuZXhwb3J0IHZhciBDaGFuZ2VGZWVkUmVzb3VyY2VUeXBlO1xuKGZ1bmN0aW9uIChDaGFuZ2VGZWVkUmVzb3VyY2VUeXBlKSB7XG4gICAgQ2hhbmdlRmVlZFJlc291cmNlVHlwZVtDaGFuZ2VGZWVkUmVzb3VyY2VUeXBlW1wiRmVlZFJhbmdlXCJdID0gMF0gPSBcIkZlZWRSYW5nZVwiO1xuICAgIENoYW5nZUZlZWRSZXNvdXJjZVR5cGVbQ2hhbmdlRmVlZFJlc291cmNlVHlwZVtcIlBhcnRpdGlvbktleVwiXSA9IDFdID0gXCJQYXJ0aXRpb25LZXlcIjtcbn0pKENoYW5nZUZlZWRSZXNvdXJjZVR5cGUgfHwgKENoYW5nZUZlZWRSZXNvdXJjZVR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZEVudW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedEnums.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForEpkRange.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForEpkRange.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedForEpkRange: () => (/* binding */ ChangeFeedForEpkRange)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChangeFeedRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRange.js\");\n/* harmony import */ var _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChangeFeedIteratorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorResponse.js\");\n/* harmony import */ var _routing_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../routing/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/index.js\");\n/* harmony import */ var _FeedRangeQueue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FeedRangeQueue.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRangeQueue.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _CompositeContinuationToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CompositeContinuationToken.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/CompositeContinuationToken.js\");\n/* harmony import */ var _changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./changeFeedUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ChangeFeedMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * Provides iterator for change feed for entire container or an epk range.\n *\n * Use `Items.getChangeFeedIterator()` to get an instance of the iterator.\n */\nclass ChangeFeedForEpkRange {\n    clientContext;\n    container;\n    partitionKeyRangeCache;\n    resourceId;\n    resourceLink;\n    url;\n    changeFeedOptions;\n    epkRange;\n    continuationToken;\n    queue;\n    startTime;\n    isInstantiated;\n    rId;\n    startFromNow;\n    /**\n     * @internal\n     */\n    constructor(clientContext, container, partitionKeyRangeCache, resourceId, resourceLink, url, changeFeedOptions, epkRange) {\n        this.clientContext = clientContext;\n        this.container = container;\n        this.partitionKeyRangeCache = partitionKeyRangeCache;\n        this.resourceId = resourceId;\n        this.resourceLink = resourceLink;\n        this.url = url;\n        this.changeFeedOptions = changeFeedOptions;\n        this.epkRange = epkRange;\n        this.queue = new _FeedRangeQueue_js__WEBPACK_IMPORTED_MODULE_3__.FeedRangeQueue();\n        this.continuationToken = changeFeedOptions.continuationToken\n            ? JSON.parse(changeFeedOptions.continuationToken)\n            : undefined;\n        this.isInstantiated = false;\n        // startTime is used to store and specify time from which change feed should start reading new changes. StartFromNow flag is used to indicate fetching changes from now.\n        if (changeFeedOptions.startFromNow) {\n            this.startFromNow = true;\n        }\n        else if (changeFeedOptions.startTime) {\n            this.startTime = changeFeedOptions.startTime.toUTCString();\n        }\n    }\n    async setIteratorRid(diagnosticNode) {\n        const { resource } = await this.container.readInternal(diagnosticNode);\n        this.rId = resource._rid;\n    }\n    continuationTokenRidMatchContainerRid() {\n        if (this.continuationToken.rid !== this.rId) {\n            return false;\n        }\n        return true;\n    }\n    async fillChangeFeedQueue(diagnosticNode) {\n        if (this.continuationToken) {\n            // fill the queue with feed ranges in continuation token.\n            await this.fetchContinuationTokenFeedRanges(diagnosticNode);\n        }\n        else {\n            // fill the queue with feed ranges overlapping the given epk range.\n            await this.fetchOverLappingFeedRanges(diagnosticNode);\n        }\n        this.isInstantiated = true;\n    }\n    /**\n     * Fill the queue with the feed ranges overlapping with the given epk range.\n     */\n    async fetchOverLappingFeedRanges(diagnosticNode) {\n        try {\n            const overLappingRanges = await this.partitionKeyRangeCache.getOverlappingRanges(this.url, this.epkRange, diagnosticNode);\n            for (const overLappingRange of overLappingRanges) {\n                const [epkMinHeader, epkMaxHeader] = await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__.extractOverlappingRanges)(this.epkRange, overLappingRange);\n                const feedRange = new _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedRange(overLappingRange.minInclusive, overLappingRange.maxExclusive, \"\", epkMinHeader, epkMaxHeader);\n                this.queue.enqueue(feedRange);\n            }\n        }\n        catch (err) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(err.message);\n        }\n    }\n    /**\n     * Fill the queue with feed ranges from continuation token\n     */\n    async fetchContinuationTokenFeedRanges(diagnosticNode) {\n        const contToken = this.continuationToken;\n        if (!this.continuationTokenRidMatchContainerRid()) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(\"The continuation token is not for the current container definition\");\n        }\n        else {\n            for (const cToken of contToken.Continuation) {\n                const queryRange = new _routing_index_js__WEBPACK_IMPORTED_MODULE_2__.QueryRange(cToken.minInclusive, cToken.maxExclusive, true, false);\n                try {\n                    const overLappingRanges = await this.partitionKeyRangeCache.getOverlappingRanges(this.url, queryRange, diagnosticNode);\n                    for (const overLappingRange of overLappingRanges) {\n                        // check if the epk range present in continuation token entirely covers the overlapping range.\n                        // If yes, minInclusive and maxExclusive of the overlapping range will be set.\n                        // If no, i.e. there is only partial overlap, epkMinHeader and epkMaxHeader are set as min and max of overlap.\n                        // This will be used when we make a call to fetch change feed.\n                        const [epkMinHeader, epkMaxHeader] = await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__.extractOverlappingRanges)(queryRange, overLappingRange);\n                        const feedRange = new _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedRange(overLappingRange.minInclusive, overLappingRange.maxExclusive, cToken.continuationToken, epkMinHeader, epkMaxHeader);\n                        this.queue.enqueue(feedRange);\n                    }\n                }\n                catch (err) {\n                    throw new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(err.message);\n                }\n            }\n        }\n    }\n    /**\n     * Change feed is an infinite feed. hasMoreResults is always true.\n     */\n    get hasMoreResults() {\n        return true;\n    }\n    /**\n     * Gets an async iterator which will yield change feed results.\n     */\n    async *getAsyncIterator() {\n        do {\n            const result = await this.readNext();\n            yield result;\n        } while (this.hasMoreResults);\n    }\n    /**\n     * Gets an async iterator which will yield pages of results from Azure Cosmos DB.\n     *\n     * Keeps iterating over the feedranges and checks if any feed range has new result. Keeps note of the last feed range which returned non 304 result.\n     *\n     * When same feed range is reached and no new changes are found, a 304 (not Modified) is returned to the end user. Then starts process all over again.\n     */\n    async readNext() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_8__.withDiagnostics)(async (diagnosticNode) => {\n            // validate if the internal queue is filled up with feed ranges.\n            if (!this.isInstantiated) {\n                await this.setIteratorRid(diagnosticNode);\n                await this.fillChangeFeedQueue(diagnosticNode);\n            }\n            // stores the last feedRange for which statusCode is not 304 i.e. there were new changes in that feed range.\n            let firstNotModifiedFeedRange = undefined;\n            let result;\n            do {\n                const [processedFeedRange, response] = await this.fetchNext(diagnosticNode);\n                result = response;\n                if (result !== undefined) {\n                    {\n                        if (firstNotModifiedFeedRange === undefined) {\n                            firstNotModifiedFeedRange = processedFeedRange;\n                        }\n                        // move current feed range to end of queue to fetch result of next feed range.\n                        // This is done to fetch changes in breadth first manner and avoid starvation.\n                        this.queue.moveFirstElementToTheEnd();\n                        // check if there are new results for the given feed range.\n                        if (result.statusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.StatusCodes.Ok) {\n                            result.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.ContinuationToken] =\n                                this.generateContinuationToken();\n                            if (this.clientContext.enableEncryption) {\n                                await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__.decryptChangeFeedResponse)(result, diagnosticNode, this.changeFeedOptions.changeFeedMode, this.container.encryptionProcessor);\n                            }\n                            return result;\n                        }\n                    }\n                }\n            } while (!this.checkedAllFeedRanges(firstNotModifiedFeedRange));\n            // set the continuation token after processing.\n            result.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.ContinuationToken] = this.generateContinuationToken();\n            return result;\n        }, this.clientContext);\n    }\n    generateContinuationToken = () => {\n        return JSON.stringify(new _CompositeContinuationToken_js__WEBPACK_IMPORTED_MODULE_6__.CompositeContinuationToken(this.rId, this.queue.returnSnapshot()));\n    };\n    /**\n     * Read feed and retrieves the next page of results in Azure Cosmos DB.\n     */\n    async fetchNext(diagnosticNode) {\n        const feedRange = this.queue.peek();\n        if (feedRange) {\n            // fetch results for feed range at the beginning of the queue.\n            const result = await this.getFeedResponse(feedRange, diagnosticNode);\n            // check if results need to be fetched again depending on status code returned.\n            // Eg. in case of paritionSplit, results need to be fetched for the child partitions.\n            const shouldRetry = await this.shouldRetryOnFailure(feedRange, result, diagnosticNode);\n            if (shouldRetry) {\n                this.queue.dequeue();\n                return this.fetchNext(diagnosticNode);\n            }\n            else {\n                // update the continuation value for the current feed range.\n                const continuationValueForFeedRange = result.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.ETag];\n                const newFeedRange = this.queue.peek();\n                newFeedRange.continuationToken = continuationValueForFeedRange;\n                return [newFeedRange, result];\n            }\n        }\n        else {\n            return [undefined, undefined];\n        }\n    }\n    checkedAllFeedRanges(firstNotModifiedFeedRange) {\n        if (firstNotModifiedFeedRange === undefined) {\n            return false;\n        }\n        const feedRangeQueueFirstElement = this.queue.peek();\n        return (firstNotModifiedFeedRange.minInclusive === feedRangeQueueFirstElement?.minInclusive &&\n            firstNotModifiedFeedRange.maxExclusive === feedRangeQueueFirstElement?.maxExclusive &&\n            firstNotModifiedFeedRange.epkMinHeader === feedRangeQueueFirstElement?.epkMinHeader &&\n            firstNotModifiedFeedRange.epkMaxHeader === feedRangeQueueFirstElement?.epkMaxHeader);\n    }\n    /**\n     * Checks whether the current EpkRange is split into multiple ranges or not.\n     *\n     * If yes, it force refreshes the partitionKeyRange cache and enqueue children epk ranges.\n     */\n    async shouldRetryOnFailure(feedRange, response, diagnosticNode) {\n        if (response.statusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.StatusCodes.Ok || response.statusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.StatusCodes.NotModified) {\n            return false;\n        }\n        const partitionSplit = response.statusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.StatusCodes.Gone &&\n            (response.subStatusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.SubStatusCodes.PartitionKeyRangeGone ||\n                response.subStatusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.SubStatusCodes.CompletingSplit);\n        if (partitionSplit) {\n            const queryRange = new _routing_index_js__WEBPACK_IMPORTED_MODULE_2__.QueryRange(feedRange.epkMinHeader ? feedRange.epkMinHeader : feedRange.minInclusive, feedRange.epkMaxHeader ? feedRange.epkMaxHeader : feedRange.maxExclusive, true, false);\n            const resolvedRanges = await this.partitionKeyRangeCache.getOverlappingRanges(this.url, queryRange, diagnosticNode, true);\n            if (resolvedRanges.length < 1) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(\"Partition split/merge detected but no overlapping ranges found.\");\n            }\n            // This covers both cases of merge and split.\n            // resolvedRanges.length > 1 in case of split.\n            // resolvedRanges.length === 1 in case of merge. EpkRange headers will be added in this case.\n            if (resolvedRanges.length >= 1) {\n                await this.handleSplitOrMerge(false, resolvedRanges, queryRange, feedRange.continuationToken);\n            }\n            return true;\n        }\n        return false;\n    }\n    /*\n     * Enqueues all the children feed ranges for the given feed range.\n     */\n    async handleSplitOrMerge(shiftLeft, resolvedRanges, oldFeedRange, continuationToken) {\n        let flag = 0;\n        if (shiftLeft) {\n            // This section is only applicable when handleSplitOrMerge is called by getPartitionRangeId().\n            // used only when existing partition key range cache is used to check for any overlapping ranges.\n            // Modifies the first element with the first overlapping range.\n            const [epkMinHeader, epkMaxHeader] = await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__.extractOverlappingRanges)(oldFeedRange, resolvedRanges[0]);\n            const newFeedRange = new _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedRange(resolvedRanges[0].minInclusive, resolvedRanges[0].maxExclusive, continuationToken, epkMinHeader, epkMaxHeader);\n            this.queue.modifyFirstElement(newFeedRange);\n            flag = 1;\n        }\n        // Enqueue the overlapping ranges.\n        for (let i = flag; i < resolvedRanges.length; i++) {\n            const [epkMinHeader, epkMaxHeader] = await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__.extractOverlappingRanges)(oldFeedRange, resolvedRanges[i]);\n            const newFeedRange = new _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedRange(resolvedRanges[i].minInclusive, resolvedRanges[i].maxExclusive, continuationToken, epkMinHeader, epkMaxHeader);\n            this.queue.enqueue(newFeedRange);\n        }\n    }\n    /**\n     * Fetch the partitionKeyRangeId for the given feed range.\n     *\n     * This partitionKeyRangeId is passed to queryFeed to fetch the results.\n     */\n    async getPartitionRangeId(feedRange, diagnosticNode) {\n        const min = feedRange.epkMinHeader ? feedRange.epkMinHeader : feedRange.minInclusive;\n        const max = feedRange.epkMaxHeader ? feedRange.epkMaxHeader : feedRange.maxExclusive;\n        const queryRange = new _routing_index_js__WEBPACK_IMPORTED_MODULE_2__.QueryRange(min, max, true, false);\n        const resolvedRanges = await this.partitionKeyRangeCache.getOverlappingRanges(this.url, queryRange, diagnosticNode, false);\n        if (resolvedRanges.length < 1) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(\"No overlapping ranges found.\");\n        }\n        const firstResolvedRange = resolvedRanges[0];\n        const isPartitionRangeChanged = feedRange.minInclusive !== firstResolvedRange.minInclusive ||\n            feedRange.maxExclusive !== firstResolvedRange.maxExclusive ||\n            resolvedRanges.length > 1;\n        // If the partition range is changed, we need to handle split/merge\n        if (isPartitionRangeChanged) {\n            await this.handleSplitOrMerge(true, resolvedRanges, queryRange, feedRange.continuationToken);\n        }\n        return firstResolvedRange.id;\n    }\n    async getFeedResponse(feedRange, diagnosticNode) {\n        const feedOptions = {\n            initialHeaders: {},\n            useLatestVersionFeed: true,\n            useAllVersionsAndDeletesFeed: false,\n        };\n        if (typeof this.changeFeedOptions.maxItemCount === \"number\") {\n            feedOptions.maxItemCount = this.changeFeedOptions.maxItemCount;\n        }\n        if (this.changeFeedOptions.sessionToken) {\n            feedOptions.sessionToken = this.changeFeedOptions.sessionToken;\n        }\n        if (feedRange.continuationToken) {\n            feedOptions.accessCondition = {\n                type: _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.IfNoneMatch,\n                condition: feedRange.continuationToken,\n            };\n        }\n        else if (this.startFromNow) {\n            feedOptions.initialHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.IfNoneMatch] =\n                _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.ChangeFeedIfNoneMatchStartFromNowHeader;\n        }\n        if (this.startTime) {\n            feedOptions.initialHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_4__.Constants.HttpHeaders.IfModifiedSince] = this.startTime;\n        }\n        if (this.changeFeedOptions.changeFeedMode &&\n            this.changeFeedOptions.changeFeedMode === _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_9__.ChangeFeedMode.AllVersionsAndDeletes) {\n            feedOptions.useAllVersionsAndDeletesFeed = true;\n            feedOptions.useLatestVersionFeed = false;\n        }\n        const rangeId = await this.getPartitionRangeId(feedRange, diagnosticNode);\n        if (this.clientContext.enableEncryption) {\n            await this.container.checkAndInitializeEncryption();\n            feedOptions.containerRid = this.container._rid;\n        }\n        try {\n            // startEpk and endEpk are only valid in case we want to fetch result for a part of partition and not the entire partition.\n            const finalFeedRange = this.fetchFinalFeedRange();\n            const response = await this.clientContext.queryFeed({\n                path: this.resourceLink,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ResourceType.item,\n                resourceId: this.resourceId,\n                resultFn: (result) => (result ? result.Documents : []),\n                query: undefined,\n                options: feedOptions,\n                diagnosticNode,\n                partitionKey: undefined,\n                partitionKeyRangeId: rangeId,\n                startEpk: finalFeedRange.epkMinHeader,\n                endEpk: finalFeedRange.epkMaxHeader,\n            });\n            return new _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedIteratorResponse(response.result, response.result ? response.result.length : 0, response.code, response.headers, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_8__.getEmptyCosmosDiagnostics)());\n        }\n        catch (err) {\n            // If partition split/merge is encountered, handle it gracefully and continue fetching results.\n            if (err.code === _common_index_js__WEBPACK_IMPORTED_MODULE_4__.StatusCodes.Gone) {\n                return new _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedIteratorResponse([], 0, err.code, err.headers, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_8__.getEmptyCosmosDiagnostics)(), err.substatus);\n            }\n            // If any other errors are encountered, throw the error.\n            const errorResponse = new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(err.message);\n            errorResponse.code = err.code;\n            errorResponse.headers = err.headers;\n            throw errorResponse;\n        }\n    }\n    fetchFinalFeedRange() {\n        // this is used to fetch the final feed range before making a call to fetch the results.\n        // In case of merge, the final updated feed range is present in the queue and needs to be returned.\n        const feedRange = this.queue.peek();\n        if (feedRange) {\n            return feedRange;\n        }\n        else {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_5__.ErrorResponse(\"No feed range found.\");\n        }\n    }\n}\n//# sourceMappingURL=ChangeFeedForEpkRange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkRm9yRXBrUmFuZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3VEO0FBQ3NCO0FBQ3pCO0FBQ0M7QUFDd0M7QUFDdEM7QUFDc0I7QUFDYztBQUNIO0FBQ25DO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw4REFBYztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixXQUFXO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsNkVBQXdCO0FBQ25GLHNDQUFzQyxnRUFBZTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0REFBYTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx5REFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSw2RUFBd0I7QUFDM0YsOENBQThDLGdFQUFlO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDREQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELHlEQUFXO0FBQzdELDJDQUEyQyx1REFBUztBQUNwRDtBQUNBO0FBQ0Esc0NBQXNDLDhFQUF5QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0EsMkJBQTJCLHVEQUFTO0FBQ3BDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQ0FBa0Msc0ZBQTBCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSx1REFBUztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx5REFBVywrQkFBK0IseURBQVc7QUFDekY7QUFDQTtBQUNBLHVEQUF1RCx5REFBVztBQUNsRSx3Q0FBd0MsNERBQWM7QUFDdEQsMkNBQTJDLDREQUFjO0FBQ3pEO0FBQ0EsbUNBQW1DLHlEQUFVO0FBQzdDO0FBQ0E7QUFDQSwwQkFBMEIsNERBQWE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCw2RUFBd0I7QUFDL0UscUNBQXFDLGdFQUFlO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJCQUEyQjtBQUN0RCx1REFBdUQsNkVBQXdCO0FBQy9FLHFDQUFxQyxnRUFBZTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHlEQUFVO0FBQ3pDO0FBQ0E7QUFDQSxzQkFBc0IsNERBQWE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1REFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx1REFBUztBQUNoRCxnQkFBZ0IsdURBQVM7QUFDekI7QUFDQTtBQUNBLHVDQUF1Qyx1REFBUztBQUNoRDtBQUNBO0FBQ0Esc0RBQXNELDhEQUFjO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix1QkFBdUIsc0ZBQTBCLGlHQUFpRyxnRkFBeUI7QUFDM0s7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHlEQUFXO0FBQ3hDLDJCQUEyQixzRkFBMEIsK0JBQStCLGdGQUF5QjtBQUM3RztBQUNBO0FBQ0Esc0NBQXNDLDREQUFhO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkRm9yRXBrUmFuZ2UuanM/NjFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENoYW5nZUZlZWRSYW5nZSB9IGZyb20gXCIuL0NoYW5nZUZlZWRSYW5nZS5qc1wiO1xuaW1wb3J0IHsgQ2hhbmdlRmVlZEl0ZXJhdG9yUmVzcG9uc2UgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkSXRlcmF0b3JSZXNwb25zZS5qc1wiO1xuaW1wb3J0IHsgUXVlcnlSYW5nZSB9IGZyb20gXCIuLi8uLi9yb3V0aW5nL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBGZWVkUmFuZ2VRdWV1ZSB9IGZyb20gXCIuL0ZlZWRSYW5nZVF1ZXVlLmpzXCI7XG5pbXBvcnQgeyBDb25zdGFudHMsIFN1YlN0YXR1c0NvZGVzLCBTdGF0dXNDb2RlcywgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG5pbXBvcnQgeyBDb21wb3NpdGVDb250aW51YXRpb25Ub2tlbiB9IGZyb20gXCIuL0NvbXBvc2l0ZUNvbnRpbnVhdGlvblRva2VuLmpzXCI7XG5pbXBvcnQgeyBkZWNyeXB0Q2hhbmdlRmVlZFJlc3BvbnNlLCBleHRyYWN0T3ZlcmxhcHBpbmdSYW5nZXMgfSBmcm9tIFwiLi9jaGFuZ2VGZWVkVXRpbHMuanNcIjtcbmltcG9ydCB7IGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MsIHdpdGhEaWFnbm9zdGljcyB9IGZyb20gXCIuLi8uLi91dGlscy9kaWFnbm9zdGljcy5qc1wiO1xuaW1wb3J0IHsgQ2hhbmdlRmVlZE1vZGUgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkTW9kZS5qc1wiO1xuLyoqXG4gKiBAaGlkZGVuXG4gKiBQcm92aWRlcyBpdGVyYXRvciBmb3IgY2hhbmdlIGZlZWQgZm9yIGVudGlyZSBjb250YWluZXIgb3IgYW4gZXBrIHJhbmdlLlxuICpcbiAqIFVzZSBgSXRlbXMuZ2V0Q2hhbmdlRmVlZEl0ZXJhdG9yKClgIHRvIGdldCBhbiBpbnN0YW5jZSBvZiB0aGUgaXRlcmF0b3IuXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFuZ2VGZWVkRm9yRXBrUmFuZ2Uge1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgY29udGFpbmVyO1xuICAgIHBhcnRpdGlvbktleVJhbmdlQ2FjaGU7XG4gICAgcmVzb3VyY2VJZDtcbiAgICByZXNvdXJjZUxpbms7XG4gICAgdXJsO1xuICAgIGNoYW5nZUZlZWRPcHRpb25zO1xuICAgIGVwa1JhbmdlO1xuICAgIGNvbnRpbnVhdGlvblRva2VuO1xuICAgIHF1ZXVlO1xuICAgIHN0YXJ0VGltZTtcbiAgICBpc0luc3RhbnRpYXRlZDtcbiAgICBySWQ7XG4gICAgc3RhcnRGcm9tTm93O1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudENvbnRleHQsIGNvbnRhaW5lciwgcGFydGl0aW9uS2V5UmFuZ2VDYWNoZSwgcmVzb3VyY2VJZCwgcmVzb3VyY2VMaW5rLCB1cmwsIGNoYW5nZUZlZWRPcHRpb25zLCBlcGtSYW5nZSkge1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlID0gcGFydGl0aW9uS2V5UmFuZ2VDYWNoZTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZUlkID0gcmVzb3VyY2VJZDtcbiAgICAgICAgdGhpcy5yZXNvdXJjZUxpbmsgPSByZXNvdXJjZUxpbms7XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgICAgICB0aGlzLmNoYW5nZUZlZWRPcHRpb25zID0gY2hhbmdlRmVlZE9wdGlvbnM7XG4gICAgICAgIHRoaXMuZXBrUmFuZ2UgPSBlcGtSYW5nZTtcbiAgICAgICAgdGhpcy5xdWV1ZSA9IG5ldyBGZWVkUmFuZ2VRdWV1ZSgpO1xuICAgICAgICB0aGlzLmNvbnRpbnVhdGlvblRva2VuID0gY2hhbmdlRmVlZE9wdGlvbnMuY29udGludWF0aW9uVG9rZW5cbiAgICAgICAgICAgID8gSlNPTi5wYXJzZShjaGFuZ2VGZWVkT3B0aW9ucy5jb250aW51YXRpb25Ub2tlbilcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmlzSW5zdGFudGlhdGVkID0gZmFsc2U7XG4gICAgICAgIC8vIHN0YXJ0VGltZSBpcyB1c2VkIHRvIHN0b3JlIGFuZCBzcGVjaWZ5IHRpbWUgZnJvbSB3aGljaCBjaGFuZ2UgZmVlZCBzaG91bGQgc3RhcnQgcmVhZGluZyBuZXcgY2hhbmdlcy4gU3RhcnRGcm9tTm93IGZsYWcgaXMgdXNlZCB0byBpbmRpY2F0ZSBmZXRjaGluZyBjaGFuZ2VzIGZyb20gbm93LlxuICAgICAgICBpZiAoY2hhbmdlRmVlZE9wdGlvbnMuc3RhcnRGcm9tTm93KSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0RnJvbU5vdyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2hhbmdlRmVlZE9wdGlvbnMuc3RhcnRUaW1lKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IGNoYW5nZUZlZWRPcHRpb25zLnN0YXJ0VGltZS50b1VUQ1N0cmluZygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHNldEl0ZXJhdG9yUmlkKGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IHsgcmVzb3VyY2UgfSA9IGF3YWl0IHRoaXMuY29udGFpbmVyLnJlYWRJbnRlcm5hbChkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIHRoaXMucklkID0gcmVzb3VyY2UuX3JpZDtcbiAgICB9XG4gICAgY29udGludWF0aW9uVG9rZW5SaWRNYXRjaENvbnRhaW5lclJpZCgpIHtcbiAgICAgICAgaWYgKHRoaXMuY29udGludWF0aW9uVG9rZW4ucmlkICE9PSB0aGlzLnJJZCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBhc3luYyBmaWxsQ2hhbmdlRmVlZFF1ZXVlKGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbnRpbnVhdGlvblRva2VuKSB7XG4gICAgICAgICAgICAvLyBmaWxsIHRoZSBxdWV1ZSB3aXRoIGZlZWQgcmFuZ2VzIGluIGNvbnRpbnVhdGlvbiB0b2tlbi5cbiAgICAgICAgICAgIGF3YWl0IHRoaXMuZmV0Y2hDb250aW51YXRpb25Ub2tlbkZlZWRSYW5nZXMoZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gZmlsbCB0aGUgcXVldWUgd2l0aCBmZWVkIHJhbmdlcyBvdmVybGFwcGluZyB0aGUgZ2l2ZW4gZXBrIHJhbmdlLlxuICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaE92ZXJMYXBwaW5nRmVlZFJhbmdlcyhkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc0luc3RhbnRpYXRlZCA9IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZpbGwgdGhlIHF1ZXVlIHdpdGggdGhlIGZlZWQgcmFuZ2VzIG92ZXJsYXBwaW5nIHdpdGggdGhlIGdpdmVuIGVwayByYW5nZS5cbiAgICAgKi9cbiAgICBhc3luYyBmZXRjaE92ZXJMYXBwaW5nRmVlZFJhbmdlcyhkaWFnbm9zdGljTm9kZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgb3ZlckxhcHBpbmdSYW5nZXMgPSBhd2FpdCB0aGlzLnBhcnRpdGlvbktleVJhbmdlQ2FjaGUuZ2V0T3ZlcmxhcHBpbmdSYW5nZXModGhpcy51cmwsIHRoaXMuZXBrUmFuZ2UsIGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgb3ZlckxhcHBpbmdSYW5nZSBvZiBvdmVyTGFwcGluZ1Jhbmdlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtlcGtNaW5IZWFkZXIsIGVwa01heEhlYWRlcl0gPSBhd2FpdCBleHRyYWN0T3ZlcmxhcHBpbmdSYW5nZXModGhpcy5lcGtSYW5nZSwgb3ZlckxhcHBpbmdSYW5nZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZmVlZFJhbmdlID0gbmV3IENoYW5nZUZlZWRSYW5nZShvdmVyTGFwcGluZ1JhbmdlLm1pbkluY2x1c2l2ZSwgb3ZlckxhcHBpbmdSYW5nZS5tYXhFeGNsdXNpdmUsIFwiXCIsIGVwa01pbkhlYWRlciwgZXBrTWF4SGVhZGVyKTtcbiAgICAgICAgICAgICAgICB0aGlzLnF1ZXVlLmVucXVldWUoZmVlZFJhbmdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JSZXNwb25zZShlcnIubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRmlsbCB0aGUgcXVldWUgd2l0aCBmZWVkIHJhbmdlcyBmcm9tIGNvbnRpbnVhdGlvbiB0b2tlblxuICAgICAqL1xuICAgIGFzeW5jIGZldGNoQ29udGludWF0aW9uVG9rZW5GZWVkUmFuZ2VzKGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IGNvbnRUb2tlbiA9IHRoaXMuY29udGludWF0aW9uVG9rZW47XG4gICAgICAgIGlmICghdGhpcy5jb250aW51YXRpb25Ub2tlblJpZE1hdGNoQ29udGFpbmVyUmlkKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKFwiVGhlIGNvbnRpbnVhdGlvbiB0b2tlbiBpcyBub3QgZm9yIHRoZSBjdXJyZW50IGNvbnRhaW5lciBkZWZpbml0aW9uXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChjb25zdCBjVG9rZW4gb2YgY29udFRva2VuLkNvbnRpbnVhdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXJ5UmFuZ2UgPSBuZXcgUXVlcnlSYW5nZShjVG9rZW4ubWluSW5jbHVzaXZlLCBjVG9rZW4ubWF4RXhjbHVzaXZlLCB0cnVlLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3ZlckxhcHBpbmdSYW5nZXMgPSBhd2FpdCB0aGlzLnBhcnRpdGlvbktleVJhbmdlQ2FjaGUuZ2V0T3ZlcmxhcHBpbmdSYW5nZXModGhpcy51cmwsIHF1ZXJ5UmFuZ2UsIGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBvdmVyTGFwcGluZ1JhbmdlIG9mIG92ZXJMYXBwaW5nUmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjaGVjayBpZiB0aGUgZXBrIHJhbmdlIHByZXNlbnQgaW4gY29udGludWF0aW9uIHRva2VuIGVudGlyZWx5IGNvdmVycyB0aGUgb3ZlcmxhcHBpbmcgcmFuZ2UuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiB5ZXMsIG1pbkluY2x1c2l2ZSBhbmQgbWF4RXhjbHVzaXZlIG9mIHRoZSBvdmVybGFwcGluZyByYW5nZSB3aWxsIGJlIHNldC5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIG5vLCBpLmUuIHRoZXJlIGlzIG9ubHkgcGFydGlhbCBvdmVybGFwLCBlcGtNaW5IZWFkZXIgYW5kIGVwa01heEhlYWRlciBhcmUgc2V0IGFzIG1pbiBhbmQgbWF4IG9mIG92ZXJsYXAuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIHdpbGwgYmUgdXNlZCB3aGVuIHdlIG1ha2UgYSBjYWxsIHRvIGZldGNoIGNoYW5nZSBmZWVkLlxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgW2Vwa01pbkhlYWRlciwgZXBrTWF4SGVhZGVyXSA9IGF3YWl0IGV4dHJhY3RPdmVybGFwcGluZ1JhbmdlcyhxdWVyeVJhbmdlLCBvdmVyTGFwcGluZ1JhbmdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZlZWRSYW5nZSA9IG5ldyBDaGFuZ2VGZWVkUmFuZ2Uob3ZlckxhcHBpbmdSYW5nZS5taW5JbmNsdXNpdmUsIG92ZXJMYXBwaW5nUmFuZ2UubWF4RXhjbHVzaXZlLCBjVG9rZW4uY29udGludWF0aW9uVG9rZW4sIGVwa01pbkhlYWRlciwgZXBrTWF4SGVhZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWUuZW5xdWV1ZShmZWVkUmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoZXJyLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgZmVlZCBpcyBhbiBpbmZpbml0ZSBmZWVkLiBoYXNNb3JlUmVzdWx0cyBpcyBhbHdheXMgdHJ1ZS5cbiAgICAgKi9cbiAgICBnZXQgaGFzTW9yZVJlc3VsdHMoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGFuIGFzeW5jIGl0ZXJhdG9yIHdoaWNoIHdpbGwgeWllbGQgY2hhbmdlIGZlZWQgcmVzdWx0cy5cbiAgICAgKi9cbiAgICBhc3luYyAqZ2V0QXN5bmNJdGVyYXRvcigpIHtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5yZWFkTmV4dCgpO1xuICAgICAgICAgICAgeWllbGQgcmVzdWx0O1xuICAgICAgICB9IHdoaWxlICh0aGlzLmhhc01vcmVSZXN1bHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyBhbiBhc3luYyBpdGVyYXRvciB3aGljaCB3aWxsIHlpZWxkIHBhZ2VzIG9mIHJlc3VsdHMgZnJvbSBBenVyZSBDb3Ntb3MgREIuXG4gICAgICpcbiAgICAgKiBLZWVwcyBpdGVyYXRpbmcgb3ZlciB0aGUgZmVlZHJhbmdlcyBhbmQgY2hlY2tzIGlmIGFueSBmZWVkIHJhbmdlIGhhcyBuZXcgcmVzdWx0LiBLZWVwcyBub3RlIG9mIHRoZSBsYXN0IGZlZWQgcmFuZ2Ugd2hpY2ggcmV0dXJuZWQgbm9uIDMwNCByZXN1bHQuXG4gICAgICpcbiAgICAgKiBXaGVuIHNhbWUgZmVlZCByYW5nZSBpcyByZWFjaGVkIGFuZCBubyBuZXcgY2hhbmdlcyBhcmUgZm91bmQsIGEgMzA0IChub3QgTW9kaWZpZWQpIGlzIHJldHVybmVkIHRvIHRoZSBlbmQgdXNlci4gVGhlbiBzdGFydHMgcHJvY2VzcyBhbGwgb3ZlciBhZ2Fpbi5cbiAgICAgKi9cbiAgICBhc3luYyByZWFkTmV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhEaWFnbm9zdGljcyhhc3luYyAoZGlhZ25vc3RpY05vZGUpID0+IHtcbiAgICAgICAgICAgIC8vIHZhbGlkYXRlIGlmIHRoZSBpbnRlcm5hbCBxdWV1ZSBpcyBmaWxsZWQgdXAgd2l0aCBmZWVkIHJhbmdlcy5cbiAgICAgICAgICAgIGlmICghdGhpcy5pc0luc3RhbnRpYXRlZCkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuc2V0SXRlcmF0b3JSaWQoZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZmlsbENoYW5nZUZlZWRRdWV1ZShkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBzdG9yZXMgdGhlIGxhc3QgZmVlZFJhbmdlIGZvciB3aGljaCBzdGF0dXNDb2RlIGlzIG5vdCAzMDQgaS5lLiB0aGVyZSB3ZXJlIG5ldyBjaGFuZ2VzIGluIHRoYXQgZmVlZCByYW5nZS5cbiAgICAgICAgICAgIGxldCBmaXJzdE5vdE1vZGlmaWVkRmVlZFJhbmdlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgbGV0IHJlc3VsdDtcbiAgICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbcHJvY2Vzc2VkRmVlZFJhbmdlLCByZXNwb25zZV0gPSBhd2FpdCB0aGlzLmZldGNoTmV4dChkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdE5vdE1vZGlmaWVkRmVlZFJhbmdlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdE5vdE1vZGlmaWVkRmVlZFJhbmdlID0gcHJvY2Vzc2VkRmVlZFJhbmdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbW92ZSBjdXJyZW50IGZlZWQgcmFuZ2UgdG8gZW5kIG9mIHF1ZXVlIHRvIGZldGNoIHJlc3VsdCBvZiBuZXh0IGZlZWQgcmFuZ2UuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGlzIGRvbmUgdG8gZmV0Y2ggY2hhbmdlcyBpbiBicmVhZHRoIGZpcnN0IG1hbm5lciBhbmQgYXZvaWQgc3RhcnZhdGlvbi5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWUubW92ZUZpcnN0RWxlbWVudFRvVGhlRW5kKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjaGVjayBpZiB0aGVyZSBhcmUgbmV3IHJlc3VsdHMgZm9yIHRoZSBnaXZlbiBmZWVkIHJhbmdlLlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXNDb2RlID09PSBTdGF0dXNDb2Rlcy5Paykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Db250aW51YXRpb25Ub2tlbl0gPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlQ29udGludWF0aW9uVG9rZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgZGVjcnlwdENoYW5nZUZlZWRSZXNwb25zZShyZXN1bHQsIGRpYWdub3N0aWNOb2RlLCB0aGlzLmNoYW5nZUZlZWRPcHRpb25zLmNoYW5nZUZlZWRNb2RlLCB0aGlzLmNvbnRhaW5lci5lbmNyeXB0aW9uUHJvY2Vzc29yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gd2hpbGUgKCF0aGlzLmNoZWNrZWRBbGxGZWVkUmFuZ2VzKGZpcnN0Tm90TW9kaWZpZWRGZWVkUmFuZ2UpKTtcbiAgICAgICAgICAgIC8vIHNldCB0aGUgY29udGludWF0aW9uIHRva2VuIGFmdGVyIHByb2Nlc3NpbmcuXG4gICAgICAgICAgICByZXN1bHQuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuQ29udGludWF0aW9uVG9rZW5dID0gdGhpcy5nZW5lcmF0ZUNvbnRpbnVhdGlvblRva2VuKCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9LCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbiAgICBnZW5lcmF0ZUNvbnRpbnVhdGlvblRva2VuID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobmV3IENvbXBvc2l0ZUNvbnRpbnVhdGlvblRva2VuKHRoaXMucklkLCB0aGlzLnF1ZXVlLnJldHVyblNuYXBzaG90KCkpKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlYWQgZmVlZCBhbmQgcmV0cmlldmVzIHRoZSBuZXh0IHBhZ2Ugb2YgcmVzdWx0cyBpbiBBenVyZSBDb3Ntb3MgREIuXG4gICAgICovXG4gICAgYXN5bmMgZmV0Y2hOZXh0KGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IGZlZWRSYW5nZSA9IHRoaXMucXVldWUucGVlaygpO1xuICAgICAgICBpZiAoZmVlZFJhbmdlKSB7XG4gICAgICAgICAgICAvLyBmZXRjaCByZXN1bHRzIGZvciBmZWVkIHJhbmdlIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHF1ZXVlLlxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5nZXRGZWVkUmVzcG9uc2UoZmVlZFJhbmdlLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICAvLyBjaGVjayBpZiByZXN1bHRzIG5lZWQgdG8gYmUgZmV0Y2hlZCBhZ2FpbiBkZXBlbmRpbmcgb24gc3RhdHVzIGNvZGUgcmV0dXJuZWQuXG4gICAgICAgICAgICAvLyBFZy4gaW4gY2FzZSBvZiBwYXJpdGlvblNwbGl0LCByZXN1bHRzIG5lZWQgdG8gYmUgZmV0Y2hlZCBmb3IgdGhlIGNoaWxkIHBhcnRpdGlvbnMuXG4gICAgICAgICAgICBjb25zdCBzaG91bGRSZXRyeSA9IGF3YWl0IHRoaXMuc2hvdWxkUmV0cnlPbkZhaWx1cmUoZmVlZFJhbmdlLCByZXN1bHQsIGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgICAgIGlmIChzaG91bGRSZXRyeSkge1xuICAgICAgICAgICAgICAgIHRoaXMucXVldWUuZGVxdWV1ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZldGNoTmV4dChkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyB1cGRhdGUgdGhlIGNvbnRpbnVhdGlvbiB2YWx1ZSBmb3IgdGhlIGN1cnJlbnQgZmVlZCByYW5nZS5cbiAgICAgICAgICAgICAgICBjb25zdCBjb250aW51YXRpb25WYWx1ZUZvckZlZWRSYW5nZSA9IHJlc3VsdC5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5FVGFnXTtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdGZWVkUmFuZ2UgPSB0aGlzLnF1ZXVlLnBlZWsoKTtcbiAgICAgICAgICAgICAgICBuZXdGZWVkUmFuZ2UuY29udGludWF0aW9uVG9rZW4gPSBjb250aW51YXRpb25WYWx1ZUZvckZlZWRSYW5nZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gW25ld0ZlZWRSYW5nZSwgcmVzdWx0XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbdW5kZWZpbmVkLCB1bmRlZmluZWRdO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNoZWNrZWRBbGxGZWVkUmFuZ2VzKGZpcnN0Tm90TW9kaWZpZWRGZWVkUmFuZ2UpIHtcbiAgICAgICAgaWYgKGZpcnN0Tm90TW9kaWZpZWRGZWVkUmFuZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZlZWRSYW5nZVF1ZXVlRmlyc3RFbGVtZW50ID0gdGhpcy5xdWV1ZS5wZWVrKCk7XG4gICAgICAgIHJldHVybiAoZmlyc3ROb3RNb2RpZmllZEZlZWRSYW5nZS5taW5JbmNsdXNpdmUgPT09IGZlZWRSYW5nZVF1ZXVlRmlyc3RFbGVtZW50Py5taW5JbmNsdXNpdmUgJiZcbiAgICAgICAgICAgIGZpcnN0Tm90TW9kaWZpZWRGZWVkUmFuZ2UubWF4RXhjbHVzaXZlID09PSBmZWVkUmFuZ2VRdWV1ZUZpcnN0RWxlbWVudD8ubWF4RXhjbHVzaXZlICYmXG4gICAgICAgICAgICBmaXJzdE5vdE1vZGlmaWVkRmVlZFJhbmdlLmVwa01pbkhlYWRlciA9PT0gZmVlZFJhbmdlUXVldWVGaXJzdEVsZW1lbnQ/LmVwa01pbkhlYWRlciAmJlxuICAgICAgICAgICAgZmlyc3ROb3RNb2RpZmllZEZlZWRSYW5nZS5lcGtNYXhIZWFkZXIgPT09IGZlZWRSYW5nZVF1ZXVlRmlyc3RFbGVtZW50Py5lcGtNYXhIZWFkZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgY3VycmVudCBFcGtSYW5nZSBpcyBzcGxpdCBpbnRvIG11bHRpcGxlIHJhbmdlcyBvciBub3QuXG4gICAgICpcbiAgICAgKiBJZiB5ZXMsIGl0IGZvcmNlIHJlZnJlc2hlcyB0aGUgcGFydGl0aW9uS2V5UmFuZ2UgY2FjaGUgYW5kIGVucXVldWUgY2hpbGRyZW4gZXBrIHJhbmdlcy5cbiAgICAgKi9cbiAgICBhc3luYyBzaG91bGRSZXRyeU9uRmFpbHVyZShmZWVkUmFuZ2UsIHJlc3BvbnNlLCBkaWFnbm9zdGljTm9kZSkge1xuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gU3RhdHVzQ29kZXMuT2sgfHwgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gU3RhdHVzQ29kZXMuTm90TW9kaWZpZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXJ0aXRpb25TcGxpdCA9IHJlc3BvbnNlLnN0YXR1c0NvZGUgPT09IFN0YXR1c0NvZGVzLkdvbmUgJiZcbiAgICAgICAgICAgIChyZXNwb25zZS5zdWJTdGF0dXNDb2RlID09PSBTdWJTdGF0dXNDb2Rlcy5QYXJ0aXRpb25LZXlSYW5nZUdvbmUgfHxcbiAgICAgICAgICAgICAgICByZXNwb25zZS5zdWJTdGF0dXNDb2RlID09PSBTdWJTdGF0dXNDb2Rlcy5Db21wbGV0aW5nU3BsaXQpO1xuICAgICAgICBpZiAocGFydGl0aW9uU3BsaXQpIHtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5UmFuZ2UgPSBuZXcgUXVlcnlSYW5nZShmZWVkUmFuZ2UuZXBrTWluSGVhZGVyID8gZmVlZFJhbmdlLmVwa01pbkhlYWRlciA6IGZlZWRSYW5nZS5taW5JbmNsdXNpdmUsIGZlZWRSYW5nZS5lcGtNYXhIZWFkZXIgPyBmZWVkUmFuZ2UuZXBrTWF4SGVhZGVyIDogZmVlZFJhbmdlLm1heEV4Y2x1c2l2ZSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgY29uc3QgcmVzb2x2ZWRSYW5nZXMgPSBhd2FpdCB0aGlzLnBhcnRpdGlvbktleVJhbmdlQ2FjaGUuZ2V0T3ZlcmxhcHBpbmdSYW5nZXModGhpcy51cmwsIHF1ZXJ5UmFuZ2UsIGRpYWdub3N0aWNOb2RlLCB0cnVlKTtcbiAgICAgICAgICAgIGlmIChyZXNvbHZlZFJhbmdlcy5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJQYXJ0aXRpb24gc3BsaXQvbWVyZ2UgZGV0ZWN0ZWQgYnV0IG5vIG92ZXJsYXBwaW5nIHJhbmdlcyBmb3VuZC5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUaGlzIGNvdmVycyBib3RoIGNhc2VzIG9mIG1lcmdlIGFuZCBzcGxpdC5cbiAgICAgICAgICAgIC8vIHJlc29sdmVkUmFuZ2VzLmxlbmd0aCA+IDEgaW4gY2FzZSBvZiBzcGxpdC5cbiAgICAgICAgICAgIC8vIHJlc29sdmVkUmFuZ2VzLmxlbmd0aCA9PT0gMSBpbiBjYXNlIG9mIG1lcmdlLiBFcGtSYW5nZSBoZWFkZXJzIHdpbGwgYmUgYWRkZWQgaW4gdGhpcyBjYXNlLlxuICAgICAgICAgICAgaWYgKHJlc29sdmVkUmFuZ2VzLmxlbmd0aCA+PSAxKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5oYW5kbGVTcGxpdE9yTWVyZ2UoZmFsc2UsIHJlc29sdmVkUmFuZ2VzLCBxdWVyeVJhbmdlLCBmZWVkUmFuZ2UuY29udGludWF0aW9uVG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvKlxuICAgICAqIEVucXVldWVzIGFsbCB0aGUgY2hpbGRyZW4gZmVlZCByYW5nZXMgZm9yIHRoZSBnaXZlbiBmZWVkIHJhbmdlLlxuICAgICAqL1xuICAgIGFzeW5jIGhhbmRsZVNwbGl0T3JNZXJnZShzaGlmdExlZnQsIHJlc29sdmVkUmFuZ2VzLCBvbGRGZWVkUmFuZ2UsIGNvbnRpbnVhdGlvblRva2VuKSB7XG4gICAgICAgIGxldCBmbGFnID0gMDtcbiAgICAgICAgaWYgKHNoaWZ0TGVmdCkge1xuICAgICAgICAgICAgLy8gVGhpcyBzZWN0aW9uIGlzIG9ubHkgYXBwbGljYWJsZSB3aGVuIGhhbmRsZVNwbGl0T3JNZXJnZSBpcyBjYWxsZWQgYnkgZ2V0UGFydGl0aW9uUmFuZ2VJZCgpLlxuICAgICAgICAgICAgLy8gdXNlZCBvbmx5IHdoZW4gZXhpc3RpbmcgcGFydGl0aW9uIGtleSByYW5nZSBjYWNoZSBpcyB1c2VkIHRvIGNoZWNrIGZvciBhbnkgb3ZlcmxhcHBpbmcgcmFuZ2VzLlxuICAgICAgICAgICAgLy8gTW9kaWZpZXMgdGhlIGZpcnN0IGVsZW1lbnQgd2l0aCB0aGUgZmlyc3Qgb3ZlcmxhcHBpbmcgcmFuZ2UuXG4gICAgICAgICAgICBjb25zdCBbZXBrTWluSGVhZGVyLCBlcGtNYXhIZWFkZXJdID0gYXdhaXQgZXh0cmFjdE92ZXJsYXBwaW5nUmFuZ2VzKG9sZEZlZWRSYW5nZSwgcmVzb2x2ZWRSYW5nZXNbMF0pO1xuICAgICAgICAgICAgY29uc3QgbmV3RmVlZFJhbmdlID0gbmV3IENoYW5nZUZlZWRSYW5nZShyZXNvbHZlZFJhbmdlc1swXS5taW5JbmNsdXNpdmUsIHJlc29sdmVkUmFuZ2VzWzBdLm1heEV4Y2x1c2l2ZSwgY29udGludWF0aW9uVG9rZW4sIGVwa01pbkhlYWRlciwgZXBrTWF4SGVhZGVyKTtcbiAgICAgICAgICAgIHRoaXMucXVldWUubW9kaWZ5Rmlyc3RFbGVtZW50KG5ld0ZlZWRSYW5nZSk7XG4gICAgICAgICAgICBmbGFnID0gMTtcbiAgICAgICAgfVxuICAgICAgICAvLyBFbnF1ZXVlIHRoZSBvdmVybGFwcGluZyByYW5nZXMuXG4gICAgICAgIGZvciAobGV0IGkgPSBmbGFnOyBpIDwgcmVzb2x2ZWRSYW5nZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IFtlcGtNaW5IZWFkZXIsIGVwa01heEhlYWRlcl0gPSBhd2FpdCBleHRyYWN0T3ZlcmxhcHBpbmdSYW5nZXMob2xkRmVlZFJhbmdlLCByZXNvbHZlZFJhbmdlc1tpXSk7XG4gICAgICAgICAgICBjb25zdCBuZXdGZWVkUmFuZ2UgPSBuZXcgQ2hhbmdlRmVlZFJhbmdlKHJlc29sdmVkUmFuZ2VzW2ldLm1pbkluY2x1c2l2ZSwgcmVzb2x2ZWRSYW5nZXNbaV0ubWF4RXhjbHVzaXZlLCBjb250aW51YXRpb25Ub2tlbiwgZXBrTWluSGVhZGVyLCBlcGtNYXhIZWFkZXIpO1xuICAgICAgICAgICAgdGhpcy5xdWV1ZS5lbnF1ZXVlKG5ld0ZlZWRSYW5nZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRmV0Y2ggdGhlIHBhcnRpdGlvbktleVJhbmdlSWQgZm9yIHRoZSBnaXZlbiBmZWVkIHJhbmdlLlxuICAgICAqXG4gICAgICogVGhpcyBwYXJ0aXRpb25LZXlSYW5nZUlkIGlzIHBhc3NlZCB0byBxdWVyeUZlZWQgdG8gZmV0Y2ggdGhlIHJlc3VsdHMuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0UGFydGl0aW9uUmFuZ2VJZChmZWVkUmFuZ2UsIGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IG1pbiA9IGZlZWRSYW5nZS5lcGtNaW5IZWFkZXIgPyBmZWVkUmFuZ2UuZXBrTWluSGVhZGVyIDogZmVlZFJhbmdlLm1pbkluY2x1c2l2ZTtcbiAgICAgICAgY29uc3QgbWF4ID0gZmVlZFJhbmdlLmVwa01heEhlYWRlciA/IGZlZWRSYW5nZS5lcGtNYXhIZWFkZXIgOiBmZWVkUmFuZ2UubWF4RXhjbHVzaXZlO1xuICAgICAgICBjb25zdCBxdWVyeVJhbmdlID0gbmV3IFF1ZXJ5UmFuZ2UobWluLCBtYXgsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgY29uc3QgcmVzb2x2ZWRSYW5nZXMgPSBhd2FpdCB0aGlzLnBhcnRpdGlvbktleVJhbmdlQ2FjaGUuZ2V0T3ZlcmxhcHBpbmdSYW5nZXModGhpcy51cmwsIHF1ZXJ5UmFuZ2UsIGRpYWdub3N0aWNOb2RlLCBmYWxzZSk7XG4gICAgICAgIGlmIChyZXNvbHZlZFJhbmdlcy5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JSZXNwb25zZShcIk5vIG92ZXJsYXBwaW5nIHJhbmdlcyBmb3VuZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmlyc3RSZXNvbHZlZFJhbmdlID0gcmVzb2x2ZWRSYW5nZXNbMF07XG4gICAgICAgIGNvbnN0IGlzUGFydGl0aW9uUmFuZ2VDaGFuZ2VkID0gZmVlZFJhbmdlLm1pbkluY2x1c2l2ZSAhPT0gZmlyc3RSZXNvbHZlZFJhbmdlLm1pbkluY2x1c2l2ZSB8fFxuICAgICAgICAgICAgZmVlZFJhbmdlLm1heEV4Y2x1c2l2ZSAhPT0gZmlyc3RSZXNvbHZlZFJhbmdlLm1heEV4Y2x1c2l2ZSB8fFxuICAgICAgICAgICAgcmVzb2x2ZWRSYW5nZXMubGVuZ3RoID4gMTtcbiAgICAgICAgLy8gSWYgdGhlIHBhcnRpdGlvbiByYW5nZSBpcyBjaGFuZ2VkLCB3ZSBuZWVkIHRvIGhhbmRsZSBzcGxpdC9tZXJnZVxuICAgICAgICBpZiAoaXNQYXJ0aXRpb25SYW5nZUNoYW5nZWQpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuaGFuZGxlU3BsaXRPck1lcmdlKHRydWUsIHJlc29sdmVkUmFuZ2VzLCBxdWVyeVJhbmdlLCBmZWVkUmFuZ2UuY29udGludWF0aW9uVG9rZW4pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaXJzdFJlc29sdmVkUmFuZ2UuaWQ7XG4gICAgfVxuICAgIGFzeW5jIGdldEZlZWRSZXNwb25zZShmZWVkUmFuZ2UsIGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IGZlZWRPcHRpb25zID0ge1xuICAgICAgICAgICAgaW5pdGlhbEhlYWRlcnM6IHt9LFxuICAgICAgICAgICAgdXNlTGF0ZXN0VmVyc2lvbkZlZWQ6IHRydWUsXG4gICAgICAgICAgICB1c2VBbGxWZXJzaW9uc0FuZERlbGV0ZXNGZWVkOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmNoYW5nZUZlZWRPcHRpb25zLm1heEl0ZW1Db3VudCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgZmVlZE9wdGlvbnMubWF4SXRlbUNvdW50ID0gdGhpcy5jaGFuZ2VGZWVkT3B0aW9ucy5tYXhJdGVtQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2hhbmdlRmVlZE9wdGlvbnMuc2Vzc2lvblRva2VuKSB7XG4gICAgICAgICAgICBmZWVkT3B0aW9ucy5zZXNzaW9uVG9rZW4gPSB0aGlzLmNoYW5nZUZlZWRPcHRpb25zLnNlc3Npb25Ub2tlbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZmVlZFJhbmdlLmNvbnRpbnVhdGlvblRva2VuKSB7XG4gICAgICAgICAgICBmZWVkT3B0aW9ucy5hY2Nlc3NDb25kaXRpb24gPSB7XG4gICAgICAgICAgICAgICAgdHlwZTogQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklmTm9uZU1hdGNoLFxuICAgICAgICAgICAgICAgIGNvbmRpdGlvbjogZmVlZFJhbmdlLmNvbnRpbnVhdGlvblRva2VuLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLnN0YXJ0RnJvbU5vdykge1xuICAgICAgICAgICAgZmVlZE9wdGlvbnMuaW5pdGlhbEhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLklmTm9uZU1hdGNoXSA9XG4gICAgICAgICAgICAgICAgQ29uc3RhbnRzLkNoYW5nZUZlZWRJZk5vbmVNYXRjaFN0YXJ0RnJvbU5vd0hlYWRlcjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zdGFydFRpbWUpIHtcbiAgICAgICAgICAgIGZlZWRPcHRpb25zLmluaXRpYWxIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5JZk1vZGlmaWVkU2luY2VdID0gdGhpcy5zdGFydFRpbWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2hhbmdlRmVlZE9wdGlvbnMuY2hhbmdlRmVlZE1vZGUgJiZcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlRmVlZE9wdGlvbnMuY2hhbmdlRmVlZE1vZGUgPT09IENoYW5nZUZlZWRNb2RlLkFsbFZlcnNpb25zQW5kRGVsZXRlcykge1xuICAgICAgICAgICAgZmVlZE9wdGlvbnMudXNlQWxsVmVyc2lvbnNBbmREZWxldGVzRmVlZCA9IHRydWU7XG4gICAgICAgICAgICBmZWVkT3B0aW9ucy51c2VMYXRlc3RWZXJzaW9uRmVlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJhbmdlSWQgPSBhd2FpdCB0aGlzLmdldFBhcnRpdGlvblJhbmdlSWQoZmVlZFJhbmdlLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIGlmICh0aGlzLmNsaWVudENvbnRleHQuZW5hYmxlRW5jcnlwdGlvbikge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5jb250YWluZXIuY2hlY2tBbmRJbml0aWFsaXplRW5jcnlwdGlvbigpO1xuICAgICAgICAgICAgZmVlZE9wdGlvbnMuY29udGFpbmVyUmlkID0gdGhpcy5jb250YWluZXIuX3JpZDtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gc3RhcnRFcGsgYW5kIGVuZEVwayBhcmUgb25seSB2YWxpZCBpbiBjYXNlIHdlIHdhbnQgdG8gZmV0Y2ggcmVzdWx0IGZvciBhIHBhcnQgb2YgcGFydGl0aW9uIGFuZCBub3QgdGhlIGVudGlyZSBwYXJ0aXRpb24uXG4gICAgICAgICAgICBjb25zdCBmaW5hbEZlZWRSYW5nZSA9IHRoaXMuZmV0Y2hGaW5hbEZlZWRSYW5nZSgpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHtcbiAgICAgICAgICAgICAgICBwYXRoOiB0aGlzLnJlc291cmNlTGluayxcbiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IFJlc291cmNlVHlwZS5pdGVtLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IHRoaXMucmVzb3VyY2VJZCxcbiAgICAgICAgICAgICAgICByZXN1bHRGbjogKHJlc3VsdCkgPT4gKHJlc3VsdCA/IHJlc3VsdC5Eb2N1bWVudHMgOiBbXSksXG4gICAgICAgICAgICAgICAgcXVlcnk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBvcHRpb25zOiBmZWVkT3B0aW9ucyxcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZSxcbiAgICAgICAgICAgICAgICBwYXJ0aXRpb25LZXk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBwYXJ0aXRpb25LZXlSYW5nZUlkOiByYW5nZUlkLFxuICAgICAgICAgICAgICAgIHN0YXJ0RXBrOiBmaW5hbEZlZWRSYW5nZS5lcGtNaW5IZWFkZXIsXG4gICAgICAgICAgICAgICAgZW5kRXBrOiBmaW5hbEZlZWRSYW5nZS5lcGtNYXhIZWFkZXIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQ2hhbmdlRmVlZEl0ZXJhdG9yUmVzcG9uc2UocmVzcG9uc2UucmVzdWx0LCByZXNwb25zZS5yZXN1bHQgPyByZXNwb25zZS5yZXN1bHQubGVuZ3RoIDogMCwgcmVzcG9uc2UuY29kZSwgcmVzcG9uc2UuaGVhZGVycywgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcygpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAvLyBJZiBwYXJ0aXRpb24gc3BsaXQvbWVyZ2UgaXMgZW5jb3VudGVyZWQsIGhhbmRsZSBpdCBncmFjZWZ1bGx5IGFuZCBjb250aW51ZSBmZXRjaGluZyByZXN1bHRzLlxuICAgICAgICAgICAgaWYgKGVyci5jb2RlID09PSBTdGF0dXNDb2Rlcy5Hb25lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBDaGFuZ2VGZWVkSXRlcmF0b3JSZXNwb25zZShbXSwgMCwgZXJyLmNvZGUsIGVyci5oZWFkZXJzLCBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzKCksIGVyci5zdWJzdGF0dXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSWYgYW55IG90aGVyIGVycm9ycyBhcmUgZW5jb3VudGVyZWQsIHRocm93IHRoZSBlcnJvci5cbiAgICAgICAgICAgIGNvbnN0IGVycm9yUmVzcG9uc2UgPSBuZXcgRXJyb3JSZXNwb25zZShlcnIubWVzc2FnZSk7XG4gICAgICAgICAgICBlcnJvclJlc3BvbnNlLmNvZGUgPSBlcnIuY29kZTtcbiAgICAgICAgICAgIGVycm9yUmVzcG9uc2UuaGVhZGVycyA9IGVyci5oZWFkZXJzO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3JSZXNwb25zZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmZXRjaEZpbmFsRmVlZFJhbmdlKCkge1xuICAgICAgICAvLyB0aGlzIGlzIHVzZWQgdG8gZmV0Y2ggdGhlIGZpbmFsIGZlZWQgcmFuZ2UgYmVmb3JlIG1ha2luZyBhIGNhbGwgdG8gZmV0Y2ggdGhlIHJlc3VsdHMuXG4gICAgICAgIC8vIEluIGNhc2Ugb2YgbWVyZ2UsIHRoZSBmaW5hbCB1cGRhdGVkIGZlZWQgcmFuZ2UgaXMgcHJlc2VudCBpbiB0aGUgcXVldWUgYW5kIG5lZWRzIHRvIGJlIHJldHVybmVkLlxuICAgICAgICBjb25zdCBmZWVkUmFuZ2UgPSB0aGlzLnF1ZXVlLnBlZWsoKTtcbiAgICAgICAgaWYgKGZlZWRSYW5nZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZlZWRSYW5nZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKFwiTm8gZmVlZCByYW5nZSBmb3VuZC5cIik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFuZ2VGZWVkRm9yRXBrUmFuZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForEpkRange.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForPartitionKey.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForPartitionKey.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedForPartitionKey: () => (/* binding */ ChangeFeedForPartitionKey)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChangeFeedIteratorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorResponse.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _ContinuationTokenForPartitionKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ContinuationTokenForPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ContinuationTokenForPartitionKey.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ChangeFeedMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js\");\n/* harmony import */ var _changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./changeFeedUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\");\n/* harmony import */ var _ClientUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * Provides iterator for change feed for one partition key.\n *\n * Use `Items.getChangeFeedIterator()` to get an instance of the iterator.\n */\nclass ChangeFeedForPartitionKey {\n    clientContext;\n    container;\n    resourceId;\n    resourceLink;\n    partitionKey;\n    changeFeedOptions;\n    continuationToken;\n    startTime;\n    rId;\n    isInstantiated;\n    startFromNow;\n    /**\n     * @internal\n     */\n    constructor(clientContext, container, resourceId, resourceLink, partitionKey, changeFeedOptions) {\n        this.clientContext = clientContext;\n        this.container = container;\n        this.resourceId = resourceId;\n        this.resourceLink = resourceLink;\n        this.partitionKey = partitionKey;\n        this.changeFeedOptions = changeFeedOptions;\n        this.continuationToken = changeFeedOptions.continuationToken\n            ? JSON.parse(changeFeedOptions.continuationToken)\n            : undefined;\n        this.isInstantiated = false;\n        // startTime is used to store and specify time from which change feed should start reading new changes. StartFromNow flag is used to indicate fetching changes from now.\n        if (changeFeedOptions.startFromNow) {\n            this.startFromNow = true;\n        }\n        else if (changeFeedOptions.startTime) {\n            this.startTime = changeFeedOptions.startTime.toUTCString();\n        }\n    }\n    async instantiateIterator(diagnosticNode) {\n        await this.setIteratorRid(diagnosticNode);\n        if (this.clientContext.enableEncryption) {\n            await this.container.checkAndInitializeEncryption();\n            // returns copy of object to avoid encryption of original partition key passed\n            this.partitionKey = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.copyObject)(this.partitionKey);\n            diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation);\n            const { partitionKeyList, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue((0,_documents_index_js__WEBPACK_IMPORTED_MODULE_4__.convertToInternalPartitionKey)(this.partitionKey));\n            this.partitionKey = partitionKeyList;\n            diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation, encryptedCount);\n        }\n        if (this.continuationToken) {\n            if (!this.continuationTokenRidMatchContainerRid()) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse(\"The continuation is not for the current container definition.\");\n            }\n        }\n        else {\n            this.continuationToken = new _ContinuationTokenForPartitionKey_js__WEBPACK_IMPORTED_MODULE_3__.ContinuationTokenForPartitionKey(this.rId, this.partitionKey, \"\");\n        }\n        this.isInstantiated = true;\n    }\n    continuationTokenRidMatchContainerRid() {\n        if (this.continuationToken.rid !== this.rId) {\n            return false;\n        }\n        return true;\n    }\n    async setIteratorRid(diagnosticNode) {\n        const { resource } = await this.container.readInternal(diagnosticNode);\n        this.rId = resource._rid;\n    }\n    /**\n     * Change feed is an infinite feed. hasMoreResults is always true.\n     */\n    get hasMoreResults() {\n        return true;\n    }\n    /**\n     * Gets an async iterator which will yield change feed results.\n     */\n    async *getAsyncIterator() {\n        do {\n            const result = await this.readNext();\n            yield result;\n        } while (this.hasMoreResults);\n    }\n    /**\n     * Returns the result of change feed from Azure Cosmos DB.\n     */\n    async readNext() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            if (!this.isInstantiated) {\n                await this.instantiateIterator(diagnosticNode);\n            }\n            const result = await this.fetchNext(diagnosticNode);\n            if (result.statusCode === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.Ok) {\n                if (this.clientContext.enableEncryption) {\n                    await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_7__.decryptChangeFeedResponse)(result, diagnosticNode, this.changeFeedOptions.changeFeedMode, this.container.encryptionProcessor);\n                }\n            }\n            return result;\n        }, this.clientContext);\n    }\n    /**\n     * Read feed and retrieves the next set of results in Azure Cosmos DB.\n     */\n    async fetchNext(diagnosticNode) {\n        const response = await this.getFeedResponse(diagnosticNode);\n        this.continuationToken.Continuation = response.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ETag];\n        response.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ContinuationToken] = JSON.stringify(this.continuationToken);\n        return response;\n    }\n    async getFeedResponse(diagnosticNode) {\n        const feedOptions = {\n            initialHeaders: {},\n            useLatestVersionFeed: true,\n            useAllVersionsAndDeletesFeed: false,\n        };\n        if (typeof this.changeFeedOptions.maxItemCount === \"number\") {\n            feedOptions.maxItemCount = this.changeFeedOptions.maxItemCount;\n        }\n        if (this.changeFeedOptions.sessionToken) {\n            feedOptions.sessionToken = this.changeFeedOptions.sessionToken;\n        }\n        const continuation = this.continuationToken.Continuation;\n        if (continuation) {\n            feedOptions.accessCondition = {\n                type: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfNoneMatch,\n                condition: continuation,\n            };\n        }\n        else if (this.startFromNow) {\n            feedOptions.initialHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfNoneMatch] =\n                _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.ChangeFeedIfNoneMatchStartFromNowHeader;\n        }\n        if (this.startTime) {\n            feedOptions.initialHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfModifiedSince] = this.startTime;\n        }\n        if (this.changeFeedOptions.changeFeedMode &&\n            this.changeFeedOptions.changeFeedMode === _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_6__.ChangeFeedMode.AllVersionsAndDeletes) {\n            feedOptions.useAllVersionsAndDeletesFeed = true;\n            feedOptions.useLatestVersionFeed = false;\n        }\n        if (this.clientContext.enableEncryption) {\n            feedOptions.containerRid = this.container._rid;\n        }\n        try {\n            const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n            const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_8__.computePartitionKeyRangeId)(diagnosticNode, (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_4__.convertToInternalPartitionKey)(this.partitionKey), this.clientContext.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n            const response = await this.clientContext.queryFeed({\n                path: this.resourceLink,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n                resourceId: this.resourceId,\n                resultFn: (result) => (result ? result.Documents : []),\n                diagnosticNode,\n                query: undefined,\n                options: feedOptions,\n                partitionKey: this.partitionKey,\n                partitionKeyRangeId,\n            });\n            return new _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedIteratorResponse(response.result, response.result ? response.result.length : 0, response.code, response.headers, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }\n        catch (err) {\n            // If any errors are encountered, throw the error.\n            const errorResponse = new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse(err.message);\n            errorResponse.code = err.code;\n            errorResponse.headers = err.headers;\n            throw errorResponse;\n        }\n    }\n}\n//# sourceMappingURL=ChangeFeedForPartitionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForPartitionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorBuilder.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorBuilder.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedIteratorBuilder: () => (/* binding */ ChangeFeedIteratorBuilder)\n/* harmony export */ });\n/* harmony import */ var _buildChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildChangeFeedIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/buildChangeFeedIterator.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\n\n/**\n * @hidden\n * Provides iterator for change feed.\n *\n * Use `Items.getChangeFeedIterator()` to get an instance of the iterator.\n */\nclass ChangeFeedIteratorBuilder {\n    cfOptions;\n    clientContext;\n    container;\n    partitionKeyRangeCache;\n    iterator;\n    isInitialized;\n    /**\n     * @internal\n     */\n    constructor(cfOptions, clientContext, container, partitionKeyRangeCache) {\n        this.cfOptions = cfOptions;\n        this.clientContext = clientContext;\n        this.container = container;\n        this.partitionKeyRangeCache = partitionKeyRangeCache;\n        this.isInitialized = false;\n    }\n    /**\n     * Change feed is an infinite feed. hasMoreResults is always true.\n     */\n    get hasMoreResults() {\n        return true;\n    }\n    /**\n     * Gets an async iterator which will yield change feed results.\n     */\n    async *getAsyncIterator() {\n        await this.initializeIterator();\n        do {\n            const result = await this.iterator.readNext();\n            yield result;\n        } while (this.hasMoreResults);\n    }\n    /**\n     * Returns the result of change feed from Azure Cosmos DB.\n     */\n    async readNext() {\n        await this.initializeIterator();\n        return this.iterator.readNext();\n    }\n    async initializeIterator() {\n        if (!this.isInitialized) {\n            try {\n                const iterator = await (0,_buildChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_0__.buildChangeFeedIterator)(this.cfOptions, this.clientContext, this.container, this.partitionKeyRangeCache);\n                this.isInitialized = true;\n                this.iterator = iterator;\n            }\n            catch (err) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(err.message);\n            }\n        }\n    }\n}\n//# sourceMappingURL=ChangeFeedIteratorBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkSXRlcmF0b3JCdWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RTtBQUNoQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLG9GQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0REFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkSXRlcmF0b3JCdWlsZGVyLmpzP2VjYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnVpbGRDaGFuZ2VGZWVkSXRlcmF0b3IgfSBmcm9tIFwiLi9idWlsZENoYW5nZUZlZWRJdGVyYXRvci5qc1wiO1xuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqIFByb3ZpZGVzIGl0ZXJhdG9yIGZvciBjaGFuZ2UgZmVlZC5cbiAqXG4gKiBVc2UgYEl0ZW1zLmdldENoYW5nZUZlZWRJdGVyYXRvcigpYCB0byBnZXQgYW4gaW5zdGFuY2Ugb2YgdGhlIGl0ZXJhdG9yLlxuICovXG5leHBvcnQgY2xhc3MgQ2hhbmdlRmVlZEl0ZXJhdG9yQnVpbGRlciB7XG4gICAgY2ZPcHRpb25zO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgY29udGFpbmVyO1xuICAgIHBhcnRpdGlvbktleVJhbmdlQ2FjaGU7XG4gICAgaXRlcmF0b3I7XG4gICAgaXNJbml0aWFsaXplZDtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjZk9wdGlvbnMsIGNsaWVudENvbnRleHQsIGNvbnRhaW5lciwgcGFydGl0aW9uS2V5UmFuZ2VDYWNoZSkge1xuICAgICAgICB0aGlzLmNmT3B0aW9ucyA9IGNmT3B0aW9ucztcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMucGFydGl0aW9uS2V5UmFuZ2VDYWNoZSA9IHBhcnRpdGlvbktleVJhbmdlQ2FjaGU7XG4gICAgICAgIHRoaXMuaXNJbml0aWFsaXplZCA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgZmVlZCBpcyBhbiBpbmZpbml0ZSBmZWVkLiBoYXNNb3JlUmVzdWx0cyBpcyBhbHdheXMgdHJ1ZS5cbiAgICAgKi9cbiAgICBnZXQgaGFzTW9yZVJlc3VsdHMoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGFuIGFzeW5jIGl0ZXJhdG9yIHdoaWNoIHdpbGwgeWllbGQgY2hhbmdlIGZlZWQgcmVzdWx0cy5cbiAgICAgKi9cbiAgICBhc3luYyAqZ2V0QXN5bmNJdGVyYXRvcigpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplSXRlcmF0b3IoKTtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5pdGVyYXRvci5yZWFkTmV4dCgpO1xuICAgICAgICAgICAgeWllbGQgcmVzdWx0O1xuICAgICAgICB9IHdoaWxlICh0aGlzLmhhc01vcmVSZXN1bHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgcmVzdWx0IG9mIGNoYW5nZSBmZWVkIGZyb20gQXp1cmUgQ29zbW9zIERCLlxuICAgICAqL1xuICAgIGFzeW5jIHJlYWROZXh0KCkge1xuICAgICAgICBhd2FpdCB0aGlzLmluaXRpYWxpemVJdGVyYXRvcigpO1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVyYXRvci5yZWFkTmV4dCgpO1xuICAgIH1cbiAgICBhc3luYyBpbml0aWFsaXplSXRlcmF0b3IoKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZXJhdG9yID0gYXdhaXQgYnVpbGRDaGFuZ2VGZWVkSXRlcmF0b3IodGhpcy5jZk9wdGlvbnMsIHRoaXMuY2xpZW50Q29udGV4dCwgdGhpcy5jb250YWluZXIsIHRoaXMucGFydGl0aW9uS2V5UmFuZ2VDYWNoZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5pc0luaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZXJhdG9yID0gaXRlcmF0b3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoZXJyLm1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZEl0ZXJhdG9yQnVpbGRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorBuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorResponse.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorResponse.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedIteratorResponse: () => (/* binding */ ChangeFeedIteratorResponse)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n\n/**\n * A single response page from the Azure Cosmos DB Change Feed\n */\nclass ChangeFeedIteratorResponse {\n    result;\n    count;\n    statusCode;\n    diagnostics;\n    subStatusCode;\n    /**\n     * @internal\n     */\n    constructor(\n    /**\n     * Gets the items returned in the response from Azure Cosmos DB\n     */\n    result, \n    /**\n     * Gets the number of items returned in the response from Azure Cosmos DB\n     */\n    count, \n    /**\n     * Gets the status code of the response from Azure Cosmos DB\n     */\n    statusCode, \n    /**\n     * Headers related to cosmos DB and change feed.\n     */\n    headers, \n    /**\n     * Cosmos Diagnostic Object.\n     */\n    diagnostics, \n    /**\n     * Gets the subStatusCodes of the response from Azure Cosmos DB. Useful in partition split or partition gone.\n     */\n    subStatusCode) {\n        this.result = result;\n        this.count = count;\n        this.statusCode = statusCode;\n        this.diagnostics = diagnostics;\n        this.subStatusCode = subStatusCode;\n        this.headers = headers;\n    }\n    /**\n     * Gets the request charge for this request from the Azure Cosmos DB service.\n     */\n    get requestCharge() {\n        const rus = this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge];\n        return rus ? parseInt(rus, 10) : null;\n    }\n    /**\n     * Gets the activity ID for the request from the Azure Cosmos DB service.\n     */\n    get activityId() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId];\n    }\n    /**\n     * Gets the continuation token to be used for continuing enumeration of the Azure Cosmos DB service.\n     */\n    get continuationToken() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ContinuationToken];\n    }\n    /**\n     * Gets the session token for use in session consistency reads from the Azure Cosmos DB service.\n     */\n    get sessionToken() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.SessionToken];\n    }\n    /**\n     * Response headers of the response from Azure Cosmos DB\n     */\n    headers;\n}\n//# sourceMappingURL=ChangeFeedIteratorResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkSXRlcmF0b3JSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdURBQVM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVEQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdURBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1REFBUztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NoYW5nZUZlZWQvQ2hhbmdlRmVlZEl0ZXJhdG9yUmVzcG9uc2UuanM/YmQ2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2luZGV4LmpzXCI7XG4vKipcbiAqIEEgc2luZ2xlIHJlc3BvbnNlIHBhZ2UgZnJvbSB0aGUgQXp1cmUgQ29zbW9zIERCIENoYW5nZSBGZWVkXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFuZ2VGZWVkSXRlcmF0b3JSZXNwb25zZSB7XG4gICAgcmVzdWx0O1xuICAgIGNvdW50O1xuICAgIHN0YXR1c0NvZGU7XG4gICAgZGlhZ25vc3RpY3M7XG4gICAgc3ViU3RhdHVzQ29kZTtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBpdGVtcyByZXR1cm5lZCBpbiB0aGUgcmVzcG9uc2UgZnJvbSBBenVyZSBDb3Ntb3MgREJcbiAgICAgKi9cbiAgICByZXN1bHQsIFxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIG51bWJlciBvZiBpdGVtcyByZXR1cm5lZCBpbiB0aGUgcmVzcG9uc2UgZnJvbSBBenVyZSBDb3Ntb3MgREJcbiAgICAgKi9cbiAgICBjb3VudCwgXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgc3RhdHVzIGNvZGUgb2YgdGhlIHJlc3BvbnNlIGZyb20gQXp1cmUgQ29zbW9zIERCXG4gICAgICovXG4gICAgc3RhdHVzQ29kZSwgXG4gICAgLyoqXG4gICAgICogSGVhZGVycyByZWxhdGVkIHRvIGNvc21vcyBEQiBhbmQgY2hhbmdlIGZlZWQuXG4gICAgICovXG4gICAgaGVhZGVycywgXG4gICAgLyoqXG4gICAgICogQ29zbW9zIERpYWdub3N0aWMgT2JqZWN0LlxuICAgICAqL1xuICAgIGRpYWdub3N0aWNzLCBcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBzdWJTdGF0dXNDb2RlcyBvZiB0aGUgcmVzcG9uc2UgZnJvbSBBenVyZSBDb3Ntb3MgREIuIFVzZWZ1bCBpbiBwYXJ0aXRpb24gc3BsaXQgb3IgcGFydGl0aW9uIGdvbmUuXG4gICAgICovXG4gICAgc3ViU3RhdHVzQ29kZSkge1xuICAgICAgICB0aGlzLnJlc3VsdCA9IHJlc3VsdDtcbiAgICAgICAgdGhpcy5jb3VudCA9IGNvdW50O1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgICAgICB0aGlzLmRpYWdub3N0aWNzID0gZGlhZ25vc3RpY3M7XG4gICAgICAgIHRoaXMuc3ViU3RhdHVzQ29kZSA9IHN1YlN0YXR1c0NvZGU7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHJlcXVlc3QgY2hhcmdlIGZvciB0aGlzIHJlcXVlc3QgZnJvbSB0aGUgQXp1cmUgQ29zbW9zIERCIHNlcnZpY2UuXG4gICAgICovXG4gICAgZ2V0IHJlcXVlc3RDaGFyZ2UoKSB7XG4gICAgICAgIGNvbnN0IHJ1cyA9IHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuUmVxdWVzdENoYXJnZV07XG4gICAgICAgIHJldHVybiBydXMgPyBwYXJzZUludChydXMsIDEwKSA6IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGFjdGl2aXR5IElEIGZvciB0aGUgcmVxdWVzdCBmcm9tIHRoZSBBenVyZSBDb3Ntb3MgREIgc2VydmljZS5cbiAgICAgKi9cbiAgICBnZXQgYWN0aXZpdHlJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuQWN0aXZpdHlJZF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGNvbnRpbnVhdGlvbiB0b2tlbiB0byBiZSB1c2VkIGZvciBjb250aW51aW5nIGVudW1lcmF0aW9uIG9mIHRoZSBBenVyZSBDb3Ntb3MgREIgc2VydmljZS5cbiAgICAgKi9cbiAgICBnZXQgY29udGludWF0aW9uVG9rZW4oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkNvbnRpbnVhdGlvblRva2VuXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgc2Vzc2lvbiB0b2tlbiBmb3IgdXNlIGluIHNlc3Npb24gY29uc2lzdGVuY3kgcmVhZHMgZnJvbSB0aGUgQXp1cmUgQ29zbW9zIERCIHNlcnZpY2UuXG4gICAgICovXG4gICAgZ2V0IHNlc3Npb25Ub2tlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuU2Vzc2lvblRva2VuXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzcG9uc2UgaGVhZGVycyBvZiB0aGUgcmVzcG9uc2UgZnJvbSBBenVyZSBDb3Ntb3MgREJcbiAgICAgKi9cbiAgICBoZWFkZXJzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZEl0ZXJhdG9yUmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedMode: () => (/* binding */ ChangeFeedMode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar ChangeFeedMode;\n(function (ChangeFeedMode) {\n    ChangeFeedMode[\"LatestVersion\"] = \"Incremental Feed\";\n    ChangeFeedMode[\"AllVersionsAndDeletes\"] = \"Full-Fidelity Feed\";\n})(ChangeFeedMode || (ChangeFeedMode = {}));\n//# sourceMappingURL=ChangeFeedMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkTW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9DaGFuZ2VGZWVkL0NoYW5nZUZlZWRNb2RlLmpzP2FmM2EiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgdmFyIENoYW5nZUZlZWRNb2RlO1xuKGZ1bmN0aW9uIChDaGFuZ2VGZWVkTW9kZSkge1xuICAgIENoYW5nZUZlZWRNb2RlW1wiTGF0ZXN0VmVyc2lvblwiXSA9IFwiSW5jcmVtZW50YWwgRmVlZFwiO1xuICAgIENoYW5nZUZlZWRNb2RlW1wiQWxsVmVyc2lvbnNBbmREZWxldGVzXCJdID0gXCJGdWxsLUZpZGVsaXR5IEZlZWRcIjtcbn0pKENoYW5nZUZlZWRNb2RlIHx8IChDaGFuZ2VGZWVkTW9kZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFuZ2VGZWVkTW9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedPolicy: () => (/* binding */ ChangeFeedPolicy)\n/* harmony export */ });\n/**\n * Represents the change feed policy configuration for a container in the Azure Cosmos DB service.\n */\nclass ChangeFeedPolicy {\n    retentionDuration;\n    constructor(retentionDuration) {\n        this.retentionDuration = retentionDuration.getRetentionInMinutes();\n    }\n}\n//# sourceMappingURL=ChangeFeedPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkUG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NoYW5nZUZlZWQvQ2hhbmdlRmVlZFBvbGljeS5qcz9mMzMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwcmVzZW50cyB0aGUgY2hhbmdlIGZlZWQgcG9saWN5IGNvbmZpZ3VyYXRpb24gZm9yIGEgY29udGFpbmVyIGluIHRoZSBBenVyZSBDb3Ntb3MgREIgc2VydmljZS5cbiAqL1xuZXhwb3J0IGNsYXNzIENoYW5nZUZlZWRQb2xpY3kge1xuICAgIHJldGVudGlvbkR1cmF0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHJldGVudGlvbkR1cmF0aW9uKSB7XG4gICAgICAgIHRoaXMucmV0ZW50aW9uRHVyYXRpb24gPSByZXRlbnRpb25EdXJhdGlvbi5nZXRSZXRlbnRpb25Jbk1pbnV0ZXMoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFuZ2VGZWVkUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRange.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRange.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedRange: () => (/* binding */ ChangeFeedRange)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n * FeedRange for which change feed is being requested.\n */\nclass ChangeFeedRange {\n    /**\n     * Min value for the range.\n     */\n    minInclusive;\n    /**\n     * Max value for the range.\n     */\n    maxExclusive;\n    /**\n     * Continuation token from where to start reading changes.\n     */\n    continuationToken;\n    /**\n     * Min epk value to begin reading changes from in case changefeed of entire partition is not requested.\n     */\n    epkMinHeader;\n    /**\n     * Max epk value to begin reading changes from in case changefeed of entire partition is not requested.\n     */\n    epkMaxHeader;\n    constructor(minInclusive, maxExclusive, continuationToken, epkMinHeader, epkMaxHeader) {\n        this.minInclusive = minInclusive;\n        this.maxExclusive = maxExclusive;\n        this.continuationToken = continuationToken;\n        this.epkMinHeader = epkMinHeader;\n        this.epkMaxHeader = epkMaxHeader;\n    }\n}\n//# sourceMappingURL=ChangeFeedRange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkUmFuZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NoYW5nZUZlZWQvQ2hhbmdlRmVlZFJhbmdlLmpzPzE5MjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEBpbnRlcm5hbFxuICogRmVlZFJhbmdlIGZvciB3aGljaCBjaGFuZ2UgZmVlZCBpcyBiZWluZyByZXF1ZXN0ZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFuZ2VGZWVkUmFuZ2Uge1xuICAgIC8qKlxuICAgICAqIE1pbiB2YWx1ZSBmb3IgdGhlIHJhbmdlLlxuICAgICAqL1xuICAgIG1pbkluY2x1c2l2ZTtcbiAgICAvKipcbiAgICAgKiBNYXggdmFsdWUgZm9yIHRoZSByYW5nZS5cbiAgICAgKi9cbiAgICBtYXhFeGNsdXNpdmU7XG4gICAgLyoqXG4gICAgICogQ29udGludWF0aW9uIHRva2VuIGZyb20gd2hlcmUgdG8gc3RhcnQgcmVhZGluZyBjaGFuZ2VzLlxuICAgICAqL1xuICAgIGNvbnRpbnVhdGlvblRva2VuO1xuICAgIC8qKlxuICAgICAqIE1pbiBlcGsgdmFsdWUgdG8gYmVnaW4gcmVhZGluZyBjaGFuZ2VzIGZyb20gaW4gY2FzZSBjaGFuZ2VmZWVkIG9mIGVudGlyZSBwYXJ0aXRpb24gaXMgbm90IHJlcXVlc3RlZC5cbiAgICAgKi9cbiAgICBlcGtNaW5IZWFkZXI7XG4gICAgLyoqXG4gICAgICogTWF4IGVwayB2YWx1ZSB0byBiZWdpbiByZWFkaW5nIGNoYW5nZXMgZnJvbSBpbiBjYXNlIGNoYW5nZWZlZWQgb2YgZW50aXJlIHBhcnRpdGlvbiBpcyBub3QgcmVxdWVzdGVkLlxuICAgICAqL1xuICAgIGVwa01heEhlYWRlcjtcbiAgICBjb25zdHJ1Y3RvcihtaW5JbmNsdXNpdmUsIG1heEV4Y2x1c2l2ZSwgY29udGludWF0aW9uVG9rZW4sIGVwa01pbkhlYWRlciwgZXBrTWF4SGVhZGVyKSB7XG4gICAgICAgIHRoaXMubWluSW5jbHVzaXZlID0gbWluSW5jbHVzaXZlO1xuICAgICAgICB0aGlzLm1heEV4Y2x1c2l2ZSA9IG1heEV4Y2x1c2l2ZTtcbiAgICAgICAgdGhpcy5jb250aW51YXRpb25Ub2tlbiA9IGNvbnRpbnVhdGlvblRva2VuO1xuICAgICAgICB0aGlzLmVwa01pbkhlYWRlciA9IGVwa01pbkhlYWRlcjtcbiAgICAgICAgdGhpcy5lcGtNYXhIZWFkZXIgPSBlcGtNYXhIZWFkZXI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZFJhbmdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRange.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRetentionTimeSpan.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRetentionTimeSpan.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedRetentionTimeSpan: () => (/* binding */ ChangeFeedRetentionTimeSpan)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/*\n * Represents the change feed policy configuration for a container in the Azure Cosmos DB service.\n */\nclass ChangeFeedRetentionTimeSpan {\n    retentionInMinutes;\n    /**\n     * @internal\n     */\n    constructor(minutes) {\n        if (typeof minutes !== \"number\") {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"ChangeFeedRetentionTimeSpan must be a number.\");\n        }\n        if (minutes < 0) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"ChangeFeedRetentionTimeSpan must be a positive number.\");\n        }\n        if (minutes % 1 !== 0) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"Retention's granularity is minutes.\");\n        }\n        this.retentionInMinutes = minutes;\n    }\n    /**\n     * Specifies the retention window in minutes for which processing the change feed with allVersionsAndDeletes mode will be available.\n     */\n    static fromMinutes(minutes) {\n        return new ChangeFeedRetentionTimeSpan(minutes);\n    }\n    /**\n     * @internal\n     */\n    getRetentionInMinutes() {\n        return this.retentionInMinutes;\n    }\n}\n//# sourceMappingURL=ChangeFeedRetentionTimeSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkUmV0ZW50aW9uVGltZVNwYW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFhO0FBQ25DO0FBQ0E7QUFDQSxzQkFBc0IsNERBQWE7QUFDbkM7QUFDQTtBQUNBLHNCQUFzQiw0REFBYTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkUmV0ZW50aW9uVGltZVNwYW4uanM/OWQzZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEVycm9yUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9pbmRleC5qc1wiO1xuLypcbiAqIFJlcHJlc2VudHMgdGhlIGNoYW5nZSBmZWVkIHBvbGljeSBjb25maWd1cmF0aW9uIGZvciBhIGNvbnRhaW5lciBpbiB0aGUgQXp1cmUgQ29zbW9zIERCIHNlcnZpY2UuXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFuZ2VGZWVkUmV0ZW50aW9uVGltZVNwYW4ge1xuICAgIHJldGVudGlvbkluTWludXRlcztcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtaW51dGVzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbWludXRlcyAhPT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJDaGFuZ2VGZWVkUmV0ZW50aW9uVGltZVNwYW4gbXVzdCBiZSBhIG51bWJlci5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1pbnV0ZXMgPCAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JSZXNwb25zZShcIkNoYW5nZUZlZWRSZXRlbnRpb25UaW1lU3BhbiBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWludXRlcyAlIDEgIT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKFwiUmV0ZW50aW9uJ3MgZ3JhbnVsYXJpdHkgaXMgbWludXRlcy5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZXRlbnRpb25Jbk1pbnV0ZXMgPSBtaW51dGVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHJldGVudGlvbiB3aW5kb3cgaW4gbWludXRlcyBmb3Igd2hpY2ggcHJvY2Vzc2luZyB0aGUgY2hhbmdlIGZlZWQgd2l0aCBhbGxWZXJzaW9uc0FuZERlbGV0ZXMgbW9kZSB3aWxsIGJlIGF2YWlsYWJsZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbU1pbnV0ZXMobWludXRlcykge1xuICAgICAgICByZXR1cm4gbmV3IENoYW5nZUZlZWRSZXRlbnRpb25UaW1lU3BhbihtaW51dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZ2V0UmV0ZW50aW9uSW5NaW51dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXRlbnRpb25Jbk1pbnV0ZXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZFJldGVudGlvblRpbWVTcGFuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRetentionTimeSpan.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFrom.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFrom.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedStartFrom: () => (/* binding */ ChangeFeedStartFrom)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedStartFromNow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChangeFeedStartFromNow.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromNow.js\");\n/* harmony import */ var _ChangeFeedStartFromBeginning_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChangeFeedStartFromBeginning.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromBeginning.js\");\n/* harmony import */ var _ChangeFeedStartFromTime_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChangeFeedStartFromTime.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromTime.js\");\n/* harmony import */ var _ChangeFeedStartFromContinuation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChangeFeedStartFromContinuation.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromContinuation.js\");\n/* harmony import */ var _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../request/ErrorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\");\n/* harmony import */ var _changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./changeFeedUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\");\n\n\n\n\n\n\n/**\n * Base class for where to start a ChangeFeedIterator.\n */\n/* eslint-disable @typescript-eslint/no-extraneous-class */\nclass ChangeFeedStartFrom {\n    /**\n     * Returns an object that tells the ChangeFeedIterator to start from the beginning of time.\n     * @param cfResource - PartitionKey or FeedRange for which changes are to be fetched. Leave blank for fetching changes for entire container.\n     */\n    static Beginning(cfResource) {\n        return new _ChangeFeedStartFromBeginning_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedStartFromBeginning(cfResource);\n    }\n    /**\n     *  Returns an object that tells the ChangeFeedIterator to start reading changes from this moment onward.\n     * @param cfResource - PartitionKey or FeedRange for which changes are to be fetched. Leave blank for fetching changes for entire container.\n     **/\n    static Now(cfResource) {\n        return new _ChangeFeedStartFromNow_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedStartFromNow(cfResource);\n    }\n    /**\n     * Returns an object that tells the ChangeFeedIterator to start reading changes from some point in time onward.\n     * @param startTime - Date object specfiying the time to start reading changes from.\n     * @param cfResource - PartitionKey or FeedRange for which changes are to be fetched. Leave blank for fetching changes for entire container.\n     */\n    static Time(startTime, cfResource) {\n        if (!startTime) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_4__.ErrorResponse(\"startTime must be present\");\n        }\n        if (startTime instanceof Date === true) {\n            return new _ChangeFeedStartFromTime_js__WEBPACK_IMPORTED_MODULE_2__.ChangeFeedStartFromTime(startTime, cfResource);\n        }\n        else {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_4__.ErrorResponse(\"startTime must be a Date object.\");\n        }\n    }\n    /**\n     * Returns an object that tells the ChangeFeedIterator to start reading changes from a save point.\n     * @param continuation - The continuation to resume from.\n     */\n    static Continuation(continuationToken) {\n        if (!continuationToken) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_4__.ErrorResponse(\"Argument continuation must be passed.\");\n        }\n        if ((0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_5__.isNullOrEmpty)(continuationToken)) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_4__.ErrorResponse(\"Argument continuationToken must be a non-empty string.\");\n        }\n        return new _ChangeFeedStartFromContinuation_js__WEBPACK_IMPORTED_MODULE_3__.ChangeFeedStartFromContinuation(continuationToken);\n    }\n}\n//# sourceMappingURL=ChangeFeedStartFrom.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUU7QUFDWTtBQUNWO0FBQ2dCO0FBQ3hCO0FBQ1Y7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEZBQTRCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4RUFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvRUFBYTtBQUNuQztBQUNBO0FBQ0EsdUJBQXVCLGdGQUF1QjtBQUM5QztBQUNBO0FBQ0Esc0JBQXNCLG9FQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0VBQWE7QUFDbkM7QUFDQSxZQUFZLGtFQUFhO0FBQ3pCLHNCQUFzQixvRUFBYTtBQUNuQztBQUNBLG1CQUFtQixnR0FBK0I7QUFDbEQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tLmpzP2U4ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRmVlZFN0YXJ0RnJvbU5vdyB9IGZyb20gXCIuL0NoYW5nZUZlZWRTdGFydEZyb21Ob3cuanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRTdGFydEZyb21CZWdpbm5pbmcgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkU3RhcnRGcm9tQmVnaW5uaW5nLmpzXCI7XG5pbXBvcnQgeyBDaGFuZ2VGZWVkU3RhcnRGcm9tVGltZSB9IGZyb20gXCIuL0NoYW5nZUZlZWRTdGFydEZyb21UaW1lLmpzXCI7XG5pbXBvcnQgeyBDaGFuZ2VGZWVkU3RhcnRGcm9tQ29udGludWF0aW9uIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZFN0YXJ0RnJvbUNvbnRpbnVhdGlvbi5qc1wiO1xuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L0Vycm9yUmVzcG9uc2UuanNcIjtcbmltcG9ydCB7IGlzTnVsbE9yRW1wdHkgfSBmcm9tIFwiLi9jaGFuZ2VGZWVkVXRpbHMuanNcIjtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3Igd2hlcmUgdG8gc3RhcnQgYSBDaGFuZ2VGZWVkSXRlcmF0b3IuXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHRyYW5lb3VzLWNsYXNzICovXG5leHBvcnQgY2xhc3MgQ2hhbmdlRmVlZFN0YXJ0RnJvbSB7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCB0ZWxscyB0aGUgQ2hhbmdlRmVlZEl0ZXJhdG9yIHRvIHN0YXJ0IGZyb20gdGhlIGJlZ2lubmluZyBvZiB0aW1lLlxuICAgICAqIEBwYXJhbSBjZlJlc291cmNlIC0gUGFydGl0aW9uS2V5IG9yIEZlZWRSYW5nZSBmb3Igd2hpY2ggY2hhbmdlcyBhcmUgdG8gYmUgZmV0Y2hlZC4gTGVhdmUgYmxhbmsgZm9yIGZldGNoaW5nIGNoYW5nZXMgZm9yIGVudGlyZSBjb250YWluZXIuXG4gICAgICovXG4gICAgc3RhdGljIEJlZ2lubmluZyhjZlJlc291cmNlKSB7XG4gICAgICAgIHJldHVybiBuZXcgQ2hhbmdlRmVlZFN0YXJ0RnJvbUJlZ2lubmluZyhjZlJlc291cmNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgdGVsbHMgdGhlIENoYW5nZUZlZWRJdGVyYXRvciB0byBzdGFydCByZWFkaW5nIGNoYW5nZXMgZnJvbSB0aGlzIG1vbWVudCBvbndhcmQuXG4gICAgICogQHBhcmFtIGNmUmVzb3VyY2UgLSBQYXJ0aXRpb25LZXkgb3IgRmVlZFJhbmdlIGZvciB3aGljaCBjaGFuZ2VzIGFyZSB0byBiZSBmZXRjaGVkLiBMZWF2ZSBibGFuayBmb3IgZmV0Y2hpbmcgY2hhbmdlcyBmb3IgZW50aXJlIGNvbnRhaW5lci5cbiAgICAgKiovXG4gICAgc3RhdGljIE5vdyhjZlJlc291cmNlKSB7XG4gICAgICAgIHJldHVybiBuZXcgQ2hhbmdlRmVlZFN0YXJ0RnJvbU5vdyhjZlJlc291cmNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCB0ZWxscyB0aGUgQ2hhbmdlRmVlZEl0ZXJhdG9yIHRvIHN0YXJ0IHJlYWRpbmcgY2hhbmdlcyBmcm9tIHNvbWUgcG9pbnQgaW4gdGltZSBvbndhcmQuXG4gICAgICogQHBhcmFtIHN0YXJ0VGltZSAtIERhdGUgb2JqZWN0IHNwZWNmaXlpbmcgdGhlIHRpbWUgdG8gc3RhcnQgcmVhZGluZyBjaGFuZ2VzIGZyb20uXG4gICAgICogQHBhcmFtIGNmUmVzb3VyY2UgLSBQYXJ0aXRpb25LZXkgb3IgRmVlZFJhbmdlIGZvciB3aGljaCBjaGFuZ2VzIGFyZSB0byBiZSBmZXRjaGVkLiBMZWF2ZSBibGFuayBmb3IgZmV0Y2hpbmcgY2hhbmdlcyBmb3IgZW50aXJlIGNvbnRhaW5lci5cbiAgICAgKi9cbiAgICBzdGF0aWMgVGltZShzdGFydFRpbWUsIGNmUmVzb3VyY2UpIHtcbiAgICAgICAgaWYgKCFzdGFydFRpbWUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKFwic3RhcnRUaW1lIG11c3QgYmUgcHJlc2VudFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RhcnRUaW1lIGluc3RhbmNlb2YgRGF0ZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDaGFuZ2VGZWVkU3RhcnRGcm9tVGltZShzdGFydFRpbWUsIGNmUmVzb3VyY2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJzdGFydFRpbWUgbXVzdCBiZSBhIERhdGUgb2JqZWN0LlwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IHRlbGxzIHRoZSBDaGFuZ2VGZWVkSXRlcmF0b3IgdG8gc3RhcnQgcmVhZGluZyBjaGFuZ2VzIGZyb20gYSBzYXZlIHBvaW50LlxuICAgICAqIEBwYXJhbSBjb250aW51YXRpb24gLSBUaGUgY29udGludWF0aW9uIHRvIHJlc3VtZSBmcm9tLlxuICAgICAqL1xuICAgIHN0YXRpYyBDb250aW51YXRpb24oY29udGludWF0aW9uVG9rZW4pIHtcbiAgICAgICAgaWYgKCFjb250aW51YXRpb25Ub2tlbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJBcmd1bWVudCBjb250aW51YXRpb24gbXVzdCBiZSBwYXNzZWQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc051bGxPckVtcHR5KGNvbnRpbnVhdGlvblRva2VuKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJBcmd1bWVudCBjb250aW51YXRpb25Ub2tlbiBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZy5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBDaGFuZ2VGZWVkU3RhcnRGcm9tQ29udGludWF0aW9uKGNvbnRpbnVhdGlvblRva2VuKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFuZ2VGZWVkU3RhcnRGcm9tLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFrom.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromBeginning.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromBeginning.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedStartFromBeginning: () => (/* binding */ ChangeFeedStartFromBeginning)\n/* harmony export */ });\n/**\n * @hidden\n * Class which specifies the ChangeFeedIterator to start reading changes from beginning of time.\n */\nclass ChangeFeedStartFromBeginning {\n    cfResource;\n    constructor(cfResource) {\n        this.cfResource = cfResource;\n    }\n    getCfResource() {\n        return this.cfResource;\n    }\n}\n//# sourceMappingURL=ChangeFeedStartFromBeginning.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tQmVnaW5uaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tQmVnaW5uaW5nLmpzPzY1YjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaGlkZGVuXG4gKiBDbGFzcyB3aGljaCBzcGVjaWZpZXMgdGhlIENoYW5nZUZlZWRJdGVyYXRvciB0byBzdGFydCByZWFkaW5nIGNoYW5nZXMgZnJvbSBiZWdpbm5pbmcgb2YgdGltZS5cbiAqL1xuZXhwb3J0IGNsYXNzIENoYW5nZUZlZWRTdGFydEZyb21CZWdpbm5pbmcge1xuICAgIGNmUmVzb3VyY2U7XG4gICAgY29uc3RydWN0b3IoY2ZSZXNvdXJjZSkge1xuICAgICAgICB0aGlzLmNmUmVzb3VyY2UgPSBjZlJlc291cmNlO1xuICAgIH1cbiAgICBnZXRDZlJlc291cmNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jZlJlc291cmNlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNoYW5nZUZlZWRTdGFydEZyb21CZWdpbm5pbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromBeginning.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromContinuation.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromContinuation.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedStartFromContinuation: () => (/* binding */ ChangeFeedStartFromContinuation)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _ChangeFeedEnums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChangeFeedEnums.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedEnums.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @hidden\n * Class which specifies the ChangeFeedIterator to start reading changes from a saved point.\n */\nclass ChangeFeedStartFromContinuation {\n    continuationToken;\n    constructor(continuation) {\n        this.continuationToken = continuation;\n    }\n    getCfResource() {\n        return this.continuationToken;\n    }\n    getCfResourceJson() {\n        return JSON.parse(this.continuationToken);\n    }\n    getResourceType() {\n        const cToken = this.getCfResourceJson();\n        if (Object.prototype.hasOwnProperty.call(cToken, \"partitionKey\") &&\n            Object.prototype.hasOwnProperty.call(cToken, \"Continuation\") &&\n            typeof cToken.Continuation === \"string\") {\n            return _ChangeFeedEnums_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedResourceType.PartitionKey;\n        }\n        else if (Object.prototype.hasOwnProperty.call(cToken, \"Continuation\") &&\n            Array.isArray(cToken.Continuation) &&\n            cToken.Continuation.length > 0) {\n            return _ChangeFeedEnums_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedResourceType.FeedRange;\n        }\n        else {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"Invalid continuation token.\");\n        }\n    }\n}\n//# sourceMappingURL=ChangeFeedStartFromContinuation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tQ29udGludWF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDdUQ7QUFDTztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVFQUFzQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1RUFBc0I7QUFDekM7QUFDQTtBQUNBLHNCQUFzQiw0REFBYTtBQUNuQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NoYW5nZUZlZWQvQ2hhbmdlRmVlZFN0YXJ0RnJvbUNvbnRpbnVhdGlvbi5qcz9hOGNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG5pbXBvcnQgeyBDaGFuZ2VGZWVkUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZEVudW1zLmpzXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqIENsYXNzIHdoaWNoIHNwZWNpZmllcyB0aGUgQ2hhbmdlRmVlZEl0ZXJhdG9yIHRvIHN0YXJ0IHJlYWRpbmcgY2hhbmdlcyBmcm9tIGEgc2F2ZWQgcG9pbnQuXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFuZ2VGZWVkU3RhcnRGcm9tQ29udGludWF0aW9uIHtcbiAgICBjb250aW51YXRpb25Ub2tlbjtcbiAgICBjb25zdHJ1Y3Rvcihjb250aW51YXRpb24pIHtcbiAgICAgICAgdGhpcy5jb250aW51YXRpb25Ub2tlbiA9IGNvbnRpbnVhdGlvbjtcbiAgICB9XG4gICAgZ2V0Q2ZSZXNvdXJjZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGludWF0aW9uVG9rZW47XG4gICAgfVxuICAgIGdldENmUmVzb3VyY2VKc29uKCkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh0aGlzLmNvbnRpbnVhdGlvblRva2VuKTtcbiAgICB9XG4gICAgZ2V0UmVzb3VyY2VUeXBlKCkge1xuICAgICAgICBjb25zdCBjVG9rZW4gPSB0aGlzLmdldENmUmVzb3VyY2VKc29uKCk7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoY1Rva2VuLCBcInBhcnRpdGlvbktleVwiKSAmJlxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGNUb2tlbiwgXCJDb250aW51YXRpb25cIikgJiZcbiAgICAgICAgICAgIHR5cGVvZiBjVG9rZW4uQ29udGludWF0aW9uID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gQ2hhbmdlRmVlZFJlc291cmNlVHlwZS5QYXJ0aXRpb25LZXk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGNUb2tlbiwgXCJDb250aW51YXRpb25cIikgJiZcbiAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoY1Rva2VuLkNvbnRpbnVhdGlvbikgJiZcbiAgICAgICAgICAgIGNUb2tlbi5Db250aW51YXRpb24ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIENoYW5nZUZlZWRSZXNvdXJjZVR5cGUuRmVlZFJhbmdlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJJbnZhbGlkIGNvbnRpbnVhdGlvbiB0b2tlbi5cIik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFuZ2VGZWVkU3RhcnRGcm9tQ29udGludWF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromContinuation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromNow.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromNow.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedStartFromNow: () => (/* binding */ ChangeFeedStartFromNow)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @hidden\n * Class which specifies the ChangeFeedIterator to start reading changes from this moment in time.\n */\nclass ChangeFeedStartFromNow {\n    cfResource;\n    constructor(cfResource) {\n        this.cfResource = cfResource;\n    }\n    getCfResource() {\n        return this.cfResource;\n    }\n}\n//# sourceMappingURL=ChangeFeedStartFromNow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tTm93LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NoYW5nZUZlZWQvQ2hhbmdlRmVlZFN0YXJ0RnJvbU5vdy5qcz9lZDdhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBAaGlkZGVuXG4gKiBDbGFzcyB3aGljaCBzcGVjaWZpZXMgdGhlIENoYW5nZUZlZWRJdGVyYXRvciB0byBzdGFydCByZWFkaW5nIGNoYW5nZXMgZnJvbSB0aGlzIG1vbWVudCBpbiB0aW1lLlxuICovXG5leHBvcnQgY2xhc3MgQ2hhbmdlRmVlZFN0YXJ0RnJvbU5vdyB7XG4gICAgY2ZSZXNvdXJjZTtcbiAgICBjb25zdHJ1Y3RvcihjZlJlc291cmNlKSB7XG4gICAgICAgIHRoaXMuY2ZSZXNvdXJjZSA9IGNmUmVzb3VyY2U7XG4gICAgfVxuICAgIGdldENmUmVzb3VyY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNmUmVzb3VyY2U7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhbmdlRmVlZFN0YXJ0RnJvbU5vdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromNow.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromTime.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromTime.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedStartFromTime: () => (/* binding */ ChangeFeedStartFromTime)\n/* harmony export */ });\n/**\n * @hidden\n * Class which specifies the ChangeFeedIterator to start reading changes from a particular point of time.\n */\nclass ChangeFeedStartFromTime {\n    cfResource;\n    startTime;\n    constructor(startTime, cfResource) {\n        this.startTime = startTime;\n        this.cfResource = cfResource;\n    }\n    getCfResource() {\n        return this.cfResource;\n    }\n    getStartTime() {\n        return this.startTime;\n    }\n}\n//# sourceMappingURL=ChangeFeedStartFromTime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkU3RhcnRGcm9tVGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9DaGFuZ2VGZWVkL0NoYW5nZUZlZWRTdGFydEZyb21UaW1lLmpzPzE0ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaGlkZGVuXG4gKiBDbGFzcyB3aGljaCBzcGVjaWZpZXMgdGhlIENoYW5nZUZlZWRJdGVyYXRvciB0byBzdGFydCByZWFkaW5nIGNoYW5nZXMgZnJvbSBhIHBhcnRpY3VsYXIgcG9pbnQgb2YgdGltZS5cbiAqL1xuZXhwb3J0IGNsYXNzIENoYW5nZUZlZWRTdGFydEZyb21UaW1lIHtcbiAgICBjZlJlc291cmNlO1xuICAgIHN0YXJ0VGltZTtcbiAgICBjb25zdHJ1Y3RvcihzdGFydFRpbWUsIGNmUmVzb3VyY2UpIHtcbiAgICAgICAgdGhpcy5zdGFydFRpbWUgPSBzdGFydFRpbWU7XG4gICAgICAgIHRoaXMuY2ZSZXNvdXJjZSA9IGNmUmVzb3VyY2U7XG4gICAgfVxuICAgIGdldENmUmVzb3VyY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNmUmVzb3VyY2U7XG4gICAgfVxuICAgIGdldFN0YXJ0VGltZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnRUaW1lO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNoYW5nZUZlZWRTdGFydEZyb21UaW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromTime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/CompositeContinuationToken.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/CompositeContinuationToken.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompositeContinuationToken: () => (/* binding */ CompositeContinuationToken)\n/* harmony export */ });\n/**\n * Continuation token for change feed of entire container, or a specific Epk Range.\n * @internal\n */\nclass CompositeContinuationToken {\n    /**\n     * rid of the container for which the continuation token is issued.\n     */\n    rid;\n    /**\n     * List of Epk Ranges part of the continuation token\n     */\n    Continuation;\n    constructor(rid, Continuation) {\n        this.rid = rid;\n        this.Continuation = Continuation;\n    }\n}\n//# sourceMappingURL=CompositeContinuationToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9Db21wb3NpdGVDb250aW51YXRpb25Ub2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9DaGFuZ2VGZWVkL0NvbXBvc2l0ZUNvbnRpbnVhdGlvblRva2VuLmpzPzgyNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb250aW51YXRpb24gdG9rZW4gZm9yIGNoYW5nZSBmZWVkIG9mIGVudGlyZSBjb250YWluZXIsIG9yIGEgc3BlY2lmaWMgRXBrIFJhbmdlLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21wb3NpdGVDb250aW51YXRpb25Ub2tlbiB7XG4gICAgLyoqXG4gICAgICogcmlkIG9mIHRoZSBjb250YWluZXIgZm9yIHdoaWNoIHRoZSBjb250aW51YXRpb24gdG9rZW4gaXMgaXNzdWVkLlxuICAgICAqL1xuICAgIHJpZDtcbiAgICAvKipcbiAgICAgKiBMaXN0IG9mIEVwayBSYW5nZXMgcGFydCBvZiB0aGUgY29udGludWF0aW9uIHRva2VuXG4gICAgICovXG4gICAgQ29udGludWF0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHJpZCwgQ29udGludWF0aW9uKSB7XG4gICAgICAgIHRoaXMucmlkID0gcmlkO1xuICAgICAgICB0aGlzLkNvbnRpbnVhdGlvbiA9IENvbnRpbnVhdGlvbjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wb3NpdGVDb250aW51YXRpb25Ub2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/CompositeContinuationToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ContinuationTokenForPartitionKey.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ContinuationTokenForPartitionKey.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContinuationTokenForPartitionKey: () => (/* binding */ ContinuationTokenForPartitionKey)\n/* harmony export */ });\n/**\n * Continuation token for change feed of entire container, or a specific Epk Range.\n * @internal\n */\nclass ContinuationTokenForPartitionKey {\n    /**\n     * rid of the container for which the continuation token is issued.\n     */\n    rid;\n    /**\n     * A specific Partition key in the container for which the continuation token is issued.\n     */\n    partitionKey;\n    /**\n     * Continuation value for the specific Partition key in the container.\n     */\n    Continuation;\n    constructor(rid, partitionKey, continuation) {\n        this.rid = rid;\n        this.partitionKey = partitionKey;\n        this.Continuation = continuation;\n    }\n}\n//# sourceMappingURL=ContinuationTokenForPartitionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9Db250aW51YXRpb25Ub2tlbkZvclBhcnRpdGlvbktleS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9Db250aW51YXRpb25Ub2tlbkZvclBhcnRpdGlvbktleS5qcz8wNTg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udGludWF0aW9uIHRva2VuIGZvciBjaGFuZ2UgZmVlZCBvZiBlbnRpcmUgY29udGFpbmVyLCBvciBhIHNwZWNpZmljIEVwayBSYW5nZS5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY2xhc3MgQ29udGludWF0aW9uVG9rZW5Gb3JQYXJ0aXRpb25LZXkge1xuICAgIC8qKlxuICAgICAqIHJpZCBvZiB0aGUgY29udGFpbmVyIGZvciB3aGljaCB0aGUgY29udGludWF0aW9uIHRva2VuIGlzIGlzc3VlZC5cbiAgICAgKi9cbiAgICByaWQ7XG4gICAgLyoqXG4gICAgICogQSBzcGVjaWZpYyBQYXJ0aXRpb24ga2V5IGluIHRoZSBjb250YWluZXIgZm9yIHdoaWNoIHRoZSBjb250aW51YXRpb24gdG9rZW4gaXMgaXNzdWVkLlxuICAgICAqL1xuICAgIHBhcnRpdGlvbktleTtcbiAgICAvKipcbiAgICAgKiBDb250aW51YXRpb24gdmFsdWUgZm9yIHRoZSBzcGVjaWZpYyBQYXJ0aXRpb24ga2V5IGluIHRoZSBjb250YWluZXIuXG4gICAgICovXG4gICAgQ29udGludWF0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHJpZCwgcGFydGl0aW9uS2V5LCBjb250aW51YXRpb24pIHtcbiAgICAgICAgdGhpcy5yaWQgPSByaWQ7XG4gICAgICAgIHRoaXMucGFydGl0aW9uS2V5ID0gcGFydGl0aW9uS2V5O1xuICAgICAgICB0aGlzLkNvbnRpbnVhdGlvbiA9IGNvbnRpbnVhdGlvbjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db250aW51YXRpb25Ub2tlbkZvclBhcnRpdGlvbktleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ContinuationTokenForPartitionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRange.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRange.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FeedRange: () => (/* binding */ FeedRange),\n/* harmony export */   FeedRangeInternal: () => (/* binding */ FeedRangeInternal)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Specifies a feed range for the changefeed.\n */\nclass FeedRange {\n    /**\n     * Min value for the feed range.\n     */\n    minInclusive;\n    /**\n     * Max value for the feed range.\n     */\n    maxExclusive;\n    /**\n     * @internal\n     */\n    constructor(minInclusive, maxExclusive) {\n        // only way to explictly block users from creating FeedRange directly in JS\n        if (new.target === FeedRange) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"Cannot instantiate abstract class FeedRange\");\n        }\n        this.minInclusive = minInclusive;\n        this.maxExclusive = maxExclusive;\n    }\n}\n/**\n * @hidden\n * Specifies a feed range for the changefeed.\n */\nclass FeedRangeInternal extends FeedRange {\n    /* eslint-disable @typescript-eslint/no-useless-constructor */\n    constructor(minInclusive, maxExclusive) {\n        super(minInclusive, maxExclusive);\n    }\n}\n//# sourceMappingURL=FeedRange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9GZWVkUmFuZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUN1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNERBQWE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9DaGFuZ2VGZWVkL0ZlZWRSYW5nZS5qcz8yZjkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG4vKipcbiAqIFNwZWNpZmllcyBhIGZlZWQgcmFuZ2UgZm9yIHRoZSBjaGFuZ2VmZWVkLlxuICovXG5leHBvcnQgY2xhc3MgRmVlZFJhbmdlIHtcbiAgICAvKipcbiAgICAgKiBNaW4gdmFsdWUgZm9yIHRoZSBmZWVkIHJhbmdlLlxuICAgICAqL1xuICAgIG1pbkluY2x1c2l2ZTtcbiAgICAvKipcbiAgICAgKiBNYXggdmFsdWUgZm9yIHRoZSBmZWVkIHJhbmdlLlxuICAgICAqL1xuICAgIG1heEV4Y2x1c2l2ZTtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtaW5JbmNsdXNpdmUsIG1heEV4Y2x1c2l2ZSkge1xuICAgICAgICAvLyBvbmx5IHdheSB0byBleHBsaWN0bHkgYmxvY2sgdXNlcnMgZnJvbSBjcmVhdGluZyBGZWVkUmFuZ2UgZGlyZWN0bHkgaW4gSlNcbiAgICAgICAgaWYgKG5ldy50YXJnZXQgPT09IEZlZWRSYW5nZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJDYW5ub3QgaW5zdGFudGlhdGUgYWJzdHJhY3QgY2xhc3MgRmVlZFJhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubWluSW5jbHVzaXZlID0gbWluSW5jbHVzaXZlO1xuICAgICAgICB0aGlzLm1heEV4Y2x1c2l2ZSA9IG1heEV4Y2x1c2l2ZTtcbiAgICB9XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqIFNwZWNpZmllcyBhIGZlZWQgcmFuZ2UgZm9yIHRoZSBjaGFuZ2VmZWVkLlxuICovXG5leHBvcnQgY2xhc3MgRmVlZFJhbmdlSW50ZXJuYWwgZXh0ZW5kcyBGZWVkUmFuZ2Uge1xuICAgIC8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2VsZXNzLWNvbnN0cnVjdG9yICovXG4gICAgY29uc3RydWN0b3IobWluSW5jbHVzaXZlLCBtYXhFeGNsdXNpdmUpIHtcbiAgICAgICAgc3VwZXIobWluSW5jbHVzaXZlLCBtYXhFeGNsdXNpdmUpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZlZWRSYW5nZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRange.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRangeQueue.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRangeQueue.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FeedRangeQueue: () => (/* binding */ FeedRangeQueue)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChangeFeedRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRange.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @hidden\n * A queue for iterating over specified Epk ranges and fetch change feed for the given epk ranges.\n */\nclass FeedRangeQueue {\n    elements;\n    constructor() {\n        this.elements = [];\n    }\n    modifyFirstElement(newItem) {\n        if (!this.isEmpty()) {\n            this.elements[0] = newItem;\n        }\n    }\n    enqueue(item) {\n        this.elements.push(item);\n    }\n    dequeue() {\n        return this.elements.shift();\n    }\n    peek() {\n        return !this.isEmpty() ? this.elements[0] : undefined;\n    }\n    isEmpty() {\n        return this.elements.length === 0;\n    }\n    moveFirstElementToTheEnd() {\n        if (!this.isEmpty()) {\n            this.elements.push(this.dequeue());\n        }\n    }\n    /**\n     * Returns a snapshot of the queue as an array to be used as Continuation token.\n     */\n    returnSnapshot() {\n        const allFeedRanges = [];\n        this.elements.map((element) => {\n            const minInclusive = element.epkMinHeader ? element.epkMinHeader : element.minInclusive;\n            const maxExclusive = element.epkMaxHeader ? element.epkMaxHeader : element.maxExclusive;\n            const feedRangeElement = new _ChangeFeedRange_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedRange(minInclusive, maxExclusive, element.continuationToken);\n            allFeedRanges.push(feedRangeElement);\n        });\n        return allFeedRanges;\n    }\n}\n//# sourceMappingURL=FeedRangeQueue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9GZWVkUmFuZ2VRdWV1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGdFQUFlO0FBQ3hEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9GZWVkUmFuZ2VRdWV1ZS5qcz80ZWZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQ2hhbmdlRmVlZFJhbmdlIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZFJhbmdlLmpzXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqIEEgcXVldWUgZm9yIGl0ZXJhdGluZyBvdmVyIHNwZWNpZmllZCBFcGsgcmFuZ2VzIGFuZCBmZXRjaCBjaGFuZ2UgZmVlZCBmb3IgdGhlIGdpdmVuIGVwayByYW5nZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBGZWVkUmFuZ2VRdWV1ZSB7XG4gICAgZWxlbWVudHM7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcbiAgICB9XG4gICAgbW9kaWZ5Rmlyc3RFbGVtZW50KG5ld0l0ZW0pIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50c1swXSA9IG5ld0l0ZW07XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW5xdWV1ZShpdGVtKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHMucHVzaChpdGVtKTtcbiAgICB9XG4gICAgZGVxdWV1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuc2hpZnQoKTtcbiAgICB9XG4gICAgcGVlaygpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmlzRW1wdHkoKSA/IHRoaXMuZWxlbWVudHNbMF0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlzRW1wdHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRzLmxlbmd0aCA9PT0gMDtcbiAgICB9XG4gICAgbW92ZUZpcnN0RWxlbWVudFRvVGhlRW5kKCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNFbXB0eSgpKSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2godGhpcy5kZXF1ZXVlKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBzbmFwc2hvdCBvZiB0aGUgcXVldWUgYXMgYW4gYXJyYXkgdG8gYmUgdXNlZCBhcyBDb250aW51YXRpb24gdG9rZW4uXG4gICAgICovXG4gICAgcmV0dXJuU25hcHNob3QoKSB7XG4gICAgICAgIGNvbnN0IGFsbEZlZWRSYW5nZXMgPSBbXTtcbiAgICAgICAgdGhpcy5lbGVtZW50cy5tYXAoKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG1pbkluY2x1c2l2ZSA9IGVsZW1lbnQuZXBrTWluSGVhZGVyID8gZWxlbWVudC5lcGtNaW5IZWFkZXIgOiBlbGVtZW50Lm1pbkluY2x1c2l2ZTtcbiAgICAgICAgICAgIGNvbnN0IG1heEV4Y2x1c2l2ZSA9IGVsZW1lbnQuZXBrTWF4SGVhZGVyID8gZWxlbWVudC5lcGtNYXhIZWFkZXIgOiBlbGVtZW50Lm1heEV4Y2x1c2l2ZTtcbiAgICAgICAgICAgIGNvbnN0IGZlZWRSYW5nZUVsZW1lbnQgPSBuZXcgQ2hhbmdlRmVlZFJhbmdlKG1pbkluY2x1c2l2ZSwgbWF4RXhjbHVzaXZlLCBlbGVtZW50LmNvbnRpbnVhdGlvblRva2VuKTtcbiAgICAgICAgICAgIGFsbEZlZWRSYW5nZXMucHVzaChmZWVkUmFuZ2VFbGVtZW50KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhbGxGZWVkUmFuZ2VzO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZlZWRSYW5nZVF1ZXVlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRangeQueue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/buildChangeFeedIterator.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/buildChangeFeedIterator.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildChangeFeedIterator: () => (/* binding */ buildChangeFeedIterator)\n/* harmony export */ });\n/* harmony import */ var _routing_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../routing/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/index.js\");\n/* harmony import */ var _ChangeFeedStartFrom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChangeFeedStartFrom.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFrom.js\");\n/* harmony import */ var _ChangeFeedStartFromBeginning_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChangeFeedStartFromBeginning.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromBeginning.js\");\n/* harmony import */ var _ChangeFeedStartFromContinuation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChangeFeedStartFromContinuation.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromContinuation.js\");\n/* harmony import */ var _ChangeFeedStartFromNow_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChangeFeedStartFromNow.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromNow.js\");\n/* harmony import */ var _ChangeFeedStartFromTime_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ChangeFeedStartFromTime.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromTime.js\");\n/* harmony import */ var _ChangeFeedEnums_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ChangeFeedEnums.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedEnums.js\");\n/* harmony import */ var _ChangeFeedForPartitionKey_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ChangeFeedForPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForPartitionKey.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _ChangeFeedForEpkRange_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ChangeFeedForEpkRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForEpkRange.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./changeFeedUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\");\n/* harmony import */ var _utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/typeChecks.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function buildChangeFeedIterator(cfOptions, clientContext, container, partitionKeyRangeCache) {\n    const url = container.url;\n    const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_10__.getPathFromLink)(url, _common_index_js__WEBPACK_IMPORTED_MODULE_10__.ResourceType.item);\n    const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_10__.getIdFromLink)(url);\n    let changeFeedStartFrom = cfOptions.changeFeedStartFrom;\n    if (changeFeedStartFrom === undefined) {\n        changeFeedStartFrom = _ChangeFeedStartFrom_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedStartFrom.Now();\n    }\n    if (changeFeedStartFrom instanceof _ChangeFeedStartFromContinuation_js__WEBPACK_IMPORTED_MODULE_3__.ChangeFeedStartFromContinuation) {\n        const continuationToken = changeFeedStartFrom.getCfResourceJson();\n        const resourceType = changeFeedStartFrom.getResourceType();\n        const internalCfOptions = (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__.buildInternalChangeFeedOptions)(cfOptions, changeFeedStartFrom.getCfResource());\n        if (resourceType === _ChangeFeedEnums_js__WEBPACK_IMPORTED_MODULE_6__.ChangeFeedResourceType.PartitionKey &&\n            (0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_12__.isPartitionKey)(continuationToken.partitionKey)) {\n            return new _ChangeFeedForPartitionKey_js__WEBPACK_IMPORTED_MODULE_7__.ChangeFeedForPartitionKey(clientContext, container, id, path, continuationToken.partitionKey, internalCfOptions);\n        }\n        else if (resourceType === _ChangeFeedEnums_js__WEBPACK_IMPORTED_MODULE_6__.ChangeFeedResourceType.FeedRange) {\n            return new _ChangeFeedForEpkRange_js__WEBPACK_IMPORTED_MODULE_9__.ChangeFeedForEpkRange(clientContext, container, partitionKeyRangeCache, id, path, url, internalCfOptions, undefined);\n        }\n        else {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_8__.ErrorResponse(\"Invalid continuation token.\");\n        }\n    }\n    else if (changeFeedStartFrom instanceof _ChangeFeedStartFromNow_js__WEBPACK_IMPORTED_MODULE_4__.ChangeFeedStartFromNow ||\n        changeFeedStartFrom instanceof _ChangeFeedStartFromTime_js__WEBPACK_IMPORTED_MODULE_5__.ChangeFeedStartFromTime ||\n        changeFeedStartFrom instanceof _ChangeFeedStartFromBeginning_js__WEBPACK_IMPORTED_MODULE_2__.ChangeFeedStartFromBeginning) {\n        const startFromNow = changeFeedStartFrom instanceof _ChangeFeedStartFromNow_js__WEBPACK_IMPORTED_MODULE_4__.ChangeFeedStartFromNow ? true : false;\n        const startTime = startFromNow ? undefined : (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__.fetchStartTime)(changeFeedStartFrom);\n        const internalCfOptions = (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__.buildInternalChangeFeedOptions)(cfOptions, undefined, startTime, startFromNow);\n        const cfResource = changeFeedStartFrom.getCfResource();\n        if ((0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_12__.isPartitionKey)(cfResource)) {\n            const partitionKey = cfResource;\n            const partitionKeyDefinition = await container.getPartitionKeyDefinition();\n            if (partitionKeyDefinition !== undefined &&\n                (0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_12__.isPrefixPartitionKey)(partitionKey, partitionKeyDefinition.resource)) {\n                const effectiveEPKRange = await (0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__.getEPKRangeForPrefixPartitionKey)(partitionKey);\n                return new _ChangeFeedForEpkRange_js__WEBPACK_IMPORTED_MODULE_9__.ChangeFeedForEpkRange(clientContext, container, partitionKeyRangeCache, id, path, url, internalCfOptions, effectiveEPKRange);\n            }\n            return new _ChangeFeedForPartitionKey_js__WEBPACK_IMPORTED_MODULE_7__.ChangeFeedForPartitionKey(clientContext, container, id, path, cfResource, internalCfOptions);\n        }\n        else {\n            let internalCfResource;\n            if (cfResource === undefined) {\n                internalCfResource = new _routing_index_js__WEBPACK_IMPORTED_MODULE_0__.QueryRange(_common_index_js__WEBPACK_IMPORTED_MODULE_10__.Constants.EffectivePartitionKeyConstants.MinimumInclusiveEffectivePartitionKey, _common_index_js__WEBPACK_IMPORTED_MODULE_10__.Constants.EffectivePartitionKeyConstants.MaximumExclusiveEffectivePartitionKey, true, false);\n            }\n            else if ((0,_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__.isEpkRange)(cfResource)) {\n                internalCfResource = new _routing_index_js__WEBPACK_IMPORTED_MODULE_0__.QueryRange(cfResource.minInclusive, cfResource.maxExclusive, true, false);\n            }\n            else {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_8__.ErrorResponse(\"Invalid feed range.\");\n            }\n            return new _ChangeFeedForEpkRange_js__WEBPACK_IMPORTED_MODULE_9__.ChangeFeedForEpkRange(clientContext, container, partitionKeyRangeCache, id, path, url, internalCfOptions, internalCfResource);\n        }\n    }\n    else {\n        throw new _request_index_js__WEBPACK_IMPORTED_MODULE_8__.ErrorResponse(\"Invalid change feed start location.\");\n    }\n}\n//# sourceMappingURL=buildChangeFeedIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9idWlsZENoYW5nZUZlZWRJdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRDtBQUNXO0FBQ2tCO0FBQ007QUFDbEI7QUFDRTtBQUNUO0FBQ2E7QUFDcEI7QUFDWTtBQUM2QjtBQUNxQztBQUNwRDtBQUMxRTtBQUNQO0FBQ0EsaUJBQWlCLGtFQUFlLE1BQU0sMkRBQVk7QUFDbEQsZUFBZSxnRUFBYTtBQUM1QjtBQUNBO0FBQ0EsOEJBQThCLHdFQUFtQjtBQUNqRDtBQUNBLHVDQUF1QyxnR0FBK0I7QUFDdEU7QUFDQTtBQUNBLGtDQUFrQyxvRkFBOEI7QUFDaEUsNkJBQTZCLHVFQUFzQjtBQUNuRCxZQUFZLHFFQUFjO0FBQzFCLHVCQUF1QixvRkFBeUI7QUFDaEQ7QUFDQSxrQ0FBa0MsdUVBQXNCO0FBQ3hELHVCQUF1Qiw0RUFBcUI7QUFDNUM7QUFDQTtBQUNBLHNCQUFzQiw0REFBYTtBQUNuQztBQUNBO0FBQ0EsNENBQTRDLDhFQUFzQjtBQUNsRSx1Q0FBdUMsZ0ZBQXVCO0FBQzlELHVDQUF1QywwRkFBNEI7QUFDbkUsNERBQTRELDhFQUFzQjtBQUNsRixxREFBcUQsb0VBQWM7QUFDbkUsa0NBQWtDLG9GQUE4QjtBQUNoRTtBQUNBLFlBQVkscUVBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJFQUFvQjtBQUNwQyxnREFBZ0Qsc0ZBQWdDO0FBQ2hGLDJCQUEyQiw0RUFBcUI7QUFDaEQ7QUFDQSx1QkFBdUIsb0ZBQXlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLHlEQUFVLENBQUMsd0RBQVMsdUVBQXVFLHdEQUFTO0FBQzdJO0FBQ0EscUJBQXFCLGdFQUFVO0FBQy9CLHlDQUF5Qyx5REFBVTtBQUNuRDtBQUNBO0FBQ0EsMEJBQTBCLDREQUFhO0FBQ3ZDO0FBQ0EsdUJBQXVCLDRFQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNERBQWE7QUFDL0I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9idWlsZENoYW5nZUZlZWRJdGVyYXRvci5qcz9lMTQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5UmFuZ2UgfSBmcm9tIFwiLi4vLi4vcm91dGluZy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgQ2hhbmdlRmVlZFN0YXJ0RnJvbSB9IGZyb20gXCIuL0NoYW5nZUZlZWRTdGFydEZyb20uanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRTdGFydEZyb21CZWdpbm5pbmcgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkU3RhcnRGcm9tQmVnaW5uaW5nLmpzXCI7XG5pbXBvcnQgeyBDaGFuZ2VGZWVkU3RhcnRGcm9tQ29udGludWF0aW9uIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZFN0YXJ0RnJvbUNvbnRpbnVhdGlvbi5qc1wiO1xuaW1wb3J0IHsgQ2hhbmdlRmVlZFN0YXJ0RnJvbU5vdyB9IGZyb20gXCIuL0NoYW5nZUZlZWRTdGFydEZyb21Ob3cuanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRTdGFydEZyb21UaW1lIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZFN0YXJ0RnJvbVRpbWUuanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRSZXNvdXJjZVR5cGUgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkRW51bXMuanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRGb3JQYXJ0aXRpb25LZXkgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkRm9yUGFydGl0aW9uS2V5LmpzXCI7XG5pbXBvcnQgeyBFcnJvclJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvaW5kZXguanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRGb3JFcGtSYW5nZSB9IGZyb20gXCIuL0NoYW5nZUZlZWRGb3JFcGtSYW5nZS5qc1wiO1xuaW1wb3J0IHsgZ2V0SWRGcm9tTGluaywgZ2V0UGF0aEZyb21MaW5rLCBSZXNvdXJjZVR5cGUsIENvbnN0YW50cyB9IGZyb20gXCIuLi8uLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IGJ1aWxkSW50ZXJuYWxDaGFuZ2VGZWVkT3B0aW9ucywgZmV0Y2hTdGFydFRpbWUsIGlzRXBrUmFuZ2UsIGdldEVQS1JhbmdlRm9yUHJlZml4UGFydGl0aW9uS2V5LCB9IGZyb20gXCIuL2NoYW5nZUZlZWRVdGlscy5qc1wiO1xuaW1wb3J0IHsgaXNQcmVmaXhQYXJ0aXRpb25LZXksIGlzUGFydGl0aW9uS2V5IH0gZnJvbSBcIi4uLy4uL3V0aWxzL3R5cGVDaGVja3MuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBidWlsZENoYW5nZUZlZWRJdGVyYXRvcihjZk9wdGlvbnMsIGNsaWVudENvbnRleHQsIGNvbnRhaW5lciwgcGFydGl0aW9uS2V5UmFuZ2VDYWNoZSkge1xuICAgIGNvbnN0IHVybCA9IGNvbnRhaW5lci51cmw7XG4gICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh1cmwsIFJlc291cmNlVHlwZS5pdGVtKTtcbiAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodXJsKTtcbiAgICBsZXQgY2hhbmdlRmVlZFN0YXJ0RnJvbSA9IGNmT3B0aW9ucy5jaGFuZ2VGZWVkU3RhcnRGcm9tO1xuICAgIGlmIChjaGFuZ2VGZWVkU3RhcnRGcm9tID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2hhbmdlRmVlZFN0YXJ0RnJvbSA9IENoYW5nZUZlZWRTdGFydEZyb20uTm93KCk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VGZWVkU3RhcnRGcm9tIGluc3RhbmNlb2YgQ2hhbmdlRmVlZFN0YXJ0RnJvbUNvbnRpbnVhdGlvbikge1xuICAgICAgICBjb25zdCBjb250aW51YXRpb25Ub2tlbiA9IGNoYW5nZUZlZWRTdGFydEZyb20uZ2V0Q2ZSZXNvdXJjZUpzb24oKTtcbiAgICAgICAgY29uc3QgcmVzb3VyY2VUeXBlID0gY2hhbmdlRmVlZFN0YXJ0RnJvbS5nZXRSZXNvdXJjZVR5cGUoKTtcbiAgICAgICAgY29uc3QgaW50ZXJuYWxDZk9wdGlvbnMgPSBidWlsZEludGVybmFsQ2hhbmdlRmVlZE9wdGlvbnMoY2ZPcHRpb25zLCBjaGFuZ2VGZWVkU3RhcnRGcm9tLmdldENmUmVzb3VyY2UoKSk7XG4gICAgICAgIGlmIChyZXNvdXJjZVR5cGUgPT09IENoYW5nZUZlZWRSZXNvdXJjZVR5cGUuUGFydGl0aW9uS2V5ICYmXG4gICAgICAgICAgICBpc1BhcnRpdGlvbktleShjb250aW51YXRpb25Ub2tlbi5wYXJ0aXRpb25LZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IENoYW5nZUZlZWRGb3JQYXJ0aXRpb25LZXkoY2xpZW50Q29udGV4dCwgY29udGFpbmVyLCBpZCwgcGF0aCwgY29udGludWF0aW9uVG9rZW4ucGFydGl0aW9uS2V5LCBpbnRlcm5hbENmT3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocmVzb3VyY2VUeXBlID09PSBDaGFuZ2VGZWVkUmVzb3VyY2VUeXBlLkZlZWRSYW5nZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDaGFuZ2VGZWVkRm9yRXBrUmFuZ2UoY2xpZW50Q29udGV4dCwgY29udGFpbmVyLCBwYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBpZCwgcGF0aCwgdXJsLCBpbnRlcm5hbENmT3B0aW9ucywgdW5kZWZpbmVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKFwiSW52YWxpZCBjb250aW51YXRpb24gdG9rZW4uXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGNoYW5nZUZlZWRTdGFydEZyb20gaW5zdGFuY2VvZiBDaGFuZ2VGZWVkU3RhcnRGcm9tTm93IHx8XG4gICAgICAgIGNoYW5nZUZlZWRTdGFydEZyb20gaW5zdGFuY2VvZiBDaGFuZ2VGZWVkU3RhcnRGcm9tVGltZSB8fFxuICAgICAgICBjaGFuZ2VGZWVkU3RhcnRGcm9tIGluc3RhbmNlb2YgQ2hhbmdlRmVlZFN0YXJ0RnJvbUJlZ2lubmluZykge1xuICAgICAgICBjb25zdCBzdGFydEZyb21Ob3cgPSBjaGFuZ2VGZWVkU3RhcnRGcm9tIGluc3RhbmNlb2YgQ2hhbmdlRmVlZFN0YXJ0RnJvbU5vdyA/IHRydWUgOiBmYWxzZTtcbiAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gc3RhcnRGcm9tTm93ID8gdW5kZWZpbmVkIDogZmV0Y2hTdGFydFRpbWUoY2hhbmdlRmVlZFN0YXJ0RnJvbSk7XG4gICAgICAgIGNvbnN0IGludGVybmFsQ2ZPcHRpb25zID0gYnVpbGRJbnRlcm5hbENoYW5nZUZlZWRPcHRpb25zKGNmT3B0aW9ucywgdW5kZWZpbmVkLCBzdGFydFRpbWUsIHN0YXJ0RnJvbU5vdyk7XG4gICAgICAgIGNvbnN0IGNmUmVzb3VyY2UgPSBjaGFuZ2VGZWVkU3RhcnRGcm9tLmdldENmUmVzb3VyY2UoKTtcbiAgICAgICAgaWYgKGlzUGFydGl0aW9uS2V5KGNmUmVzb3VyY2UpKSB7XG4gICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXkgPSBjZlJlc291cmNlO1xuICAgICAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5RGVmaW5pdGlvbiA9IGF3YWl0IGNvbnRhaW5lci5nZXRQYXJ0aXRpb25LZXlEZWZpbml0aW9uKCk7XG4gICAgICAgICAgICBpZiAocGFydGl0aW9uS2V5RGVmaW5pdGlvbiAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgaXNQcmVmaXhQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5LCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uLnJlc291cmNlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVmZmVjdGl2ZUVQS1JhbmdlID0gYXdhaXQgZ2V0RVBLUmFuZ2VGb3JQcmVmaXhQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENoYW5nZUZlZWRGb3JFcGtSYW5nZShjbGllbnRDb250ZXh0LCBjb250YWluZXIsIHBhcnRpdGlvbktleVJhbmdlQ2FjaGUsIGlkLCBwYXRoLCB1cmwsIGludGVybmFsQ2ZPcHRpb25zLCBlZmZlY3RpdmVFUEtSYW5nZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IENoYW5nZUZlZWRGb3JQYXJ0aXRpb25LZXkoY2xpZW50Q29udGV4dCwgY29udGFpbmVyLCBpZCwgcGF0aCwgY2ZSZXNvdXJjZSwgaW50ZXJuYWxDZk9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGV0IGludGVybmFsQ2ZSZXNvdXJjZTtcbiAgICAgICAgICAgIGlmIChjZlJlc291cmNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBpbnRlcm5hbENmUmVzb3VyY2UgPSBuZXcgUXVlcnlSYW5nZShDb25zdGFudHMuRWZmZWN0aXZlUGFydGl0aW9uS2V5Q29uc3RhbnRzLk1pbmltdW1JbmNsdXNpdmVFZmZlY3RpdmVQYXJ0aXRpb25LZXksIENvbnN0YW50cy5FZmZlY3RpdmVQYXJ0aXRpb25LZXlDb25zdGFudHMuTWF4aW11bUV4Y2x1c2l2ZUVmZmVjdGl2ZVBhcnRpdGlvbktleSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNFcGtSYW5nZShjZlJlc291cmNlKSkge1xuICAgICAgICAgICAgICAgIGludGVybmFsQ2ZSZXNvdXJjZSA9IG5ldyBRdWVyeVJhbmdlKGNmUmVzb3VyY2UubWluSW5jbHVzaXZlLCBjZlJlc291cmNlLm1heEV4Y2x1c2l2ZSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJJbnZhbGlkIGZlZWQgcmFuZ2UuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBDaGFuZ2VGZWVkRm9yRXBrUmFuZ2UoY2xpZW50Q29udGV4dCwgY29udGFpbmVyLCBwYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBpZCwgcGF0aCwgdXJsLCBpbnRlcm5hbENmT3B0aW9ucywgaW50ZXJuYWxDZlJlc291cmNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJJbnZhbGlkIGNoYW5nZSBmZWVkIHN0YXJ0IGxvY2F0aW9uLlwiKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1idWlsZENoYW5nZUZlZWRJdGVyYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/buildChangeFeedIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildInternalChangeFeedOptions: () => (/* binding */ buildInternalChangeFeedOptions),\n/* harmony export */   decryptChangeFeedResponse: () => (/* binding */ decryptChangeFeedResponse),\n/* harmony export */   extractOverlappingRanges: () => (/* binding */ extractOverlappingRanges),\n/* harmony export */   fetchStartTime: () => (/* binding */ fetchStartTime),\n/* harmony export */   getEPKRangeForPrefixPartitionKey: () => (/* binding */ getEPKRangeForPrefixPartitionKey),\n/* harmony export */   getEffectivePartitionKeyForMultiHashPartitioning: () => (/* binding */ getEffectivePartitionKeyForMultiHashPartitioning),\n/* harmony export */   isEpkRange: () => (/* binding */ isEpkRange),\n/* harmony export */   isNullOrEmpty: () => (/* binding */ isNullOrEmpty),\n/* harmony export */   validateChangeFeedIteratorOptions: () => (/* binding */ validateChangeFeedIteratorOptions)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/typeChecks.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js\");\n/* harmony import */ var _ChangeFeedStartFromBeginning_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChangeFeedStartFromBeginning.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromBeginning.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _ChangeFeedStartFromTime_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChangeFeedStartFromTime.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFromTime.js\");\n/* harmony import */ var _routing_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../routing/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/index.js\");\n/* harmony import */ var _FeedRange_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FeedRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRange.js\");\n/* harmony import */ var _utils_hashing_v2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/hashing/v2.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v2.js\");\n/* harmony import */ var _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ChangeFeedMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * Validates the change feed options passed by the user\n */\nfunction validateChangeFeedIteratorOptions(options) {\n    if (!isChangeFeedIteratorOptions(options)) {\n        throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"Invalid Changefeed Iterator Options.\");\n    }\n    if (options?.maxItemCount && typeof options?.maxItemCount !== \"number\") {\n        throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"maxItemCount must be number\");\n    }\n    if (options?.maxItemCount !== undefined && options?.maxItemCount < 1) {\n        throw new _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"maxItemCount must be a positive number\");\n    }\n}\nfunction isChangeFeedIteratorOptions(options) {\n    if (typeof options !== \"object\") {\n        return false;\n    }\n    if (Object.keys(options).length === 0 && JSON.stringify(options) === \"{}\") {\n        return true;\n    }\n    return options && !((0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_1__.isPrimitivePartitionKeyValue)(options) || Array.isArray(options));\n}\n/**\n * @hidden\n * Checks if pkRange entirely covers the given overLapping range or there is only partial overlap.\n *\n * If no complete overlap, exact range which overlaps is retured which is used to set minEpk and maxEpk headers while quering change feed.\n */\nasync function extractOverlappingRanges(epkRange, overLappingRange) {\n    if (overLappingRange.minInclusive >= epkRange.min &&\n        overLappingRange.maxExclusive <= epkRange.max) {\n        return [undefined, undefined];\n    }\n    else if (overLappingRange.minInclusive <= epkRange.min &&\n        overLappingRange.maxExclusive >= epkRange.max) {\n        return [epkRange.min, epkRange.max];\n    }\n    // Right Side of overlapping range is covered\n    else if (overLappingRange.minInclusive <= epkRange.min &&\n        overLappingRange.maxExclusive <= epkRange.max &&\n        overLappingRange.maxExclusive >= epkRange.min) {\n        return [epkRange.min, overLappingRange.maxExclusive];\n    }\n    // Left Side of overlapping range is covered\n    else {\n        return [overLappingRange.minInclusive, epkRange.max];\n    }\n}\n/**\n * @hidden\n * Checks if the object is a valid EpkRange\n */\nfunction isEpkRange(obj) {\n    return (obj instanceof _FeedRange_js__WEBPACK_IMPORTED_MODULE_6__.FeedRangeInternal &&\n        typeof obj.minInclusive === \"string\" &&\n        typeof obj.maxExclusive === \"string\" &&\n        obj.minInclusive >=\n            _common_index_js__WEBPACK_IMPORTED_MODULE_3__.Constants.EffectivePartitionKeyConstants.MinimumInclusiveEffectivePartitionKey &&\n        obj.maxExclusive <=\n            _common_index_js__WEBPACK_IMPORTED_MODULE_3__.Constants.EffectivePartitionKeyConstants.MaximumExclusiveEffectivePartitionKey &&\n        obj.maxExclusive > obj.minInclusive);\n}\n/**\n * @hidden\n */\nfunction buildInternalChangeFeedOptions(options, continuationToken, startTime, startFromNow) {\n    const internalCfOptions = {};\n    internalCfOptions.maxItemCount = options?.maxItemCount;\n    internalCfOptions.sessionToken = options?.sessionToken;\n    internalCfOptions.continuationToken = continuationToken;\n    internalCfOptions.changeFeedMode = options?.changeFeedMode;\n    // Default option of changefeed is to start from now.\n    if (startFromNow) {\n        internalCfOptions.startFromNow = true;\n    }\n    else {\n        internalCfOptions.startTime = startTime;\n    }\n    return internalCfOptions;\n}\n/**\n * @hidden\n */\nfunction fetchStartTime(changeFeedStartFrom) {\n    if (changeFeedStartFrom instanceof _ChangeFeedStartFromBeginning_js__WEBPACK_IMPORTED_MODULE_2__.ChangeFeedStartFromBeginning) {\n        return undefined;\n    }\n    else if (changeFeedStartFrom instanceof _ChangeFeedStartFromTime_js__WEBPACK_IMPORTED_MODULE_4__.ChangeFeedStartFromTime) {\n        return changeFeedStartFrom.getStartTime();\n    }\n}\n/**\n * @hidden\n */\nfunction isNullOrEmpty(text) {\n    return text === null || text === undefined || text.trim() === \"\";\n}\n/**\n * @hidden\n */\nasync function getEPKRangeForPrefixPartitionKey(internalPartitionKey) {\n    const minEPK = getEffectivePartitionKeyForMultiHashPartitioning(internalPartitionKey);\n    const maxEPK = minEPK + _common_index_js__WEBPACK_IMPORTED_MODULE_3__.Constants.EffectivePartitionKeyConstants.MaximumExclusiveEffectivePartitionKey;\n    return new _routing_index_js__WEBPACK_IMPORTED_MODULE_5__.QueryRange(minEPK, maxEPK, true, false);\n}\n/**\n * @hidden\n */\nfunction getEffectivePartitionKeyForMultiHashPartitioning(partitionKeyInternal) {\n    const hashArray = partitionKeyInternal.map((item) => (0,_utils_hashing_v2_js__WEBPACK_IMPORTED_MODULE_7__.hashV2PartitionKey)([item]));\n    return hashArray.join(\"\");\n}\n/**\n * @hidden\n */\nasync function decryptChangeFeedResponse(result, diagnosticNode, changeFeedMode, encryptionProcessor) {\n    let count = 0;\n    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_3__.Constants.Encryption.DiagnosticsDecryptOperation);\n    for (let item of result.result) {\n        if (changeFeedMode === _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_8__.ChangeFeedMode.AllVersionsAndDeletes) {\n            if (\"current\" in item && item.current !== null) {\n                const { body, propertiesDecryptedCount } = await encryptionProcessor.decrypt(item.current);\n                item.current = body;\n                count += propertiesDecryptedCount;\n            }\n            if (\"previous\" in item && item.previous !== null) {\n                const { body, propertiesDecryptedCount } = await encryptionProcessor.decrypt(item.previous);\n                item.previous = body;\n                count += propertiesDecryptedCount;\n            }\n        }\n        else {\n            const { body, propertiesDecryptedCount } = await encryptionProcessor.decrypt(item);\n            item = body;\n            count += propertiesDecryptedCount;\n        }\n    }\n    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_3__.Constants.Encryption.DiagnosticsDecryptOperation, count);\n}\n//# sourceMappingURL=changeFeedUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChangeFeedForEpkRange: () => (/* reexport safe */ _ChangeFeedForEpkRange_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedForEpkRange),\n/* harmony export */   ChangeFeedForPartitionKey: () => (/* reexport safe */ _ChangeFeedForPartitionKey_js__WEBPACK_IMPORTED_MODULE_1__.ChangeFeedForPartitionKey),\n/* harmony export */   ChangeFeedIteratorBuilder: () => (/* reexport safe */ _ChangeFeedIteratorBuilder_js__WEBPACK_IMPORTED_MODULE_10__.ChangeFeedIteratorBuilder),\n/* harmony export */   ChangeFeedIteratorResponse: () => (/* reexport safe */ _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_2__.ChangeFeedIteratorResponse),\n/* harmony export */   ChangeFeedMode: () => (/* reexport safe */ _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_5__.ChangeFeedMode),\n/* harmony export */   ChangeFeedPolicy: () => (/* reexport safe */ _ChangeFeedPolicy_js__WEBPACK_IMPORTED_MODULE_9__.ChangeFeedPolicy),\n/* harmony export */   ChangeFeedRetentionTimeSpan: () => (/* reexport safe */ _ChangeFeedRetentionTimeSpan_js__WEBPACK_IMPORTED_MODULE_8__.ChangeFeedRetentionTimeSpan),\n/* harmony export */   ChangeFeedStartFrom: () => (/* reexport safe */ _ChangeFeedStartFrom_js__WEBPACK_IMPORTED_MODULE_4__.ChangeFeedStartFrom),\n/* harmony export */   FeedRange: () => (/* reexport safe */ _FeedRange_js__WEBPACK_IMPORTED_MODULE_3__.FeedRange),\n/* harmony export */   FeedRangeInternal: () => (/* reexport safe */ _FeedRange_js__WEBPACK_IMPORTED_MODULE_3__.FeedRangeInternal),\n/* harmony export */   buildChangeFeedIterator: () => (/* reexport safe */ _buildChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_7__.buildChangeFeedIterator),\n/* harmony export */   buildInternalChangeFeedOptions: () => (/* reexport safe */ _changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_6__.buildInternalChangeFeedOptions)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedForEpkRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChangeFeedForEpkRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForEpkRange.js\");\n/* harmony import */ var _ChangeFeedForPartitionKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChangeFeedForPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedForPartitionKey.js\");\n/* harmony import */ var _ChangeFeedIteratorResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChangeFeedIteratorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorResponse.js\");\n/* harmony import */ var _FeedRange_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FeedRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/FeedRange.js\");\n/* harmony import */ var _ChangeFeedStartFrom_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChangeFeedStartFrom.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedStartFrom.js\");\n/* harmony import */ var _ChangeFeedMode_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ChangeFeedMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedMode.js\");\n/* harmony import */ var _changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./changeFeedUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\");\n/* harmony import */ var _buildChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./buildChangeFeedIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/buildChangeFeedIterator.js\");\n/* harmony import */ var _ChangeFeedRetentionTimeSpan_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ChangeFeedRetentionTimeSpan.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedRetentionTimeSpan.js\");\n/* harmony import */ var _ChangeFeedPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ChangeFeedPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedPolicy.js\");\n/* harmony import */ var _ChangeFeedIteratorBuilder_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ChangeFeedIteratorBuilder.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorBuilder.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2hhbmdlRmVlZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDbUU7QUFDUTtBQUNFO0FBQ2Y7QUFDQztBQUNWO0FBQ2lCO0FBQ0M7QUFDUTtBQUN0QjtBQUNrQjtBQUMzRSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NoYW5nZUZlZWQvaW5kZXguanM/MTUwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IENoYW5nZUZlZWRGb3JFcGtSYW5nZSB9IGZyb20gXCIuL0NoYW5nZUZlZWRGb3JFcGtSYW5nZS5qc1wiO1xuZXhwb3J0IHsgQ2hhbmdlRmVlZEZvclBhcnRpdGlvbktleSB9IGZyb20gXCIuL0NoYW5nZUZlZWRGb3JQYXJ0aXRpb25LZXkuanNcIjtcbmV4cG9ydCB7IENoYW5nZUZlZWRJdGVyYXRvclJlc3BvbnNlIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZEl0ZXJhdG9yUmVzcG9uc2UuanNcIjtcbmV4cG9ydCB7IEZlZWRSYW5nZUludGVybmFsLCBGZWVkUmFuZ2UgfSBmcm9tIFwiLi9GZWVkUmFuZ2UuanNcIjtcbmV4cG9ydCB7IENoYW5nZUZlZWRTdGFydEZyb20gfSBmcm9tIFwiLi9DaGFuZ2VGZWVkU3RhcnRGcm9tLmpzXCI7XG5leHBvcnQgeyBDaGFuZ2VGZWVkTW9kZSB9IGZyb20gXCIuL0NoYW5nZUZlZWRNb2RlLmpzXCI7XG5leHBvcnQgeyBidWlsZEludGVybmFsQ2hhbmdlRmVlZE9wdGlvbnMgfSBmcm9tIFwiLi9jaGFuZ2VGZWVkVXRpbHMuanNcIjtcbmV4cG9ydCB7IGJ1aWxkQ2hhbmdlRmVlZEl0ZXJhdG9yIH0gZnJvbSBcIi4vYnVpbGRDaGFuZ2VGZWVkSXRlcmF0b3IuanNcIjtcbmV4cG9ydCB7IENoYW5nZUZlZWRSZXRlbnRpb25UaW1lU3BhbiB9IGZyb20gXCIuL0NoYW5nZUZlZWRSZXRlbnRpb25UaW1lU3Bhbi5qc1wiO1xuZXhwb3J0IHsgQ2hhbmdlRmVlZFBvbGljeSB9IGZyb20gXCIuL0NoYW5nZUZlZWRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IENoYW5nZUZlZWRJdGVyYXRvckJ1aWxkZXIgfSBmcm9tIFwiLi9DaGFuZ2VGZWVkSXRlcmF0b3JCdWlsZGVyLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computePartitionKeyRangeId: () => (/* binding */ computePartitionKeyRangeId),\n/* harmony export */   readPartitionKeyDefinition: () => (/* binding */ readPartitionKeyDefinition)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nasync function readPartitionKeyDefinition(diagnosticNode, container) {\n    const partitionKeyDefinition = await container.readPartitionKeyDefinition(diagnosticNode);\n    return partitionKeyDefinition.resource;\n}\nasync function computePartitionKeyRangeId(diagnosticNode, partitionKey, partitionKeyRangeCache, isPartitionLevelFailOverEnabled, container, pKDefinition) {\n    let partitionKeyRangeId = undefined;\n    if (isPartitionLevelFailOverEnabled) {\n        const partitionKeyDefinition = pKDefinition ?? (await readPartitionKeyDefinition(diagnosticNode, container));\n        if (partitionKeyDefinition && partitionKey && partitionKey.length > 0) {\n            partitionKeyRangeId = await partitionKeyRangeCache.getPartitionKeyRangeIdFromPartitionKey(container.url, partitionKey, partitionKeyDefinition, diagnosticNode);\n        }\n    }\n    return partitionKeyRangeId;\n}\n//# sourceMappingURL=ClientUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2xpZW50VXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ2xpZW50VXRpbHMuanM/OGVkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbihkaWFnbm9zdGljTm9kZSwgY29udGFpbmVyKSB7XG4gICAgY29uc3QgcGFydGl0aW9uS2V5RGVmaW5pdGlvbiA9IGF3YWl0IGNvbnRhaW5lci5yZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbihkaWFnbm9zdGljTm9kZSk7XG4gICAgcmV0dXJuIHBhcnRpdGlvbktleURlZmluaXRpb24ucmVzb3VyY2U7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcHV0ZVBhcnRpdGlvbktleVJhbmdlSWQoZGlhZ25vc3RpY05vZGUsIHBhcnRpdGlvbktleSwgcGFydGl0aW9uS2V5UmFuZ2VDYWNoZSwgaXNQYXJ0aXRpb25MZXZlbEZhaWxPdmVyRW5hYmxlZCwgY29udGFpbmVyLCBwS0RlZmluaXRpb24pIHtcbiAgICBsZXQgcGFydGl0aW9uS2V5UmFuZ2VJZCA9IHVuZGVmaW5lZDtcbiAgICBpZiAoaXNQYXJ0aXRpb25MZXZlbEZhaWxPdmVyRW5hYmxlZCkge1xuICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uID0gcEtEZWZpbml0aW9uID8/IChhd2FpdCByZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbihkaWFnbm9zdGljTm9kZSwgY29udGFpbmVyKSk7XG4gICAgICAgIGlmIChwYXJ0aXRpb25LZXlEZWZpbml0aW9uICYmIHBhcnRpdGlvbktleSAmJiBwYXJ0aXRpb25LZXkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcGFydGl0aW9uS2V5UmFuZ2VJZCA9IGF3YWl0IHBhcnRpdGlvbktleVJhbmdlQ2FjaGUuZ2V0UGFydGl0aW9uS2V5UmFuZ2VJZEZyb21QYXJ0aXRpb25LZXkoY29udGFpbmVyLnVybCwgcGFydGl0aW9uS2V5LCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBhcnRpdGlvbktleVJhbmdlSWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflict.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflict.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Conflict: () => (/* binding */ Conflict)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _ConflictResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConflictResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResponse.js\");\n/* harmony import */ var _extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../extractPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js\");\n/* harmony import */ var _ClientUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n/**\n * Use to read or delete a given {@link Conflict} by id.\n *\n * @see {@link Conflicts} to query or read all conflicts.\n */\nclass Conflict {\n    container;\n    id;\n    clientContext;\n    partitionKey;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return `/${this.container.url}/${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.ConflictsPathSegment}/${this.id}`;\n    }\n    /**\n     * @hidden\n     * @param container - The parent {@link Container}.\n     * @param id - The id of the given {@link Conflict}.\n     */\n    constructor(container, id, clientContext, partitionKey) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.partitionKey = partitionKey;\n        this.partitionKey = partitionKey;\n    }\n    /**\n     * Read the {@link ConflictDefinition} for the given {@link Conflict}.\n     * @example\n     * ```ts snippet:ConflictRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const container = database.container(\"Test Container\");\n     *\n     * const { resource: conflict } = await container.conflict(\"<conflict-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.conflicts);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _ConflictResponse_js__WEBPACK_IMPORTED_MODULE_1__.ConflictResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the given {@link ConflictDefinition}.\n     * @example\n     * ```ts snippet:ConflictDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const container = database.container(\"Test Container\");\n     *\n     * await container.conflict(\"<conflict-id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            if (this.partitionKey === undefined) {\n                const partitionKeyDefinition = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_3__.readPartitionKeyDefinition)(diagnosticNode, this.container);\n                this.partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.undefinedPartitionKey)(partitionKeyDefinition);\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.conflicts,\n                resourceId: id,\n                options,\n                partitionKey: this.partitionKey,\n                diagnosticNode,\n            });\n            return new _ConflictResponse_js__WEBPACK_IMPORTED_MODULE_1__.ConflictResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Conflict.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvQ29uZmxpY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdHO0FBQ3ZDO0FBQ1k7QUFDTjtBQUN5QjtBQUN4RjtBQUNBLGtDQUFrQyxnQkFBZ0I7QUFDbEQ7QUFDQSxTQUFTLGlCQUFpQjtBQUMxQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtQkFBbUIsR0FBRyx1REFBUywyQkFBMkIsR0FBRyxRQUFRO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxnQkFBZ0I7QUFDdEQsd0NBQXdDLGVBQWU7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBCQUEwQixlQUFlLGVBQWU7QUFDekU7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hELGVBQWUsV0FBVyw2Q0FBNkMscUJBQXFCO0FBQzVGO0FBQ0E7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxlQUFlLHNFQUFlO0FBQzlCLHlCQUF5QixpRUFBZSxXQUFXLDBEQUFZO0FBQy9ELHVCQUF1QiwrREFBYTtBQUNwQztBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix1QkFBdUIsa0VBQWdCLHlEQUF5RCxnRkFBeUI7QUFDekgsU0FBUztBQUNUO0FBQ0E7QUFDQSx5QkFBeUIseUJBQXlCO0FBQ2xEO0FBQ0E7QUFDQSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RCxlQUFlLFdBQVcsNkNBQTZDLHFCQUFxQjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNFQUFlO0FBQzlCO0FBQ0EscURBQXFELDJFQUEwQjtBQUMvRSxvQ0FBb0MsOEVBQXFCO0FBQ3pEO0FBQ0EseUJBQXlCLGlFQUFlO0FBQ3hDLHVCQUF1QiwrREFBYTtBQUNwQztBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QixrRUFBZ0IseURBQXlELGdGQUF5QjtBQUN6SCxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvQ29uZmxpY3QuanM/ZTNjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMsIGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgQ29uZmxpY3RSZXNwb25zZSB9IGZyb20gXCIuL0NvbmZsaWN0UmVzcG9uc2UuanNcIjtcbmltcG9ydCB7IHVuZGVmaW5lZFBhcnRpdGlvbktleSB9IGZyb20gXCIuLi8uLi9leHRyYWN0UGFydGl0aW9uS2V5LmpzXCI7XG5pbXBvcnQgeyByZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbiB9IGZyb20gXCIuLi9DbGllbnRVdGlscy5qc1wiO1xuaW1wb3J0IHsgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcywgd2l0aERpYWdub3N0aWNzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2RpYWdub3N0aWNzLmpzXCI7XG4vKipcbiAqIFVzZSB0byByZWFkIG9yIGRlbGV0ZSBhIGdpdmVuIHtAbGluayBDb25mbGljdH0gYnkgaWQuXG4gKlxuICogQHNlZSB7QGxpbmsgQ29uZmxpY3RzfSB0byBxdWVyeSBvciByZWFkIGFsbCBjb25mbGljdHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBDb25mbGljdCB7XG4gICAgY29udGFpbmVyO1xuICAgIGlkO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgcGFydGl0aW9uS2V5O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSByZWZlcmVuY2UgVVJMIHRvIHRoZSByZXNvdXJjZS4gVXNlZCBmb3IgbGlua2luZyBpbiBQZXJtaXNzaW9ucy5cbiAgICAgKi9cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gYC8ke3RoaXMuY29udGFpbmVyLnVybH0vJHtDb25zdGFudHMuUGF0aC5Db25mbGljdHNQYXRoU2VnbWVudH0vJHt0aGlzLmlkfWA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIC0gVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgaWQgb2YgdGhlIGdpdmVuIHtAbGluayBDb25mbGljdH0uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBpZCwgY2xpZW50Q29udGV4dCwgcGFydGl0aW9uS2V5KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgICAgIHRoaXMucGFydGl0aW9uS2V5ID0gcGFydGl0aW9uS2V5O1xuICAgICAgICB0aGlzLnBhcnRpdGlvbktleSA9IHBhcnRpdGlvbktleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCB0aGUge0BsaW5rIENvbmZsaWN0RGVmaW5pdGlvbn0gZm9yIHRoZSBnaXZlbiB7QGxpbmsgQ29uZmxpY3R9LlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHMgc25pcHBldDpDb25mbGljdFJlYWRcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKiBjb25zdCB7IGRhdGFiYXNlIH0gPSBhd2FpdCBjbGllbnQuZGF0YWJhc2VzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBEYXRhYmFzZVwiIH0pO1xuICAgICAqIGNvbnN0IGNvbnRhaW5lciA9IGRhdGFiYXNlLmNvbnRhaW5lcihcIlRlc3QgQ29udGFpbmVyXCIpO1xuICAgICAqXG4gICAgICogY29uc3QgeyByZXNvdXJjZTogY29uZmxpY3QgfSA9IGF3YWl0IGNvbnRhaW5lci5jb25mbGljdChcIjxjb25mbGljdC1pZD5cIikucmVhZCgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGFzeW5jIHJlYWQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLnVybCwgUmVzb3VyY2VUeXBlLmNvbmZsaWN0cyk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQucmVhZCh7XG4gICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IFJlc291cmNlVHlwZS51c2VyLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQ29uZmxpY3RSZXNwb25zZShyZXNwb25zZS5yZXN1bHQsIHJlc3BvbnNlLmhlYWRlcnMsIHJlc3BvbnNlLmNvZGUsIHRoaXMsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSk7XG4gICAgICAgIH0sIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSB0aGUgZ2l2ZW4ge0BsaW5rIENvbmZsaWN0RGVmaW5pdGlvbn0uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0cyBzbmlwcGV0OkNvbmZsaWN0RGVsZXRlXG4gICAgICogaW1wb3J0IHsgQ29zbW9zQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICogY29uc3QgeyBkYXRhYmFzZSB9ID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgRGF0YWJhc2VcIiB9KTtcbiAgICAgKiBjb25zdCBjb250YWluZXIgPSBkYXRhYmFzZS5jb250YWluZXIoXCJUZXN0IENvbnRhaW5lclwiKTtcbiAgICAgKlxuICAgICAqIGF3YWl0IGNvbnRhaW5lci5jb25mbGljdChcIjxjb25mbGljdC1pZD5cIikuZGVsZXRlKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgZGVsZXRlKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhEaWFnbm9zdGljcyhhc3luYyAoZGlhZ25vc3RpY05vZGUpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcnRpdGlvbktleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5RGVmaW5pdGlvbiA9IGF3YWl0IHJlYWRQYXJ0aXRpb25LZXlEZWZpbml0aW9uKGRpYWdub3N0aWNOb2RlLCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJ0aXRpb25LZXkgPSB1bmRlZmluZWRQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50Q29udGV4dC5kZWxldGUoe1xuICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUuY29uZmxpY3RzLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5OiB0aGlzLnBhcnRpdGlvbktleSxcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDb25mbGljdFJlc3BvbnNlKHJlc3BvbnNlLnJlc3VsdCwgcmVzcG9uc2UuaGVhZGVycywgcmVzcG9uc2UuY29kZSwgdGhpcywgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcygpKTtcbiAgICAgICAgfSwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25mbGljdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflict.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResolutionMode.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResolutionMode.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConflictResolutionMode: () => (/* binding */ ConflictResolutionMode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar ConflictResolutionMode;\n(function (ConflictResolutionMode) {\n    ConflictResolutionMode[\"Custom\"] = \"Custom\";\n    ConflictResolutionMode[\"LastWriterWins\"] = \"LastWriterWins\";\n})(ConflictResolutionMode || (ConflictResolutionMode = {}));\n//# sourceMappingURL=ConflictResolutionMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvQ29uZmxpY3RSZXNvbHV0aW9uTW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3REFBd0Q7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9Db25mbGljdC9Db25mbGljdFJlc29sdXRpb25Nb2RlLmpzP2Y3M2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgdmFyIENvbmZsaWN0UmVzb2x1dGlvbk1vZGU7XG4oZnVuY3Rpb24gKENvbmZsaWN0UmVzb2x1dGlvbk1vZGUpIHtcbiAgICBDb25mbGljdFJlc29sdXRpb25Nb2RlW1wiQ3VzdG9tXCJdID0gXCJDdXN0b21cIjtcbiAgICBDb25mbGljdFJlc29sdXRpb25Nb2RlW1wiTGFzdFdyaXRlcldpbnNcIl0gPSBcIkxhc3RXcml0ZXJXaW5zXCI7XG59KShDb25mbGljdFJlc29sdXRpb25Nb2RlIHx8IChDb25mbGljdFJlc29sdXRpb25Nb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZsaWN0UmVzb2x1dGlvbk1vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResolutionMode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResponse.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResponse.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConflictResponse: () => (/* binding */ ConflictResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass ConflictResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, conflict, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.conflict = conflict;\n    }\n    /** A reference to the {@link Conflict} corresponding to the returned {@link ConflictDefinition}. */\n    conflict;\n}\n//# sourceMappingURL=ConflictResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvQ29uZmxpY3RSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRDtBQUNuRCwrQkFBK0IsK0RBQWdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdCQUFnQiwrQkFBK0IseUJBQXlCO0FBQ3BHO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NvbmZsaWN0L0NvbmZsaWN0UmVzcG9uc2UuanM/YjBhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZVJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvaW5kZXguanNcIjtcbmV4cG9ydCBjbGFzcyBDb25mbGljdFJlc3BvbnNlIGV4dGVuZHMgUmVzb3VyY2VSZXNwb25zZSB7XG4gICAgY29uc3RydWN0b3IocmVzb3VyY2UsIGhlYWRlcnMsIHN0YXR1c0NvZGUsIGNvbmZsaWN0LCBkaWFnbm9zdGljcykge1xuICAgICAgICBzdXBlcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgZGlhZ25vc3RpY3MpO1xuICAgICAgICB0aGlzLmNvbmZsaWN0ID0gY29uZmxpY3Q7XG4gICAgfVxuICAgIC8qKiBBIHJlZmVyZW5jZSB0byB0aGUge0BsaW5rIENvbmZsaWN0fSBjb3JyZXNwb25kaW5nIHRvIHRoZSByZXR1cm5lZCB7QGxpbmsgQ29uZmxpY3REZWZpbml0aW9ufS4gKi9cbiAgICBjb25mbGljdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZsaWN0UmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflicts.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflicts.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Conflicts: () => (/* binding */ Conflicts)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n\n\n/**\n * Use to query or read all conflicts.\n *\n * @see {@link Conflict} to read or delete a given {@link Conflict} by id.\n */\nclass Conflicts {\n    container;\n    clientContext;\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.conflicts);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.conflicts,\n                resourceId: id,\n                resultFn: (result) => result.Conflicts,\n                query,\n                options: innerOptions,\n                diagnosticNode: diagNode,\n            });\n        });\n    }\n    /**\n     * Reads all conflicts\n     * @param options - Use to set options like response page size, continuation tokens, etc.\n     * @example\n     * ```ts snippet:ConflictsReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const container = database.container(\"Test Container\");\n     *\n     * const { resources: conflicts } = await container.conflicts.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Conflicts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvQ29uZmxpY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRjtBQUM5QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxTQUFTLGdCQUFnQiwyQkFBMkIsZ0JBQWdCO0FBQ3BFO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpRUFBZSxxQkFBcUIsMERBQVk7QUFDckUsbUJBQW1CLCtEQUFhO0FBQ2hDLG1CQUFtQiw0REFBYTtBQUNoQztBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hELGVBQWUsV0FBVyw2Q0FBNkMscUJBQXFCO0FBQzVGO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0NvbmZsaWN0L0NvbmZsaWN0cy5qcz81ZDM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuLi8uLi9xdWVyeUl0ZXJhdG9yLmpzXCI7XG4vKipcbiAqIFVzZSB0byBxdWVyeSBvciByZWFkIGFsbCBjb25mbGljdHMuXG4gKlxuICogQHNlZSB7QGxpbmsgQ29uZmxpY3R9IHRvIHJlYWQgb3IgZGVsZXRlIGEgZ2l2ZW4ge0BsaW5rIENvbmZsaWN0fSBieSBpZC5cbiAqL1xuZXhwb3J0IGNsYXNzIENvbmZsaWN0cyB7XG4gICAgY29udGFpbmVyO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBwYXRoID0gZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgUmVzb3VyY2VUeXBlLmNvbmZsaWN0cyk7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICByZXR1cm4gbmV3IFF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgKGRpYWdOb2RlLCBpbm5lck9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHtcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLmNvbmZsaWN0cyxcbiAgICAgICAgICAgICAgICByZXNvdXJjZUlkOiBpZCxcbiAgICAgICAgICAgICAgICByZXN1bHRGbjogKHJlc3VsdCkgPT4gcmVzdWx0LkNvbmZsaWN0cyxcbiAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICBvcHRpb25zOiBpbm5lck9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGU6IGRpYWdOb2RlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkcyBhbGwgY29uZmxpY3RzXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBVc2UgdG8gc2V0IG9wdGlvbnMgbGlrZSByZXNwb25zZSBwYWdlIHNpemUsIGNvbnRpbnVhdGlvbiB0b2tlbnMsIGV0Yy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzIHNuaXBwZXQ6Q29uZmxpY3RzUmVhZEFsbFxuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCB9IGZyb20gXCJAYXp1cmUvY29zbW9zXCI7XG4gICAgICpcbiAgICAgKiBjb25zdCBlbmRwb2ludCA9IFwiaHR0cHM6Ly95b3VyLWFjY291bnQuZG9jdW1lbnRzLmF6dXJlLmNvbVwiO1xuICAgICAqIGNvbnN0IGtleSA9IFwiPGRhdGFiYXNlIGFjY291bnQgbWFzdGVya2V5PlwiO1xuICAgICAqIGNvbnN0IGNsaWVudCA9IG5ldyBDb3Ntb3NDbGllbnQoeyBlbmRwb2ludCwga2V5IH0pO1xuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICogY29uc3QgY29udGFpbmVyID0gZGF0YWJhc2UuY29udGFpbmVyKFwiVGVzdCBDb250YWluZXJcIik7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IHJlc291cmNlczogY29uZmxpY3RzIH0gPSBhd2FpdCBjb250YWluZXIuY29uZmxpY3RzLnJlYWRBbGwoKS5mZXRjaEFsbCgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlYWRBbGwob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeSh1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZsaWN0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflicts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Conflict/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Conflict: () => (/* reexport safe */ _Conflict_js__WEBPACK_IMPORTED_MODULE_0__.Conflict),\n/* harmony export */   ConflictResolutionMode: () => (/* reexport safe */ _ConflictResolutionMode_js__WEBPACK_IMPORTED_MODULE_3__.ConflictResolutionMode),\n/* harmony export */   ConflictResponse: () => (/* reexport safe */ _ConflictResponse_js__WEBPACK_IMPORTED_MODULE_2__.ConflictResponse),\n/* harmony export */   Conflicts: () => (/* reexport safe */ _Conflicts_js__WEBPACK_IMPORTED_MODULE_1__.Conflicts)\n/* harmony export */ });\n/* harmony import */ var _Conflict_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Conflict.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflict.js\");\n/* harmony import */ var _Conflicts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conflicts.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/Conflicts.js\");\n/* harmony import */ var _ConflictResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ConflictResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResponse.js\");\n/* harmony import */ var _ConflictResolutionMode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ConflictResolutionMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/ConflictResolutionMode.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3lDO0FBQ0U7QUFDYztBQUNZO0FBQ3JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29uZmxpY3QvaW5kZXguanM/NjlmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IENvbmZsaWN0IH0gZnJvbSBcIi4vQ29uZmxpY3QuanNcIjtcbmV4cG9ydCB7IENvbmZsaWN0cyB9IGZyb20gXCIuL0NvbmZsaWN0cy5qc1wiO1xuZXhwb3J0IHsgQ29uZmxpY3RSZXNwb25zZSB9IGZyb20gXCIuL0NvbmZsaWN0UmVzcG9uc2UuanNcIjtcbmV4cG9ydCB7IENvbmZsaWN0UmVzb2x1dGlvbk1vZGUgfSBmcm9tIFwiLi9Db25mbGljdFJlc29sdXRpb25Nb2RlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Container.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Container/Container.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Container: () => (/* binding */ Container)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../request/ErrorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\");\n/* harmony import */ var _Conflict_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Conflict/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/index.js\");\n/* harmony import */ var _Item_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Item/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/index.js\");\n/* harmony import */ var _Script_Scripts_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Script/Scripts.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Script/Scripts.js\");\n/* harmony import */ var _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ContainerResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/ContainerResponse.js\");\n/* harmony import */ var _Offer_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Offer/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js\");\n/* harmony import */ var _Offer_OfferResponse_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Offer/OfferResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/OfferResponse.js\");\n/* harmony import */ var _ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ChangeFeed/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/index.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _encryption_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../encryption/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Operations for reading, replacing, or deleting a specific, existing container by id.\n *\n * @see {@link Containers} for creating new containers, and reading/querying all containers; use `.containers`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `container(id).read()` before every single `item.read()` call, to ensure the container exists;\n * do this once on application start up.\n */\nclass Container {\n    database;\n    id;\n    clientContext;\n    encryptionManager;\n    $items;\n    /**\n     * Operations for creating new items, and reading/querying all items\n     *\n     * For reading, replacing, or deleting an existing item, use `.item(id)`.\n     *\n     * @example Create a new item\n     * ```ts snippet:ContainerItems\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: createdItem } = await container.items.create({\n     *   id: \"<item id>\",\n     *   properties: {},\n     * });\n     * ```\n     */\n    get items() {\n        if (!this.$items) {\n            this.$items = new _Item_index_js__WEBPACK_IMPORTED_MODULE_5__.Items(this, this.clientContext);\n        }\n        return this.$items;\n    }\n    $scripts;\n    /**\n     * All operations for Stored Procedures, Triggers, and User Defined Functions\n     */\n    get scripts() {\n        if (!this.$scripts) {\n            this.$scripts = new _Script_Scripts_js__WEBPACK_IMPORTED_MODULE_6__.Scripts(this, this.clientContext);\n        }\n        return this.$scripts;\n    }\n    $conflicts;\n    /**\n     * Operations for reading and querying conflicts for the given container.\n     *\n     * For reading or deleting a specific conflict, use `.conflict(id)`.\n     */\n    get conflicts() {\n        if (!this.$conflicts) {\n            this.$conflicts = new _Conflict_index_js__WEBPACK_IMPORTED_MODULE_4__.Conflicts(this, this.clientContext);\n        }\n        return this.$conflicts;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createDocumentCollectionUri)(this.database.id, this.id);\n    }\n    /**\n     * @internal\n     */\n    encryptionProcessor;\n    /**\n     * @internal\n     */\n    _rid;\n    isEncryptionInitialized = false;\n    encryptionInitializationPromise;\n    /**\n     * Returns a container instance. Note: You should get this from `database.container(id)`, rather than creating your own object.\n     * @param database - The parent {@link Database}.\n     * @param id - The id of the given container.\n     * @hidden\n     */\n    constructor(database, id, clientContext, encryptionManager, _rid) {\n        this.database = database;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.encryptionManager = encryptionManager;\n        this._rid = _rid;\n        if (this.clientContext.enableEncryption) {\n            this.encryptionProcessor = new _encryption_index_js__WEBPACK_IMPORTED_MODULE_13__.EncryptionProcessor(this.id, this._rid, this.database, this.clientContext, this.encryptionManager);\n        }\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Item} by id.\n     *\n     * Use `.items` for creating new items, or querying/reading all items.\n     *\n     * @param id - The id of the {@link Item}.\n     * @param partitionKeyValue - The value of the {@link Item} partition key\n     * @example Replace an item\n     * ```ts snippet:ContainerItem\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { body: replacedItem } = await container\n     *   .item(\"<item id>\", \"<partition key value>\")\n     *   .replace({ id: \"<item id>\", title: \"Updated post\", authorID: 5 });\n     * ```\n     */\n    item(id, partitionKeyValue) {\n        return new _Item_index_js__WEBPACK_IMPORTED_MODULE_5__.Item(this, id, this.clientContext, partitionKeyValue);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Conflict} by id.\n     *\n     * Use `.conflicts` for creating new conflicts, or querying/reading all conflicts.\n     * @param id - The id of the {@link Conflict}.\n     * @example\n     * ```ts snippet:ConflictRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const container = database.container(\"Test Container\");\n     *\n     * const { resource: conflict } = await container.conflict(\"<conflict-id>\").read();\n     * ```\n     */\n    conflict(id, partitionKey) {\n        return new _Conflict_index_js__WEBPACK_IMPORTED_MODULE_4__.Conflict(this, id, this.clientContext, partitionKey);\n    }\n    /**\n     * Read the container's definition\n     * @example\n     * ```ts snippet:ContainerRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resource: database } = await client.database(\"<db id>\").container(\"<container id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            return this.readInternal(diagnosticNode, options);\n        }, this.clientContext);\n    }\n    /**\n     * @hidden\n     */\n    async readInternal(diagnosticNode, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n        const response = await this.clientContext.read({\n            path,\n            resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n            resourceId: id,\n            options,\n            diagnosticNode,\n        });\n        this.clientContext.partitionKeyDefinitionCache[this.url] = response.result.partitionKey;\n        return new _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_7__.ContainerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.getEmptyCosmosDiagnostics)());\n    }\n    /**\n     * Replace the container's definition\n     * @example\n     * ```ts snippet:ContainerReplace\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const containerDefinition = {\n     *   id: \"Test Container\",\n     *   partitionKey: {\n     *     paths: [\"/key1\"],\n     *   },\n     *   throughput: 1000,\n     * };\n     * const { container } = await database.containers.createIfNotExists(containerDefinition);\n     *\n     * containerDefinition.throughput = 400;\n     * const { container: replacedContainer } = await container.replace(containerDefinition);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.replace({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_7__.ContainerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the container\n     * @example\n     * ```ts snippet:DatabaseDeleteContainer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * await client.database(\"<db id>\").container(\"<container id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_7__.ContainerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Gets the partition key definition first by looking into the cache otherwise by reading the collection.\n     * @deprecated This method has been renamed to readPartitionKeyDefinition.\n     */\n    async getPartitionKeyDefinition() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            return this.readPartitionKeyDefinition(diagnosticNode);\n        }, this.clientContext);\n    }\n    /**\n     * Gets the partition key definition first by looking into the cache otherwise by reading the collection.\n     * @hidden\n     */\n    async readPartitionKeyDefinition(diagnosticNode) {\n        // $ISSUE-felixfan-2016-03-17: Make name based path and link based path use the same key\n        // $ISSUE-felixfan-2016-03-17: Refresh partitionKeyDefinitionCache when necessary\n        if (this.url in this.clientContext.partitionKeyDefinitionCache) {\n            diagnosticNode.addData({ readFromCache: true });\n            return new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ResourceResponse(this.clientContext.partitionKeyDefinitionCache[this.url], {}, 0, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.getEmptyCosmosDiagnostics)());\n        }\n        const { headers, statusCode, diagnostics } = await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withMetadataDiagnostics)(async (node) => {\n            return this.readInternal(node);\n        }, diagnosticNode, _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_12__.MetadataLookUpType.ContainerLookUp);\n        return new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ResourceResponse(this.clientContext.partitionKeyDefinitionCache[this.url], headers, statusCode, diagnostics);\n    }\n    /**\n     * Gets offer on container. If none exists, returns an OfferResponse with undefined.\n     * @example\n     * ```ts snippet:ContainerReadOffer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resource: offer } = await client\n     *   .database(\"<db id>\")\n     *   .container(\"<container id>\")\n     *   .readOffer();\n     * ```\n     */\n    async readOffer(options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            const { resource: container } = await this.read();\n            const path = \"/offers\";\n            const url = container._self;\n            const response = await this.clientContext.queryFeed({\n                path,\n                resourceId: \"\",\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.offer,\n                query: `SELECT * from root where root.resource = \"${url}\"`,\n                resultFn: (result) => result.Offers,\n                options,\n                diagnosticNode,\n            });\n            const offer = response.result[0]\n                ? new _Offer_index_js__WEBPACK_IMPORTED_MODULE_8__.Offer(this.database.client, response.result[0].id, this.clientContext)\n                : undefined;\n            return new _Offer_OfferResponse_js__WEBPACK_IMPORTED_MODULE_9__.OfferResponse(response.result[0], response.headers, response.code, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.getEmptyCosmosDiagnostics)(), offer);\n        }, this.clientContext);\n    }\n    async getQueryPlan(query) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            return this.clientContext.getQueryPlan(path + \"/docs\", _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item, (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url), query, {}, diagnosticNode);\n        }, this.clientContext);\n    }\n    /**\n     * Gets the partition key ranges for the container.\n     * @param feedOptions - Options for the request.\n     * @returns An iterator of partition key ranges.\n     * @example\n     * ```ts snippet:ContainerReadPartitionKeyRanges\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resources: ranges } = await container.readPartitionKeyRanges().fetchAll();\n     * ```\n     */\n    readPartitionKeyRanges(feedOptions) {\n        feedOptions = feedOptions || {};\n        return this.clientContext.queryPartitionKeyRanges(this.url, undefined, feedOptions);\n    }\n    /**\n     *\n     * @returns all the feed ranges for which changefeed could be fetched.\n     * @example\n     * ```ts snippet:ContainerGetFeedRanges\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resources: ranges } = await container.getFeedRanges();\n     * ```\n     */\n    async getFeedRanges() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            const { resources } = await this.readPartitionKeyRanges().fetchAllInternal(diagnosticNode);\n            const feedRanges = [];\n            for (const resource of resources) {\n                const feedRange = new _ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_10__.FeedRangeInternal(resource.minInclusive, resource.maxExclusive);\n                Object.freeze(feedRange);\n                feedRanges.push(feedRange);\n            }\n            return feedRanges;\n        }, this.clientContext);\n    }\n    /**\n     * Delete all documents belong to the container for the provided partition key value\n     * @param partitionKey - The partition key value of the items to be deleted\n     * @example\n     * ```ts snippet:ContainerDeleteAllItemsForPartitionKey\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({\n     *   id: \"Test Container\",\n     *   partitionKey: {\n     *     paths: [\"/state\"],\n     *   },\n     * });\n     *\n     * const cities = [\n     *   { id: \"1\", name: \"Olympia\", state: \"WA\", isCapitol: true },\n     *   { id: \"2\", name: \"Redmond\", state: \"WA\", isCapitol: false },\n     *   { id: \"3\", name: \"Olympia\", state: \"IL\", isCapitol: false },\n     * ];\n     * for (const city of cities) {\n     *   await container.items.create(city);\n     * }\n     *\n     * await container.deleteAllItemsForPartitionKey(\"WA\");\n     * ```\n     */\n    async deleteAllItemsForPartitionKey(partitionKey, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n            let path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            path = path + \"/operations/partitionkeydelete\";\n            if (this.clientContext.enableEncryption) {\n                await this.checkAndInitializeEncryption();\n                options = options || {};\n                options.containerRid = this._rid;\n                diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation);\n                const partitionKeyInternal = (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_1__.convertToInternalPartitionKey)(partitionKey);\n                const { partitionKeyList, encryptedCount } = await this.encryptionProcessor.getEncryptedPartitionKeyValue(partitionKeyInternal);\n                partitionKey = partitionKeyList;\n                diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation, encryptedCount);\n            }\n            let response;\n            try {\n                response = await this.clientContext.delete({\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n                    resourceId: id,\n                    options,\n                    partitionKey: partitionKey,\n                    method: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.HTTPMethod.post,\n                    diagnosticNode,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    await this.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                throw error;\n            }\n            return new _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_7__.ContainerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Warms up encryption related caches for the container.\n     * @example\n     * ```ts snippet:ContainerIntializeEncryption\n     * import { ClientSecretCredential } from \"@azure/identity\";\n     * import {\n     *   AzureKeyVaultEncryptionKeyResolver,\n     *   CosmosClient,\n     *   EncryptionType,\n     *   EncryptionAlgorithm,\n     *   ClientEncryptionIncludedPath,\n     *   ClientEncryptionPolicy,\n     * } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const credentials = new ClientSecretCredential(\"<tenant-id>\", \"<client-id>\", \"<app-secret>\");\n     * const keyResolver = new AzureKeyVaultEncryptionKeyResolver(credentials);\n     * const client = new CosmosClient({\n     *   endpoint,\n     *   key,\n     *   clientEncryptionOptions: {\n     *     keyEncryptionKeyResolver: keyResolver,\n     *   },\n     * });\n     * const { database } = await client.databases.createIfNotExists({ id: \"<db id>\" });\n     *\n     * const paths = [\"/path1\", \"/path2\", \"/path3\"].map(\n     *   (path) =>\n     *     ({\n     *       path: path,\n     *       clientEncryptionKeyId: \"< cek - id >\",\n     *       encryptionType: EncryptionType.DETERMINISTIC,\n     *       encryptionAlgorithm: EncryptionAlgorithm.AEAD_AES_256_CBC_HMAC_SHA256,\n     *     }) as ClientEncryptionIncludedPath,\n     * );\n     * const clientEncryptionPolicy: ClientEncryptionPolicy = {\n     *   includedPaths: paths,\n     *   policyFormatVersion: 2,\n     * };\n     * const containerDefinition = {\n     *   id: \"Test Container\",\n     *   partitionKey: {\n     *     paths: [\"/id\"],\n     *   },\n     *   clientEncryptionPolicy: clientEncryptionPolicy,\n     * };\n     * const { container } = await database.containers.createIfNotExists(containerDefinition);\n     *\n     * await container.initializeEncryption();\n     * ```\n     */\n    async initializeEncryption() {\n        if (!this.clientContext.enableEncryption) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Encryption is not enabled for the client.\");\n        }\n        else {\n            await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_11__.withDiagnostics)(async (diagnosticNode) => {\n                const readResponse = await this.readInternal(diagnosticNode);\n                if (!readResponse || !readResponse.resource) {\n                    throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Failed to initialize encryption: The container's resource definition could not be retrieved.\");\n                }\n                this._rid = readResponse.resource._rid;\n                this.encryptionProcessor.containerRid = this._rid;\n                const clientEncryptionPolicy = readResponse.resource.clientEncryptionPolicy;\n                if (!clientEncryptionPolicy)\n                    return;\n                const partitionKeyPaths = readResponse.resource.partitionKey.paths;\n                const databaseResponse = await this.database.readInternal(diagnosticNode);\n                if (!databaseResponse || !databaseResponse.resource) {\n                    throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Failed to initialize encryption: The database's resource definition could not be retrieved.\");\n                }\n                this.database._rid = databaseResponse.resource._rid;\n                const encryptionSettingKey = this.database._rid + \"/\" + this._rid;\n                await this.encryptionManager.encryptionSettingsCache.create(encryptionSettingKey, this._rid, partitionKeyPaths, clientEncryptionPolicy);\n                const clientEncryptionKeyIds = [\n                    ...new Set(clientEncryptionPolicy.includedPaths.map((item) => item.clientEncryptionKeyId)),\n                ];\n                // fetch and set clientEncryptionKeys in the cache\n                for (const clientEncryptionKeyId of clientEncryptionKeyIds) {\n                    const res = await this.database.readClientEncryptionKey(clientEncryptionKeyId);\n                    if (!res || !res.clientEncryptionKeyProperties) {\n                        throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(`Failed to initialize encryption: The client encryption key ${clientEncryptionKeyId} could not be retrieved.`);\n                    }\n                    const encryptionKeyProperties = res.clientEncryptionKeyProperties;\n                    const key = this.database._rid + \"/\" + clientEncryptionKeyId;\n                    this.encryptionManager.clientEncryptionKeyPropertiesCache.set(key, encryptionKeyProperties);\n                }\n                this.isEncryptionInitialized = true;\n            }, this.clientContext);\n        }\n    }\n    /**\n     * @internal\n     */\n    async checkAndInitializeEncryption() {\n        if (!this.isEncryptionInitialized) {\n            if (!this.encryptionInitializationPromise) {\n                this.encryptionInitializationPromise = this.initializeEncryption();\n            }\n            await this.encryptionInitializationPromise;\n        }\n    }\n    /**\n     * @internal\n     * This function handles the scenario where a container is deleted(say from different Client) and recreated with same Id but with different client encryption policy.\n     * The idea is to have the container Rid cached and sent out as part of RequestOptions with Container Rid set in \"x-ms-cosmos-intended-collection-rid\" header.\n     * So, when the container being referenced here gets recreated we would end up with a stale encryption settings and container Rid and this would result in BadRequest (and a substatus 1024).\n     * This would allow us to refresh the encryption settings and Container Rid, on the premise that the container recreated could possibly be configured with a new encryption policy.\n     */\n    async throwIfRequestNeedsARetryPostPolicyRefresh(errorResponse) {\n        const key = this.database._rid + \"/\" + this._rid;\n        const encryptionSetting = this.encryptionManager.encryptionSettingsCache.get(key);\n        if (!errorResponse?.code || !errorResponse?.headers?.[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.SubStatus]) {\n            return;\n        }\n        const subStatusCode = errorResponse.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.SubStatus];\n        const isPartitionKeyMismatch = Number(subStatusCode) === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SubStatusCodes.PartitionKeyMismatch;\n        const isIncorrectContainerRidSubstatus = Number(subStatusCode) === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SubStatusCodes.IncorrectContainerRidSubstatus;\n        if (errorResponse.code === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.BadRequest &&\n            (isPartitionKeyMismatch || isIncorrectContainerRidSubstatus)) {\n            // This code verifies if the partitionKeyPaths are encrypted.\n            // If the paths are not encrypted, it indicates that the application passed an incorrect partition key in the request.\n            // This ensures the issue is not caused by a mismatched encrypted value due to a policy error,\n            // avoiding unnecessary force-refreshing of encryption settings.\n            if (isPartitionKeyMismatch && encryptionSetting.partitionKeyPaths.length) {\n                let encryptionSettingsForProperty = null;\n                for (const path of encryptionSetting.partitionKeyPaths) {\n                    const partitionKeyPath = path.split(\"/\")[1];\n                    encryptionSettingsForProperty =\n                        encryptionSetting.getEncryptionSettingForProperty(partitionKeyPath);\n                    if (encryptionSettingsForProperty) {\n                        break;\n                    }\n                }\n                // wrong partition key passed as partition key is not encrypted.\n                if (encryptionSettingsForProperty == null) {\n                    return;\n                }\n            }\n            const currentContainerRid = encryptionSetting.containerRid;\n            const forceRefresh = true;\n            // fetch rid of newly created container\n            const updatedContainerRid = (await this.encryptionProcessor.getEncryptionSetting(forceRefresh)).containerRid;\n            // if the container was not recreated, so policy has not changed, just return the original response\n            if (currentContainerRid === updatedContainerRid) {\n                return;\n            }\n            await this.initializeEncryption();\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Operation has failed due to a possible mismatch in Client Encryption Policy configured on the container. Retrying may fix the issue. Please refer to https://aka.ms/CosmosClientEncryption for more details.\" +\n                errorResponse.message);\n        }\n    }\n}\n//# sourceMappingURL=Container.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Container.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/ContainerResponse.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Container/ContainerResponse.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContainerResponse: () => (/* binding */ ContainerResponse)\n/* harmony export */ });\n/* harmony import */ var _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/ResourceResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js\");\n\n/** Response object for Container operations */\nclass ContainerResponse extends _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, container, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.container = container;\n    }\n    /** A reference to the {@link Container} that the returned {@link ContainerDefinition} corresponds to. */\n    container;\n}\n//# sourceMappingURL=ContainerResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29udGFpbmVyL0NvbnRhaW5lclJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFFO0FBQ3JFO0FBQ08sZ0NBQWdDLDBFQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUIsbUJBQW1CLDJCQUEyQjtBQUMzRjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9Db250YWluZXIvQ29udGFpbmVyUmVzcG9uc2UuanM/OTA5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZVJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvUmVzb3VyY2VSZXNwb25zZS5qc1wiO1xuLyoqIFJlc3BvbnNlIG9iamVjdCBmb3IgQ29udGFpbmVyIG9wZXJhdGlvbnMgKi9cbmV4cG9ydCBjbGFzcyBDb250YWluZXJSZXNwb25zZSBleHRlbmRzIFJlc291cmNlUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBjb250YWluZXIsIGRpYWdub3N0aWNzKSB7XG4gICAgICAgIHN1cGVyKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBkaWFnbm9zdGljcyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIH1cbiAgICAvKiogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBDb250YWluZXJ9IHRoYXQgdGhlIHJldHVybmVkIHtAbGluayBDb250YWluZXJEZWZpbml0aW9ufSBjb3JyZXNwb25kcyB0by4gKi9cbiAgICBjb250YWluZXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db250YWluZXJSZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/ContainerResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Containers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Container/Containers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Containers: () => (/* binding */ Containers)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/partitionKeys.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/partitionKeys.js\");\n/* harmony import */ var _queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../queryExecutionContext/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _Container_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Container.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Container.js\");\n/* harmony import */ var _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ContainerResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/ContainerResponse.js\");\n/* harmony import */ var _utils_offers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/offers.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/offers.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n\n\n\n/**\n * Operations for creating new containers, and reading/querying all containers\n *\n * @see {@link Container} for reading, replacing, or deleting an existing container; use `.container(id)`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `containers.readAll()` before every single `item.read()` call, to ensure the container exists;\n * do this once on application start up.\n */\nclass Containers {\n    database;\n    clientContext;\n    encryptionManager;\n    /**\n     * @hidden\n     * @param database - The parent {@link Database}.\n     */\n    constructor(database, clientContext, encryptionManager) {\n        this.database = database;\n        this.clientContext = clientContext;\n        this.encryptionManager = encryptionManager;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.database.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.database.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_3__.QueryIterator(this.clientContext, query, options, (diagNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n                resourceId: id,\n                resultFn: (result) => result.DocumentCollections,\n                query,\n                options: innerOptions,\n                diagnosticNode: diagNode,\n            });\n        });\n    }\n    /**\n     * Creates a container.\n     *\n     * A container is a named logical container for items.\n     *\n     * A database may contain zero or more named containers and each container consists of\n     * zero or more JSON items.\n     *\n     * Being schema-free, the items in a container do not need to share the same structure or fields.\n     *\n     *\n     * Since containers are application resources, they can be authorized using either the\n     * master key or resource keys.\n     *\n     * @param body - Represents the body of the container.\n     * @param options - Use to set options like response page size, continuation tokens, etc.\n     * @example\n     * ```ts snippet:CosmosClientDatabaseCreateContainer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const container = client.database(\"<database id>\").containers.create({\n     *   id: \"<name here>\",\n     * });\n     * ```\n     */\n    async create(body, options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_7__.withDiagnostics)(async (diagnosticNode) => {\n            return this.createInternal(diagnosticNode, body, options);\n        }, this.clientContext);\n    }\n    /**\n     * @hidden\n     */\n    async createInternal(diagnosticNode, body, options = {}) {\n        const err = {};\n        if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n            throw err;\n        }\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.database.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.database.url);\n        (0,_utils_offers_js__WEBPACK_IMPORTED_MODULE_6__.validateOffer)(body);\n        if (body.maxThroughput) {\n            const autoscaleParams = {\n                maxThroughput: body.maxThroughput,\n            };\n            if (body.autoUpgradePolicy) {\n                autoscaleParams.autoUpgradePolicy = body.autoUpgradePolicy;\n            }\n            const autoscaleHeader = JSON.stringify(autoscaleParams);\n            options.initialHeaders = Object.assign({}, options.initialHeaders, {\n                [_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.AutoscaleSettings]: autoscaleHeader,\n            });\n            delete body.maxThroughput;\n            delete body.autoUpgradePolicy;\n        }\n        if (body.throughput) {\n            options.initialHeaders = Object.assign({}, options.initialHeaders, {\n                [_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.OfferThroughput]: body.throughput,\n            });\n            delete body.throughput;\n        }\n        if (typeof body.partitionKey === \"string\") {\n            if (!body.partitionKey.startsWith(\"/\")) {\n                throw new Error(\"Partition key must start with '/'\");\n            }\n            body.partitionKey = {\n                paths: [body.partitionKey],\n            };\n        }\n        // If they don't specify a partition key, use the default path\n        if (!body.partitionKey || !body.partitionKey.paths) {\n            body.partitionKey = {\n                paths: [_common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_PARTITION_KEY_PATH],\n            };\n        }\n        if (this.clientContext.enableEncryption && body.clientEncryptionPolicy) {\n            body.clientEncryptionPolicy.policyFormatVersion =\n                body.clientEncryptionPolicy.policyFormatVersion ?? 1;\n            (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.validateClientEncryptionPolicy)(body.clientEncryptionPolicy, body.partitionKey);\n        }\n        const response = await this.clientContext.create({\n            body,\n            path,\n            resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n            resourceId: id,\n            diagnosticNode,\n            options,\n        });\n        const ref = new _Container_js__WEBPACK_IMPORTED_MODULE_4__.Container(this.database, response.result.id, this.clientContext, this.encryptionManager, response.result._rid);\n        this.clientContext.partitionKeyDefinitionCache[ref.url] = response.result.partitionKey;\n        return new _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_5__.ContainerResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_7__.getEmptyCosmosDiagnostics)());\n    }\n    /**\n     * Checks if a Container exists, and, if it doesn't, creates it.\n     * This will make a read operation based on the id in the `body`, then if it is not found, a create operation.\n     * You should confirm that the output matches the body you passed in for non-default properties (i.e. indexing policy/etc.)\n     *\n     * A container is a named logical container for items.\n     *\n     * A database may contain zero or more named containers and each container consists of\n     * zero or more JSON items.\n     *\n     * Being schema-free, the items in a container do not need to share the same structure or fields.\n     *\n     *\n     * Since containers are application resources, they can be authorized using either the\n     * master key or resource keys.\n     *\n     * @param body - Represents the body of the container.\n     * @param options - Use to set options like response page size, continuation tokens, etc.\n     * @example\n     * ```ts snippet:ReadmeSampleCreateContainer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     * ```\n     */\n    async createIfNotExists(body, options) {\n        if (!body || body.id === null || body.id === undefined) {\n            throw new Error(\"body parameter must be an object with an id property\");\n        }\n        /*\n          1. Attempt to read the Container (based on an assumption that most containers will already exist, so its faster)\n          2. If it fails with NotFound error, attempt to create the container. Else, return the read results.\n        */\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_7__.withDiagnostics)(async (diagnosticNode) => {\n            try {\n                const readResponse = await this.database\n                    .container(body.id)\n                    .readInternal(diagnosticNode, options);\n                return readResponse;\n            }\n            catch (err) {\n                if (err.code === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NotFound) {\n                    const createResponse = await this.createInternal(diagnosticNode, body, options);\n                    // Must merge the headers to capture RU costskaty\n                    (0,_queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__.mergeHeaders)(createResponse.headers, err.headers);\n                    return createResponse;\n                }\n                else {\n                    throw err;\n                }\n            }\n        }, this.clientContext);\n    }\n    /**\n     * Read all containers.\n     * @param options - Use to set options like response page size, continuation tokens, etc.\n     * @returns {@link QueryIterator} Allows you to return all containers in an array or iterate over them one at a time.\n     * @example Read all containers to array.\n     * ```ts snippet:ContainersReadAllContainers\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resources: containerList } = await client\n     *   .database(\"<db id>\")\n     *   .containers.readAll()\n     *   .fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Containers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Containers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Container/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Container: () => (/* reexport safe */ _Container_js__WEBPACK_IMPORTED_MODULE_0__.Container),\n/* harmony export */   ContainerResponse: () => (/* reexport safe */ _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_2__.ContainerResponse),\n/* harmony export */   Containers: () => (/* reexport safe */ _Containers_js__WEBPACK_IMPORTED_MODULE_1__.Containers)\n/* harmony export */ });\n/* harmony import */ var _Container_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Container.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Container.js\");\n/* harmony import */ var _Containers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Containers.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/Containers.js\");\n/* harmony import */ var _ContainerResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContainerResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/ContainerResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29udGFpbmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDMkM7QUFDRTtBQUNjO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvQ29udGFpbmVyL2luZGV4LmpzP2JiYjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBDb250YWluZXIgfSBmcm9tIFwiLi9Db250YWluZXIuanNcIjtcbmV4cG9ydCB7IENvbnRhaW5lcnMgfSBmcm9tIFwiLi9Db250YWluZXJzLmpzXCI7XG5leHBvcnQgeyBDb250YWluZXJSZXNwb25zZSB9IGZyb20gXCIuL0NvbnRhaW5lclJlc3BvbnNlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Database.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Database/Database.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Database: () => (/* binding */ Database)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _Container_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Container/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/index.js\");\n/* harmony import */ var _User_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../User/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/index.js\");\n/* harmony import */ var _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DatabaseResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/DatabaseResponse.js\");\n/* harmony import */ var _Offer_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Offer/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../encryption/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/index.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Operations for reading or deleting an existing database.\n *\n * @see {@link Databases} for creating new databases, and reading/querying all databases; use `client.databases`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `database.read()` before every single `item.read()` call, to ensure the database exists;\n * do this once on application start up.\n */\nclass Database {\n    client;\n    id;\n    clientContext;\n    encryptionManager;\n    /**\n     * Used for creating new containers, or querying/reading all containers.\n     *\n     * Use `.database(id)` to read, replace, or delete a specific, existing {@link Database} by id.\n     *\n     * @example Create a new container\n     * ```ts snippet:DatabaseCreateContainer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { body: containerDefinition, container } = await client\n     *   .database(\"<db id>\")\n     *   .containers.create({ id: \"<container id>\" });\n     * ```\n     */\n    containers;\n    /**\n     * Used for creating new users, or querying/reading all users.\n     *\n     * Use `.user(id)` to read, replace, or delete a specific, existing {@link User} by id.\n     */\n    users;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     * @example\n     * ```ts snippet:DatabaseGetUrl\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const url = database.url;\n     * ```\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createDatabaseUri)(this.id);\n    }\n    /**\n     * @internal\n     */\n    _rid;\n    /** Returns a new {@link Database} instance.\n     *\n     * Note: the intention is to get this object from {@link CosmosClient} via `client.database(id)`, not to instantiate it yourself.\n     * @hidden\n     */\n    constructor(client, id, clientContext, encryptionManager, _rid) {\n        this.client = client;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.encryptionManager = encryptionManager;\n        this.containers = new _Container_index_js__WEBPACK_IMPORTED_MODULE_2__.Containers(this, this.clientContext, this.encryptionManager);\n        this.users = new _User_index_js__WEBPACK_IMPORTED_MODULE_3__.Users(this, this.clientContext);\n        this._rid = _rid;\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Database} by id.\n     *\n     * Use `.containers` creating new containers, or querying/reading all containers.\n     *\n     * @example Delete a container\n     * ```ts snippet:DatabaseDeleteContainer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * await client.database(\"<db id>\").container(\"<container id>\").delete();\n     * ```\n     */\n    container(id) {\n        return new _Container_index_js__WEBPACK_IMPORTED_MODULE_2__.Container(this, id, this.clientContext, this.encryptionManager);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link User} by id.\n     *\n     * Use `.users` for creating new users, or querying/reading all users.\n     * @example Delete a user\n     * ```ts snippet:DatabaseDeleteUser\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * await client.database(\"<db id>\").user(\"<user id>\").delete();\n     * ```\n     */\n    user(id) {\n        return new _User_index_js__WEBPACK_IMPORTED_MODULE_3__.User(this, id, this.clientContext);\n    }\n    /** Read the definition of the given Database.\n     * @example\n     * ```ts snippet:DatabaseRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resource: database } = await client.database(\"<db id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            return this.readInternal(diagnosticNode, options);\n        }, this.clientContext);\n    }\n    /**\n     * @hidden\n     */\n    async readInternal(diagnosticNode, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n        const response = await this.clientContext.read({\n            path,\n            resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.database,\n            resourceId: id,\n            options,\n            diagnosticNode,\n        });\n        return new _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_4__.DatabaseResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)());\n    }\n    /** Delete the given Database.\n     * @example\n     * ```ts snippet:CosmosClientDatabaseDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * await client.database(\"<id here>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.database,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_4__.DatabaseResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Gets offer on database. If none exists, returns an OfferResponse with undefined.\n     * @example Read the offer on the database\n     * ```ts snippet:DatabaseReadOffer\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resource: offer } = await client.database(\"<db id>\").readOffer();\n     * ```\n     */\n    async readOffer(options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            const { resource: record } = await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withMetadataDiagnostics)(async (node) => {\n                return this.readInternal(node);\n            }, diagnosticNode, _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_7__.MetadataLookUpType.DatabaseLookUp);\n            const path = \"/offers\";\n            const url = record._self;\n            const response = await this.clientContext.queryFeed({\n                path,\n                resourceId: \"\",\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.offer,\n                query: `SELECT * from root where root.resource = \"${url}\"`,\n                resultFn: (result) => result.Offers,\n                options,\n                diagnosticNode,\n            });\n            const offer = response.result[0]\n                ? new _Offer_index_js__WEBPACK_IMPORTED_MODULE_5__.Offer(this.client, response.result[0].id, this.clientContext)\n                : undefined;\n            return new _Offer_index_js__WEBPACK_IMPORTED_MODULE_5__.OfferResponse(response.result[0], response.headers, response.code, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)(), offer);\n        }, this.clientContext);\n    }\n    /**\n     * Create Encryption key for database account\n     * @example\n     * ```ts snippet:DatabaseCreateClientEncryptionKey\n     * import { ClientSecretCredential } from \"@azure/identity\";\n     * import {\n     *   AzureKeyVaultEncryptionKeyResolver,\n     *   CosmosClient,\n     *   EncryptionKeyWrapMetadata,\n     *   EncryptionKeyResolverName,\n     *   KeyEncryptionAlgorithm,\n     *   EncryptionAlgorithm,\n     * } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const credentials = new ClientSecretCredential(\"<tenant-id>\", \"<client-id>\", \"<app-secret>\");\n     * const keyResolver = new AzureKeyVaultEncryptionKeyResolver(credentials);\n     * const client = new CosmosClient({\n     *   endpoint,\n     *   key,\n     *   clientEncryptionOptions: {\n     *     keyEncryptionKeyResolver: keyResolver,\n     *   },\n     * });\n     * const { database } = await client.databases.createIfNotExists({ id: \"<db id>\" });\n     * const metadata: EncryptionKeyWrapMetadata = {\n     *   type: EncryptionKeyResolverName.AzureKeyVault,\n     *   name: \"<key-name>\",\n     *   value: \"<key-vault-url>\",\n     *   algorithm: KeyEncryptionAlgorithm.RSA_OAEP,\n     * };\n     *\n     * await database.createClientEncryptionKey(\n     *   \"<cek-id>\",\n     *   EncryptionAlgorithm.AEAD_AES_256_CBC_HMAC_SHA256,\n     *   metadata,\n     * );\n     * ```\n     */\n    async createClientEncryptionKey(clientEncryptionKeyId, encryptionAlgorithm, keyWrapMetadata) {\n        if (clientEncryptionKeyId == null || !clientEncryptionKeyId.trim()) {\n            throw new Error(\"encryption key id cannot be null or empty\");\n        }\n        if (encryptionAlgorithm !== _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__.EncryptionAlgorithm.AEAD_AES_256_CBC_HMAC_SHA256) {\n            throw new Error(`Invalid encryption algorithm '${encryptionAlgorithm}' passed.`);\n        }\n        if (!keyWrapMetadata) {\n            throw new Error(\"encryptionKeyWrapMetadata cannot be null.\");\n        }\n        if (keyWrapMetadata.algorithm !== _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__.KeyEncryptionAlgorithm.RSA_OAEP) {\n            throw new Error(`Invalid key wrap algorithm '${keyWrapMetadata.algorithm}' passed.`);\n        }\n        if (!this.clientContext.enableEncryption) {\n            throw new Error(\"Creating a client encryption key requires the use of an encryption-enabled client.\");\n        }\n        const keyEncryptionKey = this.encryptionManager.keyEncryptionKeyCache.getOrCreate(keyWrapMetadata.name, keyWrapMetadata.value, this.encryptionManager.encryptionKeyStoreProvider);\n        const protectedDataEncryptionKey = await this.encryptionManager.protectedDataEncryptionKeyCache.getOrCreate(clientEncryptionKeyId, keyEncryptionKey);\n        const wrappedDataEncryptionKey = protectedDataEncryptionKey.encryptedValue;\n        const body = {\n            id: clientEncryptionKeyId,\n            encryptionAlgorithm: encryptionAlgorithm,\n            keyWrapMetadata: keyWrapMetadata,\n            wrappedDataEncryptionKey: wrappedDataEncryptionKey.toString(\"base64\"),\n        };\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey);\n            const databaseId = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.create({\n                body,\n                path: path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey,\n                resourceId: databaseId,\n                diagnosticNode,\n            });\n            const ref = {\n                id: response.result.id,\n                encryptionAlgorithm: response.result.encryptionAlgorithm,\n                etag: response.result._etag,\n                wrappedDataEncryptionKey: new Uint8Array(Buffer.from(response.result.wrappedDataEncryptionKey, \"base64\")),\n                encryptionKeyWrapMetadata: response.result.keyWrapMetadata,\n            };\n            return new _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__.ClientEncryptionKeyResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Read Encryption key for database account\n     * @example\n     * ```ts snippet:DatabaseReadClientEncryptionKey\n     * import { ClientSecretCredential } from \"@azure/identity\";\n     * import { AzureKeyVaultEncryptionKeyResolver, CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const credentials = new ClientSecretCredential(\"<tenant-id>\", \"<client-id>\", \"<app-secret>\");\n     * const keyResolver = new AzureKeyVaultEncryptionKeyResolver(credentials);\n     * const client = new CosmosClient({\n     *   endpoint,\n     *   key,\n     *   clientEncryptionOptions: {\n     *     keyEncryptionKeyResolver: keyResolver,\n     *   },\n     * });\n     * const { database } = await client.databases.createIfNotExists({ id: \"<db id>\" });\n     *\n     * const { resource: clientEncryptionKey } = await database.readClientEncryptionKey(\"<cek-id>\");\n     * ```\n     */\n    async readClientEncryptionKey(clientEncryptionKeyId) {\n        if (clientEncryptionKeyId == null || !clientEncryptionKeyId.trim()) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"encryption key id cannot be null or empty\");\n        }\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            if (!this._rid) {\n                const databaseResponse = await this.readInternal(diagnosticNode);\n                if (!databaseResponse || !databaseResponse.resource) {\n                    throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Error reading database with id ${clientEncryptionKeyId}`);\n                }\n                this._rid = databaseResponse.resource._rid;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey);\n            const resourceid = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path: path + `/${clientEncryptionKeyId}`,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey,\n                resourceId: resourceid + `/${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey}/${clientEncryptionKeyId}`,\n                options: { databaseRid: this._rid },\n                diagnosticNode,\n            });\n            if (!response || !response.result) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Error reading client encryption key with id ${clientEncryptionKeyId}`);\n            }\n            const ref = {\n                id: response.result.id,\n                encryptionAlgorithm: response.result.encryptionAlgorithm,\n                etag: response.result._etag,\n                wrappedDataEncryptionKey: new Uint8Array(Buffer.from(response.result.wrappedDataEncryptionKey, \"base64\")),\n                encryptionKeyWrapMetadata: response.result.keyWrapMetadata,\n            };\n            return new _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__.ClientEncryptionKeyResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * rewraps a client encryption key with new key encryption key\n     * @param id - client encryption key id\n     * @param newKeyWrapMetadata - new encryption key wrap metadata\n     * @returns rewrapped client encryption key with new customer managed key\n     * @example\n     * ```ts snippet:DatabaseRewrapClientEncryptionKey\n     * import { ClientSecretCredential } from \"@azure/identity\";\n     * import {\n     *   AzureKeyVaultEncryptionKeyResolver,\n     *   CosmosClient,\n     *   EncryptionKeyWrapMetadata,\n     *   EncryptionKeyResolverName,\n     *   KeyEncryptionAlgorithm,\n     * } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const credentials = new ClientSecretCredential(\"<tenant-id>\", \"<client-id>\", \"<app-secret>\");\n     * const keyResolver = new AzureKeyVaultEncryptionKeyResolver(credentials);\n     * const client = new CosmosClient({\n     *   endpoint,\n     *   key,\n     *   clientEncryptionOptions: {\n     *     keyEncryptionKeyResolver: keyResolver,\n     *   },\n     * });\n     * const { database } = await client.databases.createIfNotExists({ id: \"<db id>\" });\n     * const newMetadata: EncryptionKeyWrapMetadata = {\n     *   type: EncryptionKeyResolverName.AzureKeyVault,\n     *   name: \"<key-name>\",\n     *   value: \"<key-vault-url>\",\n     *   algorithm: KeyEncryptionAlgorithm.RSA_OAEP,\n     * };\n     *\n     * await database.rewrapClientEncryptionKey(\"<new-cek-id>\", newMetadata);\n     * ```\n     */\n    async rewrapClientEncryptionKey(clientEncryptionKeyId, newKeyWrapMetadata) {\n        if (clientEncryptionKeyId == null || !clientEncryptionKeyId.trim()) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"encryption key id cannot be null or empty\");\n        }\n        if (!newKeyWrapMetadata) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"encryptionKeyWrapMetadata cannot be null.\");\n        }\n        if (newKeyWrapMetadata.algorithm !== _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__.KeyEncryptionAlgorithm.RSA_OAEP) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Invalid key wrap algorithm '${newKeyWrapMetadata.algorithm}' passed.`);\n        }\n        if (!this.clientContext.enableEncryption) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Rewrapping a client encryption key requires the use of an encryption-enabled client.\");\n        }\n        const res = await this.readClientEncryptionKey(clientEncryptionKeyId);\n        if (!res || !res.clientEncryptionKeyProperties) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Error reading client encryption key with id ${clientEncryptionKeyId}`);\n        }\n        let clientEncryptionKeyProperties = res.clientEncryptionKeyProperties;\n        let keyEncryptionKey = this.encryptionManager.keyEncryptionKeyCache.getOrCreate(clientEncryptionKeyProperties.encryptionKeyWrapMetadata.name, clientEncryptionKeyProperties.encryptionKeyWrapMetadata.value, this.encryptionManager.encryptionKeyStoreProvider);\n        const unwrappedKey = await keyEncryptionKey.unwrapEncryptionKey(Buffer.from(clientEncryptionKeyProperties.wrappedDataEncryptionKey));\n        keyEncryptionKey = this.encryptionManager.keyEncryptionKeyCache.getOrCreate(newKeyWrapMetadata.name, newKeyWrapMetadata.value, this.encryptionManager.encryptionKeyStoreProvider);\n        const rewrappedKey = await keyEncryptionKey.wrapEncryptionKey(unwrappedKey);\n        clientEncryptionKeyProperties = {\n            id: clientEncryptionKeyId,\n            encryptionAlgorithm: clientEncryptionKeyProperties.encryptionAlgorithm,\n            etag: clientEncryptionKeyProperties.etag,\n            wrappedDataEncryptionKey: rewrappedKey,\n            encryptionKeyWrapMetadata: newKeyWrapMetadata,\n        };\n        const body = {\n            id: clientEncryptionKeyId,\n            encryptionAlgorithm: clientEncryptionKeyProperties.encryptionAlgorithm,\n            keyWrapMetadata: newKeyWrapMetadata,\n            wrappedDataEncryptionKey: rewrappedKey.toString(\"base64\"),\n        };\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey);\n            const resourceid = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const options = {\n                accessCondition: { type: \"IfMatch\", condition: clientEncryptionKeyProperties.etag },\n            };\n            const response = await this.clientContext.replace({\n                body,\n                path: path + `/${clientEncryptionKeyId}`,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey,\n                resourceId: resourceid + `/${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey}/${clientEncryptionKeyId}`,\n                options,\n                diagnosticNode,\n            });\n            if (!response || !response.result) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Error rewrapping client encryption key with id ${clientEncryptionKeyId}`);\n            }\n            const ref = {\n                id: response.result.id,\n                encryptionAlgorithm: response.result.encryptionAlgorithm,\n                etag: response.result._etag,\n                wrappedDataEncryptionKey: new Uint8Array(Buffer.from(response.result.wrappedDataEncryptionKey, \"base64\")),\n                encryptionKeyWrapMetadata: response.result.keyWrapMetadata,\n            };\n            return new _encryption_index_js__WEBPACK_IMPORTED_MODULE_8__.ClientEncryptionKeyResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Database.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Database.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/DatabaseResponse.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Database/DatabaseResponse.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseResponse: () => (/* binding */ DatabaseResponse)\n/* harmony export */ });\n/* harmony import */ var _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/ResourceResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js\");\n\n/** Response object for Database operations */\nclass DatabaseResponse extends _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, database, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.database = database;\n    }\n    /** A reference to the {@link Database} that the returned {@link DatabaseDefinition} corresponds to. */\n    database;\n}\n//# sourceMappingURL=DatabaseResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvRGF0YWJhc2UvRGF0YWJhc2VSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRTtBQUNyRTtBQUNPLCtCQUErQiwwRUFBZ0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZ0JBQWdCLG1CQUFtQiwwQkFBMEI7QUFDekY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvRGF0YWJhc2UvRGF0YWJhc2VSZXNwb25zZS5qcz8wYzViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc291cmNlUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9SZXNvdXJjZVJlc3BvbnNlLmpzXCI7XG4vKiogUmVzcG9uc2Ugb2JqZWN0IGZvciBEYXRhYmFzZSBvcGVyYXRpb25zICovXG5leHBvcnQgY2xhc3MgRGF0YWJhc2VSZXNwb25zZSBleHRlbmRzIFJlc291cmNlUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBkYXRhYmFzZSwgZGlhZ25vc3RpY3MpIHtcbiAgICAgICAgc3VwZXIocmVzb3VyY2UsIGhlYWRlcnMsIHN0YXR1c0NvZGUsIGRpYWdub3N0aWNzKTtcbiAgICAgICAgdGhpcy5kYXRhYmFzZSA9IGRhdGFiYXNlO1xuICAgIH1cbiAgICAvKiogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBEYXRhYmFzZX0gdGhhdCB0aGUgcmV0dXJuZWQge0BsaW5rIERhdGFiYXNlRGVmaW5pdGlvbn0gY29ycmVzcG9uZHMgdG8uICovXG4gICAgZGF0YWJhc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EYXRhYmFzZVJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/DatabaseResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Databases.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Database/Databases.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Databases: () => (/* binding */ Databases)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryExecutionContext/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _Database_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Database.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Database.js\");\n/* harmony import */ var _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DatabaseResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/DatabaseResponse.js\");\n/* harmony import */ var _utils_offers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/offers.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/offers.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n/**\n * Operations for creating new databases, and reading/querying all databases\n *\n * @see {@link Database} for reading or deleting an existing database; use `client.database(id)`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `databases.readAll()` before every single `item.read()` call, to ensure the database exists;\n * do this once on application start up.\n */\nclass Databases {\n    client;\n    clientContext;\n    encryptionManager;\n    /**\n     * @hidden\n     * @param client - The parent {@link CosmosClient} for the Database.\n     */\n    constructor(client, clientContext, encryptionManager) {\n        this.client = client;\n        this.clientContext = clientContext;\n        this.encryptionManager = encryptionManager;\n    }\n    query(query, options) {\n        const cb = (diagNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path: \"/dbs\",\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.database,\n                resourceId: \"\",\n                resultFn: (result) => result.Databases,\n                query,\n                options: innerOptions,\n                diagnosticNode: diagNode,\n            });\n        };\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__.QueryIterator(this.clientContext, query, options, cb);\n    }\n    /**\n     * Send a request for creating a database.\n     *\n     * A database manages users, permissions and a set of containers.\n     * Each Azure Cosmos DB Database Account is able to support multiple independent named databases,\n     * with the database being the logical container for data.\n     *\n     * Each Database consists of one or more containers, each of which in turn contain one or more\n     * documents. Since databases are an administrative resource, the Service Master Key will be\n     * required in order to access and successfully complete any action using the User APIs.\n     *\n     * @param body - The {@link DatabaseDefinition} that represents the {@link Database} to be created.\n     * @param options - Use to set options like response page size, continuation tokens, etc.\n     * @example\n     * ```ts snippet:CosmosClientDatabases\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { resource: databaseDefinition, database } = await client.databases.create({\n     *   id: \"<name here>\",\n     * });\n     * ```\n     */\n    async create(body, options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            return this.createInternal(diagnosticNode, body, options);\n        }, this.clientContext);\n    }\n    /**\n     * @hidden\n     */\n    async createInternal(diagnosticNode, body, options = {}) {\n        const err = {};\n        if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n            throw err;\n        }\n        (0,_utils_offers_js__WEBPACK_IMPORTED_MODULE_5__.validateOffer)(body);\n        if (body.maxThroughput) {\n            const autoscaleParams = {\n                maxThroughput: body.maxThroughput,\n            };\n            if (body.autoUpgradePolicy) {\n                autoscaleParams.autoUpgradePolicy = body.autoUpgradePolicy;\n            }\n            const autoscaleHeaders = JSON.stringify(autoscaleParams);\n            options.initialHeaders = Object.assign({}, options.initialHeaders, {\n                [_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.AutoscaleSettings]: autoscaleHeaders,\n            });\n            delete body.maxThroughput;\n            delete body.autoUpgradePolicy;\n        }\n        if (body.throughput) {\n            options.initialHeaders = Object.assign({}, options.initialHeaders, {\n                [_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.OfferThroughput]: body.throughput,\n            });\n            delete body.throughput;\n        }\n        const path = \"/dbs\"; // TODO: constant\n        const response = await this.clientContext.create({\n            body,\n            path,\n            resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.database,\n            resourceId: undefined,\n            diagnosticNode,\n            options,\n        });\n        const ref = new _Database_js__WEBPACK_IMPORTED_MODULE_3__.Database(this.client, body.id, this.clientContext, this.encryptionManager, response.result._rid);\n        return new _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_4__.DatabaseResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.getEmptyCosmosDiagnostics)());\n    }\n    /**\n     * Check if a database exists, and if it doesn't, create it.\n     * This will make a read operation based on the id in the `body`, then if it is not found, a create operation.\n     *\n     * A database manages users, permissions and a set of containers.\n     * Each Azure Cosmos DB Database Account is able to support multiple independent named databases,\n     * with the database being the logical container for data.\n     *\n     * Each Database consists of one or more containers, each of which in turn contain one or more\n     * documents. Since databases are an an administrative resource, the Service Master Key will be\n     * required in order to access and successfully complete any action using the User APIs.\n     *\n     * @param body - The {@link DatabaseDefinition} that represents the {@link Database} to be created.\n     * @param options - Additional options for the request\n     * @example\n     * ```ts snippet:ReadmeSampleCreateDatabase\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * ```\n     */\n    async createIfNotExists(body, options) {\n        if (!body || body.id === null || body.id === undefined) {\n            throw new Error(\"body parameter must be an object with an id property\");\n        }\n        /*\n          1. Attempt to read the Database (based on an assumption that most databases will already exist, so its faster)\n          2. If it fails with NotFound error, attempt to create the db. Else, return the read results.\n        */\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_6__.withDiagnostics)(async (diagnosticNode) => {\n            try {\n                const readResponse = await this.client\n                    .database(body.id)\n                    .readInternal(diagnosticNode, options);\n                return readResponse;\n            }\n            catch (err) {\n                if (err.code === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NotFound) {\n                    const createResponse = await this.createInternal(diagnosticNode, body, options);\n                    // Must merge the headers to capture RU costskaty\n                    (0,_queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeHeaders)(createResponse.headers, err.headers);\n                    return createResponse;\n                }\n                else {\n                    throw err;\n                }\n            }\n        }, this.clientContext);\n    }\n    // TODO: DatabaseResponse for QueryIterator?\n    /**\n     * Reads all databases.\n     * @param options - Use to set options like response page size, continuation tokens, etc.\n     * @returns {@link QueryIterator} Allows you to return all databases in an array or iterate over them one at a time.\n     * @example Read all databases to array.\n     * ```ts snippet:DatabasesReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resources: databaseList } = await client.databases.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Databases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Databases.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Database/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Database: () => (/* reexport safe */ _Database_js__WEBPACK_IMPORTED_MODULE_0__.Database),\n/* harmony export */   DatabaseResponse: () => (/* reexport safe */ _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_2__.DatabaseResponse),\n/* harmony export */   Databases: () => (/* reexport safe */ _Databases_js__WEBPACK_IMPORTED_MODULE_1__.Databases)\n/* harmony export */ });\n/* harmony import */ var _Database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Database.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Database.js\");\n/* harmony import */ var _Databases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Databases.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/Databases.js\");\n/* harmony import */ var _DatabaseResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DatabaseResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/DatabaseResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvRGF0YWJhc2UvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUN5QztBQUNFO0FBQ2M7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9EYXRhYmFzZS9pbmRleC5qcz83ZGJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgRGF0YWJhc2UgfSBmcm9tIFwiLi9EYXRhYmFzZS5qc1wiO1xuZXhwb3J0IHsgRGF0YWJhc2VzIH0gZnJvbSBcIi4vRGF0YWJhc2VzLmpzXCI7XG5leHBvcnQgeyBEYXRhYmFzZVJlc3BvbnNlIH0gZnJvbSBcIi4vRGF0YWJhc2VSZXNwb25zZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Item.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Item/Item.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Item: () => (/* binding */ Item)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _utils_patch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/patch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/patch.js\");\n/* harmony import */ var _ItemResponse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ItemResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/ItemResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../extractPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js\");\n/* harmony import */ var _ClientUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n\n\n\n\n\n\n\n\n/**\n * Used to perform operations on a specific item.\n *\n * @see {@link Items} for operations on all items; see `container.items`.\n */\nclass Item {\n    container;\n    id;\n    clientContext;\n    partitionKey;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createDocumentUri)(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * @hidden\n     * @param container - The parent {@link Container}.\n     * @param id - The id of the given {@link Item}.\n     * @param partitionKey - The primary key of the given {@link Item} (only for partitioned containers).\n     */\n    constructor(container, id, clientContext, partitionKey) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.partitionKey =\n            partitionKey === undefined ? undefined : (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_1__.convertToInternalPartitionKey)(partitionKey);\n    }\n    /**\n     * Read the item's definition.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     * If the type, T, is a class, it won't pass `typeof` comparisons, because it won't have a match prototype.\n     * It's recommended to only use interfaces.\n     *\n     * There is no set schema for JSON items. They may contain any number of custom properties.\n     *\n     * @param options - Additional options for the request\n     *\n     * @example Using custom type for response\n     * ```ts snippet:ItemRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * interface TodoItem {\n     *   title: string;\n     *   done: boolean;\n     *   id: string;\n     * }\n     *\n     * const { resource: item } = await container.item(\"id\", \"<pkValue>\").read<TodoItem>();\n     * ```\n     */\n    async read(options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            this.partitionKey = await (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_6__.setPartitionKeyIfUndefined)(diagnosticNode, this.container, this.partitionKey);\n            let url = this.url;\n            let partitionKey = this.partitionKey;\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    let count = 0;\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    const { partitionKeyList: encryptedPartitionKey, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue(this.partitionKey);\n                    partitionKey = encryptedPartitionKey;\n                    count += encryptedCount;\n                    if (await this.container.encryptionProcessor.isPathEncrypted(\"/id\")) {\n                        url = await this.container.encryptionProcessor.getEncryptedUrl(this.url);\n                        count++;\n                    }\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation, count);\n                }\n                const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(url);\n                const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(url);\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_7__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.clientContext.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n                response = await this.clientContext.read({\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item,\n                    resourceId: id,\n                    options,\n                    partitionKey: partitionKey,\n                    diagnosticNode,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                if (error.code !== _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NotFound) {\n                    throw error;\n                }\n                response = error;\n            }\n            if (this.clientContext.enableEncryption) {\n                diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n                const { body, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(response.result);\n                diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, propertiesDecryptedCount);\n                response.result = body;\n            }\n            return new _ItemResponse_js__WEBPACK_IMPORTED_MODULE_4__.ItemResponse(response.result, response.headers, response.code, response.substatus, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    async replace(body, options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            this.partitionKey = await (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_6__.setPartitionKeyIfUndefined)(diagnosticNode, this.container, this.partitionKey);\n            let partitionKey = this.partitionKey;\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isItemResourceValid)(body, err)) {\n                throw err;\n            }\n            let url = this.url;\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    // returns copy to avoid encryption of original body passed\n                    body = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.copyObject)(body);\n                    options = options || {};\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    let count = 0;\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    const { body: encryptedBody, propertiesEncryptedCount } = await this.container.encryptionProcessor.encrypt(body);\n                    body = encryptedBody;\n                    count += propertiesEncryptedCount;\n                    const { partitionKeyList: encryptedPartitionKeyList, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue(this.partitionKey);\n                    partitionKey = encryptedPartitionKeyList;\n                    count += encryptedCount;\n                    if (await this.container.encryptionProcessor.isPathEncrypted(\"/id\")) {\n                        url = await this.container.encryptionProcessor.getEncryptedUrl(this.url);\n                        count++;\n                    }\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation, count);\n                }\n                const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(url);\n                const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(url);\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_7__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.clientContext.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n                response = await this.clientContext.replace({\n                    body,\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item,\n                    resourceId: id,\n                    options,\n                    partitionKey: partitionKey,\n                    diagnosticNode,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                throw error;\n            }\n            if (this.clientContext.enableEncryption) {\n                try {\n                    // try block for decrypting response. This is done so that we can throw special error message in case of decryption failure\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n                    const { body: result, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(response.result);\n                    response.result = result;\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, propertiesDecryptedCount);\n                }\n                catch (error) {\n                    const decryptionError = new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse(`Item replace operation was successful but response decryption failed: + ${error.message}`);\n                    decryptionError.code = _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.ServiceUnavailable;\n                    throw decryptionError;\n                }\n            }\n            return new _ItemResponse_js__WEBPACK_IMPORTED_MODULE_4__.ItemResponse(response.result, response.headers, response.code, response.substatus, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the item.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     *\n     * @param options - Additional options for the request\n     * @example\n     * ```ts snippet:ItemDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * interface TodoItem {\n     *   title: string;\n     *   done: boolean;\n     *   id: string;\n     * }\n     *\n     * const { resource: item } = await container.item(\"id\", \"<pkValue>\").read<TodoItem>();\n     *\n     * await container.item(\"id\").delete<TodoItem>();\n     * ```\n     */\n    async delete(options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            this.partitionKey = await (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_6__.setPartitionKeyIfUndefined)(diagnosticNode, this.container, this.partitionKey);\n            let partitionKey = this.partitionKey;\n            let url = this.url;\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    let count = 0;\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    const { partitionKeyList, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue(this.partitionKey);\n                    partitionKey = partitionKeyList;\n                    count += encryptedCount;\n                    if (await this.container.encryptionProcessor.isPathEncrypted(\"/id\")) {\n                        url = await this.container.encryptionProcessor.getEncryptedUrl(this.url);\n                        count++;\n                    }\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation, count);\n                }\n                const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(url);\n                const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(url);\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_7__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.clientContext.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n                response = await this.clientContext.delete({\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item,\n                    resourceId: id,\n                    options,\n                    partitionKey: partitionKey,\n                    diagnosticNode,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                throw error;\n            }\n            return new _ItemResponse_js__WEBPACK_IMPORTED_MODULE_4__.ItemResponse(response.result, response.headers, response.code, response.substatus, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Perform a JSONPatch on the item.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     *\n     * @param options - Additional options for the request\n     * @example\n     * ```ts snippet:ItemPatch\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * interface TodoItem {\n     *   title: string;\n     *   done: boolean;\n     *   id: string;\n     * }\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: item } = await container.item(\"id\", \"<pkValue>\").read<TodoItem>();\n     *\n     * const { resource: patchedItem } = await container.item(\"id\").patch<TodoItem>([\n     *   {\n     *     op: \"replace\", // Operation type (can be replace, add, remove, set, incr)\n     *     path: \"/title\", // The path to the property to update\n     *     value: \"new-title\", // New value for the property\n     *   },\n     *   {\n     *     op: \"remove\",\n     *     path: \"/done\",\n     *   },\n     * ]);\n     * ```\n     */\n    async patch(body, options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            this.partitionKey = await (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_6__.setPartitionKeyIfUndefined)(diagnosticNode, this.container, this.partitionKey);\n            let url = this.url;\n            let partitionKey = this.partitionKey;\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    // returns copy to avoid encryption of original body passed\n                    body = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.copyObject)(body);\n                    const operations = Array.isArray(body) ? body : body.operations;\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    let propertiesEncryptedCount = 0;\n                    for (const operation of operations) {\n                        if (operation.op === _utils_patch_js__WEBPACK_IMPORTED_MODULE_3__.PatchOperationType.remove) {\n                            continue;\n                        }\n                        const isPathEncrypted = await this.container.encryptionProcessor.isPathEncrypted(operation.path);\n                        if (!isPathEncrypted) {\n                            continue;\n                        }\n                        if (operation.op === _utils_patch_js__WEBPACK_IMPORTED_MODULE_3__.PatchOperationType.incr) {\n                            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse(`Increment patch operation is not allowed for encrypted path '${operation.path}'`);\n                        }\n                        if (\"value\" in operation) {\n                            operation.value = await this.container.encryptionProcessor.encryptProperty(operation.path, operation.value);\n                        }\n                        propertiesEncryptedCount++;\n                    }\n                    const { partitionKeyList, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue(partitionKey);\n                    partitionKey = partitionKeyList;\n                    propertiesEncryptedCount += encryptedCount;\n                    if (await this.container.encryptionProcessor.isPathEncrypted(\"/id\")) {\n                        url = await this.container.encryptionProcessor.getEncryptedUrl(this.url);\n                        propertiesEncryptedCount++;\n                    }\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsEncryptOperation, propertiesEncryptedCount);\n                }\n                const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(url);\n                const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(url);\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_7__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.clientContext.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n                response = await this.clientContext.patch({\n                    body,\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item,\n                    resourceId: id,\n                    options,\n                    partitionKey: partitionKey,\n                    diagnosticNode,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                throw error;\n            }\n            if (this.clientContext.enableEncryption) {\n                try {\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n                    const { body: result, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(response.result);\n                    response.result = result;\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, propertiesDecryptedCount);\n                }\n                catch (error) {\n                    const decryptionError = new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse(`Item patch operation was successful but response decryption failed: + ${error.message}`);\n                    decryptionError.code = _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.ServiceUnavailable;\n                    throw decryptionError;\n                }\n            }\n            return new _ItemResponse_js__WEBPACK_IMPORTED_MODULE_4__.ItemResponse(response.result, response.headers, response.code, response.substatus, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Item.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Item.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/ItemResponse.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Item/ItemResponse.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ItemResponse: () => (/* binding */ ItemResponse)\n/* harmony export */ });\n/* harmony import */ var _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/ResourceResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js\");\n\nclass ItemResponse extends _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, subsstatusCode, item, diagnostics) {\n        super(resource, headers, statusCode, diagnostics, subsstatusCode);\n        this.item = item;\n    }\n    /** Reference to the {@link Item} the response corresponds to. */\n    item;\n}\n//# sourceMappingURL=ItemResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvSXRlbS9JdGVtUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUU7QUFDOUQsMkJBQTJCLDBFQUFnQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixZQUFZO0FBQ3RDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0l0ZW0vSXRlbVJlc3BvbnNlLmpzP2E1MTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzb3VyY2VSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L1Jlc291cmNlUmVzcG9uc2UuanNcIjtcbmV4cG9ydCBjbGFzcyBJdGVtUmVzcG9uc2UgZXh0ZW5kcyBSZXNvdXJjZVJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgc3Vic3N0YXR1c0NvZGUsIGl0ZW0sIGRpYWdub3N0aWNzKSB7XG4gICAgICAgIHN1cGVyKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBkaWFnbm9zdGljcywgc3Vic3N0YXR1c0NvZGUpO1xuICAgICAgICB0aGlzLml0ZW0gPSBpdGVtO1xuICAgIH1cbiAgICAvKiogUmVmZXJlbmNlIHRvIHRoZSB7QGxpbmsgSXRlbX0gdGhlIHJlc3BvbnNlIGNvcnJlc3BvbmRzIHRvLiAqL1xuICAgIGl0ZW07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JdGVtUmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/ItemResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Items.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Item/Items.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Items: () => (/* binding */ Items)\n/* harmony export */ });\n/* harmony import */ var _ChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ChangeFeedIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedIterator.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../extractPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _Item_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Item.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Item.js\");\n/* harmony import */ var _ItemResponse_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ItemResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/ItemResponse.js\");\n/* harmony import */ var _utils_batch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n/* harmony import */ var _utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/typeChecks.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js\");\n/* harmony import */ var _utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/hashing/hash.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/hash.js\");\n/* harmony import */ var _routing_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../routing/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/index.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _client_ChangeFeed_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../client/ChangeFeed/changeFeedUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/changeFeedUtils.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n/* harmony import */ var _ChangeFeed_ChangeFeedIteratorBuilder_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../ChangeFeed/ChangeFeedIteratorBuilder.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/ChangeFeedIteratorBuilder.js\");\n/* harmony import */ var _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../encryption/enums/TypeMarker.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/TypeMarker.js\");\n/* harmony import */ var _encryption_EncryptionItemQueryIterator_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../encryption/EncryptionItemQueryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionItemQueryIterator.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _bulk_BulkHelper_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../bulk/BulkHelper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/bulk/BulkHelper.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n */\nfunction isChangeFeedOptions(options) {\n    return options && !((0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_7__.isPrimitivePartitionKeyValue)(options) || Array.isArray(options));\n}\n/**\n * Operations for creating new items, and reading/querying all items\n *\n * @see {@link Item} for reading, replacing, or deleting an existing container; use `.item(id)`.\n */\nclass Items {\n    container;\n    clientContext;\n    partitionKeyRangeCache;\n    /**\n     * Create an instance of {@link Items} linked to the parent {@link Container}.\n     * @param container - The parent container.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n        this.partitionKeyRangeCache = this.clientContext.partitionKeyRangeCache;\n    }\n    query(query, options = {}) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getIdFromLink)(this.container.url);\n        const fetchFunction = async (diagnosticNode, innerOptions, correlatedActivityId) => {\n            let internalPartitionKey;\n            if (options.partitionKey) {\n                internalPartitionKey = (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_10__.convertToInternalPartitionKey)(options.partitionKey);\n            }\n            const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n            const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.computePartitionKeyRangeId)(diagnosticNode, internalPartitionKey, this.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n            const response = await this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n                resourceId: id,\n                resultFn: (result) => (result ? result.Documents : []),\n                query,\n                options: innerOptions,\n                partitionKey: options.partitionKey,\n                diagnosticNode,\n                correlatedActivityId: correlatedActivityId,\n                partitionKeyRangeId,\n            });\n            return response;\n        };\n        let iterator;\n        if (this.clientContext.enableEncryption) {\n            iterator = new _encryption_EncryptionItemQueryIterator_js__WEBPACK_IMPORTED_MODULE_18__.EncryptionItemQueryIterator(this.clientContext, query, options, fetchFunction, this.container);\n        }\n        else {\n            iterator = new _queryIterator_js__WEBPACK_IMPORTED_MODULE_3__.QueryIterator(this.clientContext, query, options, fetchFunction, this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n        }\n        return iterator;\n    }\n    /**\n     * Queries all items in an encrypted container.\n     * @param queryBuilder - Query configuration for the operation. See {@link SqlQuerySpec} for more info on how to build a query on encrypted properties.\n     * @param options - Used for modifying the request (for instance, specifying the partition key).\n     * @example Read all items to array.\n     * ```ts snippet:ItemsQueryEncryptedItems\n     * import { CosmosClient, EncryptionQueryBuilder } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const queryBuilder = new EncryptionQueryBuilder(\n     *   `SELECT firstname FROM Families f WHERE f.lastName = @lastName`,\n     * );\n     * queryBuilder.addParameter(\"@lastName\", \"Hendricks\", \"/lastname\");\n     * const queryIterator = await container.items.getEncryptionQueryIterator(queryBuilder);\n     * const { resources: items } = await queryIterator.fetchAll();\n     * ```\n     */\n    async getEncryptionQueryIterator(queryBuilder, options = {}) {\n        const encryptionSqlQuerySpec = queryBuilder.toEncryptionSqlQuerySpec();\n        const sqlQuerySpec = await this.buildSqlQuerySpec(encryptionSqlQuerySpec);\n        if (this.clientContext.enableEncryption && options.partitionKey) {\n            await this.container.checkAndInitializeEncryption();\n            const { partitionKeyList, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue([\n                options.partitionKey,\n            ]);\n            if (encryptedCount > 0) {\n                options.partitionKey = partitionKeyList[0];\n            }\n        }\n        const iterator = this.query(sqlQuerySpec, options);\n        return iterator;\n    }\n    async buildSqlQuerySpec(encryptionSqlQuerySpec) {\n        let encryptionParameters = encryptionSqlQuerySpec.parameters;\n        const sqlQuerySpec = {\n            query: encryptionSqlQuerySpec.query,\n            parameters: [],\n        };\n        // returns copy to avoid encryption of original parameters passed\n        encryptionParameters = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.copyObject)(encryptionParameters);\n        for (const parameter of encryptionParameters) {\n            let value;\n            if (parameter.type !== undefined || parameter.type !== _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_17__.TypeMarker.Null) {\n                value = await this.container.encryptionProcessor.encryptQueryParameter(parameter.path, parameter.value, parameter.path === \"/id\", parameter.type);\n            }\n            sqlQuerySpec.parameters.push({ name: parameter.name, value: value });\n        }\n        return sqlQuerySpec;\n    }\n    readChangeFeed(partitionKeyOrChangeFeedOptions, changeFeedOptions) {\n        if (isChangeFeedOptions(partitionKeyOrChangeFeedOptions)) {\n            return this.changeFeed(partitionKeyOrChangeFeedOptions);\n        }\n        else {\n            return this.changeFeed(partitionKeyOrChangeFeedOptions, changeFeedOptions);\n        }\n    }\n    changeFeed(partitionKeyOrChangeFeedOptions, changeFeedOptions) {\n        let partitionKey;\n        if (!changeFeedOptions && isChangeFeedOptions(partitionKeyOrChangeFeedOptions)) {\n            partitionKey = undefined;\n            changeFeedOptions = partitionKeyOrChangeFeedOptions;\n        }\n        else if (partitionKeyOrChangeFeedOptions !== undefined &&\n            !isChangeFeedOptions(partitionKeyOrChangeFeedOptions)) {\n            partitionKey = partitionKeyOrChangeFeedOptions;\n        }\n        if (!changeFeedOptions) {\n            changeFeedOptions = {};\n        }\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getIdFromLink)(this.container.url);\n        return new _ChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_0__.ChangeFeedIterator(this.clientContext, id, path, partitionKey, changeFeedOptions);\n    }\n    /**\n     * Returns an iterator to iterate over pages of changes. The iterator returned can be used to fetch changes for a single partition key, feed range or an entire container.\n     *\n     * @example\n     * ```ts snippet:ReadmeSampleChangeFeedPullModelIteratorPartitionKey\n     * import {\n     *   CosmosClient,\n     *   PartitionKeyDefinitionVersion,\n     *   PartitionKeyKind,\n     *   ChangeFeedStartFrom,\n     * } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const containerDefinition = {\n     *   id: \"Test Database\",\n     *   partitionKey: {\n     *     paths: [\"/name\", \"/address/zip\"],\n     *     version: PartitionKeyDefinitionVersion.V2,\n     *     kind: PartitionKeyKind.MultiHash,\n     *   },\n     * };\n     * const { container } = await database.containers.createIfNotExists(containerDefinition);\n     *\n     * const partitionKey = \"some-partition-Key-value\";\n     * const options = {\n     *   changeFeedStartFrom: ChangeFeedStartFrom.Beginning(partitionKey),\n     * };\n     *\n     * const iterator = container.items.getChangeFeedIterator(options);\n     *\n     * while (iterator.hasMoreResults) {\n     *   const response = await iterator.readNext();\n     *   // process this response\n     * }\n     * ```\n     */\n    getChangeFeedIterator(changeFeedIteratorOptions) {\n        const cfOptions = changeFeedIteratorOptions !== undefined ? changeFeedIteratorOptions : {};\n        (0,_client_ChangeFeed_changeFeedUtils_js__WEBPACK_IMPORTED_MODULE_11__.validateChangeFeedIteratorOptions)(cfOptions);\n        const iterator = new _ChangeFeed_ChangeFeedIteratorBuilder_js__WEBPACK_IMPORTED_MODULE_16__.ChangeFeedIteratorBuilder(cfOptions, this.clientContext, this.container, this.partitionKeyRangeCache);\n        return iterator;\n    }\n    readAll(options) {\n        return this.query(\"SELECT * from c\", options);\n    }\n    /**\n     * Create an item.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     *\n     * There is no set schema for JSON items. They may contain any number of custom properties.\n     *\n     * @param body - Represents the body of the item. Can contain any number of user defined properties.\n     * @param options - Used for modifying the request (for instance, specifying the partition key).\n     * @example Create an item.\n     * ```ts snippet:ContainerItems\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: createdItem } = await container.items.create({\n     *   id: \"<item id>\",\n     *   properties: {},\n     * });\n     * ```\n     */\n    async create(body, options = {}) {\n        // Generate random document id if the id is missing in the payload and\n        // options.disableAutomaticIdGeneration != true\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {\n                body.id = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_14__.randomUUID)();\n            }\n            const partitionKeyDefinition = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.readPartitionKeyDefinition)(diagnosticNode, this.container);\n            let partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.extractPartitionKeys)(body, partitionKeyDefinition);\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    // returns copy to avoid encryption of original body passed\n                    body = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.copyObject)(body);\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    const { body: encryptedBody, propertiesEncryptedCount } = await this.container.encryptionProcessor.encrypt(body);\n                    body = encryptedBody;\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation, propertiesEncryptedCount);\n                    partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.extractPartitionKeys)(body, partitionKeyDefinition);\n                }\n                const err = {};\n                if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isItemResourceValid)(body, err)) {\n                    throw err;\n                }\n                const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n                const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getIdFromLink)(this.container.url);\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container, partitionKeyDefinition);\n                response = await this.clientContext.create({\n                    body,\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n                    resourceId: id,\n                    diagnosticNode,\n                    options,\n                    partitionKey,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    // Todo: internally retry post policy refresh\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                throw error;\n            }\n            if (this.clientContext.enableEncryption) {\n                // try block for decrypting response. This is done so that we can throw special error message in case of decryption failure\n                try {\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation);\n                    const { body: decryptedResult, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(response.result);\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation, propertiesDecryptedCount);\n                    response.result = decryptedResult;\n                    partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.extractPartitionKeys)(response.result, partitionKeyDefinition);\n                }\n                catch (error) {\n                    const decryptionError = new _request_index_js__WEBPACK_IMPORTED_MODULE_19__.ErrorResponse(`Item creation was successful but response decryption failed: + ${error.message}`);\n                    decryptionError.code = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.ServiceUnavailable;\n                    throw decryptionError;\n                }\n            }\n            const ref = new _Item_js__WEBPACK_IMPORTED_MODULE_4__.Item(this.container, response.result.id, this.clientContext, partitionKey);\n            return new _ItemResponse_js__WEBPACK_IMPORTED_MODULE_5__.ItemResponse(response.result, response.headers, response.code, response.substatus, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    async upsert(body, options = {}) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            // Generate random document id if the id is missing in the payload and\n            // options.disableAutomaticIdGeneration != true\n            if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {\n                body.id = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_14__.randomUUID)();\n            }\n            const partitionKeyDefinition = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.readPartitionKeyDefinition)(diagnosticNode, this.container);\n            let partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.extractPartitionKeys)(body, partitionKeyDefinition);\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    // returns copy to avoid encryption of original body passed\n                    body = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.copyObject)(body);\n                    options = options || {};\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    const { body: encryptedBody, propertiesEncryptedCount } = await this.container.encryptionProcessor.encrypt(body);\n                    body = encryptedBody;\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation, propertiesEncryptedCount);\n                    partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.extractPartitionKeys)(body, partitionKeyDefinition);\n                }\n                const err = {};\n                if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isItemResourceValid)(body, err)) {\n                    throw err;\n                }\n                const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n                const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getIdFromLink)(this.container.url);\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container, partitionKeyDefinition);\n                response = await this.clientContext.upsert({\n                    body,\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item,\n                    resourceId: id,\n                    options,\n                    partitionKey,\n                    diagnosticNode,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (error) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n                }\n                throw error;\n            }\n            if (this.clientContext.enableEncryption) {\n                try {\n                    // try block for decrypting response. This is done so that we can throw special error message in case of decryption failure\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation);\n                    const { body: decryptedResult, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(response.result);\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation, propertiesDecryptedCount);\n                    response.result = decryptedResult;\n                    partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.extractPartitionKeys)(response.result, partitionKeyDefinition);\n                }\n                catch (error) {\n                    const decryptionError = new _request_index_js__WEBPACK_IMPORTED_MODULE_19__.ErrorResponse(`Item upsert was successful but response decryption failed: + ${error.message}`);\n                    decryptionError.code = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.ServiceUnavailable;\n                    throw decryptionError;\n                }\n            }\n            const ref = new _Item_js__WEBPACK_IMPORTED_MODULE_4__.Item(this.container, response.result.id, this.clientContext, partitionKey);\n            return new _ItemResponse_js__WEBPACK_IMPORTED_MODULE_5__.ItemResponse(response.result, response.headers, response.code, response.substatus, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Execute bulk operations on items.\n     * @param operations - List of operations\n     * @param options - used for modifying the request\n     * @returns list of operation results corresponding to the operations\n     *\n     * @example\n     * ```ts snippet:ItemsExecuteBulkOperations\n     * import { CosmosClient, OperationInput } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const operations: OperationInput[] = [\n     *   {\n     *     operationType: \"Create\",\n     *     resourceBody: { id: \"doc1\", name: \"sample\", key: \"A\" },\n     *   },\n     *   {\n     *     operationType: \"Upsert\",\n     *     partitionKey: \"A\",\n     *     resourceBody: { id: \"doc2\", name: \"other\", key: \"A\" },\n     *   },\n     * ];\n     *\n     * await container.items.executeBulkOperations(operations);\n     * ```\n     */\n    async executeBulkOperations(operations, options = {}) {\n        const bulkHelper = new _bulk_BulkHelper_js__WEBPACK_IMPORTED_MODULE_20__.BulkHelper(this.container, this.clientContext, this.partitionKeyRangeCache, options);\n        return bulkHelper.execute(operations);\n    }\n    /**\n     * Execute bulk operations on items.\n     * @deprecated Use `executeBulkOperations` instead.\n     *\n     * Bulk takes an array of Operations which are typed based on what the operation does.\n     * The choices are: Create, Upsert, Read, Replace, and Delete\n     *\n     * Usage example:\n     * ```ts snippet:ItemsBulk\n     * import { CosmosClient, OperationInput } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * // partitionKey is optional at the top level if present in the resourceBody\n     * const operations: OperationInput[] = [\n     *   {\n     *     operationType: \"Create\",\n     *     resourceBody: { id: \"doc1\", name: \"sample\", key: \"A\" },\n     *   },\n     *   {\n     *     operationType: \"Upsert\",\n     *     partitionKey: \"A\",\n     *     resourceBody: { id: \"doc2\", name: \"other\", key: \"A\" },\n     *   },\n     * ];\n     *\n     * await container.items.bulk(operations);\n     * ```\n     *\n     * @param operations - List of operations. Limit 100\n     * @param bulkOptions - Optional options object to modify bulk behavior. Pass \\{ continueOnError: false \\} to stop executing operations when one fails. (Defaults to true)\n     * @param options - Used for modifying the request.\n     */\n    async bulk(operations, bulkOptions, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            const partitionKeyRanges = (await this.partitionKeyRangeCache.onCollectionRoutingMap(this.container.url, diagnosticNode)).getOrderedParitionKeyRanges();\n            const partitionKeyDefinition = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.readPartitionKeyDefinition)(diagnosticNode, this.container);\n            if (this.clientContext.enableEncryption) {\n                // returns copy to avoid encryption of original operations body passed\n                operations = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.copyObject)(operations);\n                options = options || {};\n                await this.container.checkAndInitializeEncryption();\n                options.containerRid = this.container._rid;\n                diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation);\n                const { operations: encryptedOperations, totalPropertiesEncryptedCount } = await this.bulkBatchEncryptionHelper(operations);\n                operations = encryptedOperations;\n                diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation, totalPropertiesEncryptedCount);\n            }\n            const batches = partitionKeyRanges.map((keyRange) => {\n                return {\n                    min: keyRange.minInclusive,\n                    max: keyRange.maxExclusive,\n                    rangeId: keyRange.id,\n                    indexes: [],\n                    operations: [],\n                };\n            });\n            this.groupOperationsBasedOnPartitionKey(operations, partitionKeyDefinition, options, batches);\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n            const orderedResponses = [];\n            // split batches based on cumulative size of operations\n            const batchMap = batches\n                .filter((batch) => batch.operations.length)\n                .flatMap((batch) => (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_6__.splitBatchBasedOnBodySize)(batch));\n            await Promise.all(this.executeBatchOperations(batchMap, path, bulkOptions, options, diagnosticNode, orderedResponses, partitionKeyDefinition));\n            const response = orderedResponses;\n            response.diagnostics = diagnosticNode.toDiagnostic(this.clientContext.getClientConfig());\n            return response;\n        }, this.clientContext);\n    }\n    executeBatchOperations(batchMap, path, bulkOptions, options, diagnosticNode, orderedResponses, partitionKeyDefinition) {\n        return batchMap.map(async (batch) => {\n            if (batch.operations.length > 100) {\n                throw new Error(\"Cannot run bulk request with more than 100 operations per partition\");\n            }\n            let response;\n            try {\n                response = await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.addDiagnosticChild)(async (childNode) => this.clientContext.bulk({\n                    body: batch.operations,\n                    partitionKeyRangeId: batch.rangeId,\n                    path,\n                    resourceId: this.container.url,\n                    bulkOptions,\n                    options,\n                    diagnosticNode: childNode,\n                }), diagnosticNode, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_12__.DiagnosticNodeType.BATCH_REQUEST);\n                response.result.forEach((operationResponse, index) => {\n                    orderedResponses[batch.indexes[index]] = operationResponse;\n                });\n            }\n            catch (err) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(err);\n                }\n                // In the case of 410 errors, we need to recompute the partition key ranges\n                // and redo the batch request, however, 410 errors occur for unsupported\n                // partition key types as well since we don't support them, so for now we throw\n                if (err.code === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.Gone) {\n                    const isPartitionSplit = err.substatus === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.PartitionKeyRangeGone ||\n                        err.substatus === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.CompletingSplit;\n                    if (isPartitionSplit) {\n                        const queryRange = new _routing_index_js__WEBPACK_IMPORTED_MODULE_9__.QueryRange(batch.min, batch.max, true, false);\n                        const overlappingRanges = await this.partitionKeyRangeCache.getOverlappingRanges(this.container.url, queryRange, diagnosticNode, true);\n                        if (overlappingRanges.length < 1) {\n                            throw new Error(\"Partition split/merge detected but no overlapping ranges found.\");\n                        }\n                        // Handles both merge (overlappingRanges.length === 1) and split (overlappingRanges.length > 1) cases.\n                        if (overlappingRanges.length >= 1) {\n                            // const splitBatches: Batch[] = [];\n                            const newBatches = this.createNewBatches(overlappingRanges, batch, partitionKeyDefinition);\n                            await Promise.all(this.executeBatchOperations(newBatches, path, bulkOptions, options, diagnosticNode, orderedResponses, partitionKeyDefinition));\n                        }\n                    }\n                    else {\n                        throw new Error(\"Partition key error. An operation has an unsupported partitionKey type\" +\n                            err.message);\n                    }\n                }\n                else {\n                    throw new Error(`Bulk request errored with: ${err.message}`);\n                }\n            }\n            if (response) {\n                try {\n                    if (this.clientContext.enableEncryption) {\n                        diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation);\n                        let count = 0;\n                        for (const result of response.result) {\n                            if (result.resourceBody) {\n                                const { body, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(result.resourceBody);\n                                result.resourceBody = body;\n                                count += propertiesDecryptedCount;\n                            }\n                        }\n                        diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation, count);\n                    }\n                }\n                catch (error) {\n                    const decryptionError = new _request_index_js__WEBPACK_IMPORTED_MODULE_19__.ErrorResponse(`Batch response was received but response decryption failed: + ${error.message}`);\n                    decryptionError.code = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.ServiceUnavailable;\n                    throw decryptionError;\n                }\n                response.result.forEach((operationResponse, index) => {\n                    orderedResponses[batch.indexes[index]] = operationResponse;\n                });\n            }\n        });\n    }\n    /**\n     * Function to create new batches based of partition key Ranges.\n     *\n     * @param overlappingRanges - Overlapping partition key ranges.\n     * @param batch - Batch to be split.\n     * @param partitionKeyDefinition - PartitionKey definition of container.\n     * @returns Array of new batches.\n     */\n    createNewBatches(overlappingRanges, batch, partitionKeyDefinition) {\n        const newBatches = overlappingRanges.map((keyRange) => {\n            return {\n                min: keyRange.minInclusive,\n                max: keyRange.maxExclusive,\n                rangeId: keyRange.id,\n                indexes: [],\n                operations: [],\n            };\n        });\n        let indexValue = 0;\n        batch.operations.forEach((operation) => {\n            const partitionKey = JSON.parse(operation.partitionKey);\n            const hashed = (0,_utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_8__.hashPartitionKey)((0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_7__.assertNotUndefined)(partitionKey, \"undefined value for PartitionKey is not expected during grouping of bulk operations.\"), partitionKeyDefinition);\n            const batchForKey = (0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_7__.assertNotUndefined)(newBatches.find((newBatch) => {\n                return (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_6__.isKeyInRange)(newBatch.min, newBatch.max, hashed);\n            }), \"No suitable Batch found.\");\n            batchForKey.operations.push(operation);\n            batchForKey.indexes.push(batch.indexes[indexValue]);\n            indexValue++;\n        });\n        return newBatches;\n    }\n    /**\n     * Function to create batches based of partition key Ranges.\n     * @param operations - operations to group\n     * @param partitionDefinition - PartitionKey definition of container.\n     * @param options - Request options for bulk request.\n     * @param batches - Groups to be filled with operations.\n     */\n    groupOperationsBasedOnPartitionKey(operations, partitionDefinition, options, batches) {\n        operations.forEach((operationInput, index) => {\n            const { operation, partitionKey } = (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_6__.prepareOperations)(operationInput, partitionDefinition, options);\n            const hashed = (0,_utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_8__.hashPartitionKey)((0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_7__.assertNotUndefined)(partitionKey, \"undefined value for PartitionKey is not expected during grouping of bulk operations.\"), partitionDefinition);\n            const batchForKey = (0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_7__.assertNotUndefined)(batches.find((batch) => {\n                return (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_6__.isKeyInRange)(batch.min, batch.max, hashed);\n            }), \"No suitable Batch found.\");\n            batchForKey.operations.push(operation);\n            batchForKey.indexes.push(index);\n        });\n    }\n    /**\n     * Execute transactional batch operations on items.\n     *\n     * Batch takes an array of Operations which are typed based on what the operation does. Batch is transactional and will rollback all operations if one fails.\n     * The choices are: Create, Upsert, Read, Replace, and Delete\n     *\n     * Usage example:\n     * ```ts snippet:ItemsBatch\n     * import { CosmosClient, OperationInput } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * // The partitionKey is a required second argument. If it’s undefined, it defaults to the expected partition key format.\n     * const operations: OperationInput[] = [\n     *   {\n     *     operationType: \"Create\",\n     *     resourceBody: { id: \"doc1\", name: \"sample\", key: \"A\" },\n     *   },\n     *   {\n     *     operationType: \"Upsert\",\n     *     resourceBody: { id: \"doc2\", name: \"other\", key: \"A\" },\n     *   },\n     * ];\n     *\n     * await container.items.batch(operations, \"A\");\n     * ```\n     *\n     * @param operations - List of operations. Limit 100\n     * @param options - Used for modifying the request\n     */\n    async batch(operations, partitionKey, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_13__.withDiagnostics)(async (diagnosticNode) => {\n            operations.map((operation) => (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_6__.decorateBatchOperation)(operation, options));\n            partitionKey = await (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_2__.setPartitionKeyIfUndefined)(diagnosticNode, this.container, partitionKey);\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item);\n            if (operations.length > 100) {\n                throw new Error(\"Cannot run batch request with more than 100 operations per partition\");\n            }\n            let response;\n            try {\n                if (this.clientContext.enableEncryption) {\n                    // returns copy to avoid encryption of original operations body passed\n                    operations = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.copyObject)(operations);\n                    options = options || {};\n                    await this.container.checkAndInitializeEncryption();\n                    options.containerRid = this.container._rid;\n                    let count = 0;\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation);\n                    if (partitionKey) {\n                        const partitionKeyInternal = (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_10__.convertToInternalPartitionKey)(partitionKey);\n                        const { partitionKeyList, encryptedCount } = await this.container.encryptionProcessor.getEncryptedPartitionKeyValue(partitionKeyInternal);\n                        partitionKey = partitionKeyList;\n                        count += encryptedCount;\n                    }\n                    const { operations: encryptedOperations, totalPropertiesEncryptedCount } = await this.bulkBatchEncryptionHelper(operations);\n                    operations = encryptedOperations;\n                    count += totalPropertiesEncryptedCount;\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsEncryptOperation, count);\n                }\n                const isPartitionLevelFailOverEnabled = this.clientContext.isPartitionLevelFailOverEnabled();\n                const partitionKeyRangeId = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_15__.computePartitionKeyRangeId)(diagnosticNode, partitionKey, this.partitionKeyRangeCache, isPartitionLevelFailOverEnabled, this.container);\n                response = await this.clientContext.batch({\n                    body: operations,\n                    partitionKey,\n                    path,\n                    resourceId: this.container.url,\n                    options,\n                    diagnosticNode,\n                    partitionKeyRangeId,\n                });\n            }\n            catch (err) {\n                if (this.clientContext.enableEncryption) {\n                    await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(err);\n                }\n                throw new Error(`Batch request error: ${err.message}`);\n            }\n            if (this.clientContext.enableEncryption) {\n                try {\n                    diagnosticNode.beginEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation);\n                    let count = 0;\n                    for (const result of response.result) {\n                        if (result.resourceBody) {\n                            const { body, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(result.resourceBody);\n                            result.resourceBody = body;\n                            count += propertiesDecryptedCount;\n                        }\n                    }\n                    diagnosticNode.endEncryptionDiagnostics(_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Encryption.DiagnosticsDecryptOperation, count);\n                }\n                catch (error) {\n                    const decryptionError = new _request_index_js__WEBPACK_IMPORTED_MODULE_19__.ErrorResponse(`Batch response was received but response decryption failed: + ${error.message}`);\n                    decryptionError.code = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.ServiceUnavailable;\n                    throw decryptionError;\n                }\n            }\n            return response;\n        }, this.clientContext);\n    }\n    async bulkBatchEncryptionHelper(operations) {\n        let totalPropertiesEncryptedCount = 0;\n        const encryptedOperations = [];\n        for (const operation of operations) {\n            const { operation: encryptedOp, totalPropertiesEncryptedCount: updatedCount } = await (0,_utils_batch_js__WEBPACK_IMPORTED_MODULE_6__.encryptOperationInput)(this.container.encryptionProcessor, operation, totalPropertiesEncryptedCount);\n            totalPropertiesEncryptedCount = updatedCount;\n            encryptedOperations.push(encryptedOp);\n        }\n        return { operations: encryptedOperations, totalPropertiesEncryptedCount };\n    }\n}\n//# sourceMappingURL=Items.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvSXRlbS9JdGVtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNpRTtBQUM4RjtBQUMvRDtBQUN6QztBQUN0QjtBQUNnQjtBQUNpRztBQUNyRDtBQUM5QjtBQUNYO0FBQ3FCO0FBQ3NCO0FBQ2Q7QUFDNEI7QUFDL0Q7QUFDNkM7QUFDSjtBQUNyQjtBQUM0QjtBQUN2QztBQUNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtGQUE0QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsWUFBWSwyREFBMkQ7QUFDaEY7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGFBQWEsc0JBQXNCLGdCQUFnQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLHFCQUFxQixpRUFBZSxxQkFBcUIsMERBQVk7QUFDckUsbUJBQW1CLCtEQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxtRkFBNkI7QUFDcEU7QUFDQTtBQUNBLDhDQUE4Qyw0RUFBMEI7QUFDeEU7QUFDQTtBQUNBLDhCQUE4QiwwREFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG9HQUEyQjtBQUN0RDtBQUNBO0FBQ0EsMkJBQTJCLDREQUFhLHdFQUF3RSwwREFBWTtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLG9CQUFvQjtBQUM3RjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUNBQXVDO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hEO0FBQ0EsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUY7QUFDQSxlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0EsK0RBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1DQUFtQztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0REFBVTtBQUN6QztBQUNBO0FBQ0EsbUVBQW1FLHdFQUFVO0FBQzdFO0FBQ0E7QUFDQSwyQ0FBMkMsb0NBQW9DO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpRUFBZSxxQkFBcUIsMERBQVk7QUFDckUsbUJBQW1CLCtEQUFhO0FBQ2hDLG1CQUFtQixzRUFBa0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RDtBQUNBLGVBQWUsV0FBVyw2Q0FBNkMscUJBQXFCO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5R0FBaUM7QUFDekMsNkJBQTZCLGdHQUF5QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGVBQWU7QUFDeEQ7QUFDQSxlQUFlLFdBQVcsNkNBQTZDLHFCQUFxQjtBQUM1RjtBQUNBLGVBQWUsWUFBWSxnREFBZ0Qsc0JBQXNCO0FBQ2pHO0FBQ0EsZUFBZSx3QkFBd0I7QUFDdkM7QUFDQSx1QkFBdUI7QUFDdkIsUUFBUTtBQUNSO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBLGVBQWUsdUVBQWU7QUFDOUI7QUFDQSwwQkFBMEIsNkRBQVU7QUFDcEM7QUFDQSxpREFBaUQsNEVBQTBCO0FBQzNFLCtCQUErQiw2RUFBb0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDREQUFVO0FBQ3JDLDhEQUE4RCx1REFBUztBQUN2RSw0QkFBNEIsZ0RBQWdEO0FBQzVFO0FBQ0EsNERBQTRELHVEQUFTO0FBQ3JFLG1DQUFtQyw2RUFBb0I7QUFDdkQ7QUFDQTtBQUNBLHFCQUFxQixxRUFBbUI7QUFDeEM7QUFDQTtBQUNBLDZCQUE2QixpRUFBZSxxQkFBcUIsMERBQVk7QUFDN0UsMkJBQTJCLCtEQUFhO0FBQ3hDO0FBQ0Esa0RBQWtELDRFQUEwQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsMERBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHVEQUFTO0FBQ3ZFLDRCQUE0QixrREFBa0Q7QUFDOUUsNERBQTRELHVEQUFTO0FBQ3JFO0FBQ0EsbUNBQW1DLDZFQUFvQjtBQUN2RDtBQUNBO0FBQ0EsZ0RBQWdELDZEQUFhLG1FQUFtRSxjQUFjO0FBQzlJLDJDQUEyQyx5REFBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsMENBQUk7QUFDaEMsdUJBQXVCLDBEQUFZLDRFQUE0RSxpRkFBeUI7QUFDeEksU0FBUztBQUNUO0FBQ0EsbUNBQW1DO0FBQ25DLGVBQWUsdUVBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDZEQUFVO0FBQ3BDO0FBQ0EsaURBQWlELDRFQUEwQjtBQUMzRSwrQkFBK0IsNkVBQW9CO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDREQUFVO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCx1REFBUztBQUN2RSw0QkFBNEIsZ0RBQWdEO0FBQzVFO0FBQ0EsNERBQTRELHVEQUFTO0FBQ3JFLG1DQUFtQyw2RUFBb0I7QUFDdkQ7QUFDQTtBQUNBLHFCQUFxQixxRUFBbUI7QUFDeEM7QUFDQTtBQUNBLDZCQUE2QixpRUFBZSxxQkFBcUIsMERBQVk7QUFDN0UsMkJBQTJCLCtEQUFhO0FBQ3hDO0FBQ0Esa0RBQWtELDRFQUEwQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsMERBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCx1REFBUztBQUN2RSw0QkFBNEIsa0RBQWtEO0FBQzlFLDREQUE0RCx1REFBUztBQUNyRTtBQUNBLG1DQUFtQyw2RUFBb0I7QUFDdkQ7QUFDQTtBQUNBLGdEQUFnRCw2REFBYSxpRUFBaUUsY0FBYztBQUM1SSwyQ0FBMkMseURBQVc7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDBDQUFJO0FBQ2hDLHVCQUF1QiwwREFBWSw0RUFBNEUsaUZBQXlCO0FBQ3hJLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0JBQStCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hEO0FBQ0EsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUY7QUFDQSxlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixzQ0FBc0M7QUFDakUsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixxQ0FBcUM7QUFDaEUsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQsK0JBQStCLDREQUFVO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0JBQStCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hEO0FBQ0EsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUY7QUFDQSxlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHNDQUFzQztBQUNqRSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFDQUFxQztBQUNoRSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLDBCQUEwQjtBQUMvRztBQUNBO0FBQ0E7QUFDQSxlQUFlLHVFQUFlO0FBQzlCO0FBQ0EsaURBQWlELDRFQUEwQjtBQUMzRTtBQUNBO0FBQ0EsNkJBQTZCLDREQUFVO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCx1REFBUztBQUNuRSx3QkFBd0IsaUVBQWlFO0FBQ3pGO0FBQ0Esd0RBQXdELHVEQUFTO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHlCQUF5QixpRUFBZSxxQkFBcUIsMERBQVk7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsMEVBQXlCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsMEVBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG1CQUFtQix1RkFBa0I7QUFDdEQ7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHlEQUFXO0FBQzVDLCtEQUErRCw0REFBYztBQUM3RSwwQ0FBMEMsNERBQWM7QUFDeEQ7QUFDQSwrQ0FBK0MseURBQVU7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxZQUFZO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsdURBQVM7QUFDM0U7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGlDQUFpQztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSx1REFBUztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsNkRBQWEsa0VBQWtFLGNBQWM7QUFDN0ksMkNBQTJDLHlEQUFXO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsd0VBQWdCLENBQUMsd0VBQWtCO0FBQzlELGdDQUFnQyx3RUFBa0I7QUFDbEQsdUJBQXVCLDZEQUFZO0FBQ25DLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwwQkFBMEIsRUFBRSxrRUFBaUI7QUFDakUsMkJBQTJCLHdFQUFnQixDQUFDLHdFQUFrQjtBQUM5RCxnQ0FBZ0Msd0VBQWtCO0FBQ2xELHVCQUF1Qiw2REFBWTtBQUNuQyxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0JBQStCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hEO0FBQ0EsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUY7QUFDQSxlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHNDQUFzQztBQUNqRSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLDJCQUEyQixxQ0FBcUM7QUFDaEUsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUVBQWU7QUFDOUIsMENBQTBDLHVFQUFzQjtBQUNoRSxpQ0FBaUMsbUZBQTBCO0FBQzNELHlCQUF5QixpRUFBZSxxQkFBcUIsMERBQVk7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsNERBQVU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsdURBQVM7QUFDdkU7QUFDQSxxREFBcUQsbUZBQTZCO0FBQ2xGLGdDQUFnQyxtQ0FBbUM7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGlFQUFpRTtBQUM3RjtBQUNBO0FBQ0EsNERBQTRELHVEQUFTO0FBQ3JFO0FBQ0E7QUFDQSxrREFBa0QsNEVBQTBCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCx1REFBUztBQUN2RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsaUNBQWlDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELHVEQUFTO0FBQ3JFO0FBQ0E7QUFDQSxnREFBZ0QsNkRBQWEsa0VBQWtFLGNBQWM7QUFDN0ksMkNBQTJDLHlEQUFXO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0VBQXNFLFFBQVEsc0VBQXFCO0FBQ3ZIO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9JdGVtL0l0ZW1zLmpzP2QwNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBDaGFuZ2VGZWVkSXRlcmF0b3IgfSBmcm9tIFwiLi4vLi4vQ2hhbmdlRmVlZEl0ZXJhdG9yLmpzXCI7XG5pbXBvcnQgeyBDb25zdGFudHMsIGNvcHlPYmplY3QsIGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgaXNJdGVtUmVzb3VyY2VWYWxpZCwgUmVzb3VyY2VUeXBlLCBTdGF0dXNDb2RlcywgU3ViU3RhdHVzQ29kZXMsIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZXh0cmFjdFBhcnRpdGlvbktleXMsIHNldFBhcnRpdGlvbktleUlmVW5kZWZpbmVkIH0gZnJvbSBcIi4uLy4uL2V4dHJhY3RQYXJ0aXRpb25LZXkuanNcIjtcbmltcG9ydCB7IFF1ZXJ5SXRlcmF0b3IgfSBmcm9tIFwiLi4vLi4vcXVlcnlJdGVyYXRvci5qc1wiO1xuaW1wb3J0IHsgSXRlbSB9IGZyb20gXCIuL0l0ZW0uanNcIjtcbmltcG9ydCB7IEl0ZW1SZXNwb25zZSB9IGZyb20gXCIuL0l0ZW1SZXNwb25zZS5qc1wiO1xuaW1wb3J0IHsgaXNLZXlJblJhbmdlLCBwcmVwYXJlT3BlcmF0aW9ucywgZGVjb3JhdGVCYXRjaE9wZXJhdGlvbiwgc3BsaXRCYXRjaEJhc2VkT25Cb2R5U2l6ZSwgZW5jcnlwdE9wZXJhdGlvbklucHV0LCB9IGZyb20gXCIuLi8uLi91dGlscy9iYXRjaC5qc1wiO1xuaW1wb3J0IHsgYXNzZXJ0Tm90VW5kZWZpbmVkLCBpc1ByaW1pdGl2ZVBhcnRpdGlvbktleVZhbHVlIH0gZnJvbSBcIi4uLy4uL3V0aWxzL3R5cGVDaGVja3MuanNcIjtcbmltcG9ydCB7IGhhc2hQYXJ0aXRpb25LZXkgfSBmcm9tIFwiLi4vLi4vdXRpbHMvaGFzaGluZy9oYXNoLmpzXCI7XG5pbXBvcnQgeyBRdWVyeVJhbmdlIH0gZnJvbSBcIi4uLy4uL3JvdXRpbmcvaW5kZXguanNcIjtcbmltcG9ydCB7IGNvbnZlcnRUb0ludGVybmFsUGFydGl0aW9uS2V5IH0gZnJvbSBcIi4uLy4uL2RvY3VtZW50cy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVDaGFuZ2VGZWVkSXRlcmF0b3JPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NsaWVudC9DaGFuZ2VGZWVkL2NoYW5nZUZlZWRVdGlscy5qc1wiO1xuaW1wb3J0IHsgRGlhZ25vc3RpY05vZGVUeXBlIH0gZnJvbSBcIi4uLy4uL2RpYWdub3N0aWNzL0RpYWdub3N0aWNOb2RlSW50ZXJuYWwuanNcIjtcbmltcG9ydCB7IGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MsIHdpdGhEaWFnbm9zdGljcywgYWRkRGlhZ25vc3RpY0NoaWxkLCB9IGZyb20gXCIuLi8uLi91dGlscy9kaWFnbm9zdGljcy5qc1wiO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBjb21wdXRlUGFydGl0aW9uS2V5UmFuZ2VJZCwgcmVhZFBhcnRpdGlvbktleURlZmluaXRpb24gfSBmcm9tIFwiLi4vQ2xpZW50VXRpbHMuanNcIjtcbmltcG9ydCB7IENoYW5nZUZlZWRJdGVyYXRvckJ1aWxkZXIgfSBmcm9tIFwiLi4vQ2hhbmdlRmVlZC9DaGFuZ2VGZWVkSXRlcmF0b3JCdWlsZGVyLmpzXCI7XG5pbXBvcnQgeyBUeXBlTWFya2VyIH0gZnJvbSBcIi4uLy4uL2VuY3J5cHRpb24vZW51bXMvVHlwZU1hcmtlci5qc1wiO1xuaW1wb3J0IHsgRW5jcnlwdGlvbkl0ZW1RdWVyeUl0ZXJhdG9yIH0gZnJvbSBcIi4uLy4uL2VuY3J5cHRpb24vRW5jcnlwdGlvbkl0ZW1RdWVyeUl0ZXJhdG9yLmpzXCI7XG5pbXBvcnQgeyBFcnJvclJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvaW5kZXguanNcIjtcbmltcG9ydCB7IEJ1bGtIZWxwZXIgfSBmcm9tIFwiLi4vLi4vYnVsay9CdWxrSGVscGVyLmpzXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gaXNDaGFuZ2VGZWVkT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMgJiYgIShpc1ByaW1pdGl2ZVBhcnRpdGlvbktleVZhbHVlKG9wdGlvbnMpIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpO1xufVxuLyoqXG4gKiBPcGVyYXRpb25zIGZvciBjcmVhdGluZyBuZXcgaXRlbXMsIGFuZCByZWFkaW5nL3F1ZXJ5aW5nIGFsbCBpdGVtc1xuICpcbiAqIEBzZWUge0BsaW5rIEl0ZW19IGZvciByZWFkaW5nLCByZXBsYWNpbmcsIG9yIGRlbGV0aW5nIGFuIGV4aXN0aW5nIGNvbnRhaW5lcjsgdXNlIGAuaXRlbShpZClgLlxuICovXG5leHBvcnQgY2xhc3MgSXRlbXMge1xuICAgIGNvbnRhaW5lcjtcbiAgICBjbGllbnRDb250ZXh0O1xuICAgIHBhcnRpdGlvbktleVJhbmdlQ2FjaGU7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIHtAbGluayBJdGVtc30gbGlua2VkIHRvIHRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICogQHBhcmFtIGNvbnRhaW5lciAtIFRoZSBwYXJlbnQgY29udGFpbmVyLlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgICAgIHRoaXMucGFydGl0aW9uS2V5UmFuZ2VDYWNoZSA9IHRoaXMuY2xpZW50Q29udGV4dC5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlO1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUuaXRlbSk7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICBjb25zdCBmZXRjaEZ1bmN0aW9uID0gYXN5bmMgKGRpYWdub3N0aWNOb2RlLCBpbm5lck9wdGlvbnMsIGNvcnJlbGF0ZWRBY3Rpdml0eUlkKSA9PiB7XG4gICAgICAgICAgICBsZXQgaW50ZXJuYWxQYXJ0aXRpb25LZXk7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5wYXJ0aXRpb25LZXkpIHtcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFBhcnRpdGlvbktleSA9IGNvbnZlcnRUb0ludGVybmFsUGFydGl0aW9uS2V5KG9wdGlvbnMucGFydGl0aW9uS2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGlzUGFydGl0aW9uTGV2ZWxGYWlsT3ZlckVuYWJsZWQgPSB0aGlzLmNsaWVudENvbnRleHQuaXNQYXJ0aXRpb25MZXZlbEZhaWxPdmVyRW5hYmxlZCgpO1xuICAgICAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5UmFuZ2VJZCA9IGF3YWl0IGNvbXB1dGVQYXJ0aXRpb25LZXlSYW5nZUlkKGRpYWdub3N0aWNOb2RlLCBpbnRlcm5hbFBhcnRpdGlvbktleSwgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkLCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50Q29udGV4dC5xdWVyeUZlZWQoe1xuICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUuaXRlbSxcbiAgICAgICAgICAgICAgICByZXNvdXJjZUlkOiBpZCxcbiAgICAgICAgICAgICAgICByZXN1bHRGbjogKHJlc3VsdCkgPT4gKHJlc3VsdCA/IHJlc3VsdC5Eb2N1bWVudHMgOiBbXSksXG4gICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgb3B0aW9uczogaW5uZXJPcHRpb25zLFxuICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleTogb3B0aW9ucy5wYXJ0aXRpb25LZXksXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICAgICAgY29ycmVsYXRlZEFjdGl2aXR5SWQ6IGNvcnJlbGF0ZWRBY3Rpdml0eUlkLFxuICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleVJhbmdlSWQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IGl0ZXJhdG9yO1xuICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgIGl0ZXJhdG9yID0gbmV3IEVuY3J5cHRpb25JdGVtUXVlcnlJdGVyYXRvcih0aGlzLmNsaWVudENvbnRleHQsIHF1ZXJ5LCBvcHRpb25zLCBmZXRjaEZ1bmN0aW9uLCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpdGVyYXRvciA9IG5ldyBRdWVyeUl0ZXJhdG9yKHRoaXMuY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGZldGNoRnVuY3Rpb24sIHRoaXMuY29udGFpbmVyLnVybCwgUmVzb3VyY2VUeXBlLml0ZW0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpdGVyYXRvcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUXVlcmllcyBhbGwgaXRlbXMgaW4gYW4gZW5jcnlwdGVkIGNvbnRhaW5lci5cbiAgICAgKiBAcGFyYW0gcXVlcnlCdWlsZGVyIC0gUXVlcnkgY29uZmlndXJhdGlvbiBmb3IgdGhlIG9wZXJhdGlvbi4gU2VlIHtAbGluayBTcWxRdWVyeVNwZWN9IGZvciBtb3JlIGluZm8gb24gaG93IHRvIGJ1aWxkIGEgcXVlcnkgb24gZW5jcnlwdGVkIHByb3BlcnRpZXMuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBVc2VkIGZvciBtb2RpZnlpbmcgdGhlIHJlcXVlc3QgKGZvciBpbnN0YW5jZSwgc3BlY2lmeWluZyB0aGUgcGFydGl0aW9uIGtleSkuXG4gICAgICogQGV4YW1wbGUgUmVhZCBhbGwgaXRlbXMgdG8gYXJyYXkuXG4gICAgICogYGBgdHMgc25pcHBldDpJdGVtc1F1ZXJ5RW5jcnlwdGVkSXRlbXNcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQsIEVuY3J5cHRpb25RdWVyeUJ1aWxkZXIgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCBxdWVyeUJ1aWxkZXIgPSBuZXcgRW5jcnlwdGlvblF1ZXJ5QnVpbGRlcihcbiAgICAgKiAgIGBTRUxFQ1QgZmlyc3RuYW1lIEZST00gRmFtaWxpZXMgZiBXSEVSRSBmLmxhc3ROYW1lID0gQGxhc3ROYW1lYCxcbiAgICAgKiApO1xuICAgICAqIHF1ZXJ5QnVpbGRlci5hZGRQYXJhbWV0ZXIoXCJAbGFzdE5hbWVcIiwgXCJIZW5kcmlja3NcIiwgXCIvbGFzdG5hbWVcIik7XG4gICAgICogY29uc3QgcXVlcnlJdGVyYXRvciA9IGF3YWl0IGNvbnRhaW5lci5pdGVtcy5nZXRFbmNyeXB0aW9uUXVlcnlJdGVyYXRvcihxdWVyeUJ1aWxkZXIpO1xuICAgICAqIGNvbnN0IHsgcmVzb3VyY2VzOiBpdGVtcyB9ID0gYXdhaXQgcXVlcnlJdGVyYXRvci5mZXRjaEFsbCgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGFzeW5jIGdldEVuY3J5cHRpb25RdWVyeUl0ZXJhdG9yKHF1ZXJ5QnVpbGRlciwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGVuY3J5cHRpb25TcWxRdWVyeVNwZWMgPSBxdWVyeUJ1aWxkZXIudG9FbmNyeXB0aW9uU3FsUXVlcnlTcGVjKCk7XG4gICAgICAgIGNvbnN0IHNxbFF1ZXJ5U3BlYyA9IGF3YWl0IHRoaXMuYnVpbGRTcWxRdWVyeVNwZWMoZW5jcnlwdGlvblNxbFF1ZXJ5U3BlYyk7XG4gICAgICAgIGlmICh0aGlzLmNsaWVudENvbnRleHQuZW5hYmxlRW5jcnlwdGlvbiAmJiBvcHRpb25zLnBhcnRpdGlvbktleSkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5jb250YWluZXIuY2hlY2tBbmRJbml0aWFsaXplRW5jcnlwdGlvbigpO1xuICAgICAgICAgICAgY29uc3QgeyBwYXJ0aXRpb25LZXlMaXN0LCBlbmNyeXB0ZWRDb3VudCB9ID0gYXdhaXQgdGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvci5nZXRFbmNyeXB0ZWRQYXJ0aXRpb25LZXlWYWx1ZShbXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5wYXJ0aXRpb25LZXksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGlmIChlbmNyeXB0ZWRDb3VudCA+IDApIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLnBhcnRpdGlvbktleSA9IHBhcnRpdGlvbktleUxpc3RbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSB0aGlzLnF1ZXJ5KHNxbFF1ZXJ5U3BlYywgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBpdGVyYXRvcjtcbiAgICB9XG4gICAgYXN5bmMgYnVpbGRTcWxRdWVyeVNwZWMoZW5jcnlwdGlvblNxbFF1ZXJ5U3BlYykge1xuICAgICAgICBsZXQgZW5jcnlwdGlvblBhcmFtZXRlcnMgPSBlbmNyeXB0aW9uU3FsUXVlcnlTcGVjLnBhcmFtZXRlcnM7XG4gICAgICAgIGNvbnN0IHNxbFF1ZXJ5U3BlYyA9IHtcbiAgICAgICAgICAgIHF1ZXJ5OiBlbmNyeXB0aW9uU3FsUXVlcnlTcGVjLnF1ZXJ5LFxuICAgICAgICAgICAgcGFyYW1ldGVyczogW10sXG4gICAgICAgIH07XG4gICAgICAgIC8vIHJldHVybnMgY29weSB0byBhdm9pZCBlbmNyeXB0aW9uIG9mIG9yaWdpbmFsIHBhcmFtZXRlcnMgcGFzc2VkXG4gICAgICAgIGVuY3J5cHRpb25QYXJhbWV0ZXJzID0gY29weU9iamVjdChlbmNyeXB0aW9uUGFyYW1ldGVycyk7XG4gICAgICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIGVuY3J5cHRpb25QYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICBsZXQgdmFsdWU7XG4gICAgICAgICAgICBpZiAocGFyYW1ldGVyLnR5cGUgIT09IHVuZGVmaW5lZCB8fCBwYXJhbWV0ZXIudHlwZSAhPT0gVHlwZU1hcmtlci5OdWxsKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBhd2FpdCB0aGlzLmNvbnRhaW5lci5lbmNyeXB0aW9uUHJvY2Vzc29yLmVuY3J5cHRRdWVyeVBhcmFtZXRlcihwYXJhbWV0ZXIucGF0aCwgcGFyYW1ldGVyLnZhbHVlLCBwYXJhbWV0ZXIucGF0aCA9PT0gXCIvaWRcIiwgcGFyYW1ldGVyLnR5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3FsUXVlcnlTcGVjLnBhcmFtZXRlcnMucHVzaCh7IG5hbWU6IHBhcmFtZXRlci5uYW1lLCB2YWx1ZTogdmFsdWUgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNxbFF1ZXJ5U3BlYztcbiAgICB9XG4gICAgcmVhZENoYW5nZUZlZWQocGFydGl0aW9uS2V5T3JDaGFuZ2VGZWVkT3B0aW9ucywgY2hhbmdlRmVlZE9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzQ2hhbmdlRmVlZE9wdGlvbnMocGFydGl0aW9uS2V5T3JDaGFuZ2VGZWVkT3B0aW9ucykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoYW5nZUZlZWQocGFydGl0aW9uS2V5T3JDaGFuZ2VGZWVkT3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jaGFuZ2VGZWVkKHBhcnRpdGlvbktleU9yQ2hhbmdlRmVlZE9wdGlvbnMsIGNoYW5nZUZlZWRPcHRpb25zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjaGFuZ2VGZWVkKHBhcnRpdGlvbktleU9yQ2hhbmdlRmVlZE9wdGlvbnMsIGNoYW5nZUZlZWRPcHRpb25zKSB7XG4gICAgICAgIGxldCBwYXJ0aXRpb25LZXk7XG4gICAgICAgIGlmICghY2hhbmdlRmVlZE9wdGlvbnMgJiYgaXNDaGFuZ2VGZWVkT3B0aW9ucyhwYXJ0aXRpb25LZXlPckNoYW5nZUZlZWRPcHRpb25zKSkge1xuICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgY2hhbmdlRmVlZE9wdGlvbnMgPSBwYXJ0aXRpb25LZXlPckNoYW5nZUZlZWRPcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBhcnRpdGlvbktleU9yQ2hhbmdlRmVlZE9wdGlvbnMgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgIWlzQ2hhbmdlRmVlZE9wdGlvbnMocGFydGl0aW9uS2V5T3JDaGFuZ2VGZWVkT3B0aW9ucykpIHtcbiAgICAgICAgICAgIHBhcnRpdGlvbktleSA9IHBhcnRpdGlvbktleU9yQ2hhbmdlRmVlZE9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFjaGFuZ2VGZWVkT3B0aW9ucykge1xuICAgICAgICAgICAgY2hhbmdlRmVlZE9wdGlvbnMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXRoID0gZ2V0UGF0aEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCwgUmVzb3VyY2VUeXBlLml0ZW0pO1xuICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgcmV0dXJuIG5ldyBDaGFuZ2VGZWVkSXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBpZCwgcGF0aCwgcGFydGl0aW9uS2V5LCBjaGFuZ2VGZWVkT3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gaXRlcmF0b3IgdG8gaXRlcmF0ZSBvdmVyIHBhZ2VzIG9mIGNoYW5nZXMuIFRoZSBpdGVyYXRvciByZXR1cm5lZCBjYW4gYmUgdXNlZCB0byBmZXRjaCBjaGFuZ2VzIGZvciBhIHNpbmdsZSBwYXJ0aXRpb24ga2V5LCBmZWVkIHJhbmdlIG9yIGFuIGVudGlyZSBjb250YWluZXIuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzIHNuaXBwZXQ6UmVhZG1lU2FtcGxlQ2hhbmdlRmVlZFB1bGxNb2RlbEl0ZXJhdG9yUGFydGl0aW9uS2V5XG4gICAgICogaW1wb3J0IHtcbiAgICAgKiAgIENvc21vc0NsaWVudCxcbiAgICAgKiAgIFBhcnRpdGlvbktleURlZmluaXRpb25WZXJzaW9uLFxuICAgICAqICAgUGFydGl0aW9uS2V5S2luZCxcbiAgICAgKiAgIENoYW5nZUZlZWRTdGFydEZyb20sXG4gICAgICogfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCBjb250YWluZXJEZWZpbml0aW9uID0ge1xuICAgICAqICAgaWQ6IFwiVGVzdCBEYXRhYmFzZVwiLFxuICAgICAqICAgcGFydGl0aW9uS2V5OiB7XG4gICAgICogICAgIHBhdGhzOiBbXCIvbmFtZVwiLCBcIi9hZGRyZXNzL3ppcFwiXSxcbiAgICAgKiAgICAgdmVyc2lvbjogUGFydGl0aW9uS2V5RGVmaW5pdGlvblZlcnNpb24uVjIsXG4gICAgICogICAgIGtpbmQ6IFBhcnRpdGlvbktleUtpbmQuTXVsdGlIYXNoLFxuICAgICAqICAgfSxcbiAgICAgKiB9O1xuICAgICAqIGNvbnN0IHsgY29udGFpbmVyIH0gPSBhd2FpdCBkYXRhYmFzZS5jb250YWluZXJzLmNyZWF0ZUlmTm90RXhpc3RzKGNvbnRhaW5lckRlZmluaXRpb24pO1xuICAgICAqXG4gICAgICogY29uc3QgcGFydGl0aW9uS2V5ID0gXCJzb21lLXBhcnRpdGlvbi1LZXktdmFsdWVcIjtcbiAgICAgKiBjb25zdCBvcHRpb25zID0ge1xuICAgICAqICAgY2hhbmdlRmVlZFN0YXJ0RnJvbTogQ2hhbmdlRmVlZFN0YXJ0RnJvbS5CZWdpbm5pbmcocGFydGl0aW9uS2V5KSxcbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogY29uc3QgaXRlcmF0b3IgPSBjb250YWluZXIuaXRlbXMuZ2V0Q2hhbmdlRmVlZEl0ZXJhdG9yKG9wdGlvbnMpO1xuICAgICAqXG4gICAgICogd2hpbGUgKGl0ZXJhdG9yLmhhc01vcmVSZXN1bHRzKSB7XG4gICAgICogICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGl0ZXJhdG9yLnJlYWROZXh0KCk7XG4gICAgICogICAvLyBwcm9jZXNzIHRoaXMgcmVzcG9uc2VcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZ2V0Q2hhbmdlRmVlZEl0ZXJhdG9yKGNoYW5nZUZlZWRJdGVyYXRvck9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgY2ZPcHRpb25zID0gY2hhbmdlRmVlZEl0ZXJhdG9yT3B0aW9ucyAhPT0gdW5kZWZpbmVkID8gY2hhbmdlRmVlZEl0ZXJhdG9yT3B0aW9ucyA6IHt9O1xuICAgICAgICB2YWxpZGF0ZUNoYW5nZUZlZWRJdGVyYXRvck9wdGlvbnMoY2ZPcHRpb25zKTtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBuZXcgQ2hhbmdlRmVlZEl0ZXJhdG9yQnVpbGRlcihjZk9wdGlvbnMsIHRoaXMuY2xpZW50Q29udGV4dCwgdGhpcy5jb250YWluZXIsIHRoaXMucGFydGl0aW9uS2V5UmFuZ2VDYWNoZSk7XG4gICAgICAgIHJldHVybiBpdGVyYXRvcjtcbiAgICB9XG4gICAgcmVhZEFsbChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KFwiU0VMRUNUICogZnJvbSBjXCIsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gaXRlbS5cbiAgICAgKlxuICAgICAqIEFueSBwcm92aWRlZCB0eXBlLCBULCBpcyBub3QgbmVjZXNzYXJpbHkgZW5mb3JjZWQgYnkgdGhlIFNESy5cbiAgICAgKiBZb3UgbWF5IGdldCBtb3JlIG9yIGxlc3MgcHJvcGVydGllcyBhbmQgaXQncyB1cCB0byB5b3VyIGxvZ2ljIHRvIGVuZm9yY2UgaXQuXG4gICAgICpcbiAgICAgKiBUaGVyZSBpcyBubyBzZXQgc2NoZW1hIGZvciBKU09OIGl0ZW1zLiBUaGV5IG1heSBjb250YWluIGFueSBudW1iZXIgb2YgY3VzdG9tIHByb3BlcnRpZXMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYm9keSAtIFJlcHJlc2VudHMgdGhlIGJvZHkgb2YgdGhlIGl0ZW0uIENhbiBjb250YWluIGFueSBudW1iZXIgb2YgdXNlciBkZWZpbmVkIHByb3BlcnRpZXMuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBVc2VkIGZvciBtb2RpZnlpbmcgdGhlIHJlcXVlc3QgKGZvciBpbnN0YW5jZSwgc3BlY2lmeWluZyB0aGUgcGFydGl0aW9uIGtleSkuXG4gICAgICogQGV4YW1wbGUgQ3JlYXRlIGFuIGl0ZW0uXG4gICAgICogYGBgdHMgc25pcHBldDpDb250YWluZXJJdGVtc1xuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCB9IGZyb20gXCJAYXp1cmUvY29zbW9zXCI7XG4gICAgICpcbiAgICAgKiBjb25zdCBlbmRwb2ludCA9IFwiaHR0cHM6Ly95b3VyLWFjY291bnQuZG9jdW1lbnRzLmF6dXJlLmNvbVwiO1xuICAgICAqIGNvbnN0IGtleSA9IFwiPGRhdGFiYXNlIGFjY291bnQgbWFzdGVya2V5PlwiO1xuICAgICAqIGNvbnN0IGNsaWVudCA9IG5ldyBDb3Ntb3NDbGllbnQoeyBlbmRwb2ludCwga2V5IH0pO1xuICAgICAqXG4gICAgICogY29uc3QgeyBkYXRhYmFzZSB9ID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgRGF0YWJhc2VcIiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgY29udGFpbmVyIH0gPSBhd2FpdCBkYXRhYmFzZS5jb250YWluZXJzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBDb250YWluZXJcIiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgcmVzb3VyY2U6IGNyZWF0ZWRJdGVtIH0gPSBhd2FpdCBjb250YWluZXIuaXRlbXMuY3JlYXRlKHtcbiAgICAgKiAgIGlkOiBcIjxpdGVtIGlkPlwiLFxuICAgICAqICAgcHJvcGVydGllczoge30sXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlKGJvZHksIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICAvLyBHZW5lcmF0ZSByYW5kb20gZG9jdW1lbnQgaWQgaWYgdGhlIGlkIGlzIG1pc3NpbmcgaW4gdGhlIHBheWxvYWQgYW5kXG4gICAgICAgIC8vIG9wdGlvbnMuZGlzYWJsZUF1dG9tYXRpY0lkR2VuZXJhdGlvbiAhPSB0cnVlXG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBpZiAoKGJvZHkuaWQgPT09IHVuZGVmaW5lZCB8fCBib2R5LmlkID09PSBcIlwiKSAmJiAhb3B0aW9ucy5kaXNhYmxlQXV0b21hdGljSWRHZW5lcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgYm9keS5pZCA9IHJhbmRvbVVVSUQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhcnRpdGlvbktleURlZmluaXRpb24gPSBhd2FpdCByZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbihkaWFnbm9zdGljTm9kZSwgdGhpcy5jb250YWluZXIpO1xuICAgICAgICAgICAgbGV0IHBhcnRpdGlvbktleSA9IGV4dHJhY3RQYXJ0aXRpb25LZXlzKGJvZHksIHBhcnRpdGlvbktleURlZmluaXRpb24pO1xuICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5jb250YWluZXIuY2hlY2tBbmRJbml0aWFsaXplRW5jcnlwdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRhaW5lclJpZCA9IHRoaXMuY29udGFpbmVyLl9yaWQ7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJldHVybnMgY29weSB0byBhdm9pZCBlbmNyeXB0aW9uIG9mIG9yaWdpbmFsIGJvZHkgcGFzc2VkXG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBjb3B5T2JqZWN0KGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5iZWdpbkVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0VuY3J5cHRPcGVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGJvZHk6IGVuY3J5cHRlZEJvZHksIHByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudCB9ID0gYXdhaXQgdGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvci5lbmNyeXB0KGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gZW5jcnlwdGVkQm9keTtcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRW5jcnlwdE9wZXJhdGlvbiwgcHJvcGVydGllc0VuY3J5cHRlZENvdW50KTtcbiAgICAgICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gZXh0cmFjdFBhcnRpdGlvbktleXMoYm9keSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgICAgIGlmICghaXNJdGVtUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFJlc291cmNlVHlwZS5pdGVtKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkID0gdGhpcy5jbGllbnRDb250ZXh0LmlzUGFydGl0aW9uTGV2ZWxGYWlsT3ZlckVuYWJsZWQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlSYW5nZUlkID0gYXdhaXQgY29tcHV0ZVBhcnRpdGlvbktleVJhbmdlSWQoZGlhZ25vc3RpY05vZGUsIHBhcnRpdGlvbktleSwgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkLCB0aGlzLmNvbnRhaW5lciwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUuaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJZDogaWQsXG4gICAgICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICBwYXJ0aXRpb25LZXksXG4gICAgICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleVJhbmdlSWQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVG9kbzogaW50ZXJuYWxseSByZXRyeSBwb3N0IHBvbGljeSByZWZyZXNoXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29udGFpbmVyLnRocm93SWZSZXF1ZXN0TmVlZHNBUmV0cnlQb3N0UG9saWN5UmVmcmVzaChlcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY2xpZW50Q29udGV4dC5lbmFibGVFbmNyeXB0aW9uKSB7XG4gICAgICAgICAgICAgICAgLy8gdHJ5IGJsb2NrIGZvciBkZWNyeXB0aW5nIHJlc3BvbnNlLiBUaGlzIGlzIGRvbmUgc28gdGhhdCB3ZSBjYW4gdGhyb3cgc3BlY2lhbCBlcnJvciBtZXNzYWdlIGluIGNhc2Ugb2YgZGVjcnlwdGlvbiBmYWlsdXJlXG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuYmVnaW5FbmNyeXB0aW9uRGlhZ25vc3RpY3MoQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEZWNyeXB0T3BlcmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBib2R5OiBkZWNyeXB0ZWRSZXN1bHQsIHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudCB9ID0gYXdhaXQgdGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvci5kZWNyeXB0KHJlc3BvbnNlLnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmVuZEVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0RlY3J5cHRPcGVyYXRpb24sIHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudCk7XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnJlc3VsdCA9IGRlY3J5cHRlZFJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gZXh0cmFjdFBhcnRpdGlvbktleXMocmVzcG9uc2UucmVzdWx0LCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlY3J5cHRpb25FcnJvciA9IG5ldyBFcnJvclJlc3BvbnNlKGBJdGVtIGNyZWF0aW9uIHdhcyBzdWNjZXNzZnVsIGJ1dCByZXNwb25zZSBkZWNyeXB0aW9uIGZhaWxlZDogKyAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICAgICAgICAgIGRlY3J5cHRpb25FcnJvci5jb2RlID0gU3RhdHVzQ29kZXMuU2VydmljZVVuYXZhaWxhYmxlO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBkZWNyeXB0aW9uRXJyb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IEl0ZW0odGhpcy5jb250YWluZXIsIHJlc3BvbnNlLnJlc3VsdC5pZCwgdGhpcy5jbGllbnRDb250ZXh0LCBwYXJ0aXRpb25LZXkpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBJdGVtUmVzcG9uc2UocmVzcG9uc2UucmVzdWx0LCByZXNwb25zZS5oZWFkZXJzLCByZXNwb25zZS5jb2RlLCByZXNwb25zZS5zdWJzdGF0dXMsIHJlZiwgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcygpKTtcbiAgICAgICAgfSwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgYXN5bmMgdXBzZXJ0KGJvZHksIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgLy8gR2VuZXJhdGUgcmFuZG9tIGRvY3VtZW50IGlkIGlmIHRoZSBpZCBpcyBtaXNzaW5nIGluIHRoZSBwYXlsb2FkIGFuZFxuICAgICAgICAgICAgLy8gb3B0aW9ucy5kaXNhYmxlQXV0b21hdGljSWRHZW5lcmF0aW9uICE9IHRydWVcbiAgICAgICAgICAgIGlmICgoYm9keS5pZCA9PT0gdW5kZWZpbmVkIHx8IGJvZHkuaWQgPT09IFwiXCIpICYmICFvcHRpb25zLmRpc2FibGVBdXRvbWF0aWNJZEdlbmVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICBib2R5LmlkID0gcmFuZG9tVVVJRCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5RGVmaW5pdGlvbiA9IGF3YWl0IHJlYWRQYXJ0aXRpb25LZXlEZWZpbml0aW9uKGRpYWdub3N0aWNOb2RlLCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgICAgICBsZXQgcGFydGl0aW9uS2V5ID0gZXh0cmFjdFBhcnRpdGlvbktleXMoYm9keSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNsaWVudENvbnRleHQuZW5hYmxlRW5jcnlwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm5zIGNvcHkgdG8gYXZvaWQgZW5jcnlwdGlvbiBvZiBvcmlnaW5hbCBib2R5IHBhc3NlZFxuICAgICAgICAgICAgICAgICAgICBib2R5ID0gY29weU9iamVjdChib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29udGFpbmVyLmNoZWNrQW5kSW5pdGlhbGl6ZUVuY3J5cHRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250YWluZXJSaWQgPSB0aGlzLmNvbnRhaW5lci5fcmlkO1xuICAgICAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5iZWdpbkVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0VuY3J5cHRPcGVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGJvZHk6IGVuY3J5cHRlZEJvZHksIHByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudCB9ID0gYXdhaXQgdGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvci5lbmNyeXB0KGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gZW5jcnlwdGVkQm9keTtcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRW5jcnlwdE9wZXJhdGlvbiwgcHJvcGVydGllc0VuY3J5cHRlZENvdW50KTtcbiAgICAgICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gZXh0cmFjdFBhcnRpdGlvbktleXMoYm9keSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgICAgIGlmICghaXNJdGVtUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFJlc291cmNlVHlwZS5pdGVtKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkID0gdGhpcy5jbGllbnRDb250ZXh0LmlzUGFydGl0aW9uTGV2ZWxGYWlsT3ZlckVuYWJsZWQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlSYW5nZUlkID0gYXdhaXQgY29tcHV0ZVBhcnRpdGlvbktleVJhbmdlSWQoZGlhZ25vc3RpY05vZGUsIHBhcnRpdGlvbktleSwgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkLCB0aGlzLmNvbnRhaW5lciwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQudXBzZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUuaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJZDogaWQsXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleSxcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleVJhbmdlSWQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5jb250YWluZXIudGhyb3dJZlJlcXVlc3ROZWVkc0FSZXRyeVBvc3RQb2xpY3lSZWZyZXNoKGVycm9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyB0cnkgYmxvY2sgZm9yIGRlY3J5cHRpbmcgcmVzcG9uc2UuIFRoaXMgaXMgZG9uZSBzbyB0aGF0IHdlIGNhbiB0aHJvdyBzcGVjaWFsIGVycm9yIG1lc3NhZ2UgaW4gY2FzZSBvZiBkZWNyeXB0aW9uIGZhaWx1cmVcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuYmVnaW5FbmNyeXB0aW9uRGlhZ25vc3RpY3MoQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEZWNyeXB0T3BlcmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBib2R5OiBkZWNyeXB0ZWRSZXN1bHQsIHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudCB9ID0gYXdhaXQgdGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvci5kZWNyeXB0KHJlc3BvbnNlLnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmVuZEVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0RlY3J5cHRPcGVyYXRpb24sIHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudCk7XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnJlc3VsdCA9IGRlY3J5cHRlZFJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gZXh0cmFjdFBhcnRpdGlvbktleXMocmVzcG9uc2UucmVzdWx0LCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlY3J5cHRpb25FcnJvciA9IG5ldyBFcnJvclJlc3BvbnNlKGBJdGVtIHVwc2VydCB3YXMgc3VjY2Vzc2Z1bCBidXQgcmVzcG9uc2UgZGVjcnlwdGlvbiBmYWlsZWQ6ICsgJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgICAgICBkZWNyeXB0aW9uRXJyb3IuY29kZSA9IFN0YXR1c0NvZGVzLlNlcnZpY2VVbmF2YWlsYWJsZTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZGVjcnlwdGlvbkVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBJdGVtKHRoaXMuY29udGFpbmVyLCByZXNwb25zZS5yZXN1bHQuaWQsIHRoaXMuY2xpZW50Q29udGV4dCwgcGFydGl0aW9uS2V5KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSXRlbVJlc3BvbnNlKHJlc3BvbnNlLnJlc3VsdCwgcmVzcG9uc2UuaGVhZGVycywgcmVzcG9uc2UuY29kZSwgcmVzcG9uc2Uuc3Vic3RhdHVzLCByZWYsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSk7XG4gICAgICAgIH0sIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYnVsayBvcGVyYXRpb25zIG9uIGl0ZW1zLlxuICAgICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gTGlzdCBvZiBvcGVyYXRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSB1c2VkIGZvciBtb2RpZnlpbmcgdGhlIHJlcXVlc3RcbiAgICAgKiBAcmV0dXJucyBsaXN0IG9mIG9wZXJhdGlvbiByZXN1bHRzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG9wZXJhdGlvbnNcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHMgc25pcHBldDpJdGVtc0V4ZWN1dGVCdWxrT3BlcmF0aW9uc1xuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCwgT3BlcmF0aW9uSW5wdXQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCBvcGVyYXRpb25zOiBPcGVyYXRpb25JbnB1dFtdID0gW1xuICAgICAqICAge1xuICAgICAqICAgICBvcGVyYXRpb25UeXBlOiBcIkNyZWF0ZVwiLFxuICAgICAqICAgICByZXNvdXJjZUJvZHk6IHsgaWQ6IFwiZG9jMVwiLCBuYW1lOiBcInNhbXBsZVwiLCBrZXk6IFwiQVwiIH0sXG4gICAgICogICB9LFxuICAgICAqICAge1xuICAgICAqICAgICBvcGVyYXRpb25UeXBlOiBcIlVwc2VydFwiLFxuICAgICAqICAgICBwYXJ0aXRpb25LZXk6IFwiQVwiLFxuICAgICAqICAgICByZXNvdXJjZUJvZHk6IHsgaWQ6IFwiZG9jMlwiLCBuYW1lOiBcIm90aGVyXCIsIGtleTogXCJBXCIgfSxcbiAgICAgKiAgIH0sXG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIGF3YWl0IGNvbnRhaW5lci5pdGVtcy5leGVjdXRlQnVsa09wZXJhdGlvbnMob3BlcmF0aW9ucyk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgZXhlY3V0ZUJ1bGtPcGVyYXRpb25zKG9wZXJhdGlvbnMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBidWxrSGVscGVyID0gbmV3IEJ1bGtIZWxwZXIodGhpcy5jb250YWluZXIsIHRoaXMuY2xpZW50Q29udGV4dCwgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGJ1bGtIZWxwZXIuZXhlY3V0ZShvcGVyYXRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBidWxrIG9wZXJhdGlvbnMgb24gaXRlbXMuXG4gICAgICogQGRlcHJlY2F0ZWQgVXNlIGBleGVjdXRlQnVsa09wZXJhdGlvbnNgIGluc3RlYWQuXG4gICAgICpcbiAgICAgKiBCdWxrIHRha2VzIGFuIGFycmF5IG9mIE9wZXJhdGlvbnMgd2hpY2ggYXJlIHR5cGVkIGJhc2VkIG9uIHdoYXQgdGhlIG9wZXJhdGlvbiBkb2VzLlxuICAgICAqIFRoZSBjaG9pY2VzIGFyZTogQ3JlYXRlLCBVcHNlcnQsIFJlYWQsIFJlcGxhY2UsIGFuZCBEZWxldGVcbiAgICAgKlxuICAgICAqIFVzYWdlIGV4YW1wbGU6XG4gICAgICogYGBgdHMgc25pcHBldDpJdGVtc0J1bGtcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQsIE9wZXJhdGlvbklucHV0IH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IGRhdGFiYXNlIH0gPSBhd2FpdCBjbGllbnQuZGF0YWJhc2VzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBEYXRhYmFzZVwiIH0pO1xuICAgICAqXG4gICAgICogY29uc3QgeyBjb250YWluZXIgfSA9IGF3YWl0IGRhdGFiYXNlLmNvbnRhaW5lcnMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IENvbnRhaW5lclwiIH0pO1xuICAgICAqXG4gICAgICogLy8gcGFydGl0aW9uS2V5IGlzIG9wdGlvbmFsIGF0IHRoZSB0b3AgbGV2ZWwgaWYgcHJlc2VudCBpbiB0aGUgcmVzb3VyY2VCb2R5XG4gICAgICogY29uc3Qgb3BlcmF0aW9uczogT3BlcmF0aW9uSW5wdXRbXSA9IFtcbiAgICAgKiAgIHtcbiAgICAgKiAgICAgb3BlcmF0aW9uVHlwZTogXCJDcmVhdGVcIixcbiAgICAgKiAgICAgcmVzb3VyY2VCb2R5OiB7IGlkOiBcImRvYzFcIiwgbmFtZTogXCJzYW1wbGVcIiwga2V5OiBcIkFcIiB9LFxuICAgICAqICAgfSxcbiAgICAgKiAgIHtcbiAgICAgKiAgICAgb3BlcmF0aW9uVHlwZTogXCJVcHNlcnRcIixcbiAgICAgKiAgICAgcGFydGl0aW9uS2V5OiBcIkFcIixcbiAgICAgKiAgICAgcmVzb3VyY2VCb2R5OiB7IGlkOiBcImRvYzJcIiwgbmFtZTogXCJvdGhlclwiLCBrZXk6IFwiQVwiIH0sXG4gICAgICogICB9LFxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiBhd2FpdCBjb250YWluZXIuaXRlbXMuYnVsayhvcGVyYXRpb25zKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gTGlzdCBvZiBvcGVyYXRpb25zLiBMaW1pdCAxMDBcbiAgICAgKiBAcGFyYW0gYnVsa09wdGlvbnMgLSBPcHRpb25hbCBvcHRpb25zIG9iamVjdCB0byBtb2RpZnkgYnVsayBiZWhhdmlvci4gUGFzcyBcXHsgY29udGludWVPbkVycm9yOiBmYWxzZSBcXH0gdG8gc3RvcCBleGVjdXRpbmcgb3BlcmF0aW9ucyB3aGVuIG9uZSBmYWlscy4gKERlZmF1bHRzIHRvIHRydWUpXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBVc2VkIGZvciBtb2RpZnlpbmcgdGhlIHJlcXVlc3QuXG4gICAgICovXG4gICAgYXN5bmMgYnVsayhvcGVyYXRpb25zLCBidWxrT3B0aW9ucywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5UmFuZ2VzID0gKGF3YWl0IHRoaXMucGFydGl0aW9uS2V5UmFuZ2VDYWNoZS5vbkNvbGxlY3Rpb25Sb3V0aW5nTWFwKHRoaXMuY29udGFpbmVyLnVybCwgZGlhZ25vc3RpY05vZGUpKS5nZXRPcmRlcmVkUGFyaXRpb25LZXlSYW5nZXMoKTtcbiAgICAgICAgICAgIGNvbnN0IHBhcnRpdGlvbktleURlZmluaXRpb24gPSBhd2FpdCByZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbihkaWFnbm9zdGljTm9kZSwgdGhpcy5jb250YWluZXIpO1xuICAgICAgICAgICAgaWYgKHRoaXMuY2xpZW50Q29udGV4dC5lbmFibGVFbmNyeXB0aW9uKSB7XG4gICAgICAgICAgICAgICAgLy8gcmV0dXJucyBjb3B5IHRvIGF2b2lkIGVuY3J5cHRpb24gb2Ygb3JpZ2luYWwgb3BlcmF0aW9ucyBib2R5IHBhc3NlZFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvbnMgPSBjb3B5T2JqZWN0KG9wZXJhdGlvbnMpO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29udGFpbmVyLmNoZWNrQW5kSW5pdGlhbGl6ZUVuY3J5cHRpb24oKTtcbiAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRhaW5lclJpZCA9IHRoaXMuY29udGFpbmVyLl9yaWQ7XG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuYmVnaW5FbmNyeXB0aW9uRGlhZ25vc3RpY3MoQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NFbmNyeXB0T3BlcmF0aW9uKTtcbiAgICAgICAgICAgICAgICBjb25zdCB7IG9wZXJhdGlvbnM6IGVuY3J5cHRlZE9wZXJhdGlvbnMsIHRvdGFsUHJvcGVydGllc0VuY3J5cHRlZENvdW50IH0gPSBhd2FpdCB0aGlzLmJ1bGtCYXRjaEVuY3J5cHRpb25IZWxwZXIob3BlcmF0aW9ucyk7XG4gICAgICAgICAgICAgICAgb3BlcmF0aW9ucyA9IGVuY3J5cHRlZE9wZXJhdGlvbnM7XG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRW5jcnlwdE9wZXJhdGlvbiwgdG90YWxQcm9wZXJ0aWVzRW5jcnlwdGVkQ291bnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYmF0Y2hlcyA9IHBhcnRpdGlvbktleVJhbmdlcy5tYXAoKGtleVJhbmdlKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbWluOiBrZXlSYW5nZS5taW5JbmNsdXNpdmUsXG4gICAgICAgICAgICAgICAgICAgIG1heDoga2V5UmFuZ2UubWF4RXhjbHVzaXZlLFxuICAgICAgICAgICAgICAgICAgICByYW5nZUlkOiBrZXlSYW5nZS5pZCxcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhlczogW10sXG4gICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbnM6IFtdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBPcGVyYXRpb25zQmFzZWRPblBhcnRpdGlvbktleShvcGVyYXRpb25zLCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uLCBvcHRpb25zLCBiYXRjaGVzKTtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUuaXRlbSk7XG4gICAgICAgICAgICBjb25zdCBvcmRlcmVkUmVzcG9uc2VzID0gW107XG4gICAgICAgICAgICAvLyBzcGxpdCBiYXRjaGVzIGJhc2VkIG9uIGN1bXVsYXRpdmUgc2l6ZSBvZiBvcGVyYXRpb25zXG4gICAgICAgICAgICBjb25zdCBiYXRjaE1hcCA9IGJhdGNoZXNcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChiYXRjaCkgPT4gYmF0Y2gub3BlcmF0aW9ucy5sZW5ndGgpXG4gICAgICAgICAgICAgICAgLmZsYXRNYXAoKGJhdGNoKSA9PiBzcGxpdEJhdGNoQmFzZWRPbkJvZHlTaXplKGJhdGNoKSk7XG4gICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbCh0aGlzLmV4ZWN1dGVCYXRjaE9wZXJhdGlvbnMoYmF0Y2hNYXAsIHBhdGgsIGJ1bGtPcHRpb25zLCBvcHRpb25zLCBkaWFnbm9zdGljTm9kZSwgb3JkZXJlZFJlc3BvbnNlcywgcGFydGl0aW9uS2V5RGVmaW5pdGlvbikpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBvcmRlcmVkUmVzcG9uc2VzO1xuICAgICAgICAgICAgcmVzcG9uc2UuZGlhZ25vc3RpY3MgPSBkaWFnbm9zdGljTm9kZS50b0RpYWdub3N0aWModGhpcy5jbGllbnRDb250ZXh0LmdldENsaWVudENvbmZpZygpKTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgZXhlY3V0ZUJhdGNoT3BlcmF0aW9ucyhiYXRjaE1hcCwgcGF0aCwgYnVsa09wdGlvbnMsIG9wdGlvbnMsIGRpYWdub3N0aWNOb2RlLCBvcmRlcmVkUmVzcG9uc2VzLCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uKSB7XG4gICAgICAgIHJldHVybiBiYXRjaE1hcC5tYXAoYXN5bmMgKGJhdGNoKSA9PiB7XG4gICAgICAgICAgICBpZiAoYmF0Y2gub3BlcmF0aW9ucy5sZW5ndGggPiAxMDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgcnVuIGJ1bGsgcmVxdWVzdCB3aXRoIG1vcmUgdGhhbiAxMDAgb3BlcmF0aW9ucyBwZXIgcGFydGl0aW9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IGFkZERpYWdub3N0aWNDaGlsZChhc3luYyAoY2hpbGROb2RlKSA9PiB0aGlzLmNsaWVudENvbnRleHQuYnVsayh7XG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IGJhdGNoLm9wZXJhdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleVJhbmdlSWQ6IGJhdGNoLnJhbmdlSWQsXG4gICAgICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IHRoaXMuY29udGFpbmVyLnVybCxcbiAgICAgICAgICAgICAgICAgICAgYnVsa09wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlOiBjaGlsZE5vZGUsXG4gICAgICAgICAgICAgICAgfSksIGRpYWdub3N0aWNOb2RlLCBEaWFnbm9zdGljTm9kZVR5cGUuQkFUQ0hfUkVRVUVTVCk7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UucmVzdWx0LmZvckVhY2goKG9wZXJhdGlvblJlc3BvbnNlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBvcmRlcmVkUmVzcG9uc2VzW2JhdGNoLmluZGV4ZXNbaW5kZXhdXSA9IG9wZXJhdGlvblJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNsaWVudENvbnRleHQuZW5hYmxlRW5jcnlwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmNvbnRhaW5lci50aHJvd0lmUmVxdWVzdE5lZWRzQVJldHJ5UG9zdFBvbGljeVJlZnJlc2goZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gSW4gdGhlIGNhc2Ugb2YgNDEwIGVycm9ycywgd2UgbmVlZCB0byByZWNvbXB1dGUgdGhlIHBhcnRpdGlvbiBrZXkgcmFuZ2VzXG4gICAgICAgICAgICAgICAgLy8gYW5kIHJlZG8gdGhlIGJhdGNoIHJlcXVlc3QsIGhvd2V2ZXIsIDQxMCBlcnJvcnMgb2NjdXIgZm9yIHVuc3VwcG9ydGVkXG4gICAgICAgICAgICAgICAgLy8gcGFydGl0aW9uIGtleSB0eXBlcyBhcyB3ZWxsIHNpbmNlIHdlIGRvbid0IHN1cHBvcnQgdGhlbSwgc28gZm9yIG5vdyB3ZSB0aHJvd1xuICAgICAgICAgICAgICAgIGlmIChlcnIuY29kZSA9PT0gU3RhdHVzQ29kZXMuR29uZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1BhcnRpdGlvblNwbGl0ID0gZXJyLnN1YnN0YXR1cyA9PT0gU3ViU3RhdHVzQ29kZXMuUGFydGl0aW9uS2V5UmFuZ2VHb25lIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnIuc3Vic3RhdHVzID09PSBTdWJTdGF0dXNDb2Rlcy5Db21wbGV0aW5nU3BsaXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1BhcnRpdGlvblNwbGl0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBxdWVyeVJhbmdlID0gbmV3IFF1ZXJ5UmFuZ2UoYmF0Y2gubWluLCBiYXRjaC5tYXgsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG92ZXJsYXBwaW5nUmFuZ2VzID0gYXdhaXQgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLmdldE92ZXJsYXBwaW5nUmFuZ2VzKHRoaXMuY29udGFpbmVyLnVybCwgcXVlcnlSYW5nZSwgZGlhZ25vc3RpY05vZGUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG92ZXJsYXBwaW5nUmFuZ2VzLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXJ0aXRpb24gc3BsaXQvbWVyZ2UgZGV0ZWN0ZWQgYnV0IG5vIG92ZXJsYXBwaW5nIHJhbmdlcyBmb3VuZC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBIYW5kbGVzIGJvdGggbWVyZ2UgKG92ZXJsYXBwaW5nUmFuZ2VzLmxlbmd0aCA9PT0gMSkgYW5kIHNwbGl0IChvdmVybGFwcGluZ1Jhbmdlcy5sZW5ndGggPiAxKSBjYXNlcy5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvdmVybGFwcGluZ1Jhbmdlcy5sZW5ndGggPj0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnN0IHNwbGl0QmF0Y2hlczogQmF0Y2hbXSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0JhdGNoZXMgPSB0aGlzLmNyZWF0ZU5ld0JhdGNoZXMob3ZlcmxhcHBpbmdSYW5nZXMsIGJhdGNoLCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbCh0aGlzLmV4ZWN1dGVCYXRjaE9wZXJhdGlvbnMobmV3QmF0Y2hlcywgcGF0aCwgYnVsa09wdGlvbnMsIG9wdGlvbnMsIGRpYWdub3N0aWNOb2RlLCBvcmRlcmVkUmVzcG9uc2VzLCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXJ0aXRpb24ga2V5IGVycm9yLiBBbiBvcGVyYXRpb24gaGFzIGFuIHVuc3VwcG9ydGVkIHBhcnRpdGlvbktleSB0eXBlXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBCdWxrIHJlcXVlc3QgZXJyb3JlZCB3aXRoOiAke2Vyci5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNsaWVudENvbnRleHQuZW5hYmxlRW5jcnlwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuYmVnaW5FbmNyeXB0aW9uRGlhZ25vc3RpY3MoQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEZWNyeXB0T3BlcmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiByZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnJlc291cmNlQm9keSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGJvZHksIHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudCB9ID0gYXdhaXQgdGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvci5kZWNyeXB0KHJlc3VsdC5yZXNvdXJjZUJvZHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucmVzb3VyY2VCb2R5ID0gYm9keTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQgKz0gcHJvcGVydGllc0RlY3J5cHRlZENvdW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmVuZEVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0RlY3J5cHRPcGVyYXRpb24sIGNvdW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVjcnlwdGlvbkVycm9yID0gbmV3IEVycm9yUmVzcG9uc2UoYEJhdGNoIHJlc3BvbnNlIHdhcyByZWNlaXZlZCBidXQgcmVzcG9uc2UgZGVjcnlwdGlvbiBmYWlsZWQ6ICsgJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgICAgICBkZWNyeXB0aW9uRXJyb3IuY29kZSA9IFN0YXR1c0NvZGVzLlNlcnZpY2VVbmF2YWlsYWJsZTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZGVjcnlwdGlvbkVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNwb25zZS5yZXN1bHQuZm9yRWFjaCgob3BlcmF0aW9uUmVzcG9uc2UsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIG9yZGVyZWRSZXNwb25zZXNbYmF0Y2guaW5kZXhlc1tpbmRleF1dID0gb3BlcmF0aW9uUmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBjcmVhdGUgbmV3IGJhdGNoZXMgYmFzZWQgb2YgcGFydGl0aW9uIGtleSBSYW5nZXMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3ZlcmxhcHBpbmdSYW5nZXMgLSBPdmVybGFwcGluZyBwYXJ0aXRpb24ga2V5IHJhbmdlcy5cbiAgICAgKiBAcGFyYW0gYmF0Y2ggLSBCYXRjaCB0byBiZSBzcGxpdC5cbiAgICAgKiBAcGFyYW0gcGFydGl0aW9uS2V5RGVmaW5pdGlvbiAtIFBhcnRpdGlvbktleSBkZWZpbml0aW9uIG9mIGNvbnRhaW5lci5cbiAgICAgKiBAcmV0dXJucyBBcnJheSBvZiBuZXcgYmF0Y2hlcy5cbiAgICAgKi9cbiAgICBjcmVhdGVOZXdCYXRjaGVzKG92ZXJsYXBwaW5nUmFuZ2VzLCBiYXRjaCwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbikge1xuICAgICAgICBjb25zdCBuZXdCYXRjaGVzID0gb3ZlcmxhcHBpbmdSYW5nZXMubWFwKChrZXlSYW5nZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtaW46IGtleVJhbmdlLm1pbkluY2x1c2l2ZSxcbiAgICAgICAgICAgICAgICBtYXg6IGtleVJhbmdlLm1heEV4Y2x1c2l2ZSxcbiAgICAgICAgICAgICAgICByYW5nZUlkOiBrZXlSYW5nZS5pZCxcbiAgICAgICAgICAgICAgICBpbmRleGVzOiBbXSxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb25zOiBbXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgaW5kZXhWYWx1ZSA9IDA7XG4gICAgICAgIGJhdGNoLm9wZXJhdGlvbnMuZm9yRWFjaCgob3BlcmF0aW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXkgPSBKU09OLnBhcnNlKG9wZXJhdGlvbi5wYXJ0aXRpb25LZXkpO1xuICAgICAgICAgICAgY29uc3QgaGFzaGVkID0gaGFzaFBhcnRpdGlvbktleShhc3NlcnROb3RVbmRlZmluZWQocGFydGl0aW9uS2V5LCBcInVuZGVmaW5lZCB2YWx1ZSBmb3IgUGFydGl0aW9uS2V5IGlzIG5vdCBleHBlY3RlZCBkdXJpbmcgZ3JvdXBpbmcgb2YgYnVsayBvcGVyYXRpb25zLlwiKSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbik7XG4gICAgICAgICAgICBjb25zdCBiYXRjaEZvcktleSA9IGFzc2VydE5vdFVuZGVmaW5lZChuZXdCYXRjaGVzLmZpbmQoKG5ld0JhdGNoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzS2V5SW5SYW5nZShuZXdCYXRjaC5taW4sIG5ld0JhdGNoLm1heCwgaGFzaGVkKTtcbiAgICAgICAgICAgIH0pLCBcIk5vIHN1aXRhYmxlIEJhdGNoIGZvdW5kLlwiKTtcbiAgICAgICAgICAgIGJhdGNoRm9yS2V5Lm9wZXJhdGlvbnMucHVzaChvcGVyYXRpb24pO1xuICAgICAgICAgICAgYmF0Y2hGb3JLZXkuaW5kZXhlcy5wdXNoKGJhdGNoLmluZGV4ZXNbaW5kZXhWYWx1ZV0pO1xuICAgICAgICAgICAgaW5kZXhWYWx1ZSsrO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5ld0JhdGNoZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIGNyZWF0ZSBiYXRjaGVzIGJhc2VkIG9mIHBhcnRpdGlvbiBrZXkgUmFuZ2VzLlxuICAgICAqIEBwYXJhbSBvcGVyYXRpb25zIC0gb3BlcmF0aW9ucyB0byBncm91cFxuICAgICAqIEBwYXJhbSBwYXJ0aXRpb25EZWZpbml0aW9uIC0gUGFydGl0aW9uS2V5IGRlZmluaXRpb24gb2YgY29udGFpbmVyLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gUmVxdWVzdCBvcHRpb25zIGZvciBidWxrIHJlcXVlc3QuXG4gICAgICogQHBhcmFtIGJhdGNoZXMgLSBHcm91cHMgdG8gYmUgZmlsbGVkIHdpdGggb3BlcmF0aW9ucy5cbiAgICAgKi9cbiAgICBncm91cE9wZXJhdGlvbnNCYXNlZE9uUGFydGl0aW9uS2V5KG9wZXJhdGlvbnMsIHBhcnRpdGlvbkRlZmluaXRpb24sIG9wdGlvbnMsIGJhdGNoZXMpIHtcbiAgICAgICAgb3BlcmF0aW9ucy5mb3JFYWNoKChvcGVyYXRpb25JbnB1dCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgb3BlcmF0aW9uLCBwYXJ0aXRpb25LZXkgfSA9IHByZXBhcmVPcGVyYXRpb25zKG9wZXJhdGlvbklucHV0LCBwYXJ0aXRpb25EZWZpbml0aW9uLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IGhhc2hlZCA9IGhhc2hQYXJ0aXRpb25LZXkoYXNzZXJ0Tm90VW5kZWZpbmVkKHBhcnRpdGlvbktleSwgXCJ1bmRlZmluZWQgdmFsdWUgZm9yIFBhcnRpdGlvbktleSBpcyBub3QgZXhwZWN0ZWQgZHVyaW5nIGdyb3VwaW5nIG9mIGJ1bGsgb3BlcmF0aW9ucy5cIiksIHBhcnRpdGlvbkRlZmluaXRpb24pO1xuICAgICAgICAgICAgY29uc3QgYmF0Y2hGb3JLZXkgPSBhc3NlcnROb3RVbmRlZmluZWQoYmF0Y2hlcy5maW5kKChiYXRjaCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc0tleUluUmFuZ2UoYmF0Y2gubWluLCBiYXRjaC5tYXgsIGhhc2hlZCk7XG4gICAgICAgICAgICB9KSwgXCJObyBzdWl0YWJsZSBCYXRjaCBmb3VuZC5cIik7XG4gICAgICAgICAgICBiYXRjaEZvcktleS5vcGVyYXRpb25zLnB1c2gob3BlcmF0aW9uKTtcbiAgICAgICAgICAgIGJhdGNoRm9yS2V5LmluZGV4ZXMucHVzaChpbmRleCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIHRyYW5zYWN0aW9uYWwgYmF0Y2ggb3BlcmF0aW9ucyBvbiBpdGVtcy5cbiAgICAgKlxuICAgICAqIEJhdGNoIHRha2VzIGFuIGFycmF5IG9mIE9wZXJhdGlvbnMgd2hpY2ggYXJlIHR5cGVkIGJhc2VkIG9uIHdoYXQgdGhlIG9wZXJhdGlvbiBkb2VzLiBCYXRjaCBpcyB0cmFuc2FjdGlvbmFsIGFuZCB3aWxsIHJvbGxiYWNrIGFsbCBvcGVyYXRpb25zIGlmIG9uZSBmYWlscy5cbiAgICAgKiBUaGUgY2hvaWNlcyBhcmU6IENyZWF0ZSwgVXBzZXJ0LCBSZWFkLCBSZXBsYWNlLCBhbmQgRGVsZXRlXG4gICAgICpcbiAgICAgKiBVc2FnZSBleGFtcGxlOlxuICAgICAqIGBgYHRzIHNuaXBwZXQ6SXRlbXNCYXRjaFxuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCwgT3BlcmF0aW9uSW5wdXQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiAvLyBUaGUgcGFydGl0aW9uS2V5IGlzIGEgcmVxdWlyZWQgc2Vjb25kIGFyZ3VtZW50LiBJZiBpdOKAmXMgdW5kZWZpbmVkLCBpdCBkZWZhdWx0cyB0byB0aGUgZXhwZWN0ZWQgcGFydGl0aW9uIGtleSBmb3JtYXQuXG4gICAgICogY29uc3Qgb3BlcmF0aW9uczogT3BlcmF0aW9uSW5wdXRbXSA9IFtcbiAgICAgKiAgIHtcbiAgICAgKiAgICAgb3BlcmF0aW9uVHlwZTogXCJDcmVhdGVcIixcbiAgICAgKiAgICAgcmVzb3VyY2VCb2R5OiB7IGlkOiBcImRvYzFcIiwgbmFtZTogXCJzYW1wbGVcIiwga2V5OiBcIkFcIiB9LFxuICAgICAqICAgfSxcbiAgICAgKiAgIHtcbiAgICAgKiAgICAgb3BlcmF0aW9uVHlwZTogXCJVcHNlcnRcIixcbiAgICAgKiAgICAgcmVzb3VyY2VCb2R5OiB7IGlkOiBcImRvYzJcIiwgbmFtZTogXCJvdGhlclwiLCBrZXk6IFwiQVwiIH0sXG4gICAgICogICB9LFxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiBhd2FpdCBjb250YWluZXIuaXRlbXMuYmF0Y2gob3BlcmF0aW9ucywgXCJBXCIpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIG9wZXJhdGlvbnMgLSBMaXN0IG9mIG9wZXJhdGlvbnMuIExpbWl0IDEwMFxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVXNlZCBmb3IgbW9kaWZ5aW5nIHRoZSByZXF1ZXN0XG4gICAgICovXG4gICAgYXN5bmMgYmF0Y2gob3BlcmF0aW9ucywgcGFydGl0aW9uS2V5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBvcGVyYXRpb25zLm1hcCgob3BlcmF0aW9uKSA9PiBkZWNvcmF0ZUJhdGNoT3BlcmF0aW9uKG9wZXJhdGlvbiwgb3B0aW9ucykpO1xuICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gYXdhaXQgc2V0UGFydGl0aW9uS2V5SWZVbmRlZmluZWQoZGlhZ25vc3RpY05vZGUsIHRoaXMuY29udGFpbmVyLCBwYXJ0aXRpb25LZXkpO1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFJlc291cmNlVHlwZS5pdGVtKTtcbiAgICAgICAgICAgIGlmIChvcGVyYXRpb25zLmxlbmd0aCA+IDEwMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBydW4gYmF0Y2ggcmVxdWVzdCB3aXRoIG1vcmUgdGhhbiAxMDAgb3BlcmF0aW9ucyBwZXIgcGFydGl0aW9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJucyBjb3B5IHRvIGF2b2lkIGVuY3J5cHRpb24gb2Ygb3JpZ2luYWwgb3BlcmF0aW9ucyBib2R5IHBhc3NlZFxuICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb25zID0gY29weU9iamVjdChvcGVyYXRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29udGFpbmVyLmNoZWNrQW5kSW5pdGlhbGl6ZUVuY3J5cHRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250YWluZXJSaWQgPSB0aGlzLmNvbnRhaW5lci5fcmlkO1xuICAgICAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5iZWdpbkVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0VuY3J5cHRPcGVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICBpZiAocGFydGl0aW9uS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlJbnRlcm5hbCA9IGNvbnZlcnRUb0ludGVybmFsUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHBhcnRpdGlvbktleUxpc3QsIGVuY3J5cHRlZENvdW50IH0gPSBhd2FpdCB0aGlzLmNvbnRhaW5lci5lbmNyeXB0aW9uUHJvY2Vzc29yLmdldEVuY3J5cHRlZFBhcnRpdGlvbktleVZhbHVlKHBhcnRpdGlvbktleUludGVybmFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleSA9IHBhcnRpdGlvbktleUxpc3Q7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudCArPSBlbmNyeXB0ZWRDb3VudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IG9wZXJhdGlvbnM6IGVuY3J5cHRlZE9wZXJhdGlvbnMsIHRvdGFsUHJvcGVydGllc0VuY3J5cHRlZENvdW50IH0gPSBhd2FpdCB0aGlzLmJ1bGtCYXRjaEVuY3J5cHRpb25IZWxwZXIob3BlcmF0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbnMgPSBlbmNyeXB0ZWRPcGVyYXRpb25zO1xuICAgICAgICAgICAgICAgICAgICBjb3VudCArPSB0b3RhbFByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudDtcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRW5jcnlwdE9wZXJhdGlvbiwgY291bnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkID0gdGhpcy5jbGllbnRDb250ZXh0LmlzUGFydGl0aW9uTGV2ZWxGYWlsT3ZlckVuYWJsZWQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlSYW5nZUlkID0gYXdhaXQgY29tcHV0ZVBhcnRpdGlvbktleVJhbmdlSWQoZGlhZ25vc3RpY05vZGUsIHBhcnRpdGlvbktleSwgdGhpcy5wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLCBpc1BhcnRpdGlvbkxldmVsRmFpbE92ZXJFbmFibGVkLCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQuYmF0Y2goe1xuICAgICAgICAgICAgICAgICAgICBib2R5OiBvcGVyYXRpb25zLFxuICAgICAgICAgICAgICAgICAgICBwYXJ0aXRpb25LZXksXG4gICAgICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IHRoaXMuY29udGFpbmVyLnVybCxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICAgICAgICAgIHBhcnRpdGlvbktleVJhbmdlSWQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2xpZW50Q29udGV4dC5lbmFibGVFbmNyeXB0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29udGFpbmVyLnRocm93SWZSZXF1ZXN0TmVlZHNBUmV0cnlQb3N0UG9saWN5UmVmcmVzaChlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEJhdGNoIHJlcXVlc3QgZXJyb3I6ICR7ZXJyLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb250ZXh0LmVuYWJsZUVuY3J5cHRpb24pIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5iZWdpbkVuY3J5cHRpb25EaWFnbm9zdGljcyhDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0RlY3J5cHRPcGVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiByZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQucmVzb3VyY2VCb2R5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBib2R5LCBwcm9wZXJ0aWVzRGVjcnlwdGVkQ291bnQgfSA9IGF3YWl0IHRoaXMuY29udGFpbmVyLmVuY3J5cHRpb25Qcm9jZXNzb3IuZGVjcnlwdChyZXN1bHQucmVzb3VyY2VCb2R5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucmVzb3VyY2VCb2R5ID0gYm9keTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCArPSBwcm9wZXJ0aWVzRGVjcnlwdGVkQ291bnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRGVjcnlwdE9wZXJhdGlvbiwgY291bnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVjcnlwdGlvbkVycm9yID0gbmV3IEVycm9yUmVzcG9uc2UoYEJhdGNoIHJlc3BvbnNlIHdhcyByZWNlaXZlZCBidXQgcmVzcG9uc2UgZGVjcnlwdGlvbiBmYWlsZWQ6ICsgJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgICAgICBkZWNyeXB0aW9uRXJyb3IuY29kZSA9IFN0YXR1c0NvZGVzLlNlcnZpY2VVbmF2YWlsYWJsZTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZGVjcnlwdGlvbkVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgYXN5bmMgYnVsa0JhdGNoRW5jcnlwdGlvbkhlbHBlcihvcGVyYXRpb25zKSB7XG4gICAgICAgIGxldCB0b3RhbFByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudCA9IDA7XG4gICAgICAgIGNvbnN0IGVuY3J5cHRlZE9wZXJhdGlvbnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBvcGVyYXRpb24gb2Ygb3BlcmF0aW9ucykge1xuICAgICAgICAgICAgY29uc3QgeyBvcGVyYXRpb246IGVuY3J5cHRlZE9wLCB0b3RhbFByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudDogdXBkYXRlZENvdW50IH0gPSBhd2FpdCBlbmNyeXB0T3BlcmF0aW9uSW5wdXQodGhpcy5jb250YWluZXIuZW5jcnlwdGlvblByb2Nlc3Nvciwgb3BlcmF0aW9uLCB0b3RhbFByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudCk7XG4gICAgICAgICAgICB0b3RhbFByb3BlcnRpZXNFbmNyeXB0ZWRDb3VudCA9IHVwZGF0ZWRDb3VudDtcbiAgICAgICAgICAgIGVuY3J5cHRlZE9wZXJhdGlvbnMucHVzaChlbmNyeXB0ZWRPcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgb3BlcmF0aW9uczogZW5jcnlwdGVkT3BlcmF0aW9ucywgdG90YWxQcm9wZXJ0aWVzRW5jcnlwdGVkQ291bnQgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JdGVtcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Items.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Item/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Item: () => (/* reexport safe */ _Item_js__WEBPACK_IMPORTED_MODULE_0__.Item),\n/* harmony export */   ItemResponse: () => (/* reexport safe */ _ItemResponse_js__WEBPACK_IMPORTED_MODULE_2__.ItemResponse),\n/* harmony export */   Items: () => (/* reexport safe */ _Items_js__WEBPACK_IMPORTED_MODULE_1__.Items)\n/* harmony export */ });\n/* harmony import */ var _Item_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Item.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Item.js\");\n/* harmony import */ var _Items_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Items.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/Items.js\");\n/* harmony import */ var _ItemResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ItemResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/ItemResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvSXRlbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2lDO0FBQ0U7QUFDYztBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L0l0ZW0vaW5kZXguanM/NjVlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IEl0ZW0gfSBmcm9tIFwiLi9JdGVtLmpzXCI7XG5leHBvcnQgeyBJdGVtcyB9IGZyb20gXCIuL0l0ZW1zLmpzXCI7XG5leHBvcnQgeyBJdGVtUmVzcG9uc2UgfSBmcm9tIFwiLi9JdGVtUmVzcG9uc2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/Offer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Offer/Offer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Offer: () => (/* binding */ Offer)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _OfferResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OfferResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/OfferResponse.js\");\n\n\n\n/**\n * Use to read or replace an existing {@link Offer} by id.\n *\n * @see {@link Offers} to query or read all offers.\n */\nclass Offer {\n    client;\n    id;\n    clientContext;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return `/${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.OffersPathSegment}/${this.id}`;\n    }\n    /**\n     * @hidden\n     * @param client - The parent {@link CosmosClient} for the Database Account.\n     * @param id - The id of the given {@link Offer}.\n     */\n    constructor(client, id, clientContext) {\n        this.client = client;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Read the {@link OfferDefinition} for the given {@link Offer}.\n     * @example\n     * ```ts snippet:OfferRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resource: offer } = await client.offer(\"<offer-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_1__.withDiagnostics)(async (diagnosticNode) => {\n            const response = await this.clientContext.read({\n                path: this.url,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.offer,\n                resourceId: this.id,\n                options,\n                diagnosticNode,\n            });\n            return new _OfferResponse_js__WEBPACK_IMPORTED_MODULE_2__.OfferResponse(response.result, response.headers, response.code, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_1__.getEmptyCosmosDiagnostics)(), this);\n        }, this.clientContext);\n    }\n    /**\n     * Replace the given {@link Offer} with the specified {@link OfferDefinition}.\n     * @param body - The specified {@link OfferDefinition}\n     * @example replace offer with a new offer definition with updated throughput\n     * ```ts snippet:OfferReplace\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { resource: offer } = await client.offer(\"<offer-id>\").read();\n     * // @ts-preservewhitespace\n     * offer.content.offerThroughput = 1000;\n     * await client.offer(\"<offer-id>\").replace(offer);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_1__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const response = await this.clientContext.replace({\n                body,\n                path: this.url,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.offer,\n                resourceId: this.id,\n                options,\n                diagnosticNode,\n            });\n            return new _OfferResponse_js__WEBPACK_IMPORTED_MODULE_2__.OfferResponse(response.result, response.headers, response.code, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_1__.getEmptyCosmosDiagnostics)(), this);\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Offer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvT2ZmZXIvT2ZmZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRjtBQUNPO0FBQ3JDO0FBQ25EO0FBQ0EsdUNBQXVDLGFBQWE7QUFDcEQ7QUFDQSxTQUFTLGNBQWM7QUFDdkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFTLHdCQUF3QixHQUFHLFFBQVE7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG9CQUFvQjtBQUN2RCx3Q0FBd0MsWUFBWTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1QkFBdUIsZUFBZSxZQUFZO0FBQ25FO0FBQ0E7QUFDQSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RDtBQUNBLGVBQWUsa0JBQWtCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0VBQWU7QUFDOUI7QUFDQTtBQUNBLDhCQUE4QiwwREFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsdUJBQXVCLDREQUFhLG1EQUFtRCxnRkFBeUI7QUFDaEgsU0FBUztBQUNUO0FBQ0E7QUFDQSwwQkFBMEIsYUFBYSxvQkFBb0Isc0JBQXNCO0FBQ2pGLG9DQUFvQztBQUNwQztBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGVBQWU7QUFDeEQsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBLGlCQUFpQixpRUFBZTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix1QkFBdUIsNERBQWEsbURBQW1ELGdGQUF5QjtBQUNoSCxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvT2ZmZXIvT2ZmZXIuanM/NGI0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMsIGlzUmVzb3VyY2VWYWxpZCwgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcywgd2l0aERpYWdub3N0aWNzIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2RpYWdub3N0aWNzLmpzXCI7XG5pbXBvcnQgeyBPZmZlclJlc3BvbnNlIH0gZnJvbSBcIi4vT2ZmZXJSZXNwb25zZS5qc1wiO1xuLyoqXG4gKiBVc2UgdG8gcmVhZCBvciByZXBsYWNlIGFuIGV4aXN0aW5nIHtAbGluayBPZmZlcn0gYnkgaWQuXG4gKlxuICogQHNlZSB7QGxpbmsgT2ZmZXJzfSB0byBxdWVyeSBvciByZWFkIGFsbCBvZmZlcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBPZmZlciB7XG4gICAgY2xpZW50O1xuICAgIGlkO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlZmVyZW5jZSBVUkwgdG8gdGhlIHJlc291cmNlLiBVc2VkIGZvciBsaW5raW5nIGluIFBlcm1pc3Npb25zLlxuICAgICAqL1xuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIHJldHVybiBgLyR7Q29uc3RhbnRzLlBhdGguT2ZmZXJzUGF0aFNlZ21lbnR9LyR7dGhpcy5pZH1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIGNsaWVudCAtIFRoZSBwYXJlbnQge0BsaW5rIENvc21vc0NsaWVudH0gZm9yIHRoZSBEYXRhYmFzZSBBY2NvdW50LlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBpZCBvZiB0aGUgZ2l2ZW4ge0BsaW5rIE9mZmVyfS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIGlkLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgdGhlIHtAbGluayBPZmZlckRlZmluaXRpb259IGZvciB0aGUgZ2l2ZW4ge0BsaW5rIE9mZmVyfS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzIHNuaXBwZXQ6T2ZmZXJSZWFkXG4gICAgICogaW1wb3J0IHsgQ29zbW9zQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IHJlc291cmNlOiBvZmZlciB9ID0gYXdhaXQgY2xpZW50Lm9mZmVyKFwiPG9mZmVyLWlkPlwiKS5yZWFkKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgcmVhZChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50Q29udGV4dC5yZWFkKHtcbiAgICAgICAgICAgICAgICBwYXRoOiB0aGlzLnVybCxcbiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IFJlc291cmNlVHlwZS5vZmZlcixcbiAgICAgICAgICAgICAgICByZXNvdXJjZUlkOiB0aGlzLmlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgT2ZmZXJSZXNwb25zZShyZXNwb25zZS5yZXN1bHQsIHJlc3BvbnNlLmhlYWRlcnMsIHJlc3BvbnNlLmNvZGUsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSwgdGhpcyk7XG4gICAgICAgIH0sIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlcGxhY2UgdGhlIGdpdmVuIHtAbGluayBPZmZlcn0gd2l0aCB0aGUgc3BlY2lmaWVkIHtAbGluayBPZmZlckRlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBib2R5IC0gVGhlIHNwZWNpZmllZCB7QGxpbmsgT2ZmZXJEZWZpbml0aW9ufVxuICAgICAqIEBleGFtcGxlIHJlcGxhY2Ugb2ZmZXIgd2l0aCBhIG5ldyBvZmZlciBkZWZpbml0aW9uIHdpdGggdXBkYXRlZCB0aHJvdWdocHV0XG4gICAgICogYGBgdHMgc25pcHBldDpPZmZlclJlcGxhY2VcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKiBjb25zdCB7IHJlc291cmNlOiBvZmZlciB9ID0gYXdhaXQgY2xpZW50Lm9mZmVyKFwiPG9mZmVyLWlkPlwiKS5yZWFkKCk7XG4gICAgICogLy8gQHRzLXByZXNlcnZld2hpdGVzcGFjZVxuICAgICAqIG9mZmVyLmNvbnRlbnQub2ZmZXJUaHJvdWdocHV0ID0gMTAwMDtcbiAgICAgKiBhd2FpdCBjbGllbnQub2ZmZXIoXCI8b2ZmZXItaWQ+XCIpLnJlcGxhY2Uob2ZmZXIpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGFzeW5jIHJlcGxhY2UoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQucmVwbGFjZSh7XG4gICAgICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgICAgICBwYXRoOiB0aGlzLnVybCxcbiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IFJlc291cmNlVHlwZS5vZmZlcixcbiAgICAgICAgICAgICAgICByZXNvdXJjZUlkOiB0aGlzLmlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgT2ZmZXJSZXNwb25zZShyZXNwb25zZS5yZXN1bHQsIHJlc3BvbnNlLmhlYWRlcnMsIHJlc3BvbnNlLmNvZGUsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSwgdGhpcyk7XG4gICAgICAgIH0sIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2ZmZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/Offer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/OfferResponse.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Offer/OfferResponse.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OfferResponse: () => (/* binding */ OfferResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass OfferResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, diagnostics, offer) {\n        super(resource, headers, statusCode, diagnostics);\n        this.offer = offer;\n    }\n    /** A reference to the {@link Offer} corresponding to the returned {@link OfferDefinition}. */\n    offer;\n}\n//# sourceMappingURL=OfferResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvT2ZmZXIvT2ZmZXJSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRDtBQUNuRCw0QkFBNEIsK0RBQWdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGFBQWEsK0JBQStCLHNCQUFzQjtBQUM5RjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9PZmZlci9PZmZlclJlc3BvbnNlLmpzPzBmZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzb3VyY2VSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG5leHBvcnQgY2xhc3MgT2ZmZXJSZXNwb25zZSBleHRlbmRzIFJlc291cmNlUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBkaWFnbm9zdGljcywgb2ZmZXIpIHtcbiAgICAgICAgc3VwZXIocmVzb3VyY2UsIGhlYWRlcnMsIHN0YXR1c0NvZGUsIGRpYWdub3N0aWNzKTtcbiAgICAgICAgdGhpcy5vZmZlciA9IG9mZmVyO1xuICAgIH1cbiAgICAvKiogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBPZmZlcn0gY29ycmVzcG9uZGluZyB0byB0aGUgcmV0dXJuZWQge0BsaW5rIE9mZmVyRGVmaW5pdGlvbn0uICovXG4gICAgb2ZmZXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PZmZlclJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/OfferResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/Offers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Offer/Offers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Offers: () => (/* binding */ Offers)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n\n\n/**\n * Use to query or read all Offers.\n *\n * @see {@link Offer} to read or replace an existing {@link Offer} by id.\n */\nclass Offers {\n    client;\n    clientContext;\n    /**\n     * @hidden\n     * @param client - The parent {@link CosmosClient} for the offers.\n     */\n    constructor(client, clientContext) {\n        this.client = client;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagnosticNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path: \"/offers\",\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.offer,\n                resourceId: \"\",\n                resultFn: (result) => result.Offers,\n                query,\n                options: innerOptions,\n                diagnosticNode,\n            });\n        });\n    }\n    /**\n     * Read all offers.\n     * @example Read all offers to array.\n     * ```ts snippet:OffersReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { resources: offerList } = await client.offers.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Offers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvT2ZmZXIvT2ZmZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNFO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLFNBQVMsYUFBYSxnQ0FBZ0MsYUFBYTtBQUNuRTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0JBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw0REFBYTtBQUNoQztBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RDtBQUNBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvT2ZmZXIvT2ZmZXJzLmpzP2JlYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuLi8uLi9xdWVyeUl0ZXJhdG9yLmpzXCI7XG4vKipcbiAqIFVzZSB0byBxdWVyeSBvciByZWFkIGFsbCBPZmZlcnMuXG4gKlxuICogQHNlZSB7QGxpbmsgT2ZmZXJ9IHRvIHJlYWQgb3IgcmVwbGFjZSBhbiBleGlzdGluZyB7QGxpbmsgT2ZmZXJ9IGJ5IGlkLlxuICovXG5leHBvcnQgY2xhc3MgT2ZmZXJzIHtcbiAgICBjbGllbnQ7XG4gICAgY2xpZW50Q29udGV4dDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIGNsaWVudCAtIFRoZSBwYXJlbnQge0BsaW5rIENvc21vc0NsaWVudH0gZm9yIHRoZSBvZmZlcnMuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2xpZW50LCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgIH1cbiAgICBxdWVyeShxdWVyeSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgKGRpYWdub3N0aWNOb2RlLCBpbm5lck9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHtcbiAgICAgICAgICAgICAgICBwYXRoOiBcIi9vZmZlcnNcIixcbiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IFJlc291cmNlVHlwZS5vZmZlcixcbiAgICAgICAgICAgICAgICByZXNvdXJjZUlkOiBcIlwiLFxuICAgICAgICAgICAgICAgIHJlc3VsdEZuOiAocmVzdWx0KSA9PiByZXN1bHQuT2ZmZXJzLFxuICAgICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IGlubmVyT3B0aW9ucyxcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhbGwgb2ZmZXJzLlxuICAgICAqIEBleGFtcGxlIFJlYWQgYWxsIG9mZmVycyB0byBhcnJheS5cbiAgICAgKiBgYGB0cyBzbmlwcGV0Ok9mZmVyc1JlYWRBbGxcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgcmVzb3VyY2VzOiBvZmZlckxpc3QgfSA9IGF3YWl0IGNsaWVudC5vZmZlcnMucmVhZEFsbCgpLmZldGNoQWxsKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZEFsbChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2ZmZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/Offers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Offer: () => (/* reexport safe */ _Offer_js__WEBPACK_IMPORTED_MODULE_0__.Offer),\n/* harmony export */   OfferResponse: () => (/* reexport safe */ _OfferResponse_js__WEBPACK_IMPORTED_MODULE_2__.OfferResponse),\n/* harmony export */   Offers: () => (/* reexport safe */ _Offers_js__WEBPACK_IMPORTED_MODULE_1__.Offers)\n/* harmony export */ });\n/* harmony import */ var _Offer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Offer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/Offer.js\");\n/* harmony import */ var _Offers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Offers.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/Offers.js\");\n/* harmony import */ var _OfferResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OfferResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/OfferResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvT2ZmZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNtQztBQUNFO0FBQ2M7QUFDbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9PZmZlci9pbmRleC5qcz9mZTExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgT2ZmZXIgfSBmcm9tIFwiLi9PZmZlci5qc1wiO1xuZXhwb3J0IHsgT2ZmZXJzIH0gZnJvbSBcIi4vT2ZmZXJzLmpzXCI7XG5leHBvcnQgeyBPZmZlclJlc3BvbnNlIH0gZnJvbSBcIi4vT2ZmZXJSZXNwb25zZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permission.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Permission/Permission.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permission: () => (/* binding */ Permission)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PermissionResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/PermissionResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n/**\n * Use to read, replace, or delete a given {@link Permission} by id.\n *\n * @see {@link Permissions} to create, upsert, query, or read all Permissions.\n */\nclass Permission {\n    user;\n    id;\n    clientContext;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createPermissionUri)(this.user.database.id, this.user.id, this.id);\n    }\n    /**\n     * @hidden\n     * @param user - The parent {@link User}.\n     * @param id - The id of the given {@link Permission}.\n     */\n    constructor(user, id, clientContext) {\n        this.user = user;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Read the {@link PermissionDefinition} of the given {@link Permission}.\n     * @example\n     * ```ts snippet:PermissionRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const user = database.user(\"<user-id>\");\n     *\n     * const { resource: permission } = await user.permission(\"<permission-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_1__.PermissionResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Replace the given {@link Permission} with the specified {@link PermissionDefinition}.\n     * @param body - The specified {@link PermissionDefinition}.\n     * @example\n     * ```ts snippet:PermissionReplace\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const user = database.user(\"<user-id>\");\n     * const { resource: permission } = await user.permission(\"<permission-id>\").read();\n     * permission.resource = \"<new-resource-url>\";\n     *\n     * await user.permission(\"<permission-id>\").replace(permission);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.replace({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_1__.PermissionResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the given {@link Permission}.\n     * @example\n     * ```ts snippet:PermissionDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const user = database.user(\"<user-id>\");\n     *\n     * await user.permission(\"<permission-id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_1__.PermissionResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Permission.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permission.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/PermissionResponse.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Permission/PermissionResponse.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PermissionResponse: () => (/* binding */ PermissionResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass PermissionResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, permission, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.permission = permission;\n    }\n    /** A reference to the {@link Permission} corresponding to the returned {@link PermissionDefinition}. */\n    permission;\n}\n//# sourceMappingURL=PermissionResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvUGVybWlzc2lvbi9QZXJtaXNzaW9uUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDbkQsaUNBQWlDLCtEQUFnQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrQkFBa0IsK0JBQStCLDJCQUEyQjtBQUN4RztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9QZXJtaXNzaW9uL1Blcm1pc3Npb25SZXNwb25zZS5qcz9kYzU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc291cmNlUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9pbmRleC5qc1wiO1xuZXhwb3J0IGNsYXNzIFBlcm1pc3Npb25SZXNwb25zZSBleHRlbmRzIFJlc291cmNlUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBwZXJtaXNzaW9uLCBkaWFnbm9zdGljcykge1xuICAgICAgICBzdXBlcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgZGlhZ25vc3RpY3MpO1xuICAgICAgICB0aGlzLnBlcm1pc3Npb24gPSBwZXJtaXNzaW9uO1xuICAgIH1cbiAgICAvKiogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBQZXJtaXNzaW9ufSBjb3JyZXNwb25kaW5nIHRvIHRoZSByZXR1cm5lZCB7QGxpbmsgUGVybWlzc2lvbkRlZmluaXRpb259LiAqL1xuICAgIHBlcm1pc3Npb247XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QZXJtaXNzaW9uUmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/PermissionResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permissions.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Permission/Permissions.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permissions: () => (/* binding */ Permissions)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _Permission_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Permission.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permission.js\");\n/* harmony import */ var _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PermissionResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/PermissionResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n/**\n * Use to create, replace, query, and read all Permissions.\n *\n * @see {@link Permission} to read, replace, or delete a specific permission by id.\n */\nclass Permissions {\n    user;\n    clientContext;\n    /**\n     * @hidden\n     * @param user - The parent {@link User}.\n     */\n    constructor(user, clientContext) {\n        this.user = user;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.user.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.user.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagnosticNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission,\n                resourceId: id,\n                resultFn: (result) => result.Permissions,\n                query,\n                options: innerOptions,\n                diagnosticNode,\n            });\n        });\n    }\n    /**\n     * Read all permissions.\n     * @example Read all permissions to array.\n     * ```ts snippet:PermissionsReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { resources: permissionList } = await database.user(\"user1\").permissions.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a permission.\n     *\n     * A permission represents a per-User Permission to access a specific resource\n     * e.g. Item or Container.\n     * @param body - Represents the body of the permission.\n     * @example\n     * ```ts snippet:PermissionsCreate\n     * import { CosmosClient, PermissionDefinition, PermissionMode } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { user } = await database.users.create({ id: \"<user-id>\" });\n     *\n     * const permissionDefinition: PermissionDefinition = {\n     *   id: \"<permission-id>\",\n     *   permissionMode: PermissionMode.Read,\n     *   resource: \"<resource-url>\",\n     * };\n     * await user.permissions.create(permissionDefinition);\n     * ```\n     */\n    async create(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.user.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.user.url);\n            const response = await this.clientContext.create({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission,\n                resourceId: id,\n                diagnosticNode,\n                options,\n            });\n            const ref = new _Permission_js__WEBPACK_IMPORTED_MODULE_2__.Permission(this.user, response.result.id, this.clientContext);\n            return new _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_3__.PermissionResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Upsert a permission.\n     * A permission represents a per-User Permission to access a\n     * specific resource e.g. Item or Container.\n     * @example\n     * ```ts snippet:PermissionsUpsert\n     * import { CosmosClient, PermissionDefinition, PermissionMode } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const user = database.user(\"<user-id>\");\n     * const permissionDefinitionToUpsert: PermissionDefinition = {\n     *   id: \"<permission-id>\",\n     *   permissionMode: PermissionMode.Read,\n     *   resource: \"<resource-url>\",\n     * };\n     *\n     * await user.permissions.upsert(permissionDefinitionToUpsert);\n     * ```\n     */\n    async upsert(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.user.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.user.url);\n            const response = await this.clientContext.upsert({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.permission,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            const ref = new _Permission_js__WEBPACK_IMPORTED_MODULE_2__.Permission(this.user, response.result.id, this.clientContext);\n            return new _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_3__.PermissionResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Permissions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permissions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Permission/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permission: () => (/* reexport safe */ _Permission_js__WEBPACK_IMPORTED_MODULE_0__.Permission),\n/* harmony export */   PermissionResponse: () => (/* reexport safe */ _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_2__.PermissionResponse),\n/* harmony export */   Permissions: () => (/* reexport safe */ _Permissions_js__WEBPACK_IMPORTED_MODULE_1__.Permissions)\n/* harmony export */ });\n/* harmony import */ var _Permission_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Permission.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permission.js\");\n/* harmony import */ var _Permissions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Permissions.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/Permissions.js\");\n/* harmony import */ var _PermissionResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PermissionResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/PermissionResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvUGVybWlzc2lvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQ0U7QUFDYztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1Blcm1pc3Npb24vaW5kZXguanM/ZTdlYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IFBlcm1pc3Npb24gfSBmcm9tIFwiLi9QZXJtaXNzaW9uLmpzXCI7XG5leHBvcnQgeyBQZXJtaXNzaW9ucyB9IGZyb20gXCIuL1Blcm1pc3Npb25zLmpzXCI7XG5leHBvcnQgeyBQZXJtaXNzaW9uUmVzcG9uc2UgfSBmcm9tIFwiLi9QZXJtaXNzaW9uUmVzcG9uc2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Resource.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Resource.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=Resource.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvUmVzb3VyY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9SZXNvdXJjZS5qcz8wMmEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlc291cmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Resource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/SasToken/SasTokenProperties.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/SasToken/SasTokenProperties.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SasTokenProperties: () => (/* binding */ SasTokenProperties)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass SasTokenProperties {\n    user;\n    userTag;\n    databaseName;\n    containerName;\n    resourceName;\n    resourcePath;\n    resourceKind;\n    partitionKeyValueRanges;\n    startTime;\n    expiryTime;\n    keyType;\n    controlPlaneReaderScope;\n    controlPlaneWriterScope;\n    dataPlaneReaderScope;\n    dataPlaneWriterScope;\n    cosmosContainerChildResourceKind;\n    cosmosKeyType;\n}\n//# sourceMappingURL=SasTokenProperties.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU2FzVG9rZW4vU2FzVG9rZW5Qcm9wZXJ0aWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1Nhc1Rva2VuL1Nhc1Rva2VuUHJvcGVydGllcy5qcz9kMDZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IGNsYXNzIFNhc1Rva2VuUHJvcGVydGllcyB7XG4gICAgdXNlcjtcbiAgICB1c2VyVGFnO1xuICAgIGRhdGFiYXNlTmFtZTtcbiAgICBjb250YWluZXJOYW1lO1xuICAgIHJlc291cmNlTmFtZTtcbiAgICByZXNvdXJjZVBhdGg7XG4gICAgcmVzb3VyY2VLaW5kO1xuICAgIHBhcnRpdGlvbktleVZhbHVlUmFuZ2VzO1xuICAgIHN0YXJ0VGltZTtcbiAgICBleHBpcnlUaW1lO1xuICAgIGtleVR5cGU7XG4gICAgY29udHJvbFBsYW5lUmVhZGVyU2NvcGU7XG4gICAgY29udHJvbFBsYW5lV3JpdGVyU2NvcGU7XG4gICAgZGF0YVBsYW5lUmVhZGVyU2NvcGU7XG4gICAgZGF0YVBsYW5lV3JpdGVyU2NvcGU7XG4gICAgY29zbW9zQ29udGFpbmVyQ2hpbGRSZXNvdXJjZUtpbmQ7XG4gICAgY29zbW9zS2V5VHlwZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhc1Rva2VuUHJvcGVydGllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/SasToken/SasTokenProperties.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Script/Scripts.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Script/Scripts.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scripts: () => (/* binding */ Scripts)\n/* harmony export */ });\n/* harmony import */ var _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../StoredProcedure/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/index.js\");\n/* harmony import */ var _Trigger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Trigger/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/index.js\");\n/* harmony import */ var _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../UserDefinedFunction/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass Scripts {\n    container;\n    clientContext;\n    /**\n     * @param container - The parent {@link Container}.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link StoredProcedure} by id.\n     *\n     * Use `.storedProcedures` for creating new stored procedures, or querying/reading all stored procedures.\n     * @param id - The id of the {@link StoredProcedure}.\n     */\n    storedProcedure(id) {\n        return new _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_0__.StoredProcedure(this.container, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Trigger} by id.\n     *\n     * Use `.triggers` for creating new triggers, or querying/reading all triggers.\n     * @param id - The id of the {@link Trigger}.\n     */\n    trigger(id) {\n        return new _Trigger_index_js__WEBPACK_IMPORTED_MODULE_1__.Trigger(this.container, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link UserDefinedFunction} by id.\n     *\n     * Use `.userDefinedFunctions` for creating new user defined functions, or querying/reading all user defined functions.\n     * @param id - The id of the {@link UserDefinedFunction}.\n     */\n    userDefinedFunction(id) {\n        return new _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_2__.UserDefinedFunction(this.container, id, this.clientContext);\n    }\n    $sprocs;\n    /**\n     * Operations for creating new stored procedures, and reading/querying all stored procedures.\n     *\n     * For reading, replacing, or deleting an existing stored procedure, use `.storedProcedure(id)`.\n     */\n    get storedProcedures() {\n        if (!this.$sprocs) {\n            this.$sprocs = new _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_0__.StoredProcedures(this.container, this.clientContext);\n        }\n        return this.$sprocs;\n    }\n    $triggers;\n    /**\n     * Operations for creating new triggers, and reading/querying all triggers.\n     *\n     * For reading, replacing, or deleting an existing trigger, use `.trigger(id)`.\n     */\n    get triggers() {\n        if (!this.$triggers) {\n            this.$triggers = new _Trigger_index_js__WEBPACK_IMPORTED_MODULE_1__.Triggers(this.container, this.clientContext);\n        }\n        return this.$triggers;\n    }\n    $udfs;\n    /**\n     * Operations for creating new user defined functions, and reading/querying all user defined functions.\n     *\n     * For reading, replacing, or deleting an existing user defined function, use `.userDefinedFunction(id)`.\n     */\n    get userDefinedFunctions() {\n        if (!this.$udfs) {\n            this.$udfs = new _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_2__.UserDefinedFunctions(this.container, this.clientContext);\n        }\n        return this.$udfs;\n    }\n}\n//# sourceMappingURL=Scripts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU2NyaXB0L1NjcmlwdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDZ0Y7QUFDeEI7QUFDb0M7QUFDckY7QUFDUDtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsZ0JBQWdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHVCQUF1QjtBQUNyRjtBQUNBO0FBQ0Esa0NBQWtDLHNCQUFzQjtBQUN4RDtBQUNBO0FBQ0EsbUJBQW1CLHNFQUFlO0FBQ2xDO0FBQ0E7QUFDQSw4REFBOEQsZUFBZTtBQUM3RTtBQUNBO0FBQ0Esa0NBQWtDLGNBQWM7QUFDaEQ7QUFDQTtBQUNBLG1CQUFtQixzREFBTztBQUMxQjtBQUNBO0FBQ0EsOERBQThELDJCQUEyQjtBQUN6RjtBQUNBO0FBQ0Esa0NBQWtDLDBCQUEwQjtBQUM1RDtBQUNBO0FBQ0EsbUJBQW1CLDhFQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsdUVBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdURBQVE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwrRUFBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1NjcmlwdC9TY3JpcHRzLmpzPzEyMGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBTdG9yZWRQcm9jZWR1cmVzLCBTdG9yZWRQcm9jZWR1cmUgfSBmcm9tIFwiLi4vU3RvcmVkUHJvY2VkdXJlL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBUcmlnZ2VyLCBUcmlnZ2VycyB9IGZyb20gXCIuLi9UcmlnZ2VyL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBVc2VyRGVmaW5lZEZ1bmN0aW9uLCBVc2VyRGVmaW5lZEZ1bmN0aW9ucyB9IGZyb20gXCIuLi9Vc2VyRGVmaW5lZEZ1bmN0aW9uL2luZGV4LmpzXCI7XG5leHBvcnQgY2xhc3MgU2NyaXB0cyB7XG4gICAgY29udGFpbmVyO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGNvbnRhaW5lciAtIFRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lciwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlZCB0byByZWFkLCByZXBsYWNlLCBvciBkZWxldGUgYSBzcGVjaWZpYywgZXhpc3Rpbmcge0BsaW5rIFN0b3JlZFByb2NlZHVyZX0gYnkgaWQuXG4gICAgICpcbiAgICAgKiBVc2UgYC5zdG9yZWRQcm9jZWR1cmVzYCBmb3IgY3JlYXRpbmcgbmV3IHN0b3JlZCBwcm9jZWR1cmVzLCBvciBxdWVyeWluZy9yZWFkaW5nIGFsbCBzdG9yZWQgcHJvY2VkdXJlcy5cbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgaWQgb2YgdGhlIHtAbGluayBTdG9yZWRQcm9jZWR1cmV9LlxuICAgICAqL1xuICAgIHN0b3JlZFByb2NlZHVyZShpZCkge1xuICAgICAgICByZXR1cm4gbmV3IFN0b3JlZFByb2NlZHVyZSh0aGlzLmNvbnRhaW5lciwgaWQsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgc3BlY2lmaWMsIGV4aXN0aW5nIHtAbGluayBUcmlnZ2VyfSBieSBpZC5cbiAgICAgKlxuICAgICAqIFVzZSBgLnRyaWdnZXJzYCBmb3IgY3JlYXRpbmcgbmV3IHRyaWdnZXJzLCBvciBxdWVyeWluZy9yZWFkaW5nIGFsbCB0cmlnZ2Vycy5cbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgaWQgb2YgdGhlIHtAbGluayBUcmlnZ2VyfS5cbiAgICAgKi9cbiAgICB0cmlnZ2VyKGlkKSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJpZ2dlcih0aGlzLmNvbnRhaW5lciwgaWQsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgc3BlY2lmaWMsIGV4aXN0aW5nIHtAbGluayBVc2VyRGVmaW5lZEZ1bmN0aW9ufSBieSBpZC5cbiAgICAgKlxuICAgICAqIFVzZSBgLnVzZXJEZWZpbmVkRnVuY3Rpb25zYCBmb3IgY3JlYXRpbmcgbmV3IHVzZXIgZGVmaW5lZCBmdW5jdGlvbnMsIG9yIHF1ZXJ5aW5nL3JlYWRpbmcgYWxsIHVzZXIgZGVmaW5lZCBmdW5jdGlvbnMuXG4gICAgICogQHBhcmFtIGlkIC0gVGhlIGlkIG9mIHRoZSB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbn0uXG4gICAgICovXG4gICAgdXNlckRlZmluZWRGdW5jdGlvbihpZCkge1xuICAgICAgICByZXR1cm4gbmV3IFVzZXJEZWZpbmVkRnVuY3Rpb24odGhpcy5jb250YWluZXIsIGlkLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbiAgICAkc3Byb2NzO1xuICAgIC8qKlxuICAgICAqIE9wZXJhdGlvbnMgZm9yIGNyZWF0aW5nIG5ldyBzdG9yZWQgcHJvY2VkdXJlcywgYW5kIHJlYWRpbmcvcXVlcnlpbmcgYWxsIHN0b3JlZCBwcm9jZWR1cmVzLlxuICAgICAqXG4gICAgICogRm9yIHJlYWRpbmcsIHJlcGxhY2luZywgb3IgZGVsZXRpbmcgYW4gZXhpc3Rpbmcgc3RvcmVkIHByb2NlZHVyZSwgdXNlIGAuc3RvcmVkUHJvY2VkdXJlKGlkKWAuXG4gICAgICovXG4gICAgZ2V0IHN0b3JlZFByb2NlZHVyZXMoKSB7XG4gICAgICAgIGlmICghdGhpcy4kc3Byb2NzKSB7XG4gICAgICAgICAgICB0aGlzLiRzcHJvY3MgPSBuZXcgU3RvcmVkUHJvY2VkdXJlcyh0aGlzLmNvbnRhaW5lciwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy4kc3Byb2NzO1xuICAgIH1cbiAgICAkdHJpZ2dlcnM7XG4gICAgLyoqXG4gICAgICogT3BlcmF0aW9ucyBmb3IgY3JlYXRpbmcgbmV3IHRyaWdnZXJzLCBhbmQgcmVhZGluZy9xdWVyeWluZyBhbGwgdHJpZ2dlcnMuXG4gICAgICpcbiAgICAgKiBGb3IgcmVhZGluZywgcmVwbGFjaW5nLCBvciBkZWxldGluZyBhbiBleGlzdGluZyB0cmlnZ2VyLCB1c2UgYC50cmlnZ2VyKGlkKWAuXG4gICAgICovXG4gICAgZ2V0IHRyaWdnZXJzKCkge1xuICAgICAgICBpZiAoIXRoaXMuJHRyaWdnZXJzKSB7XG4gICAgICAgICAgICB0aGlzLiR0cmlnZ2VycyA9IG5ldyBUcmlnZ2Vycyh0aGlzLmNvbnRhaW5lciwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy4kdHJpZ2dlcnM7XG4gICAgfVxuICAgICR1ZGZzO1xuICAgIC8qKlxuICAgICAqIE9wZXJhdGlvbnMgZm9yIGNyZWF0aW5nIG5ldyB1c2VyIGRlZmluZWQgZnVuY3Rpb25zLCBhbmQgcmVhZGluZy9xdWVyeWluZyBhbGwgdXNlciBkZWZpbmVkIGZ1bmN0aW9ucy5cbiAgICAgKlxuICAgICAqIEZvciByZWFkaW5nLCByZXBsYWNpbmcsIG9yIGRlbGV0aW5nIGFuIGV4aXN0aW5nIHVzZXIgZGVmaW5lZCBmdW5jdGlvbiwgdXNlIGAudXNlckRlZmluZWRGdW5jdGlvbihpZClgLlxuICAgICAqL1xuICAgIGdldCB1c2VyRGVmaW5lZEZ1bmN0aW9ucygpIHtcbiAgICAgICAgaWYgKCF0aGlzLiR1ZGZzKSB7XG4gICAgICAgICAgICB0aGlzLiR1ZGZzID0gbmV3IFVzZXJEZWZpbmVkRnVuY3Rpb25zKHRoaXMuY29udGFpbmVyLCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLiR1ZGZzO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjcmlwdHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Script/Scripts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedure.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedure.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoredProcedure: () => (/* binding */ StoredProcedure)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../extractPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _ClientUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n/* harmony import */ var _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StoredProcedureResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedureResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n\n/**\n * Operations for reading, replacing, deleting, or executing a specific, existing stored procedure by id.\n *\n * For operations to create, read all, or query Stored Procedures,\n */\nclass StoredProcedure {\n    container;\n    id;\n    clientContext;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createStoredProcedureUri)(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Creates a new instance of {@link StoredProcedure} linked to the parent {@link Container}.\n     * @param container - The parent {@link Container}.\n     * @param id - The id of the given {@link StoredProcedure}.\n     * @hidden\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Read the {@link StoredProcedureDefinition} for the given {@link StoredProcedure}.\n     * @example\n     * ```ts snippet:StoredProcedureRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: sproc } = await container.scripts.storedProcedure(\"<sproc-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_4__.StoredProcedureResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Replace the given {@link StoredProcedure} with the specified {@link StoredProcedureDefinition}.\n     * @param body - The specified {@link StoredProcedureDefinition} to replace the existing definition.\n     * @example\n     * ```ts snippet:StoredProcedureReplace\n     * import { CosmosClient, StoredProcedureDefinition } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const sprocDefinition: StoredProcedureDefinition = {\n     *   id: \"sample sproc\",\n     *   body: \"function () { const x = 10; }\",\n     * };\n     *\n     * const { resource: sproc } = await container.scripts.storedProcedures.create(sprocDefinition);\n     *\n     * sproc.body = function () {\n     *   const x = 20;\n     *   console.log(x);\n     * };\n     * const { resource: replacedSproc } = await container.scripts\n     *   .storedProcedure(sproc.id)\n     *   .replace(sproc);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.replace({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_4__.StoredProcedureResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the given {@link StoredProcedure}.\n     * @example\n     * ```ts snippet:StoredProcedureDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * await container.scripts.storedProcedure(\"<sproc-id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_4__.StoredProcedureResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Execute the given {@link StoredProcedure}.\n     *\n     * The specified type, T, is not enforced by the client.\n     * Be sure to validate the response from the stored procedure matches the type, T, you provide.\n     *\n     * @param partitionKey - The partition key to use when executing the stored procedure\n     * @param params - Array of parameters to pass as arguments to the given {@link StoredProcedure}.\n     * @param options - Additional options, such as the partition key to invoke the {@link StoredProcedure} on.\n     * * @example\n     * ```ts snippet:StoredProcedureExecute\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: result } = await container.scripts\n     *   .storedProcedure(\"<sproc-id>\")\n     *   .execute(undefined);\n     * ```\n     */\n    async execute(partitionKey, params, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.withDiagnostics)(async (diagnosticNode) => {\n            if (partitionKey === undefined) {\n                const partitionKeyResponse = await (0,_ClientUtils_js__WEBPACK_IMPORTED_MODULE_3__.readPartitionKeyDefinition)(diagnosticNode, this.container);\n                partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_1__.undefinedPartitionKey)(partitionKeyResponse);\n            }\n            const response = await this.clientContext.execute({\n                sprocLink: this.url,\n                params,\n                options,\n                partitionKey,\n                diagnosticNode,\n            });\n            return new _request_index_js__WEBPACK_IMPORTED_MODULE_2__.ResourceResponse(response.result, response.headers, response.code, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=StoredProcedure.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL1N0b3JlZFByb2NlZHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlJO0FBQzVEO0FBQ1g7QUFDSztBQUNRO0FBQ2lCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwRUFBd0I7QUFDdkM7QUFDQTtBQUNBLGtDQUFrQyx1QkFBdUIsc0JBQXNCLGdCQUFnQjtBQUMvRixzQ0FBc0MsZ0JBQWdCO0FBQ3RELHdDQUF3QyxzQkFBc0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpQ0FBaUMsZUFBZSxzQkFBc0I7QUFDdkY7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hELGVBQWUsV0FBVyw2Q0FBNkMscUJBQXFCO0FBQzVGLGVBQWUsWUFBWSxnREFBZ0Qsc0JBQXNCO0FBQ2pHO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5Qix5QkFBeUIsaUVBQWU7QUFDeEMsdUJBQXVCLCtEQUFhO0FBQ3BDO0FBQ0E7QUFDQSw4QkFBOEIsMERBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QixnRkFBdUIseURBQXlELGdGQUF5QjtBQUNoSSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDBCQUEwQix1QkFBdUIsb0JBQW9CLGdDQUFnQztBQUNyRyxvQ0FBb0MsaUNBQWlDO0FBQ3JFO0FBQ0E7QUFDQSxnQkFBZ0IsMENBQTBDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hELGVBQWUsV0FBVyw2Q0FBNkMscUJBQXFCO0FBQzVGLGVBQWUsWUFBWSxnREFBZ0Qsc0JBQXNCO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixlQUFlO0FBQzdDO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0VBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUVBQWU7QUFDaEM7QUFDQTtBQUNBLHlCQUF5QixpRUFBZTtBQUN4Qyx1QkFBdUIsK0RBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix1QkFBdUIsZ0ZBQXVCLHlEQUF5RCxnRkFBeUI7QUFDaEksU0FBUztBQUNUO0FBQ0E7QUFDQSx5QkFBeUIsc0JBQXNCO0FBQy9DO0FBQ0E7QUFDQSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RCxlQUFlLFdBQVcsNkNBQTZDLHFCQUFxQjtBQUM1RixlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5Qix5QkFBeUIsaUVBQWU7QUFDeEMsdUJBQXVCLCtEQUFhO0FBQ3BDO0FBQ0E7QUFDQSw4QkFBOEIsMERBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QixnRkFBdUIseURBQXlELGdGQUF5QjtBQUNoSSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDBCQUEwQixzQkFBc0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSxzQkFBc0I7QUFDcEcscUZBQXFGLHVCQUF1QjtBQUM1RztBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGVBQWU7QUFDeEQsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUYsZUFBZSxZQUFZLGdEQUFnRCxzQkFBc0I7QUFDakc7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBLG1EQUFtRCwyRUFBMEI7QUFDN0UsK0JBQStCLDhFQUFxQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix1QkFBdUIsK0RBQWdCLG1EQUFtRCxnRkFBeUI7QUFDbkgsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1N0b3JlZFByb2NlZHVyZS9TdG9yZWRQcm9jZWR1cmUuanM/NjczYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTdG9yZWRQcm9jZWR1cmVVcmksIGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgaXNSZXNvdXJjZVZhbGlkLCBSZXNvdXJjZVR5cGUsIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdW5kZWZpbmVkUGFydGl0aW9uS2V5IH0gZnJvbSBcIi4uLy4uL2V4dHJhY3RQYXJ0aXRpb25LZXkuanNcIjtcbmltcG9ydCB7IFJlc291cmNlUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9pbmRleC5qc1wiO1xuaW1wb3J0IHsgcmVhZFBhcnRpdGlvbktleURlZmluaXRpb24gfSBmcm9tIFwiLi4vQ2xpZW50VXRpbHMuanNcIjtcbmltcG9ydCB7IFN0b3JlZFByb2NlZHVyZVJlc3BvbnNlIH0gZnJvbSBcIi4vU3RvcmVkUHJvY2VkdXJlUmVzcG9uc2UuanNcIjtcbmltcG9ydCB7IGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MsIHdpdGhEaWFnbm9zdGljcyB9IGZyb20gXCIuLi8uLi91dGlscy9kaWFnbm9zdGljcy5qc1wiO1xuLyoqXG4gKiBPcGVyYXRpb25zIGZvciByZWFkaW5nLCByZXBsYWNpbmcsIGRlbGV0aW5nLCBvciBleGVjdXRpbmcgYSBzcGVjaWZpYywgZXhpc3Rpbmcgc3RvcmVkIHByb2NlZHVyZSBieSBpZC5cbiAqXG4gKiBGb3Igb3BlcmF0aW9ucyB0byBjcmVhdGUsIHJlYWQgYWxsLCBvciBxdWVyeSBTdG9yZWQgUHJvY2VkdXJlcyxcbiAqL1xuZXhwb3J0IGNsYXNzIFN0b3JlZFByb2NlZHVyZSB7XG4gICAgY29udGFpbmVyO1xuICAgIGlkO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJlZmVyZW5jZSBVUkwgdG8gdGhlIHJlc291cmNlLiBVc2VkIGZvciBsaW5raW5nIGluIFBlcm1pc3Npb25zLlxuICAgICAqL1xuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVTdG9yZWRQcm9jZWR1cmVVcmkodGhpcy5jb250YWluZXIuZGF0YWJhc2UuaWQsIHRoaXMuY29udGFpbmVyLmlkLCB0aGlzLmlkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBpbnN0YW5jZSBvZiB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfSBsaW5rZWQgdG8gdGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIC0gVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgaWQgb2YgdGhlIGdpdmVuIHtAbGluayBTdG9yZWRQcm9jZWR1cmV9LlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGlkLCBjbGllbnRDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgdGhlIHtAbGluayBTdG9yZWRQcm9jZWR1cmVEZWZpbml0aW9ufSBmb3IgdGhlIGdpdmVuIHtAbGluayBTdG9yZWRQcm9jZWR1cmV9LlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHMgc25pcHBldDpTdG9yZWRQcm9jZWR1cmVSZWFkXG4gICAgICogaW1wb3J0IHsgQ29zbW9zQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICogY29uc3QgeyBkYXRhYmFzZSB9ID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgRGF0YWJhc2VcIiB9KTtcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IHJlc291cmNlOiBzcHJvYyB9ID0gYXdhaXQgY29udGFpbmVyLnNjcmlwdHMuc3RvcmVkUHJvY2VkdXJlKFwiPHNwcm9jLWlkPlwiKS5yZWFkKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgcmVhZChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50Q29udGV4dC5yZWFkKHtcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLnNwcm9jLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3RvcmVkUHJvY2VkdXJlUmVzcG9uc2UocmVzcG9uc2UucmVzdWx0LCByZXNwb25zZS5oZWFkZXJzLCByZXNwb25zZS5jb2RlLCB0aGlzLCBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzKCkpO1xuICAgICAgICB9LCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlIHRoZSBnaXZlbiB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfSB3aXRoIHRoZSBzcGVjaWZpZWQge0BsaW5rIFN0b3JlZFByb2NlZHVyZURlZmluaXRpb259LlxuICAgICAqIEBwYXJhbSBib2R5IC0gVGhlIHNwZWNpZmllZCB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlRGVmaW5pdGlvbn0gdG8gcmVwbGFjZSB0aGUgZXhpc3RpbmcgZGVmaW5pdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzIHNuaXBwZXQ6U3RvcmVkUHJvY2VkdXJlUmVwbGFjZVxuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCwgU3RvcmVkUHJvY2VkdXJlRGVmaW5pdGlvbiB9IGZyb20gXCJAYXp1cmUvY29zbW9zXCI7XG4gICAgICpcbiAgICAgKiBjb25zdCBlbmRwb2ludCA9IFwiaHR0cHM6Ly95b3VyLWFjY291bnQuZG9jdW1lbnRzLmF6dXJlLmNvbVwiO1xuICAgICAqIGNvbnN0IGtleSA9IFwiPGRhdGFiYXNlIGFjY291bnQgbWFzdGVya2V5PlwiO1xuICAgICAqIGNvbnN0IGNsaWVudCA9IG5ldyBDb3Ntb3NDbGllbnQoeyBlbmRwb2ludCwga2V5IH0pO1xuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICogY29uc3QgeyBjb250YWluZXIgfSA9IGF3YWl0IGRhdGFiYXNlLmNvbnRhaW5lcnMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IENvbnRhaW5lclwiIH0pO1xuICAgICAqXG4gICAgICogY29uc3Qgc3Byb2NEZWZpbml0aW9uOiBTdG9yZWRQcm9jZWR1cmVEZWZpbml0aW9uID0ge1xuICAgICAqICAgaWQ6IFwic2FtcGxlIHNwcm9jXCIsXG4gICAgICogICBib2R5OiBcImZ1bmN0aW9uICgpIHsgY29uc3QgeCA9IDEwOyB9XCIsXG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgcmVzb3VyY2U6IHNwcm9jIH0gPSBhd2FpdCBjb250YWluZXIuc2NyaXB0cy5zdG9yZWRQcm9jZWR1cmVzLmNyZWF0ZShzcHJvY0RlZmluaXRpb24pO1xuICAgICAqXG4gICAgICogc3Byb2MuYm9keSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgKiAgIGNvbnN0IHggPSAyMDtcbiAgICAgKiAgIGNvbnNvbGUubG9nKHgpO1xuICAgICAqIH07XG4gICAgICogY29uc3QgeyByZXNvdXJjZTogcmVwbGFjZWRTcHJvYyB9ID0gYXdhaXQgY29udGFpbmVyLnNjcmlwdHNcbiAgICAgKiAgIC5zdG9yZWRQcm9jZWR1cmUoc3Byb2MuaWQpXG4gICAgICogICAucmVwbGFjZShzcHJvYyk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgcmVwbGFjZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBpZiAoYm9keS5ib2R5KSB7XG4gICAgICAgICAgICAgICAgYm9keS5ib2R5ID0gYm9keS5ib2R5LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgICAgICAgIGlmICghaXNSZXNvdXJjZVZhbGlkKGJvZHksIGVycikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gZ2V0UGF0aEZyb21MaW5rKHRoaXMudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50Q29udGV4dC5yZXBsYWNlKHtcbiAgICAgICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUuc3Byb2MsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VJZDogaWQsXG4gICAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTdG9yZWRQcm9jZWR1cmVSZXNwb25zZShyZXNwb25zZS5yZXN1bHQsIHJlc3BvbnNlLmhlYWRlcnMsIHJlc3BvbnNlLmNvZGUsIHRoaXMsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSk7XG4gICAgICAgIH0sIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSB0aGUgZ2l2ZW4ge0BsaW5rIFN0b3JlZFByb2NlZHVyZX0uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0cyBzbmlwcGV0OlN0b3JlZFByb2NlZHVyZURlbGV0ZVxuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCB9IGZyb20gXCJAYXp1cmUvY29zbW9zXCI7XG4gICAgICpcbiAgICAgKiBjb25zdCBlbmRwb2ludCA9IFwiaHR0cHM6Ly95b3VyLWFjY291bnQuZG9jdW1lbnRzLmF6dXJlLmNvbVwiO1xuICAgICAqIGNvbnN0IGtleSA9IFwiPGRhdGFiYXNlIGFjY291bnQgbWFzdGVya2V5PlwiO1xuICAgICAqIGNvbnN0IGNsaWVudCA9IG5ldyBDb3Ntb3NDbGllbnQoeyBlbmRwb2ludCwga2V5IH0pO1xuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICogY29uc3QgeyBjb250YWluZXIgfSA9IGF3YWl0IGRhdGFiYXNlLmNvbnRhaW5lcnMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IENvbnRhaW5lclwiIH0pO1xuICAgICAqXG4gICAgICogYXdhaXQgY29udGFpbmVyLnNjcmlwdHMuc3RvcmVkUHJvY2VkdXJlKFwiPHNwcm9jLWlkPlwiKS5kZWxldGUoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBhc3luYyBkZWxldGUob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLnVybCk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQuZGVsZXRlKHtcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLnNwcm9jLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3RvcmVkUHJvY2VkdXJlUmVzcG9uc2UocmVzcG9uc2UucmVzdWx0LCByZXNwb25zZS5oZWFkZXJzLCByZXNwb25zZS5jb2RlLCB0aGlzLCBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzKCkpO1xuICAgICAgICB9LCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIHRoZSBnaXZlbiB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfS5cbiAgICAgKlxuICAgICAqIFRoZSBzcGVjaWZpZWQgdHlwZSwgVCwgaXMgbm90IGVuZm9yY2VkIGJ5IHRoZSBjbGllbnQuXG4gICAgICogQmUgc3VyZSB0byB2YWxpZGF0ZSB0aGUgcmVzcG9uc2UgZnJvbSB0aGUgc3RvcmVkIHByb2NlZHVyZSBtYXRjaGVzIHRoZSB0eXBlLCBULCB5b3UgcHJvdmlkZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJ0aXRpb25LZXkgLSBUaGUgcGFydGl0aW9uIGtleSB0byB1c2Ugd2hlbiBleGVjdXRpbmcgdGhlIHN0b3JlZCBwcm9jZWR1cmVcbiAgICAgKiBAcGFyYW0gcGFyYW1zIC0gQXJyYXkgb2YgcGFyYW1ldGVycyB0byBwYXNzIGFzIGFyZ3VtZW50cyB0byB0aGUgZ2l2ZW4ge0BsaW5rIFN0b3JlZFByb2NlZHVyZX0uXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBBZGRpdGlvbmFsIG9wdGlvbnMsIHN1Y2ggYXMgdGhlIHBhcnRpdGlvbiBrZXkgdG8gaW52b2tlIHRoZSB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlfSBvbi5cbiAgICAgKiAqIEBleGFtcGxlXG4gICAgICogYGBgdHMgc25pcHBldDpTdG9yZWRQcm9jZWR1cmVFeGVjdXRlXG4gICAgICogaW1wb3J0IHsgQ29zbW9zQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICogY29uc3QgeyBkYXRhYmFzZSB9ID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgRGF0YWJhc2VcIiB9KTtcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IHJlc291cmNlOiByZXN1bHQgfSA9IGF3YWl0IGNvbnRhaW5lci5zY3JpcHRzXG4gICAgICogICAuc3RvcmVkUHJvY2VkdXJlKFwiPHNwcm9jLWlkPlwiKVxuICAgICAqICAgLmV4ZWN1dGUodW5kZWZpbmVkKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBhc3luYyBleGVjdXRlKHBhcnRpdGlvbktleSwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBpZiAocGFydGl0aW9uS2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlSZXNwb25zZSA9IGF3YWl0IHJlYWRQYXJ0aXRpb25LZXlEZWZpbml0aW9uKGRpYWdub3N0aWNOb2RlLCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5ID0gdW5kZWZpbmVkUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleVJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnRDb250ZXh0LmV4ZWN1dGUoe1xuICAgICAgICAgICAgICAgIHNwcm9jTGluazogdGhpcy51cmwsXG4gICAgICAgICAgICAgICAgcGFyYW1zLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5LFxuICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlc291cmNlUmVzcG9uc2UocmVzcG9uc2UucmVzdWx0LCByZXNwb25zZS5oZWFkZXJzLCByZXNwb25zZS5jb2RlLCBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzKCkpO1xuICAgICAgICB9LCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0b3JlZFByb2NlZHVyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedure.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedureResponse.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedureResponse.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoredProcedureResponse: () => (/* binding */ StoredProcedureResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass StoredProcedureResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, storedProcedure, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.storedProcedure = storedProcedure;\n    }\n    /**\n     * A reference to the {@link StoredProcedure} which the {@link StoredProcedureDefinition} corresponds to.\n     */\n    storedProcedure;\n    /**\n     * Alias for storedProcedure.\n     *\n     * A reference to the {@link StoredProcedure} which the {@link StoredProcedureDefinition} corresponds to.\n     */\n    get sproc() {\n        return this.storedProcedure;\n    }\n}\n//# sourceMappingURL=StoredProcedureResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL1N0b3JlZFByb2NlZHVyZVJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBEO0FBQ25ELHNDQUFzQywrREFBZ0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1QkFBdUIsV0FBVyxpQ0FBaUM7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1QkFBdUIsV0FBVyxpQ0FBaUM7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL1N0b3JlZFByb2NlZHVyZVJlc3BvbnNlLmpzPzE5MDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzb3VyY2VSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG5leHBvcnQgY2xhc3MgU3RvcmVkUHJvY2VkdXJlUmVzcG9uc2UgZXh0ZW5kcyBSZXNvdXJjZVJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgc3RvcmVkUHJvY2VkdXJlLCBkaWFnbm9zdGljcykge1xuICAgICAgICBzdXBlcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgZGlhZ25vc3RpY3MpO1xuICAgICAgICB0aGlzLnN0b3JlZFByb2NlZHVyZSA9IHN0b3JlZFByb2NlZHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBTdG9yZWRQcm9jZWR1cmV9IHdoaWNoIHRoZSB7QGxpbmsgU3RvcmVkUHJvY2VkdXJlRGVmaW5pdGlvbn0gY29ycmVzcG9uZHMgdG8uXG4gICAgICovXG4gICAgc3RvcmVkUHJvY2VkdXJlO1xuICAgIC8qKlxuICAgICAqIEFsaWFzIGZvciBzdG9yZWRQcm9jZWR1cmUuXG4gICAgICpcbiAgICAgKiBBIHJlZmVyZW5jZSB0byB0aGUge0BsaW5rIFN0b3JlZFByb2NlZHVyZX0gd2hpY2ggdGhlIHtAbGluayBTdG9yZWRQcm9jZWR1cmVEZWZpbml0aW9ufSBjb3JyZXNwb25kcyB0by5cbiAgICAgKi9cbiAgICBnZXQgc3Byb2MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0b3JlZFByb2NlZHVyZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yZWRQcm9jZWR1cmVSZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedureResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedures.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedures.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoredProcedures: () => (/* binding */ StoredProcedures)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _StoredProcedure_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StoredProcedure.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedure.js\");\n/* harmony import */ var _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StoredProcedureResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedureResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n/**\n * Operations for creating, upserting, or reading/querying all Stored Procedures.\n *\n * For operations to read, replace, delete, or execute a specific, existing stored procedure by id, see `container.storedProcedure()`.\n */\nclass StoredProcedures {\n    container;\n    clientContext;\n    /**\n     * @param container - The parent {@link Container}.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc,\n                resourceId: id,\n                resultFn: (result) => result.StoredProcedures,\n                query,\n                options: innerOptions,\n                diagnosticNode: diagNode,\n            });\n        });\n    }\n    /**\n     * Read all stored procedures.\n     * @example Read all stored procedures to array.\n     * ```ts snippet:StoredProceduresReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resources: storedProceduresList } = await container.scripts.storedProcedures\n     *   .readAll()\n     *   .fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a StoredProcedure.\n     *\n     * Azure Cosmos DB allows stored procedures to be executed in the storage tier,\n     * directly against an item container. The script\n     * gets executed under ACID transactions on the primary storage partition of the\n     * specified container. For additional details,\n     * refer to the server-side JavaScript API documentation.\n     * @example\n     * ```ts snippet:StoredProceduresCreate\n     * import { CosmosClient, StoredProcedureDefinition } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const sprocDefinition: StoredProcedureDefinition = {\n     *   id: \"sample sproc\",\n     *   body: \"function () { const x = 10; }\",\n     * };\n     *\n     * const { resource: sproc } = await container.scripts.storedProcedures.create(sprocDefinition);\n     * ```\n     */\n    async create(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n            const response = await this.clientContext.create({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            const ref = new _StoredProcedure_js__WEBPACK_IMPORTED_MODULE_2__.StoredProcedure(this.container, response.result.id, this.clientContext);\n            return new _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_3__.StoredProcedureResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=StoredProcedures.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL1N0b3JlZFByb2NlZHVyZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVHO0FBQ2hEO0FBQ0E7QUFDZ0I7QUFDaUI7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdCQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpRUFBZSxxQkFBcUIsMERBQVk7QUFDckUsbUJBQW1CLCtEQUFhO0FBQ2hDLG1CQUFtQiw0REFBYTtBQUNoQztBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RDtBQUNBLGVBQWUsV0FBVyw2Q0FBNkMscUJBQXFCO0FBQzVGO0FBQ0EsZUFBZSxZQUFZLGdEQUFnRCxzQkFBc0I7QUFDakc7QUFDQSxlQUFlLGtDQUFrQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBDQUEwQztBQUMxRDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RCxlQUFlLFdBQVcsNkNBQTZDLHFCQUFxQjtBQUM1RixlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZUFBZTtBQUM3QztBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpRUFBZTtBQUNoQztBQUNBO0FBQ0EseUJBQXlCLGlFQUFlLHFCQUFxQiwwREFBWTtBQUN6RSx1QkFBdUIsK0RBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiw0QkFBNEIsZ0VBQWU7QUFDM0MsdUJBQXVCLGdGQUF1Qix3REFBd0QsZ0ZBQXlCO0FBQy9ILFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9TdG9yZWRQcm9jZWR1cmUvU3RvcmVkUHJvY2VkdXJlcy5qcz85Y2ZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgaXNSZXNvdXJjZVZhbGlkLCBSZXNvdXJjZVR5cGUsIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuLi8uLi9xdWVyeUl0ZXJhdG9yLmpzXCI7XG5pbXBvcnQgeyBTdG9yZWRQcm9jZWR1cmUgfSBmcm9tIFwiLi9TdG9yZWRQcm9jZWR1cmUuanNcIjtcbmltcG9ydCB7IFN0b3JlZFByb2NlZHVyZVJlc3BvbnNlIH0gZnJvbSBcIi4vU3RvcmVkUHJvY2VkdXJlUmVzcG9uc2UuanNcIjtcbmltcG9ydCB7IGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MsIHdpdGhEaWFnbm9zdGljcyB9IGZyb20gXCIuLi8uLi91dGlscy9kaWFnbm9zdGljcy5qc1wiO1xuLyoqXG4gKiBPcGVyYXRpb25zIGZvciBjcmVhdGluZywgdXBzZXJ0aW5nLCBvciByZWFkaW5nL3F1ZXJ5aW5nIGFsbCBTdG9yZWQgUHJvY2VkdXJlcy5cbiAqXG4gKiBGb3Igb3BlcmF0aW9ucyB0byByZWFkLCByZXBsYWNlLCBkZWxldGUsIG9yIGV4ZWN1dGUgYSBzcGVjaWZpYywgZXhpc3Rpbmcgc3RvcmVkIHByb2NlZHVyZSBieSBpZCwgc2VlIGBjb250YWluZXIuc3RvcmVkUHJvY2VkdXJlKClgLlxuICovXG5leHBvcnQgY2xhc3MgU3RvcmVkUHJvY2VkdXJlcyB7XG4gICAgY29udGFpbmVyO1xuICAgIGNsaWVudENvbnRleHQ7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGNvbnRhaW5lciAtIFRoZSBwYXJlbnQge0BsaW5rIENvbnRhaW5lcn0uXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lciwgY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICB9XG4gICAgcXVlcnkocXVlcnksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFJlc291cmNlVHlwZS5zcHJvYyk7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICByZXR1cm4gbmV3IFF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgKGRpYWdOb2RlLCBpbm5lck9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHtcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLnNwcm9jLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIHJlc3VsdEZuOiAocmVzdWx0KSA9PiByZXN1bHQuU3RvcmVkUHJvY2VkdXJlcyxcbiAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICBvcHRpb25zOiBpbm5lck9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGU6IGRpYWdOb2RlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGFsbCBzdG9yZWQgcHJvY2VkdXJlcy5cbiAgICAgKiBAZXhhbXBsZSBSZWFkIGFsbCBzdG9yZWQgcHJvY2VkdXJlcyB0byBhcnJheS5cbiAgICAgKiBgYGB0cyBzbmlwcGV0OlN0b3JlZFByb2NlZHVyZXNSZWFkQWxsXG4gICAgICogaW1wb3J0IHsgQ29zbW9zQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IGRhdGFiYXNlIH0gPSBhd2FpdCBjbGllbnQuZGF0YWJhc2VzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBEYXRhYmFzZVwiIH0pO1xuICAgICAqXG4gICAgICogY29uc3QgeyBjb250YWluZXIgfSA9IGF3YWl0IGRhdGFiYXNlLmNvbnRhaW5lcnMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IENvbnRhaW5lclwiIH0pO1xuICAgICAqXG4gICAgICogY29uc3QgeyByZXNvdXJjZXM6IHN0b3JlZFByb2NlZHVyZXNMaXN0IH0gPSBhd2FpdCBjb250YWluZXIuc2NyaXB0cy5zdG9yZWRQcm9jZWR1cmVzXG4gICAgICogICAucmVhZEFsbCgpXG4gICAgICogICAuZmV0Y2hBbGwoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZWFkQWxsKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVlcnkodW5kZWZpbmVkLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgU3RvcmVkUHJvY2VkdXJlLlxuICAgICAqXG4gICAgICogQXp1cmUgQ29zbW9zIERCIGFsbG93cyBzdG9yZWQgcHJvY2VkdXJlcyB0byBiZSBleGVjdXRlZCBpbiB0aGUgc3RvcmFnZSB0aWVyLFxuICAgICAqIGRpcmVjdGx5IGFnYWluc3QgYW4gaXRlbSBjb250YWluZXIuIFRoZSBzY3JpcHRcbiAgICAgKiBnZXRzIGV4ZWN1dGVkIHVuZGVyIEFDSUQgdHJhbnNhY3Rpb25zIG9uIHRoZSBwcmltYXJ5IHN0b3JhZ2UgcGFydGl0aW9uIG9mIHRoZVxuICAgICAqIHNwZWNpZmllZCBjb250YWluZXIuIEZvciBhZGRpdGlvbmFsIGRldGFpbHMsXG4gICAgICogcmVmZXIgdG8gdGhlIHNlcnZlci1zaWRlIEphdmFTY3JpcHQgQVBJIGRvY3VtZW50YXRpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0cyBzbmlwcGV0OlN0b3JlZFByb2NlZHVyZXNDcmVhdGVcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQsIFN0b3JlZFByb2NlZHVyZURlZmluaXRpb24gfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKiBjb25zdCB7IGRhdGFiYXNlIH0gPSBhd2FpdCBjbGllbnQuZGF0YWJhc2VzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBEYXRhYmFzZVwiIH0pO1xuICAgICAqIGNvbnN0IHsgY29udGFpbmVyIH0gPSBhd2FpdCBkYXRhYmFzZS5jb250YWluZXJzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBDb250YWluZXJcIiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHNwcm9jRGVmaW5pdGlvbjogU3RvcmVkUHJvY2VkdXJlRGVmaW5pdGlvbiA9IHtcbiAgICAgKiAgIGlkOiBcInNhbXBsZSBzcHJvY1wiLFxuICAgICAqICAgYm9keTogXCJmdW5jdGlvbiAoKSB7IGNvbnN0IHggPSAxMDsgfVwiLFxuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBjb25zdCB7IHJlc291cmNlOiBzcHJvYyB9ID0gYXdhaXQgY29udGFpbmVyLnNjcmlwdHMuc3RvcmVkUHJvY2VkdXJlcy5jcmVhdGUoc3Byb2NEZWZpbml0aW9uKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGJvZHkuYm9keSkge1xuICAgICAgICAgICAgICAgIGJvZHkuYm9keSA9IGJvZHkuYm9keS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXJyID0ge307XG4gICAgICAgICAgICBpZiAoIWlzUmVzb3VyY2VWYWxpZChib2R5LCBlcnIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGdldFBhdGhGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwsIFJlc291cmNlVHlwZS5zcHJvYyk7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnRDb250ZXh0LmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLnNwcm9jLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBTdG9yZWRQcm9jZWR1cmUodGhpcy5jb250YWluZXIsIHJlc3BvbnNlLnJlc3VsdC5pZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3RvcmVkUHJvY2VkdXJlUmVzcG9uc2UocmVzcG9uc2UucmVzdWx0LCByZXNwb25zZS5oZWFkZXJzLCByZXNwb25zZS5jb2RlLCByZWYsIGdldEVtcHR5Q29zbW9zRGlhZ25vc3RpY3MoKSk7XG4gICAgICAgIH0sIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RvcmVkUHJvY2VkdXJlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedures.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoredProcedure: () => (/* reexport safe */ _StoredProcedure_js__WEBPACK_IMPORTED_MODULE_0__.StoredProcedure),\n/* harmony export */   StoredProcedureResponse: () => (/* reexport safe */ _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_2__.StoredProcedureResponse),\n/* harmony export */   StoredProcedures: () => (/* reexport safe */ _StoredProcedures_js__WEBPACK_IMPORTED_MODULE_1__.StoredProcedures)\n/* harmony export */ });\n/* harmony import */ var _StoredProcedure_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StoredProcedure.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedure.js\");\n/* harmony import */ var _StoredProcedures_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StoredProcedures.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedures.js\");\n/* harmony import */ var _StoredProcedureResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StoredProcedureResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/StoredProcedureResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDdUQ7QUFDRTtBQUNjO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvU3RvcmVkUHJvY2VkdXJlL2luZGV4LmpzPzg0MDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBTdG9yZWRQcm9jZWR1cmUgfSBmcm9tIFwiLi9TdG9yZWRQcm9jZWR1cmUuanNcIjtcbmV4cG9ydCB7IFN0b3JlZFByb2NlZHVyZXMgfSBmcm9tIFwiLi9TdG9yZWRQcm9jZWR1cmVzLmpzXCI7XG5leHBvcnQgeyBTdG9yZWRQcm9jZWR1cmVSZXNwb25zZSB9IGZyb20gXCIuL1N0b3JlZFByb2NlZHVyZVJlc3BvbnNlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Trigger.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Trigger/Trigger.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trigger: () => (/* binding */ Trigger)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TriggerResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/TriggerResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n/**\n * Operations to read, replace, or delete a {@link Trigger}.\n *\n * Use `container.triggers` to create, upsert, query, or read all.\n */\nclass Trigger {\n    container;\n    id;\n    clientContext;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createTriggerUri)(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * @hidden\n     * @param container - The parent {@link Container}.\n     * @param id - The id of the given {@link Trigger}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Read the {@link TriggerDefinition} for the given {@link Trigger}.\n     * @example\n     * ```ts snippet:TriggerRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: trigger } = await container.scripts.trigger(\"<trigger-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_1__.TriggerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Replace the given {@link Trigger} with the specified {@link TriggerDefinition}.\n     * @param body - The specified {@link TriggerDefinition} to replace the existing definition with.\n     * @example\n     * ```ts snippet:TriggerReplace\n     * import { CosmosClient, TriggerDefinition, TriggerType, TriggerOperation } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const triggerDefinition: TriggerDefinition = {\n     *   id: \"sample trigger\",\n     *   body: \"serverScript() { var x = 10; }\",\n     *   triggerType: TriggerType.Pre,\n     *   triggerOperation: TriggerOperation.All,\n     * };\n     *\n     * const { resource: trigger } = await container.scripts.triggers.create(triggerDefinition);\n     *\n     * trigger.body = \"function () { const x = 20; console.log(x); }\";\n     * const { resource: replacedTrigger } = await container.scripts.trigger(trigger.id).replace(trigger);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.replace({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_1__.TriggerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the given {@link Trigger}.\n     * @example\n     * ```ts snippet:TriggerDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * await container.scripts.trigger(\"<trigger-id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_1__.TriggerResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Trigger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Trigger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/TriggerResponse.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Trigger/TriggerResponse.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TriggerResponse: () => (/* binding */ TriggerResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass TriggerResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, trigger, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.trigger = trigger;\n    }\n    /** A reference to the {@link Trigger} corresponding to the returned {@link TriggerDefinition}. */\n    trigger;\n}\n//# sourceMappingURL=TriggerResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVHJpZ2dlci9UcmlnZ2VyUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDbkQsOEJBQThCLCtEQUFnQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixlQUFlLCtCQUErQix3QkFBd0I7QUFDbEc7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVHJpZ2dlci9UcmlnZ2VyUmVzcG9uc2UuanM/NWEzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZVJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvaW5kZXguanNcIjtcbmV4cG9ydCBjbGFzcyBUcmlnZ2VyUmVzcG9uc2UgZXh0ZW5kcyBSZXNvdXJjZVJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgdHJpZ2dlciwgZGlhZ25vc3RpY3MpIHtcbiAgICAgICAgc3VwZXIocmVzb3VyY2UsIGhlYWRlcnMsIHN0YXR1c0NvZGUsIGRpYWdub3N0aWNzKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyID0gdHJpZ2dlcjtcbiAgICB9XG4gICAgLyoqIEEgcmVmZXJlbmNlIHRvIHRoZSB7QGxpbmsgVHJpZ2dlcn0gY29ycmVzcG9uZGluZyB0byB0aGUgcmV0dXJuZWQge0BsaW5rIFRyaWdnZXJEZWZpbml0aW9ufS4gKi9cbiAgICB0cmlnZ2VyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJpZ2dlclJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/TriggerResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Triggers.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Trigger/Triggers.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Triggers: () => (/* binding */ Triggers)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _Trigger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Trigger.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Trigger.js\");\n/* harmony import */ var _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TriggerResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/TriggerResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n/**\n * Operations to create, upsert, query, and read all triggers.\n *\n * Use `container.triggers` to read, replace, or delete a {@link Trigger}.\n */\nclass Triggers {\n    container;\n    clientContext;\n    /**\n     * @hidden\n     * @param container - The parent {@link Container}.\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagnosticNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger,\n                resourceId: id,\n                resultFn: (result) => result.Triggers,\n                query,\n                options: innerOptions,\n                diagnosticNode,\n            });\n        });\n    }\n    /**\n     * Read all Triggers.\n     * @example Read all trigger to array.\n     * ```ts snippet:TriggersReadAllTriggers\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resources: triggerList } = await container.scripts.triggers.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a trigger.\n     *\n     * Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed\n     * on creates, updates and deletes.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     * @example\n     * ```ts snippet:TriggersCreate\n     * import { CosmosClient, TriggerDefinition, TriggerType, TriggerOperation } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const triggerDefinition: TriggerDefinition = {\n     *   id: \"sample trigger\",\n     *   body: \"serverScript() { var x = 10; }\",\n     *   triggerType: TriggerType.Pre,\n     *   triggerOperation: TriggerOperation.All,\n     * };\n     *\n     * const { resource: trigger } = await container.scripts.triggers.create(triggerDefinition);\n     * ```\n     */\n    async create(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n            const response = await this.clientContext.create({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.trigger,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            const ref = new _Trigger_js__WEBPACK_IMPORTED_MODULE_2__.Trigger(this.container, response.result.id, this.clientContext);\n            return new _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_3__.TriggerResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Triggers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVHJpZ2dlci9UcmlnZ2Vycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBdUc7QUFDaEQ7QUFDaEI7QUFDZ0I7QUFDaUM7QUFDeEY7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGNBQWM7QUFDekU7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdCQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUVBQWUscUJBQXFCLDBEQUFZO0FBQ3JFLG1CQUFtQiwrREFBYTtBQUNoQyxtQkFBbUIsNERBQWE7QUFDaEM7QUFDQTtBQUNBLDhCQUE4QiwwREFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGVBQWU7QUFDeEQ7QUFDQSxlQUFlLFdBQVcsNkNBQTZDLHFCQUFxQjtBQUM1RjtBQUNBLGVBQWUsWUFBWSxnREFBZ0Qsc0JBQXNCO0FBQ2pHO0FBQ0EsZUFBZSx5QkFBeUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpRUFBaUU7QUFDakY7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGVBQWU7QUFDeEQsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUYsZUFBZSxZQUFZLGdEQUFnRCxzQkFBc0I7QUFDakc7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGFBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9CQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxlQUFlLHNFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlFQUFlO0FBQ2hDO0FBQ0E7QUFDQSx5QkFBeUIsaUVBQWUscUJBQXFCLDBEQUFZO0FBQ3pFLHVCQUF1QiwrREFBYTtBQUNwQztBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsMERBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLDRCQUE0QixnREFBTztBQUNuQyx1QkFBdUIsZ0VBQWUsd0RBQXdELGdGQUF5QjtBQUN2SCxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVHJpZ2dlci9UcmlnZ2Vycy5qcz85NGFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgaXNSZXNvdXJjZVZhbGlkLCBSZXNvdXJjZVR5cGUsIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuLi8uLi9xdWVyeUl0ZXJhdG9yLmpzXCI7XG5pbXBvcnQgeyBUcmlnZ2VyIH0gZnJvbSBcIi4vVHJpZ2dlci5qc1wiO1xuaW1wb3J0IHsgVHJpZ2dlclJlc3BvbnNlIH0gZnJvbSBcIi4vVHJpZ2dlclJlc3BvbnNlLmpzXCI7XG5pbXBvcnQgeyBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzLCB3aXRoRGlhZ25vc3RpY3MgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZGlhZ25vc3RpY3MuanNcIjtcbi8qKlxuICogT3BlcmF0aW9ucyB0byBjcmVhdGUsIHVwc2VydCwgcXVlcnksIGFuZCByZWFkIGFsbCB0cmlnZ2Vycy5cbiAqXG4gKiBVc2UgYGNvbnRhaW5lci50cmlnZ2Vyc2AgdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEge0BsaW5rIFRyaWdnZXJ9LlxuICovXG5leHBvcnQgY2xhc3MgVHJpZ2dlcnMge1xuICAgIGNvbnRhaW5lcjtcbiAgICBjbGllbnRDb250ZXh0O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIC0gVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIHF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUudHJpZ2dlcik7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICByZXR1cm4gbmV3IFF1ZXJ5SXRlcmF0b3IodGhpcy5jbGllbnRDb250ZXh0LCBxdWVyeSwgb3B0aW9ucywgKGRpYWdub3N0aWNOb2RlLCBpbm5lck9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudENvbnRleHQucXVlcnlGZWVkKHtcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLnRyaWdnZXIsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VJZDogaWQsXG4gICAgICAgICAgICAgICAgcmVzdWx0Rm46IChyZXN1bHQpID0+IHJlc3VsdC5UcmlnZ2VycyxcbiAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICBvcHRpb25zOiBpbm5lck9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgYWxsIFRyaWdnZXJzLlxuICAgICAqIEBleGFtcGxlIFJlYWQgYWxsIHRyaWdnZXIgdG8gYXJyYXkuXG4gICAgICogYGBgdHMgc25pcHBldDpUcmlnZ2Vyc1JlYWRBbGxUcmlnZ2Vyc1xuICAgICAqIGltcG9ydCB7IENvc21vc0NsaWVudCB9IGZyb20gXCJAYXp1cmUvY29zbW9zXCI7XG4gICAgICpcbiAgICAgKiBjb25zdCBlbmRwb2ludCA9IFwiaHR0cHM6Ly95b3VyLWFjY291bnQuZG9jdW1lbnRzLmF6dXJlLmNvbVwiO1xuICAgICAqIGNvbnN0IGtleSA9IFwiPGRhdGFiYXNlIGFjY291bnQgbWFzdGVya2V5PlwiO1xuICAgICAqIGNvbnN0IGNsaWVudCA9IG5ldyBDb3Ntb3NDbGllbnQoeyBlbmRwb2ludCwga2V5IH0pO1xuICAgICAqXG4gICAgICogY29uc3QgeyBkYXRhYmFzZSB9ID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgRGF0YWJhc2VcIiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgY29udGFpbmVyIH0gPSBhd2FpdCBkYXRhYmFzZS5jb250YWluZXJzLmNyZWF0ZUlmTm90RXhpc3RzKHsgaWQ6IFwiVGVzdCBDb250YWluZXJcIiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgcmVzb3VyY2VzOiB0cmlnZ2VyTGlzdCB9ID0gYXdhaXQgY29udGFpbmVyLnNjcmlwdHMudHJpZ2dlcnMucmVhZEFsbCgpLmZldGNoQWxsKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZEFsbChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHRyaWdnZXIuXG4gICAgICpcbiAgICAgKiBBenVyZSBDb3Ntb3MgREIgc3VwcG9ydHMgcHJlIGFuZCBwb3N0IHRyaWdnZXJzIGRlZmluZWQgaW4gSmF2YVNjcmlwdCB0byBiZSBleGVjdXRlZFxuICAgICAqIG9uIGNyZWF0ZXMsIHVwZGF0ZXMgYW5kIGRlbGV0ZXMuXG4gICAgICpcbiAgICAgKiBGb3IgYWRkaXRpb25hbCBkZXRhaWxzLCByZWZlciB0byB0aGUgc2VydmVyLXNpZGUgSmF2YVNjcmlwdCBBUEkgZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzIHNuaXBwZXQ6VHJpZ2dlcnNDcmVhdGVcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQsIFRyaWdnZXJEZWZpbml0aW9uLCBUcmlnZ2VyVHlwZSwgVHJpZ2dlck9wZXJhdGlvbiB9IGZyb20gXCJAYXp1cmUvY29zbW9zXCI7XG4gICAgICpcbiAgICAgKiBjb25zdCBlbmRwb2ludCA9IFwiaHR0cHM6Ly95b3VyLWFjY291bnQuZG9jdW1lbnRzLmF6dXJlLmNvbVwiO1xuICAgICAqIGNvbnN0IGtleSA9IFwiPGRhdGFiYXNlIGFjY291bnQgbWFzdGVya2V5PlwiO1xuICAgICAqIGNvbnN0IGNsaWVudCA9IG5ldyBDb3Ntb3NDbGllbnQoeyBlbmRwb2ludCwga2V5IH0pO1xuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICogY29uc3QgeyBjb250YWluZXIgfSA9IGF3YWl0IGRhdGFiYXNlLmNvbnRhaW5lcnMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IENvbnRhaW5lclwiIH0pO1xuICAgICAqXG4gICAgICogY29uc3QgdHJpZ2dlckRlZmluaXRpb246IFRyaWdnZXJEZWZpbml0aW9uID0ge1xuICAgICAqICAgaWQ6IFwic2FtcGxlIHRyaWdnZXJcIixcbiAgICAgKiAgIGJvZHk6IFwic2VydmVyU2NyaXB0KCkgeyB2YXIgeCA9IDEwOyB9XCIsXG4gICAgICogICB0cmlnZ2VyVHlwZTogVHJpZ2dlclR5cGUuUHJlLFxuICAgICAqICAgdHJpZ2dlck9wZXJhdGlvbjogVHJpZ2dlck9wZXJhdGlvbi5BbGwsXG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgcmVzb3VyY2U6IHRyaWdnZXIgfSA9IGF3YWl0IGNvbnRhaW5lci5zY3JpcHRzLnRyaWdnZXJzLmNyZWF0ZSh0cmlnZ2VyRGVmaW5pdGlvbik7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhEaWFnbm9zdGljcyhhc3luYyAoZGlhZ25vc3RpY05vZGUpID0+IHtcbiAgICAgICAgICAgIGlmIChib2R5LmJvZHkpIHtcbiAgICAgICAgICAgICAgICBib2R5LmJvZHkgPSBib2R5LmJvZHkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFpc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUudHJpZ2dlcik7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGdldElkRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnRDb250ZXh0LmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogUmVzb3VyY2VUeXBlLnRyaWdnZXIsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VJZDogaWQsXG4gICAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgcmVmID0gbmV3IFRyaWdnZXIodGhpcy5jb250YWluZXIsIHJlc3BvbnNlLnJlc3VsdC5pZCwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVHJpZ2dlclJlc3BvbnNlKHJlc3BvbnNlLnJlc3VsdCwgcmVzcG9uc2UuaGVhZGVycywgcmVzcG9uc2UuY29kZSwgcmVmLCBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzKCkpO1xuICAgICAgICB9LCB0aGlzLmNsaWVudENvbnRleHQpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyaWdnZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Triggers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/Trigger/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trigger: () => (/* reexport safe */ _Trigger_js__WEBPACK_IMPORTED_MODULE_0__.Trigger),\n/* harmony export */   TriggerResponse: () => (/* reexport safe */ _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_2__.TriggerResponse),\n/* harmony export */   Triggers: () => (/* reexport safe */ _Triggers_js__WEBPACK_IMPORTED_MODULE_1__.Triggers)\n/* harmony export */ });\n/* harmony import */ var _Trigger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Trigger.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Trigger.js\");\n/* harmony import */ var _Triggers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Triggers.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/Triggers.js\");\n/* harmony import */ var _TriggerResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TriggerResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/TriggerResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVHJpZ2dlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3VDO0FBQ0U7QUFDYztBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1RyaWdnZXIvaW5kZXguanM/YzMwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IFRyaWdnZXIgfSBmcm9tIFwiLi9UcmlnZ2VyLmpzXCI7XG5leHBvcnQgeyBUcmlnZ2VycyB9IGZyb20gXCIuL1RyaWdnZXJzLmpzXCI7XG5leHBvcnQgeyBUcmlnZ2VyUmVzcG9uc2UgfSBmcm9tIFwiLi9UcmlnZ2VyUmVzcG9uc2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunction.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunction.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserDefinedFunction: () => (/* binding */ UserDefinedFunction)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UserDefinedFunctionResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n/**\n * Used to read, replace, or delete a specified User Definied Function by id.\n *\n * @see {@link UserDefinedFunction} to create, upsert, query, read all User Defined Functions.\n */\nclass UserDefinedFunction {\n    container;\n    id;\n    clientContext;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createUserDefinedFunctionUri)(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * @hidden\n     * @param container - The parent {@link Container}.\n     * @param id - The id of the given {@link UserDefinedFunction}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Read the {@link UserDefinedFunctionDefinition} for the given {@link UserDefinedFunction}.\n     * @example\n     * ```ts snippet:UserDefinedFunctionRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resource: udf } = await container.scripts.userDefinedFunction(\"<udf-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_1__.UserDefinedFunctionResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Replace the given {@link UserDefinedFunction} with the specified {@link UserDefinedFunctionDefinition}.\n     * @param options -\n     * @example\n     * ```ts snippet:UserDefinedFunctionReplace\n     * import { CosmosClient, UserDefinedFunctionDefinition } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const udfDefinition: UserDefinedFunctionDefinition = {\n     *   id: \"sample udf\",\n     *   body: \"function () { const x = 10; }\",\n     * };\n     * await container.scripts.userDefinedFunctions.create(udfDefinition);\n     *\n     * udfDefinition.body = \"function () { const x = 20; }\";\n     * const { resource: replacedUdf } = await container.scripts\n     *   .userDefinedFunction(udfDefinition.id)\n     *   .replace(udfDefinition);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.replace({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_1__.UserDefinedFunctionResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the given {@link UserDefined}.\n     * @example\n     * ```ts snippet:UserDefinedFunctionDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * await container.scripts.userDefinedFunction(\"<udf-id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_1__.UserDefinedFunctionResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=UserDefinedFunction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunction.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserDefinedFunctionResponse: () => (/* binding */ UserDefinedFunctionResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass UserDefinedFunctionResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, udf, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.userDefinedFunction = udf;\n    }\n    /** A reference to the {@link UserDefinedFunction} corresponding to the returned {@link UserDefinedFunctionDefinition}. */\n    userDefinedFunction;\n    /**\n     * Alias for `userDefinedFunction(id)`.\n     *\n     * A reference to the {@link UserDefinedFunction} corresponding to the returned {@link UserDefinedFunctionDefinition}.\n     */\n    get udf() {\n        return this.userDefinedFunction;\n    }\n}\n//# sourceMappingURL=UserDefinedFunctionResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlckRlZmluZWRGdW5jdGlvbi9Vc2VyRGVmaW5lZEZ1bmN0aW9uUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDbkQsMENBQTBDLCtEQUFnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwyQkFBMkIsK0JBQStCLG9DQUFvQztBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyQkFBMkIsK0JBQStCLG9DQUFvQztBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NsaWVudC9Vc2VyRGVmaW5lZEZ1bmN0aW9uL1VzZXJEZWZpbmVkRnVuY3Rpb25SZXNwb25zZS5qcz9kOTU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc291cmNlUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vcmVxdWVzdC9pbmRleC5qc1wiO1xuZXhwb3J0IGNsYXNzIFVzZXJEZWZpbmVkRnVuY3Rpb25SZXNwb25zZSBleHRlbmRzIFJlc291cmNlUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCB1ZGYsIGRpYWdub3N0aWNzKSB7XG4gICAgICAgIHN1cGVyKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBkaWFnbm9zdGljcyk7XG4gICAgICAgIHRoaXMudXNlckRlZmluZWRGdW5jdGlvbiA9IHVkZjtcbiAgICB9XG4gICAgLyoqIEEgcmVmZXJlbmNlIHRvIHRoZSB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbn0gY29ycmVzcG9uZGluZyB0byB0aGUgcmV0dXJuZWQge0BsaW5rIFVzZXJEZWZpbmVkRnVuY3Rpb25EZWZpbml0aW9ufS4gKi9cbiAgICB1c2VyRGVmaW5lZEZ1bmN0aW9uO1xuICAgIC8qKlxuICAgICAqIEFsaWFzIGZvciBgdXNlckRlZmluZWRGdW5jdGlvbihpZClgLlxuICAgICAqXG4gICAgICogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBVc2VyRGVmaW5lZEZ1bmN0aW9ufSBjb3JyZXNwb25kaW5nIHRvIHRoZSByZXR1cm5lZCB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbkRlZmluaXRpb259LlxuICAgICAqL1xuICAgIGdldCB1ZGYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXJEZWZpbmVkRnVuY3Rpb247XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXNlckRlZmluZWRGdW5jdGlvblJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctions.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctions.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserDefinedFunctions: () => (/* binding */ UserDefinedFunctions)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _UserDefinedFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserDefinedFunction.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunction.js\");\n/* harmony import */ var _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UserDefinedFunctionResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n/**\n * Used to create, upsert, query, or read all User Defined Functions.\n *\n * @see {@link UserDefinedFunction} to read, replace, or delete a given User Defined Function by id.\n */\nclass UserDefinedFunctions {\n    container;\n    clientContext;\n    /**\n     * @hidden\n     * @param container - The parent {@link Container}.\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagnosticNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf,\n                resourceId: id,\n                resultFn: (result) => result.UserDefinedFunctions,\n                query,\n                options: innerOptions,\n                diagnosticNode,\n            });\n        });\n    }\n    /**\n     * Read all User Defined Functions.\n     * @example Read all User Defined Functions to array.\n     * ```ts snippet:UserDefinedFunctionsReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resources: udfList } = await container.scripts.userDefinedFunctions.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a UserDefinedFunction.\n     *\n     * Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     * @example\n     * ```ts snippet:UserDefinedFunctionsCreate\n     * import { CosmosClient, UserDefinedFunctionDefinition } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const udfDefinition: UserDefinedFunctionDefinition = {\n     *   id: \"sample udf\",\n     *   body: \"function () { const x = 10; }\",\n     * };\n     *\n     * const { resource: udf } = await container.scripts.userDefinedFunctions.create(udfDefinition);\n     * ```\n     */\n    async create(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.container.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.container.url);\n            const response = await this.clientContext.create({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.udf,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            const ref = new _UserDefinedFunction_js__WEBPACK_IMPORTED_MODULE_2__.UserDefinedFunction(this.container, response.result.id, this.clientContext);\n            return new _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_3__.UserDefinedFunctionResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=UserDefinedFunctions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlckRlZmluZWRGdW5jdGlvbi9Vc2VyRGVmaW5lZEZ1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBdUc7QUFDaEQ7QUFDUTtBQUNnQjtBQUNTO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkJBQTJCO0FBQ3BDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxnQkFBZ0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGlFQUFlLHFCQUFxQiwwREFBWTtBQUNyRSxtQkFBbUIsK0RBQWE7QUFDaEMsbUJBQW1CLDREQUFhO0FBQ2hDO0FBQ0E7QUFDQSw4QkFBOEIsMERBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxlQUFlO0FBQ3hEO0FBQ0EsZUFBZSxXQUFXLDZDQUE2QyxxQkFBcUI7QUFDNUY7QUFDQSxlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBLGVBQWUscUJBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhDQUE4QztBQUM5RDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZUFBZTtBQUN4RCxlQUFlLFdBQVcsNkNBQTZDLHFCQUFxQjtBQUM1RixlQUFlLFlBQVksZ0RBQWdELHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZUFBZTtBQUM3QztBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpRUFBZTtBQUNoQztBQUNBO0FBQ0EseUJBQXlCLGlFQUFlLHFCQUFxQiwwREFBWTtBQUN6RSx1QkFBdUIsK0RBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUFZO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiw0QkFBNEIsd0VBQW1CO0FBQy9DLHVCQUF1Qix3RkFBMkIsd0RBQXdELGdGQUF5QjtBQUNuSSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlckRlZmluZWRGdW5jdGlvbi9Vc2VyRGVmaW5lZEZ1bmN0aW9ucy5qcz84ZmQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldElkRnJvbUxpbmssIGdldFBhdGhGcm9tTGluaywgaXNSZXNvdXJjZVZhbGlkLCBSZXNvdXJjZVR5cGUsIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuLi8uLi9xdWVyeUl0ZXJhdG9yLmpzXCI7XG5pbXBvcnQgeyBVc2VyRGVmaW5lZEZ1bmN0aW9uIH0gZnJvbSBcIi4vVXNlckRlZmluZWRGdW5jdGlvbi5qc1wiO1xuaW1wb3J0IHsgVXNlckRlZmluZWRGdW5jdGlvblJlc3BvbnNlIH0gZnJvbSBcIi4vVXNlckRlZmluZWRGdW5jdGlvblJlc3BvbnNlLmpzXCI7XG5pbXBvcnQgeyBnZXRFbXB0eUNvc21vc0RpYWdub3N0aWNzLCB3aXRoRGlhZ25vc3RpY3MgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZGlhZ25vc3RpY3MuanNcIjtcbi8qKlxuICogVXNlZCB0byBjcmVhdGUsIHVwc2VydCwgcXVlcnksIG9yIHJlYWQgYWxsIFVzZXIgRGVmaW5lZCBGdW5jdGlvbnMuXG4gKlxuICogQHNlZSB7QGxpbmsgVXNlckRlZmluZWRGdW5jdGlvbn0gdG8gcmVhZCwgcmVwbGFjZSwgb3IgZGVsZXRlIGEgZ2l2ZW4gVXNlciBEZWZpbmVkIEZ1bmN0aW9uIGJ5IGlkLlxuICovXG5leHBvcnQgY2xhc3MgVXNlckRlZmluZWRGdW5jdGlvbnMge1xuICAgIGNvbnRhaW5lcjtcbiAgICBjbGllbnRDb250ZXh0O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyIC0gVGhlIHBhcmVudCB7QGxpbmsgQ29udGFpbmVyfS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGNsaWVudENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuY2xpZW50Q29udGV4dCA9IGNsaWVudENvbnRleHQ7XG4gICAgfVxuICAgIHF1ZXJ5KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUudWRmKTtcbiAgICAgICAgY29uc3QgaWQgPSBnZXRJZEZyb21MaW5rKHRoaXMuY29udGFpbmVyLnVybCk7XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlJdGVyYXRvcih0aGlzLmNsaWVudENvbnRleHQsIHF1ZXJ5LCBvcHRpb25zLCAoZGlhZ25vc3RpY05vZGUsIGlubmVyT3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50Q29udGV4dC5xdWVyeUZlZWQoe1xuICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUudWRmLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIHJlc3VsdEZuOiAocmVzdWx0KSA9PiByZXN1bHQuVXNlckRlZmluZWRGdW5jdGlvbnMsXG4gICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgb3B0aW9uczogaW5uZXJPcHRpb25zLFxuICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGFsbCBVc2VyIERlZmluZWQgRnVuY3Rpb25zLlxuICAgICAqIEBleGFtcGxlIFJlYWQgYWxsIFVzZXIgRGVmaW5lZCBGdW5jdGlvbnMgdG8gYXJyYXkuXG4gICAgICogYGBgdHMgc25pcHBldDpVc2VyRGVmaW5lZEZ1bmN0aW9uc1JlYWRBbGxcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuICAgICAqXG4gICAgICogY29uc3QgZW5kcG9pbnQgPSBcImh0dHBzOi8veW91ci1hY2NvdW50LmRvY3VtZW50cy5henVyZS5jb21cIjtcbiAgICAgKiBjb25zdCBrZXkgPSBcIjxkYXRhYmFzZSBhY2NvdW50IG1hc3RlcmtleT5cIjtcbiAgICAgKiBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IHsgZGF0YWJhc2UgfSA9IGF3YWl0IGNsaWVudC5kYXRhYmFzZXMuY3JlYXRlSWZOb3RFeGlzdHMoeyBpZDogXCJUZXN0IERhdGFiYXNlXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB7IHJlc291cmNlczogdWRmTGlzdCB9ID0gYXdhaXQgY29udGFpbmVyLnNjcmlwdHMudXNlckRlZmluZWRGdW5jdGlvbnMucmVhZEFsbCgpLmZldGNoQWxsKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVhZEFsbChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5KHVuZGVmaW5lZCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIFVzZXJEZWZpbmVkRnVuY3Rpb24uXG4gICAgICpcbiAgICAgKiBBenVyZSBDb3Ntb3MgREIgc3VwcG9ydHMgSmF2YVNjcmlwdCBVREZzIHdoaWNoIGNhbiBiZSB1c2VkIGluc2lkZSBxdWVyaWVzLCBzdG9yZWQgcHJvY2VkdXJlcyBhbmQgdHJpZ2dlcnMuXG4gICAgICpcbiAgICAgKiBGb3IgYWRkaXRpb25hbCBkZXRhaWxzLCByZWZlciB0byB0aGUgc2VydmVyLXNpZGUgSmF2YVNjcmlwdCBBUEkgZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzIHNuaXBwZXQ6VXNlckRlZmluZWRGdW5jdGlvbnNDcmVhdGVcbiAgICAgKiBpbXBvcnQgeyBDb3Ntb3NDbGllbnQsIFVzZXJEZWZpbmVkRnVuY3Rpb25EZWZpbml0aW9uIH0gZnJvbSBcIkBhenVyZS9jb3Ntb3NcIjtcbiAgICAgKlxuICAgICAqIGNvbnN0IGVuZHBvaW50ID0gXCJodHRwczovL3lvdXItYWNjb3VudC5kb2N1bWVudHMuYXp1cmUuY29tXCI7XG4gICAgICogY29uc3Qga2V5ID0gXCI8ZGF0YWJhc2UgYWNjb3VudCBtYXN0ZXJrZXk+XCI7XG4gICAgICogY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG4gICAgICogY29uc3QgeyBkYXRhYmFzZSB9ID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgRGF0YWJhc2VcIiB9KTtcbiAgICAgKiBjb25zdCB7IGNvbnRhaW5lciB9ID0gYXdhaXQgZGF0YWJhc2UuY29udGFpbmVycy5jcmVhdGVJZk5vdEV4aXN0cyh7IGlkOiBcIlRlc3QgQ29udGFpbmVyXCIgfSk7XG4gICAgICpcbiAgICAgKiBjb25zdCB1ZGZEZWZpbml0aW9uOiBVc2VyRGVmaW5lZEZ1bmN0aW9uRGVmaW5pdGlvbiA9IHtcbiAgICAgKiAgIGlkOiBcInNhbXBsZSB1ZGZcIixcbiAgICAgKiAgIGJvZHk6IFwiZnVuY3Rpb24gKCkgeyBjb25zdCB4ID0gMTA7IH1cIixcbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogY29uc3QgeyByZXNvdXJjZTogdWRmIH0gPSBhd2FpdCBjb250YWluZXIuc2NyaXB0cy51c2VyRGVmaW5lZEZ1bmN0aW9ucy5jcmVhdGUodWRmRGVmaW5pdGlvbik7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhEaWFnbm9zdGljcyhhc3luYyAoZGlhZ25vc3RpY05vZGUpID0+IHtcbiAgICAgICAgICAgIGlmIChib2R5LmJvZHkpIHtcbiAgICAgICAgICAgICAgICBib2R5LmJvZHkgPSBib2R5LmJvZHkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVyciA9IHt9O1xuICAgICAgICAgICAgaWYgKCFpc1Jlc291cmNlVmFsaWQoYm9keSwgZXJyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoRnJvbUxpbmsodGhpcy5jb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUudWRmKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZ2V0SWRGcm9tTGluayh0aGlzLmNvbnRhaW5lci51cmwpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudENvbnRleHQuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGUudWRmLFxuICAgICAgICAgICAgICAgIHJlc291cmNlSWQ6IGlkLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlZiA9IG5ldyBVc2VyRGVmaW5lZEZ1bmN0aW9uKHRoaXMuY29udGFpbmVyLCByZXNwb25zZS5yZXN1bHQuaWQsIHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVzZXJEZWZpbmVkRnVuY3Rpb25SZXNwb25zZShyZXNwb25zZS5yZXN1bHQsIHJlc3BvbnNlLmhlYWRlcnMsIHJlc3BvbnNlLmNvZGUsIHJlZiwgZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcygpKTtcbiAgICAgICAgfSwgdGhpcy5jbGllbnRDb250ZXh0KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Vc2VyRGVmaW5lZEZ1bmN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserDefinedFunction: () => (/* reexport safe */ _UserDefinedFunction_js__WEBPACK_IMPORTED_MODULE_0__.UserDefinedFunction),\n/* harmony export */   UserDefinedFunctionResponse: () => (/* reexport safe */ _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_2__.UserDefinedFunctionResponse),\n/* harmony export */   UserDefinedFunctions: () => (/* reexport safe */ _UserDefinedFunctions_js__WEBPACK_IMPORTED_MODULE_1__.UserDefinedFunctions)\n/* harmony export */ });\n/* harmony import */ var _UserDefinedFunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UserDefinedFunction.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunction.js\");\n/* harmony import */ var _UserDefinedFunctions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UserDefinedFunctions.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctions.js\");\n/* harmony import */ var _UserDefinedFunctionResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserDefinedFunctionResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlckRlZmluZWRGdW5jdGlvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQytEO0FBQ0U7QUFDYztBQUMvRSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1VzZXJEZWZpbmVkRnVuY3Rpb24vaW5kZXguanM/ZDI5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IFVzZXJEZWZpbmVkRnVuY3Rpb24gfSBmcm9tIFwiLi9Vc2VyRGVmaW5lZEZ1bmN0aW9uLmpzXCI7XG5leHBvcnQgeyBVc2VyRGVmaW5lZEZ1bmN0aW9ucyB9IGZyb20gXCIuL1VzZXJEZWZpbmVkRnVuY3Rpb25zLmpzXCI7XG5leHBvcnQgeyBVc2VyRGVmaW5lZEZ1bmN0aW9uUmVzcG9uc2UgfSBmcm9tIFwiLi9Vc2VyRGVmaW5lZEZ1bmN0aW9uUmVzcG9uc2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/User.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/User/User.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   User: () => (/* binding */ User)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _Permission_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Permission/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/index.js\");\n/* harmony import */ var _UserResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/UserResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n/**\n * Used to read, replace, and delete Users.\n *\n * Additionally, you can access the permissions for a given user via `user.permission` and `user.permissions`.\n *\n * @see {@link Users} to create, upsert, query, or read all.\n */\nclass User {\n    database;\n    id;\n    clientContext;\n    /**\n     * Operations for creating, upserting, querying, or reading all operations.\n     *\n     * See `client.permission(id)` to read, replace, or delete a specific Permission by id.\n     */\n    permissions;\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createUserUri)(this.database.id, this.id);\n    }\n    /**\n     * @hidden\n     * @param database - The parent {@link Database}.\n     */\n    constructor(database, id, clientContext) {\n        this.database = database;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.permissions = new _Permission_index_js__WEBPACK_IMPORTED_MODULE_1__.Permissions(this, this.clientContext);\n    }\n    /**\n     * Operations to read, replace, or delete a specific Permission by id.\n     *\n     * See `client.permissions` for creating, upserting, querying, or reading all operations.\n     */\n    permission(id) {\n        return new _Permission_index_js__WEBPACK_IMPORTED_MODULE_1__.Permission(this, id, this.clientContext);\n    }\n    /**\n     * Read the {@link UserDefinition} for the given {@link User}.\n     * @example\n     * ```ts snippet:UserRead\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { resource: user } = await database.user(\"<user-id>\").read();\n     * ```\n     */\n    async read(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.read({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _UserResponse_js__WEBPACK_IMPORTED_MODULE_2__.UserResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Replace the given {@link User}'s definition with the specified {@link UserDefinition}.\n     * @param body - The specified {@link UserDefinition} to replace the definition.\n     * @example\n     * ```ts snippet:UserReplace\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { resource: user } = await database.user(\"<user-id>\").read();\n     * user.id = \"<new user id>\";\n     *\n     * await database.user(\"<user-id>\").replace(user);\n     * ```\n     */\n    async replace(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.replace({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _UserResponse_js__WEBPACK_IMPORTED_MODULE_2__.UserResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Delete the given {@link User}.\n     * @example\n     * ```ts snippet:UserDelete\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * await database.user(\"<user-id>\").delete();\n     * ```\n     */\n    async delete(options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.withDiagnostics)(async (diagnosticNode) => {\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.url);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.url);\n            const response = await this.clientContext.delete({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            return new _UserResponse_js__WEBPACK_IMPORTED_MODULE_2__.UserResponse(response.result, response.headers, response.code, this, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=User.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/User.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/UserResponse.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/User/UserResponse.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserResponse: () => (/* binding */ UserResponse)\n/* harmony export */ });\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n\nclass UserResponse extends _request_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, user, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.user = user;\n    }\n    /** A reference to the {@link User} corresponding to the returned {@link UserDefinition}. */\n    user;\n}\n//# sourceMappingURL=UserResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlci9Vc2VyUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDbkQsMkJBQTJCLCtEQUFnQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixZQUFZLCtCQUErQixxQkFBcUI7QUFDNUY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlci9Vc2VyUmVzcG9uc2UuanM/NTFlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZVJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvaW5kZXguanNcIjtcbmV4cG9ydCBjbGFzcyBVc2VyUmVzcG9uc2UgZXh0ZW5kcyBSZXNvdXJjZVJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgdXNlciwgZGlhZ25vc3RpY3MpIHtcbiAgICAgICAgc3VwZXIocmVzb3VyY2UsIGhlYWRlcnMsIHN0YXR1c0NvZGUsIGRpYWdub3N0aWNzKTtcbiAgICAgICAgdGhpcy51c2VyID0gdXNlcjtcbiAgICB9XG4gICAgLyoqIEEgcmVmZXJlbmNlIHRvIHRoZSB7QGxpbmsgVXNlcn0gY29ycmVzcG9uZGluZyB0byB0aGUgcmV0dXJuZWQge0BsaW5rIFVzZXJEZWZpbml0aW9ufS4gKi9cbiAgICB1c2VyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXNlclJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/UserResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/Users.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/User/Users.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Users: () => (/* binding */ Users)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _User_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./User.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/User.js\");\n/* harmony import */ var _UserResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UserResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/UserResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n\n\n\n\n\n/**\n * Used to create, upsert, query, and read all users.\n *\n * @see {@link User} to read, replace, or delete a specific User by id.\n */\nclass Users {\n    database;\n    clientContext;\n    /**\n     * @hidden\n     * @param database - The parent {@link Database}.\n     */\n    constructor(database, clientContext) {\n        this.database = database;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.database.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user);\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.database.url);\n        return new _queryIterator_js__WEBPACK_IMPORTED_MODULE_1__.QueryIterator(this.clientContext, query, options, (diagnosticNode, innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                resultFn: (result) => result.Users,\n                query,\n                options: innerOptions,\n                diagnosticNode,\n            });\n        });\n    }\n    /**\n     * Read all users.-\n     * @example Read all users to array.\n     * ```ts snippet:UsersReadAll\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { resources: usersList } = await database.users.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a database user with the specified {@link UserDefinition}.\n     * @param body - The specified {@link UserDefinition}.\n     * @example\n     * ```ts snippet:UsersCreate\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * await database.users.create({ id: \"<user-id>\" });\n     * ```\n     */\n    async create(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.database.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.database.url);\n            const response = await this.clientContext.create({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            const ref = new _User_js__WEBPACK_IMPORTED_MODULE_2__.User(this.database, response.result.id, this.clientContext);\n            return new _UserResponse_js__WEBPACK_IMPORTED_MODULE_3__.UserResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n    /**\n     * Upsert a database user with a specified {@link UserDefinition}.\n     * @param body - The specified {@link UserDefinition}.\n     * @example\n     * ```ts snippet:UsersUpsert\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * await database.users.upsert({ id: \"<user-id>\" });\n     * ```\n     */\n    async upsert(body, options) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            const err = {};\n            if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isResourceValid)(body, err)) {\n                throw err;\n            }\n            const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.database.url, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user);\n            const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.database.url);\n            const response = await this.clientContext.upsert({\n                body,\n                path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.user,\n                resourceId: id,\n                options,\n                diagnosticNode,\n            });\n            const ref = new _User_js__WEBPACK_IMPORTED_MODULE_2__.User(this.database, response.result.id, this.clientContext);\n            return new _UserResponse_js__WEBPACK_IMPORTED_MODULE_3__.UserResponse(response.result, response.headers, response.code, ref, (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=Users.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/Users.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/User/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   User: () => (/* reexport safe */ _User_js__WEBPACK_IMPORTED_MODULE_0__.User),\n/* harmony export */   UserResponse: () => (/* reexport safe */ _UserResponse_js__WEBPACK_IMPORTED_MODULE_2__.UserResponse),\n/* harmony export */   Users: () => (/* reexport safe */ _Users_js__WEBPACK_IMPORTED_MODULE_1__.Users)\n/* harmony export */ });\n/* harmony import */ var _User_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./User.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/User.js\");\n/* harmony import */ var _Users_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Users.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/Users.js\");\n/* harmony import */ var _UserResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/UserResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvVXNlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2lDO0FBQ0U7QUFDYztBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY2xpZW50L1VzZXIvaW5kZXguanM/OWM3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IFVzZXIgfSBmcm9tIFwiLi9Vc2VyLmpzXCI7XG5leHBvcnQgeyBVc2VycyB9IGZyb20gXCIuL1VzZXJzLmpzXCI7XG5leHBvcnQgeyBVc2VyUmVzcG9uc2UgfSBmcm9tIFwiLi9Vc2VyUmVzcG9uc2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/client/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/client/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Conflict: () => (/* reexport safe */ _Conflict_index_js__WEBPACK_IMPORTED_MODULE_0__.Conflict),\n/* harmony export */   ConflictResolutionMode: () => (/* reexport safe */ _Conflict_index_js__WEBPACK_IMPORTED_MODULE_0__.ConflictResolutionMode),\n/* harmony export */   ConflictResponse: () => (/* reexport safe */ _Conflict_index_js__WEBPACK_IMPORTED_MODULE_0__.ConflictResponse),\n/* harmony export */   Conflicts: () => (/* reexport safe */ _Conflict_index_js__WEBPACK_IMPORTED_MODULE_0__.Conflicts),\n/* harmony export */   Container: () => (/* reexport safe */ _Container_index_js__WEBPACK_IMPORTED_MODULE_1__.Container),\n/* harmony export */   ContainerResponse: () => (/* reexport safe */ _Container_index_js__WEBPACK_IMPORTED_MODULE_1__.ContainerResponse),\n/* harmony export */   Containers: () => (/* reexport safe */ _Container_index_js__WEBPACK_IMPORTED_MODULE_1__.Containers),\n/* harmony export */   Database: () => (/* reexport safe */ _Database_index_js__WEBPACK_IMPORTED_MODULE_2__.Database),\n/* harmony export */   DatabaseResponse: () => (/* reexport safe */ _Database_index_js__WEBPACK_IMPORTED_MODULE_2__.DatabaseResponse),\n/* harmony export */   Databases: () => (/* reexport safe */ _Database_index_js__WEBPACK_IMPORTED_MODULE_2__.Databases),\n/* harmony export */   Item: () => (/* reexport safe */ _Item_index_js__WEBPACK_IMPORTED_MODULE_3__.Item),\n/* harmony export */   ItemResponse: () => (/* reexport safe */ _Item_index_js__WEBPACK_IMPORTED_MODULE_3__.ItemResponse),\n/* harmony export */   Items: () => (/* reexport safe */ _Item_index_js__WEBPACK_IMPORTED_MODULE_3__.Items),\n/* harmony export */   Offer: () => (/* reexport safe */ _Offer_index_js__WEBPACK_IMPORTED_MODULE_4__.Offer),\n/* harmony export */   OfferResponse: () => (/* reexport safe */ _Offer_index_js__WEBPACK_IMPORTED_MODULE_4__.OfferResponse),\n/* harmony export */   Offers: () => (/* reexport safe */ _Offer_index_js__WEBPACK_IMPORTED_MODULE_4__.Offers),\n/* harmony export */   Permission: () => (/* reexport safe */ _Permission_index_js__WEBPACK_IMPORTED_MODULE_5__.Permission),\n/* harmony export */   PermissionResponse: () => (/* reexport safe */ _Permission_index_js__WEBPACK_IMPORTED_MODULE_5__.PermissionResponse),\n/* harmony export */   Permissions: () => (/* reexport safe */ _Permission_index_js__WEBPACK_IMPORTED_MODULE_5__.Permissions),\n/* harmony export */   SasTokenProperties: () => (/* reexport safe */ _SasToken_SasTokenProperties_js__WEBPACK_IMPORTED_MODULE_11__.SasTokenProperties),\n/* harmony export */   StoredProcedure: () => (/* reexport safe */ _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_6__.StoredProcedure),\n/* harmony export */   StoredProcedureResponse: () => (/* reexport safe */ _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_6__.StoredProcedureResponse),\n/* harmony export */   StoredProcedures: () => (/* reexport safe */ _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_6__.StoredProcedures),\n/* harmony export */   Trigger: () => (/* reexport safe */ _Trigger_index_js__WEBPACK_IMPORTED_MODULE_7__.Trigger),\n/* harmony export */   TriggerResponse: () => (/* reexport safe */ _Trigger_index_js__WEBPACK_IMPORTED_MODULE_7__.TriggerResponse),\n/* harmony export */   Triggers: () => (/* reexport safe */ _Trigger_index_js__WEBPACK_IMPORTED_MODULE_7__.Triggers),\n/* harmony export */   User: () => (/* reexport safe */ _User_index_js__WEBPACK_IMPORTED_MODULE_8__.User),\n/* harmony export */   UserDefinedFunction: () => (/* reexport safe */ _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_9__.UserDefinedFunction),\n/* harmony export */   UserDefinedFunctionResponse: () => (/* reexport safe */ _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_9__.UserDefinedFunctionResponse),\n/* harmony export */   UserDefinedFunctions: () => (/* reexport safe */ _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_9__.UserDefinedFunctions),\n/* harmony export */   UserResponse: () => (/* reexport safe */ _User_index_js__WEBPACK_IMPORTED_MODULE_8__.UserResponse),\n/* harmony export */   Users: () => (/* reexport safe */ _User_index_js__WEBPACK_IMPORTED_MODULE_8__.Users)\n/* harmony export */ });\n/* harmony import */ var _Conflict_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Conflict/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Conflict/index.js\");\n/* harmony import */ var _Container_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Container/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Container/index.js\");\n/* harmony import */ var _Database_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Database/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Database/index.js\");\n/* harmony import */ var _Item_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Item/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Item/index.js\");\n/* harmony import */ var _Offer_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Offer/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Offer/index.js\");\n/* harmony import */ var _Permission_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Permission/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Permission/index.js\");\n/* harmony import */ var _StoredProcedure_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./StoredProcedure/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/StoredProcedure/index.js\");\n/* harmony import */ var _Trigger_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Trigger/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Trigger/index.js\");\n/* harmony import */ var _User_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./User/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/User/index.js\");\n/* harmony import */ var _UserDefinedFunction_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./UserDefinedFunction/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/UserDefinedFunction/index.js\");\n/* harmony import */ var _Resource_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Resource.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Resource.js\");\n/* harmony import */ var _SasToken_SasTokenProperties_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./SasToken/SasTokenProperties.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/SasToken/SasTokenProperties.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ29DO0FBQ0M7QUFDRDtBQUNKO0FBQ0M7QUFDSztBQUNLO0FBQ1I7QUFDSDtBQUNlO0FBQ2pCO0FBQ21CO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jbGllbnQvaW5kZXguanM/N2IyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCAqIGZyb20gXCIuL0NvbmZsaWN0L2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Db250YWluZXIvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0RhdGFiYXNlL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9JdGVtL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9PZmZlci9pbmRleC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUGVybWlzc2lvbi9pbmRleC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vU3RvcmVkUHJvY2VkdXJlL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9UcmlnZ2VyL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Vc2VyL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Vc2VyRGVmaW5lZEZ1bmN0aW9uL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9SZXNvdXJjZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vU2FzVG9rZW4vU2FzVG9rZW5Qcm9wZXJ0aWVzLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/client/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Constants: () => (/* binding */ Constants),\n/* harmony export */   CosmosContainerChildResourceKind: () => (/* binding */ CosmosContainerChildResourceKind),\n/* harmony export */   CosmosKeyType: () => (/* binding */ CosmosKeyType),\n/* harmony export */   HTTPMethod: () => (/* binding */ HTTPMethod),\n/* harmony export */   OperationType: () => (/* binding */ OperationType),\n/* harmony export */   PartitionAvailablilityStatus: () => (/* binding */ PartitionAvailablilityStatus),\n/* harmony export */   PermissionScopeValues: () => (/* binding */ PermissionScopeValues),\n/* harmony export */   QueryFeature: () => (/* binding */ QueryFeature),\n/* harmony export */   ResourceType: () => (/* binding */ ResourceType),\n/* harmony export */   SDKSupportedCapabilities: () => (/* binding */ SDKSupportedCapabilities),\n/* harmony export */   SasTokenPermissionKind: () => (/* binding */ SasTokenPermissionKind),\n/* harmony export */   UserAgentFeatureFlags: () => (/* binding */ UserAgentFeatureFlags)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @hidden\n */\nconst Constants = {\n    HttpHeaders: {\n        Authorization: \"authorization\",\n        ETag: \"etag\",\n        MethodOverride: \"X-HTTP-Method\",\n        Slug: \"Slug\",\n        ContentType: \"Content-Type\",\n        LastModified: \"Last-Modified\",\n        ContentEncoding: \"Content-Encoding\",\n        CharacterSet: \"CharacterSet\",\n        UserAgent: \"User-Agent\",\n        CustomUserAgent: \"x-ms-useragent\",\n        IfModifiedSince: \"If-Modified-Since\",\n        IfMatch: \"If-Match\",\n        IfNoneMatch: \"If-None-Match\",\n        ContentLength: \"Content-Length\",\n        AcceptEncoding: \"Accept-Encoding\",\n        KeepAlive: \"Keep-Alive\",\n        CacheControl: \"Cache-Control\",\n        TransferEncoding: \"Transfer-Encoding\",\n        ContentLanguage: \"Content-Language\",\n        ContentLocation: \"Content-Location\",\n        ContentMd5: \"Content-Md5\",\n        ContentRange: \"Content-Range\",\n        Accept: \"Accept\",\n        AcceptCharset: \"Accept-Charset\",\n        AcceptLanguage: \"Accept-Language\",\n        IfRange: \"If-Range\",\n        IfUnmodifiedSince: \"If-Unmodified-Since\",\n        MaxForwards: \"Max-Forwards\",\n        ProxyAuthorization: \"Proxy-Authorization\",\n        AcceptRanges: \"Accept-Ranges\",\n        ProxyAuthenticate: \"Proxy-Authenticate\",\n        RetryAfter: \"Retry-After\",\n        SetCookie: \"Set-Cookie\",\n        WwwAuthenticate: \"Www-Authenticate\",\n        Origin: \"Origin\",\n        Host: \"Host\",\n        AccessControlAllowOrigin: \"Access-Control-Allow-Origin\",\n        AccessControlAllowHeaders: \"Access-Control-Allow-Headers\",\n        KeyValueEncodingFormat: \"application/x-www-form-urlencoded\",\n        WrapAssertionFormat: \"wrap_assertion_format\",\n        WrapAssertion: \"wrap_assertion\",\n        WrapScope: \"wrap_scope\",\n        SimpleToken: \"SWT\",\n        HttpDate: \"date\",\n        Prefer: \"Prefer\",\n        Location: \"Location\",\n        Referer: \"referer\",\n        A_IM: \"A-IM\",\n        PreferReturnMinimal: \"return=minimal\",\n        // Query\n        Query: \"x-ms-documentdb-query\",\n        IsQuery: \"x-ms-documentdb-isquery\",\n        IsQueryPlan: \"x-ms-cosmos-is-query-plan-request\",\n        SupportedQueryFeatures: \"x-ms-cosmos-supported-query-features\",\n        QueryVersion: \"x-ms-cosmos-query-version\",\n        // Our custom Azure Cosmos DB headers\n        Continuation: \"x-ms-continuation\",\n        ContinuationToken: \"x-ms-continuation-token\",\n        PageSize: \"x-ms-max-item-count\",\n        ItemCount: \"x-ms-item-count\",\n        ChangeFeedWireFormatVersion: \"x-ms-cosmos-changefeed-wire-format-version\",\n        // Request sender generated. Simply echoed by backend.\n        ActivityId: \"x-ms-activity-id\",\n        CorrelatedActivityId: \"x-ms-cosmos-correlated-activityid\",\n        PreTriggerInclude: \"x-ms-documentdb-pre-trigger-include\",\n        PreTriggerExclude: \"x-ms-documentdb-pre-trigger-exclude\",\n        PostTriggerInclude: \"x-ms-documentdb-post-trigger-include\",\n        PostTriggerExclude: \"x-ms-documentdb-post-trigger-exclude\",\n        IndexingDirective: \"x-ms-indexing-directive\",\n        SessionToken: \"x-ms-session-token\",\n        ConsistencyLevel: \"x-ms-consistency-level\",\n        XDate: \"x-ms-date\",\n        CollectionPartitionInfo: \"x-ms-collection-partition-info\",\n        CollectionServiceInfo: \"x-ms-collection-service-info\",\n        // Deprecated, use RetryAfterInMs instead.\n        RetryAfterInMilliseconds: \"x-ms-retry-after-ms\",\n        RetryAfterInMs: \"x-ms-retry-after-ms\",\n        IsFeedUnfiltered: \"x-ms-is-feed-unfiltered\",\n        ResourceTokenExpiry: \"x-ms-documentdb-expiry-seconds\",\n        EnableScanInQuery: \"x-ms-documentdb-query-enable-scan\",\n        EmitVerboseTracesInQuery: \"x-ms-documentdb-query-emit-traces\",\n        EnableCrossPartitionQuery: \"x-ms-documentdb-query-enablecrosspartition\",\n        ParallelizeCrossPartitionQuery: \"x-ms-documentdb-query-parallelizecrosspartitionquery\",\n        ResponseContinuationTokenLimitInKB: \"x-ms-documentdb-responsecontinuationtokenlimitinkb\",\n        SDKSupportedCapabilities: \"x-ms-cosmos-sdk-supportedcapabilities\",\n        // QueryMetrics\n        // Request header to tell backend to give you query metrics.\n        PopulateQueryMetrics: \"x-ms-documentdb-populatequerymetrics\",\n        // Response header that holds the serialized version of query metrics.\n        QueryMetrics: \"x-ms-documentdb-query-metrics\",\n        // IndexMetrics\n        // Request header to tell backend to give you index metrics.\n        PopulateIndexMetrics: \"x-ms-cosmos-populateindexmetrics-V2\",\n        // Response header that holds the serialized version of index metrics.\n        IndexUtilization: \"x-ms-cosmos-index-utilization\",\n        // Version headers and values\n        Version: \"x-ms-version\",\n        // Owner name\n        OwnerFullName: \"x-ms-alt-content-path\",\n        // Owner ID used for name based request in session token.\n        OwnerId: \"x-ms-content-path\",\n        // Partition Key\n        PartitionKey: \"x-ms-documentdb-partitionkey\",\n        PartitionKeyRangeID: \"x-ms-documentdb-partitionkeyrangeid\",\n        // Epk Range headers\n        StartEpk: \"x-ms-start-epk\",\n        EndEpk: \"x-ms-end-epk\",\n        // Read Feed Type\n        ReadFeedKeyType: \"x-ms-read-key-type\",\n        // Quota Info\n        MaxEntityCount: \"x-ms-root-entity-max-count\",\n        CurrentEntityCount: \"x-ms-root-entity-current-count\",\n        CollectionQuotaInMb: \"x-ms-collection-quota-mb\",\n        CollectionCurrentUsageInMb: \"x-ms-collection-usage-mb\",\n        MaxMediaStorageUsageInMB: \"x-ms-max-media-storage-usage-mb\",\n        CurrentMediaStorageUsageInMB: \"x-ms-media-storage-usage-mb\",\n        RequestCharge: \"x-ms-request-charge\",\n        PopulateQuotaInfo: \"x-ms-documentdb-populatequotainfo\",\n        MaxResourceQuota: \"x-ms-resource-quota\",\n        // Offer header\n        OfferType: \"x-ms-offer-type\",\n        OfferThroughput: \"x-ms-offer-throughput\",\n        AutoscaleSettings: \"x-ms-cosmos-offer-autopilot-settings\",\n        // Custom RUs/minute headers\n        DisableRUPerMinuteUsage: \"x-ms-documentdb-disable-ru-per-minute-usage\",\n        IsRUPerMinuteUsed: \"x-ms-documentdb-is-ru-per-minute-used\",\n        OfferIsRUPerMinuteThroughputEnabled: \"x-ms-offer-is-ru-per-minute-throughput-enabled\",\n        // Index progress headers\n        IndexTransformationProgress: \"x-ms-documentdb-collection-index-transformation-progress\",\n        LazyIndexingProgress: \"x-ms-documentdb-collection-lazy-indexing-progress\",\n        // Upsert header\n        IsUpsert: \"x-ms-documentdb-is-upsert\",\n        // Sub status of the error\n        SubStatus: \"x-ms-substatus\",\n        // StoredProcedure related headers\n        EnableScriptLogging: \"x-ms-documentdb-script-enable-logging\",\n        ScriptLogResults: \"x-ms-documentdb-script-log-results\",\n        // Multi-Region Write\n        ALLOW_MULTIPLE_WRITES: \"x-ms-cosmos-allow-tentative-writes\",\n        // Bulk/Batch header\n        IsBatchRequest: \"x-ms-cosmos-is-batch-request\",\n        IsBatchAtomic: \"x-ms-cosmos-batch-atomic\",\n        BatchContinueOnError: \"x-ms-cosmos-batch-continue-on-error\",\n        // Dedicated Gateway Headers\n        DedicatedGatewayPerRequestCacheStaleness: \"x-ms-dedicatedgateway-max-age\",\n        DedicatedGatewayPerRequestBypassCache: \"x-ms-dedicatedgateway-bypass-cache\",\n        // Cache Refresh header\n        ForceRefresh: \"x-ms-force-refresh\",\n        // Throughput related headers\n        PriorityLevel: \"x-ms-cosmos-priority-level\",\n        ThroughputBucket: \"x-ms-cosmos-throughput-bucket\",\n        // Encryption Headers\n        IsClientEncryptedHeader: \"x-ms-cosmos-is-client-encrypted\",\n        IntendedCollectionHeader: \"x-ms-cosmos-intended-collection-rid\",\n        DatabaseRidHeader: \"x-ms-cosmos-database-rid\",\n        AllowCachedReadsHeader: \"x-ms-cosmos-allow-cachedreads\",\n    },\n    // ThrottledRequests Retry policy default values\n    ThrottledRequestMaxRetryAttemptCount: 9,\n    ThrottledRequestMaxWaitTimeInSeconds: 30,\n    ThrottledRequestFixedRetryIntervalInMs: 0,\n    // GlobalDB related constants\n    WritableLocations: \"writableLocations\",\n    ReadableLocations: \"readableLocations\",\n    LocationUnavailableExpirationTimeInMs: 5 * 60 * 1000, // 5 minutes\n    StalePartitionUnavailabilityRefreshIntervalInMs: 1 * 60 * 1000, // 1 minute\n    AllowedPartitionUnavailabilityDurationInMs: 5 * 60 * 1000, // 5 minutes\n    ReadRequestFailureCountThreshold: 10,\n    WriteRequestFailureCountThreshold: 5,\n    ConsecutiveFailureCountResetIntervalInMS: 1000 * 60 * 1, // 1 minute\n    // ServiceDocument Resource\n    ENABLE_MULTIPLE_WRITABLE_LOCATIONS: \"enableMultipleWriteLocations\",\n    // Background refresh time\n    DefaultUnavailableLocationExpirationTimeMS: 5 * 60 * 1000,\n    // Client generated retry count response header\n    ThrottleRetryCount: \"x-ms-throttle-retry-count\",\n    ThrottleRetryWaitTimeInMs: \"x-ms-throttle-retry-wait-time-ms\",\n    // Platform\n    CurrentVersion: \"2020-07-15\",\n    AzureNamespace: \"Azure.Cosmos\",\n    AzurePackageName: \"@azure/cosmos\",\n    SDKName: \"azure-cosmos-js\",\n    SDKVersion: \"4.5.1\",\n    // Diagnostics\n    CosmosDbDiagnosticLevelEnvVarName: \"AZURE_COSMOSDB_DIAGNOSTICS_LEVEL\",\n    // Bulk Operations\n    DefaultMaxBulkRequestBodySizeInBytes: 220201,\n    MaxBulkOperationsCount: 100,\n    BulkMaxDegreeOfConcurrency: 20,\n    // Encryption\n    Encryption: {\n        DiagnosticsDecryptOperation: \"Decrypt\",\n        DiagnosticsDuration: \"Duration in milliseconds\",\n        DiagnosticsEncryptionDiagnostics: \"EncryptionDiagnostics\",\n        DiagnosticsEncryptOperation: \"Encrypt\",\n        DiagnosticsPropertiesEncryptedCount: \"Properties Encrypted Count\",\n        DiagnosticsPropertiesDecryptedCount: \"Properties Decrypted Count\",\n        DiagnosticsStartTime: \"Start time\",\n    },\n    Quota: {\n        CollectionSize: \"collectionSize\",\n    },\n    Path: {\n        Root: \"/\",\n        DatabasesPathSegment: \"dbs\",\n        CollectionsPathSegment: \"colls\",\n        UsersPathSegment: \"users\",\n        DocumentsPathSegment: \"docs\",\n        PermissionsPathSegment: \"permissions\",\n        StoredProceduresPathSegment: \"sprocs\",\n        TriggersPathSegment: \"triggers\",\n        UserDefinedFunctionsPathSegment: \"udfs\",\n        ConflictsPathSegment: \"conflicts\",\n        AttachmentsPathSegment: \"attachments\",\n        PartitionKeyRangesPathSegment: \"pkranges\",\n        SchemasPathSegment: \"schemas\",\n        OffersPathSegment: \"offers\",\n        TopologyPathSegment: \"topology\",\n        DatabaseAccountPathSegment: \"databaseaccount\",\n    },\n    PartitionKeyRange: {\n        // Partition Key Range Constants\n        MinInclusive: \"minInclusive\",\n        MaxExclusive: \"maxExclusive\",\n        Id: \"id\",\n    },\n    QueryRangeConstants: {\n        // Partition Key Range Constants\n        MinInclusive: \"minInclusive\",\n        MaxExclusive: \"maxExclusive\",\n        min: \"min\",\n    },\n    /**\n     * @deprecated Use EffectivePartitionKeyConstants instead\n     */\n    EffectiveParitionKeyConstants: {\n        MinimumInclusiveEffectivePartitionKey: \"\",\n        MaximumExclusiveEffectivePartitionKey: \"FF\",\n    },\n    EffectivePartitionKeyConstants: {\n        MinimumInclusiveEffectivePartitionKey: \"\",\n        MaximumExclusiveEffectivePartitionKey: \"FF\",\n    },\n    // Changefeed AllVersionsAndDeletesMode formatting version\n    AllVersionsAndDeletesChangeFeedWireFormatVersion: \"2021-09-15\",\n    ChangeFeedIfNoneMatchStartFromNowHeader: \"*\",\n    // Default TTL for encryption caches is 2 hrs (7200 sec)\n    DefaultEncryptionCacheTimeToLiveInSeconds: 7200,\n    // Timeout to clear encryption related cache\n    EncryptionCacheRefreshIntervalInMs: 60000, // 1 minute\n    RequestTimeoutForReadsInMs: 2000, // 2 seconds\n};\n/**\n * @hidden\n */\nvar ResourceType;\n(function (ResourceType) {\n    ResourceType[\"none\"] = \"\";\n    ResourceType[\"database\"] = \"dbs\";\n    ResourceType[\"offer\"] = \"offers\";\n    ResourceType[\"user\"] = \"users\";\n    ResourceType[\"permission\"] = \"permissions\";\n    ResourceType[\"container\"] = \"colls\";\n    ResourceType[\"conflicts\"] = \"conflicts\";\n    ResourceType[\"sproc\"] = \"sprocs\";\n    ResourceType[\"udf\"] = \"udfs\";\n    ResourceType[\"trigger\"] = \"triggers\";\n    ResourceType[\"item\"] = \"docs\";\n    ResourceType[\"pkranges\"] = \"pkranges\";\n    ResourceType[\"partitionkey\"] = \"partitionKey\";\n    /** resource representing client encryption keys to encrypt/decrypt data */\n    ResourceType[\"clientencryptionkey\"] = \"clientencryptionkeys\";\n})(ResourceType || (ResourceType = {}));\n/**\n * @hidden\n */\nvar HTTPMethod;\n(function (HTTPMethod) {\n    HTTPMethod[\"get\"] = \"GET\";\n    HTTPMethod[\"patch\"] = \"PATCH\";\n    HTTPMethod[\"post\"] = \"POST\";\n    HTTPMethod[\"put\"] = \"PUT\";\n    HTTPMethod[\"delete\"] = \"DELETE\";\n})(HTTPMethod || (HTTPMethod = {}));\n/**\n * @hidden\n */\nvar OperationType;\n(function (OperationType) {\n    OperationType[\"Create\"] = \"create\";\n    OperationType[\"Replace\"] = \"replace\";\n    OperationType[\"Upsert\"] = \"upsert\";\n    OperationType[\"Delete\"] = \"delete\";\n    OperationType[\"Read\"] = \"read\";\n    OperationType[\"Query\"] = \"query\";\n    OperationType[\"Execute\"] = \"execute\";\n    OperationType[\"Batch\"] = \"batch\";\n    OperationType[\"Patch\"] = \"patch\";\n})(OperationType || (OperationType = {}));\n/**\n * @hidden\n */\nvar CosmosKeyType;\n(function (CosmosKeyType) {\n    CosmosKeyType[\"PrimaryMaster\"] = \"PRIMARY_MASTER\";\n    CosmosKeyType[\"SecondaryMaster\"] = \"SECONDARY_MASTER\";\n    CosmosKeyType[\"PrimaryReadOnly\"] = \"PRIMARY_READONLY\";\n    CosmosKeyType[\"SecondaryReadOnly\"] = \"SECONDARY_READONLY\";\n})(CosmosKeyType || (CosmosKeyType = {}));\n/**\n * @hidden\n */\nvar CosmosContainerChildResourceKind;\n(function (CosmosContainerChildResourceKind) {\n    CosmosContainerChildResourceKind[\"Item\"] = \"ITEM\";\n    CosmosContainerChildResourceKind[\"StoredProcedure\"] = \"STORED_PROCEDURE\";\n    CosmosContainerChildResourceKind[\"UserDefinedFunction\"] = \"USER_DEFINED_FUNCTION\";\n    CosmosContainerChildResourceKind[\"Trigger\"] = \"TRIGGER\";\n})(CosmosContainerChildResourceKind || (CosmosContainerChildResourceKind = {}));\n/**\n * @hidden\n */\nvar PermissionScopeValues;\n(function (PermissionScopeValues) {\n    /**\n     * Values which set permission Scope applicable to control plane related operations.\n     */\n    PermissionScopeValues[PermissionScopeValues[\"ScopeAccountReadValue\"] = 1] = \"ScopeAccountReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeAccountListDatabasesValue\"] = 2] = \"ScopeAccountListDatabasesValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseReadValue\"] = 4] = \"ScopeDatabaseReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseReadOfferValue\"] = 8] = \"ScopeDatabaseReadOfferValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseListContainerValue\"] = 16] = \"ScopeDatabaseListContainerValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadValue\"] = 32] = \"ScopeContainerReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadOfferValue\"] = 64] = \"ScopeContainerReadOfferValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeAccountCreateDatabasesValue\"] = 1] = \"ScopeAccountCreateDatabasesValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeAccountDeleteDatabasesValue\"] = 2] = \"ScopeAccountDeleteDatabasesValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseDeleteValue\"] = 4] = \"ScopeDatabaseDeleteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseReplaceOfferValue\"] = 8] = \"ScopeDatabaseReplaceOfferValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseCreateContainerValue\"] = 16] = \"ScopeDatabaseCreateContainerValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseDeleteContainerValue\"] = 32] = \"ScopeDatabaseDeleteContainerValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReplaceValue\"] = 64] = \"ScopeContainerReplaceValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerDeleteValue\"] = 128] = \"ScopeContainerDeleteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReplaceOfferValue\"] = 256] = \"ScopeContainerReplaceOfferValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeAccountReadAllAccessValue\"] = 65535] = \"ScopeAccountReadAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseReadAllAccessValue\"] = 124] = \"ScopeDatabaseReadAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainersReadAllAccessValue\"] = 96] = \"ScopeContainersReadAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeAccountWriteAllAccessValue\"] = 65535] = \"ScopeAccountWriteAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeDatabaseWriteAllAccessValue\"] = 508] = \"ScopeDatabaseWriteAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainersWriteAllAccessValue\"] = 448] = \"ScopeContainersWriteAllAccessValue\";\n    /**\n     * Values which set permission Scope applicable to data plane related operations.\n     */\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerExecuteQueriesValue\"] = 1] = \"ScopeContainerExecuteQueriesValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadFeedsValue\"] = 2] = \"ScopeContainerReadFeedsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadStoredProceduresValue\"] = 4] = \"ScopeContainerReadStoredProceduresValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadUserDefinedFunctionsValue\"] = 8] = \"ScopeContainerReadUserDefinedFunctionsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadTriggersValue\"] = 16] = \"ScopeContainerReadTriggersValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadConflictsValue\"] = 32] = \"ScopeContainerReadConflictsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeItemReadValue\"] = 64] = \"ScopeItemReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeStoredProcedureReadValue\"] = 128] = \"ScopeStoredProcedureReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeUserDefinedFunctionReadValue\"] = 256] = \"ScopeUserDefinedFunctionReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeTriggerReadValue\"] = 512] = \"ScopeTriggerReadValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerCreateItemsValue\"] = 1] = \"ScopeContainerCreateItemsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReplaceItemsValue\"] = 2] = \"ScopeContainerReplaceItemsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerUpsertItemsValue\"] = 4] = \"ScopeContainerUpsertItemsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerDeleteItemsValue\"] = 8] = \"ScopeContainerDeleteItemsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerCreateStoredProceduresValue\"] = 16] = \"ScopeContainerCreateStoredProceduresValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReplaceStoredProceduresValue\"] = 32] = \"ScopeContainerReplaceStoredProceduresValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerDeleteStoredProceduresValue\"] = 64] = \"ScopeContainerDeleteStoredProceduresValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerExecuteStoredProceduresValue\"] = 128] = \"ScopeContainerExecuteStoredProceduresValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerCreateTriggersValue\"] = 256] = \"ScopeContainerCreateTriggersValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReplaceTriggersValue\"] = 512] = \"ScopeContainerReplaceTriggersValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerDeleteTriggersValue\"] = 1024] = \"ScopeContainerDeleteTriggersValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerCreateUserDefinedFunctionsValue\"] = 2048] = \"ScopeContainerCreateUserDefinedFunctionsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReplaceUserDefinedFunctionsValue\"] = 4096] = \"ScopeContainerReplaceUserDefinedFunctionsValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerDeleteUserDefinedFunctionSValue\"] = 8192] = \"ScopeContainerDeleteUserDefinedFunctionSValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerDeleteCONFLICTSValue\"] = 16384] = \"ScopeContainerDeleteCONFLICTSValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeItemReplaceValue\"] = 65536] = \"ScopeItemReplaceValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeItemUpsertValue\"] = 131072] = \"ScopeItemUpsertValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeItemDeleteValue\"] = 262144] = \"ScopeItemDeleteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeStoredProcedureReplaceValue\"] = 1048576] = \"ScopeStoredProcedureReplaceValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeStoredProcedureDeleteValue\"] = 2097152] = \"ScopeStoredProcedureDeleteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeStoredProcedureExecuteValue\"] = 4194304] = \"ScopeStoredProcedureExecuteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeUserDefinedFunctionReplaceValue\"] = 8388608] = \"ScopeUserDefinedFunctionReplaceValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeUserDefinedFunctionDeleteValue\"] = 16777216] = \"ScopeUserDefinedFunctionDeleteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeTriggerReplaceValue\"] = 33554432] = \"ScopeTriggerReplaceValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeTriggerDeleteValue\"] = 67108864] = \"ScopeTriggerDeleteValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerReadAllAccessValue\"] = 4294967295] = \"ScopeContainerReadAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeItemReadAllAccessValue\"] = 65] = \"ScopeItemReadAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeContainerWriteAllAccessValue\"] = 4294967295] = \"ScopeContainerWriteAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"ScopeItemWriteAllAccessValue\"] = 458767] = \"ScopeItemWriteAllAccessValue\";\n    PermissionScopeValues[PermissionScopeValues[\"NoneValue\"] = 0] = \"NoneValue\";\n})(PermissionScopeValues || (PermissionScopeValues = {}));\n/**\n * @hidden\n */\nvar SasTokenPermissionKind;\n(function (SasTokenPermissionKind) {\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerCreateItems\"] = 1] = \"ContainerCreateItems\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReplaceItems\"] = 2] = \"ContainerReplaceItems\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerUpsertItems\"] = 4] = \"ContainerUpsertItems\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerDeleteItems\"] = 128] = \"ContainerDeleteItems\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerExecuteQueries\"] = 1] = \"ContainerExecuteQueries\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReadFeeds\"] = 2] = \"ContainerReadFeeds\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerCreateStoreProcedure\"] = 16] = \"ContainerCreateStoreProcedure\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReadStoreProcedure\"] = 4] = \"ContainerReadStoreProcedure\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReplaceStoreProcedure\"] = 32] = \"ContainerReplaceStoreProcedure\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerDeleteStoreProcedure\"] = 64] = \"ContainerDeleteStoreProcedure\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerCreateTriggers\"] = 256] = \"ContainerCreateTriggers\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReadTriggers\"] = 16] = \"ContainerReadTriggers\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReplaceTriggers\"] = 512] = \"ContainerReplaceTriggers\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerDeleteTriggers\"] = 1024] = \"ContainerDeleteTriggers\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerCreateUserDefinedFunctions\"] = 2048] = \"ContainerCreateUserDefinedFunctions\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReadUserDefinedFunctions\"] = 8] = \"ContainerReadUserDefinedFunctions\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReplaceUserDefinedFunctions\"] = 4096] = \"ContainerReplaceUserDefinedFunctions\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerDeleteUserDefinedFunctions\"] = 8192] = \"ContainerDeleteUserDefinedFunctions\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerExecuteStoredProcedure\"] = 128] = \"ContainerExecuteStoredProcedure\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReadConflicts\"] = 32] = \"ContainerReadConflicts\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerDeleteConflicts\"] = 16384] = \"ContainerDeleteConflicts\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerReadAny\"] = 64] = \"ContainerReadAny\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ContainerFullAccess\"] = 4294967295] = \"ContainerFullAccess\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ItemReadAny\"] = 65536] = \"ItemReadAny\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ItemFullAccess\"] = 65] = \"ItemFullAccess\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ItemRead\"] = 64] = \"ItemRead\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ItemReplace\"] = 65536] = \"ItemReplace\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ItemUpsert\"] = 131072] = \"ItemUpsert\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"ItemDelete\"] = 262144] = \"ItemDelete\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"StoreProcedureRead\"] = 128] = \"StoreProcedureRead\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"StoreProcedureReplace\"] = 1048576] = \"StoreProcedureReplace\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"StoreProcedureDelete\"] = 2097152] = \"StoreProcedureDelete\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"StoreProcedureExecute\"] = 4194304] = \"StoreProcedureExecute\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"UserDefinedFuntionRead\"] = 256] = \"UserDefinedFuntionRead\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"UserDefinedFuntionReplace\"] = 8388608] = \"UserDefinedFuntionReplace\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"UserDefinedFuntionDelete\"] = 16777216] = \"UserDefinedFuntionDelete\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"TriggerRead\"] = 512] = \"TriggerRead\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"TriggerReplace\"] = 33554432] = \"TriggerReplace\";\n    SasTokenPermissionKind[SasTokenPermissionKind[\"TriggerDelete\"] = 67108864] = \"TriggerDelete\";\n})(SasTokenPermissionKind || (SasTokenPermissionKind = {}));\nvar QueryFeature;\n(function (QueryFeature) {\n    QueryFeature[\"NonValueAggregate\"] = \"NonValueAggregate\";\n    QueryFeature[\"Aggregate\"] = \"Aggregate\";\n    QueryFeature[\"Distinct\"] = \"Distinct\";\n    QueryFeature[\"MultipleOrderBy\"] = \"MultipleOrderBy\";\n    QueryFeature[\"OffsetAndLimit\"] = \"OffsetAndLimit\";\n    QueryFeature[\"OrderBy\"] = \"OrderBy\";\n    QueryFeature[\"Top\"] = \"Top\";\n    QueryFeature[\"CompositeAggregate\"] = \"CompositeAggregate\";\n    QueryFeature[\"GroupBy\"] = \"GroupBy\";\n    QueryFeature[\"MultipleAggregates\"] = \"MultipleAggregates\";\n    QueryFeature[\"NonStreamingOrderBy\"] = \"NonStreamingOrderBy\";\n    QueryFeature[\"ListAndSetAggregate\"] = \"ListAndSetAggregate\";\n    QueryFeature[\"CountIf\"] = \"CountIf\";\n    QueryFeature[\"HybridSearch\"] = \"HybridSearch\";\n    QueryFeature[\"WeightedRankFusion\"] = \"WeightedRankFusion\";\n    QueryFeature[\"HybridSearchSkipOrderByRewrite\"] = \"HybridSearchSkipOrderByRewrite\";\n})(QueryFeature || (QueryFeature = {}));\nvar SDKSupportedCapabilities;\n(function (SDKSupportedCapabilities) {\n    SDKSupportedCapabilities[SDKSupportedCapabilities[\"PartitionMerge\"] = 1] = \"PartitionMerge\";\n})(SDKSupportedCapabilities || (SDKSupportedCapabilities = {}));\n/**\n * @hidden\n */\nvar PartitionAvailablilityStatus;\n(function (PartitionAvailablilityStatus) {\n    PartitionAvailablilityStatus[PartitionAvailablilityStatus[\"Available\"] = 0] = \"Available\";\n    PartitionAvailablilityStatus[PartitionAvailablilityStatus[\"Unavailable\"] = 1] = \"Unavailable\";\n})(PartitionAvailablilityStatus || (PartitionAvailablilityStatus = {}));\n/**\n * @hidden\n */\nvar UserAgentFeatureFlags;\n(function (UserAgentFeatureFlags) {\n    UserAgentFeatureFlags[UserAgentFeatureFlags[\"PerPartitionAutomaticFailover\"] = 1] = \"PerPartitionAutomaticFailover\";\n    UserAgentFeatureFlags[UserAgentFeatureFlags[\"PerPartitionCircuitBreaker\"] = 2] = \"PerPartitionCircuitBreaker\";\n})(UserAgentFeatureFlags || (UserAgentFeatureFlags = {}));\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/helper.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copyObject: () => (/* binding */ copyObject),\n/* harmony export */   createDeserializer: () => (/* binding */ createDeserializer),\n/* harmony export */   createSerializer: () => (/* binding */ createSerializer),\n/* harmony export */   extractPath: () => (/* binding */ extractPath),\n/* harmony export */   getContainerLink: () => (/* binding */ getContainerLink),\n/* harmony export */   getHexaDigit: () => (/* binding */ getHexaDigit),\n/* harmony export */   getIdFromLink: () => (/* binding */ getIdFromLink),\n/* harmony export */   getPathFromLink: () => (/* binding */ getPathFromLink),\n/* harmony export */   getResourceIdFromPath: () => (/* binding */ getResourceIdFromPath),\n/* harmony export */   isItemResourceValid: () => (/* binding */ isItemResourceValid),\n/* harmony export */   isReadRequest: () => (/* binding */ isReadRequest),\n/* harmony export */   isResourceValid: () => (/* binding */ isResourceValid),\n/* harmony export */   isStringNullOrEmpty: () => (/* binding */ isStringNullOrEmpty),\n/* harmony export */   jsonStringifyAndEscapeNonASCII: () => (/* binding */ jsonStringifyAndEscapeNonASCII),\n/* harmony export */   parseConnectionString: () => (/* binding */ parseConnectionString),\n/* harmony export */   parseLink: () => (/* binding */ parseLink),\n/* harmony export */   parsePath: () => (/* binding */ parsePath),\n/* harmony export */   prepareURL: () => (/* binding */ prepareURL),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   trimSlashFromLeftAndRight: () => (/* binding */ trimSlashFromLeftAndRight),\n/* harmony export */   trimSlashes: () => (/* binding */ trimSlashes),\n/* harmony export */   validateClientEncryptionPolicy: () => (/* binding */ validateClientEncryptionPolicy),\n/* harmony export */   validateItemResourceId: () => (/* binding */ validateItemResourceId),\n/* harmony export */   validateResourceId: () => (/* binding */ validateResourceId)\n/* harmony export */ });\n/* harmony import */ var _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encryption/Serializers/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/index.js\");\n/* harmony import */ var _encryption_enums_EncryptionType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encryption/enums/EncryptionType.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionType.js\");\n/* harmony import */ var _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encryption/enums/TypeMarker.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/TypeMarker.js\");\n/* harmony import */ var _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../request/ErrorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n\n\n\n\n\nconst trimLeftSlashes = new RegExp(\"^[/]+\");\nconst trimRightSlashes = new RegExp(\"[/]+$\");\nconst illegalResourceIdCharacters = new RegExp(\"[/\\\\\\\\?#]\");\nconst illegalItemResourceIdCharacters = new RegExp(\"[/\\\\\\\\#]\");\n/** @hidden */\nfunction jsonStringifyAndEscapeNonASCII(arg) {\n    // TODO: better way for this? Not sure.\n    // escapes non-ASCII characters as \\uXXXX\n    return JSON.stringify(arg).replace(/[\\u007F-\\uFFFF]/g, (m) => {\n        return \"\\\\u\" + (\"0000\" + m.charCodeAt(0).toString(16)).slice(-4);\n    });\n}\n/**\n * @hidden\n */\nfunction parseLink(resourcePath) {\n    if (resourcePath.length === 0) {\n        /* for DatabaseAccount case, both type and objectBody will be undefined. */\n        return {\n            type: undefined,\n            objectBody: undefined,\n        };\n    }\n    if (resourcePath[resourcePath.length - 1] !== \"/\") {\n        resourcePath = resourcePath + \"/\";\n    }\n    if (resourcePath[0] !== \"/\") {\n        resourcePath = \"/\" + resourcePath;\n    }\n    /*\n           The path will be in the form of /[resourceType]/[resourceId]/ ....\n           /[resourceType]//[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/\n           or /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/[resourceType]/[resourceId]/ ....\n            /[resourceType]/[resourceId]/\n           The result of split will be in the form of\n           [[[resourceType], [resourceId] ... ,[resourceType], [resourceId], \"\"]\n           In the first case, to extract the resourceId it will the element before last ( at length -2 )\n           and the type will be before it ( at length -3 )\n           In the second case, to extract the resource type it will the element before last ( at length -2 )\n          */\n    const pathParts = resourcePath.split(\"/\");\n    let id;\n    let type;\n    if (pathParts.length % 2 === 0) {\n        // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId].\n        id = pathParts[pathParts.length - 2];\n        type = pathParts[pathParts.length - 3];\n    }\n    else {\n        // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/.\n        id = pathParts[pathParts.length - 3];\n        type = pathParts[pathParts.length - 2];\n    }\n    const result = {\n        type,\n        objectBody: {\n            id,\n            self: resourcePath,\n        },\n    };\n    return result;\n}\n/**\n * @hidden\n */\nfunction isReadRequest(operationType) {\n    return operationType === _constants_js__WEBPACK_IMPORTED_MODULE_4__.OperationType.Read || operationType === _constants_js__WEBPACK_IMPORTED_MODULE_4__.OperationType.Query;\n}\n/**\n * @hidden\n */\nfunction sleep(time) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, time);\n    });\n}\n/**\n * @hidden\n */\nfunction getContainerLink(link) {\n    return link.split(\"/\").slice(0, 4).join(\"/\");\n}\n/**\n * @hidden\n */\nfunction prepareURL(endpoint, path) {\n    return trimSlashes(endpoint) + path;\n}\n/**\n * @hidden\n */\nfunction trimSlashes(source) {\n    return source.replace(trimLeftSlashes, \"\").replace(trimRightSlashes, \"\");\n}\n/**\n * @hidden\n */\nfunction getHexaDigit() {\n    return Math.floor(Math.random() * 16).toString(16);\n}\n/**\n * @hidden\n */\nfunction parsePath(path) {\n    const pathParts = [];\n    let currentIndex = 0;\n    const throwError = () => {\n        throw new Error(\"Path \" + path + \" is invalid at index \" + currentIndex);\n    };\n    const getEscapedToken = () => {\n        const quote = path[currentIndex];\n        let newIndex = ++currentIndex;\n        for (;;) {\n            newIndex = path.indexOf(quote, newIndex);\n            if (newIndex === -1) {\n                throwError();\n            }\n            if (path[newIndex - 1] !== \"\\\\\") {\n                break;\n            }\n            ++newIndex;\n        }\n        const token = path.substr(currentIndex, newIndex - currentIndex);\n        currentIndex = newIndex + 1;\n        return token;\n    };\n    const getToken = () => {\n        const newIndex = path.indexOf(\"/\", currentIndex);\n        let token = null;\n        if (newIndex === -1) {\n            token = path.substr(currentIndex);\n            currentIndex = path.length;\n        }\n        else {\n            token = path.substr(currentIndex, newIndex - currentIndex);\n            currentIndex = newIndex;\n        }\n        token = token.trim();\n        return token;\n    };\n    while (currentIndex < path.length) {\n        if (path[currentIndex] !== \"/\") {\n            throwError();\n        }\n        if (++currentIndex === path.length) {\n            break;\n        }\n        if (path[currentIndex] === '\"' || path[currentIndex] === \"'\") {\n            pathParts.push(getEscapedToken());\n        }\n        else {\n            pathParts.push(getToken());\n        }\n    }\n    return pathParts;\n}\n/**\n * @hidden\n */\nfunction isResourceValid(resource, err) {\n    // TODO: fix strictness issues so that caller contexts respects the types of the functions\n    if (resource.id) {\n        if (typeof resource.id !== \"string\") {\n            err.message = \"Id must be a string.\";\n            return false;\n        }\n        if (resource.id.indexOf(\"/\") !== -1 ||\n            resource.id.indexOf(\"\\\\\") !== -1 ||\n            resource.id.indexOf(\"?\") !== -1 ||\n            resource.id.indexOf(\"#\") !== -1) {\n            err.message = \"Id contains illegal chars.\";\n            return false;\n        }\n        if (resource.id[resource.id.length - 1] === \" \") {\n            err.message = \"Id ends with a space.\";\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @hidden\n */\nfunction isItemResourceValid(resource, err) {\n    // TODO: fix strictness issues so that caller contexts respects the types of the functions\n    if (resource.id) {\n        if (typeof resource.id !== \"string\") {\n            err.message = \"Id must be a string.\";\n            return false;\n        }\n        if (resource.id.indexOf(\"/\") !== -1 ||\n            resource.id.indexOf(\"\\\\\") !== -1 ||\n            resource.id.indexOf(\"#\") !== -1) {\n            err.message = \"Id contains illegal chars.\";\n            return false;\n        }\n    }\n    return true;\n}\n/** @hidden */\nfunction getIdFromLink(resourceLink) {\n    resourceLink = trimSlashes(resourceLink);\n    return resourceLink;\n}\n/** @hidden */\nfunction getPathFromLink(resourceLink, resourceType) {\n    resourceLink = trimSlashes(resourceLink);\n    if (resourceType) {\n        return \"/\" + encodeURI(resourceLink) + \"/\" + resourceType;\n    }\n    else {\n        return \"/\" + encodeURI(resourceLink);\n    }\n}\n/**\n * @hidden\n */\nfunction isStringNullOrEmpty(inputString) {\n    // checks whether string is null, undefined, empty or only contains space\n    return !inputString || /^\\s*$/.test(inputString);\n}\n/**\n * @hidden\n */\nfunction trimSlashFromLeftAndRight(inputString) {\n    if (typeof inputString !== \"string\") {\n        throw new Error(\"invalid input: input is not string\");\n    }\n    return inputString.replace(trimLeftSlashes, \"\").replace(trimRightSlashes, \"\");\n}\n/**\n * @hidden\n */\nfunction validateResourceId(resourceId) {\n    // if resourceId is not a string or is empty throw an error\n    if (typeof resourceId !== \"string\" || isStringNullOrEmpty(resourceId)) {\n        throw new Error(\"Resource ID must be a string and cannot be undefined, null or empty\");\n    }\n    // if resource id contains illegal characters throw an error\n    if (illegalResourceIdCharacters.test(resourceId)) {\n        throw new Error(\"Illegal characters ['/', '\\\\', '#', '?'] cannot be used in Resource ID\");\n    }\n    return true;\n}\n/**\n * @hidden\n */\nfunction validateItemResourceId(resourceId) {\n    // if resourceId is not a string or is empty throw an error\n    if (typeof resourceId !== \"string\" || isStringNullOrEmpty(resourceId)) {\n        throw new Error(\"Resource ID must be a string and cannot be undefined, null or empty\");\n    }\n    // if resource id contains illegal characters throw an error\n    if (illegalItemResourceIdCharacters.test(resourceId)) {\n        throw new Error(\"Illegal characters ['/', '\\\\', '#'] cannot be used in Resource ID\");\n    }\n    return true;\n}\n/**\n * @hidden\n */\nfunction getResourceIdFromPath(resourcePath) {\n    if (!resourcePath || typeof resourcePath !== \"string\") {\n        return null;\n    }\n    const trimmedPath = trimSlashFromLeftAndRight(resourcePath);\n    const pathSegments = trimmedPath.split(\"/\");\n    // number of segments of a path must always be even\n    if (pathSegments.length % 2 !== 0) {\n        return null;\n    }\n    return pathSegments[pathSegments.length - 1];\n}\n/**\n * @hidden\n */\nfunction parseConnectionString(connectionString) {\n    const keyValueStrings = connectionString.split(\";\");\n    const { AccountEndpoint, AccountKey } = keyValueStrings.reduce((connectionObject, keyValueString) => {\n        const [key, ...value] = keyValueString.split(\"=\");\n        connectionObject[key] = value.join(\"=\");\n        return connectionObject;\n    }, {});\n    if (!AccountEndpoint || !AccountKey) {\n        throw new Error(\"Could not parse the provided connection string\");\n    }\n    return {\n        endpoint: AccountEndpoint,\n        key: AccountKey,\n    };\n}\n/**\n * utility function to return copy of object to avoid encryption of original object passed\n * in the CRUD methods.\n * @hidden\n */\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-shadow, no-prototype-builtins */\nfunction copyObject(obj) {\n    return JSON.parse(JSON.stringify(obj, (_, value) => {\n        if (typeof value === \"bigint\") {\n            throw new Error(`BigInt type is not supported`);\n        }\n        return value;\n    }));\n}\n/**\n * @hidden\n */\nfunction createDeserializer(typeMarker) {\n    switch (typeMarker) {\n        case _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Long: {\n            // return instance\n            return new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.NumberSerializer();\n        }\n        case _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Double:\n            return new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.FloatSerializer();\n        case _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.String:\n            return new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.StringSerializer();\n        case _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Boolean:\n            return new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.BooleanSerializer();\n        default:\n            throw new Error(\"Invalid or Unsupported data type passed.\");\n    }\n}\n/**\n * @hidden\n * extracts the top-level path\n */\nfunction extractPath(path) {\n    const secondSlashIndex = path.indexOf(\"/\", path.indexOf(\"/\") + 1);\n    return secondSlashIndex === -1 ? path : path.substring(0, secondSlashIndex);\n}\nfunction createSerializer(propertyValue, type) {\n    if (type) {\n        if (type === _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Long) {\n            return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Long, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.NumberSerializer()];\n        }\n        else if (type === _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Double) {\n            return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Double, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.FloatSerializer()];\n        }\n        else if (type === _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.String) {\n            return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.String, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.StringSerializer()];\n        }\n        else if (type === _encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Boolean) {\n            return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Boolean, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.BooleanSerializer()];\n        }\n        else {\n            throw new Error(\"Invalid or Unsupported data type passed.\");\n        }\n    }\n    else {\n        switch (typeof propertyValue) {\n            case \"boolean\":\n                return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Boolean, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.BooleanSerializer()];\n            case \"string\":\n                return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.String, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.StringSerializer()];\n            case \"object\":\n                if (propertyValue.constructor === Date) {\n                    return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.String, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.StringSerializer()];\n                }\n                throw new Error(\"Invalid or Unsupported data type passed.\");\n            case \"number\":\n                if (!Number.isInteger(propertyValue)) {\n                    return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Double, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.FloatSerializer()];\n                }\n                else {\n                    return [_encryption_enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_2__.TypeMarker.Long, new _encryption_Serializers_index_js__WEBPACK_IMPORTED_MODULE_0__.NumberSerializer()];\n                }\n            default:\n                throw new Error(\"Invalid or Unsupported data type passed.\");\n        }\n    }\n}\n/**\n * @hidden\n * verifies policy format version, included paths and ensures that id and partition key paths specified in the client encryption policy\n * for encryption are encrypted using Deterministic encryption algorithm.\n */\nfunction validateClientEncryptionPolicy(clientEncryptionPolicy, partitionKey) {\n    const policyFormatVersion = clientEncryptionPolicy.policyFormatVersion;\n    if (policyFormatVersion < 1 || policyFormatVersion > 2) {\n        throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Supported versions of client encryption policy are 1 and 2.\");\n    }\n    const paths = new Set();\n    // checks for duplicate paths and validates the path format and clientEncryptionKeyId\n    for (const includedPath of clientEncryptionPolicy.includedPaths) {\n        if (paths.has(includedPath.path)) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(`Duplicate path found: ${includedPath.path} in client encryption policy.`);\n        }\n        if (includedPath.path === undefined ||\n            includedPath.path === null ||\n            includedPath.path === \"\" ||\n            includedPath.path === \"/\") {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Path needs to be defined in ClientEncryptionIncludedPath.\");\n        }\n        if (includedPath.clientEncryptionKeyId === undefined ||\n            includedPath.clientEncryptionKeyId === null ||\n            includedPath.clientEncryptionKeyId === \"\" ||\n            typeof includedPath.clientEncryptionKeyId !== \"string\") {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"ClientEncryptionKeyId needs to be defined as string type in ClientEncryptionIncludedPath.\");\n        }\n        if (includedPath.path[0] !== \"/\") {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Path in ClientEncryptionIncludedPath must start with '/'.\");\n        }\n        const pathSegments = includedPath.path.split(\"/\").filter((segment) => segment.length > 0);\n        if (pathSegments.length > 1) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Only top-level paths are currently supported for encryption\");\n        }\n        paths.add(includedPath.path);\n    }\n    // checks if id and partition key paths are encrypted using Deterministic encryption algorithm.\n    const encryptedPaths = clientEncryptionPolicy.includedPaths;\n    const partitionKeyPaths = partitionKey.paths.map(extractPath);\n    let isPartitionKeyEncrypted = false;\n    let isIdEncrypted = false;\n    for (const encryptedPath of encryptedPaths) {\n        if (encryptedPath.path === \"/id\") {\n            isIdEncrypted = true;\n            if (encryptedPath.encryptionType !== _encryption_enums_EncryptionType_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionType.DETERMINISTIC) {\n                throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"The '/id' property must be encrypted using Deterministic encryption.\");\n            }\n        }\n        if (partitionKeyPaths.includes(encryptedPath.path)) {\n            isPartitionKeyEncrypted = true;\n            if (encryptedPath.encryptionType !== _encryption_enums_EncryptionType_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionType.DETERMINISTIC) {\n                throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(`Path: ${encryptedPath.path} which is part of the partition key has to be encrypted with Deterministic type Encryption.`);\n            }\n        }\n    }\n    // Ensures that the policy format version is 2 if id or partition key paths are encrypted.\n    if ((isPartitionKeyEncrypted || isIdEncrypted) &&\n        clientEncryptionPolicy.policyFormatVersion === 1) {\n        throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_3__.ErrorResponse(\"Encryption of partition key or id is only supported with policy format version 2.\");\n    }\n}\n//# sourceMappingURL=helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Constants: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants),\n/* harmony export */   CosmosContainerChildResourceKind: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.CosmosContainerChildResourceKind),\n/* harmony export */   CosmosKeyType: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.CosmosKeyType),\n/* harmony export */   HTTPMethod: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.HTTPMethod),\n/* harmony export */   OperationType: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.OperationType),\n/* harmony export */   PartitionAvailablilityStatus: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.PartitionAvailablilityStatus),\n/* harmony export */   PermissionScopeValues: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.PermissionScopeValues),\n/* harmony export */   QueryFeature: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.QueryFeature),\n/* harmony export */   ResourceType: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType),\n/* harmony export */   SDKSupportedCapabilities: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.SDKSupportedCapabilities),\n/* harmony export */   SasTokenPermissionKind: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.SasTokenPermissionKind),\n/* harmony export */   StatusCodes: () => (/* reexport safe */ _statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.StatusCodes),\n/* harmony export */   SubStatusCodes: () => (/* reexport safe */ _statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.SubStatusCodes),\n/* harmony export */   UserAgentFeatureFlags: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.UserAgentFeatureFlags),\n/* harmony export */   copyObject: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.copyObject),\n/* harmony export */   createAttachmentUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createAttachmentUri),\n/* harmony export */   createConflictUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createConflictUri),\n/* harmony export */   createDatabaseUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createDatabaseUri),\n/* harmony export */   createDeserializer: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.createDeserializer),\n/* harmony export */   createDocumentCollectionUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createDocumentCollectionUri),\n/* harmony export */   createDocumentUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createDocumentUri),\n/* harmony export */   createPartitionKeyRangesUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createPartitionKeyRangesUri),\n/* harmony export */   createPermissionUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createPermissionUri),\n/* harmony export */   createSerializer: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.createSerializer),\n/* harmony export */   createStoredProcedureUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createStoredProcedureUri),\n/* harmony export */   createTriggerUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createTriggerUri),\n/* harmony export */   createUserDefinedFunctionUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createUserDefinedFunctionUri),\n/* harmony export */   createUserUri: () => (/* reexport safe */ _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__.createUserUri),\n/* harmony export */   extractPath: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.extractPath),\n/* harmony export */   getContainerLink: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.getContainerLink),\n/* harmony export */   getHexaDigit: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.getHexaDigit),\n/* harmony export */   getIdFromLink: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.getIdFromLink),\n/* harmony export */   getPathFromLink: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink),\n/* harmony export */   getResourceIdFromPath: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.getResourceIdFromPath),\n/* harmony export */   isItemResourceValid: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.isItemResourceValid),\n/* harmony export */   isReadRequest: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.isReadRequest),\n/* harmony export */   isResourceValid: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.isResourceValid),\n/* harmony export */   isStringNullOrEmpty: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.isStringNullOrEmpty),\n/* harmony export */   jsonStringifyAndEscapeNonASCII: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.jsonStringifyAndEscapeNonASCII),\n/* harmony export */   parseConnectionString: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.parseConnectionString),\n/* harmony export */   parseLink: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.parseLink),\n/* harmony export */   parsePath: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.parsePath),\n/* harmony export */   prepareURL: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.prepareURL),\n/* harmony export */   sleep: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.sleep),\n/* harmony export */   trimSlashFromLeftAndRight: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight),\n/* harmony export */   trimSlashes: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashes),\n/* harmony export */   validateClientEncryptionPolicy: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.validateClientEncryptionPolicy),\n/* harmony export */   validateItemResourceId: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.validateItemResourceId),\n/* harmony export */   validateResourceId: () => (/* reexport safe */ _helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n/* harmony import */ var _statusCodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _uriFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uriFactory.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/uriFactory.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQytCO0FBQ0g7QUFDSztBQUNEO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vaW5kZXguanM/MjkwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCAqIGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vaGVscGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdGF0dXNDb2Rlcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXJpRmFjdG9yeS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/logger.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/logger.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultLogger: () => (/* binding */ defaultLogger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nconst defaultLogger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"cosmosdb\");\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNPLHNCQUFzQixpRUFBa0I7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2NvbW1vbi9sb2dnZXIuanM/OTZjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuLyoqXG4gKiBUaGUgXFxAYXp1cmUvbG9nZ2VyIGNvbmZpZ3VyYXRpb24gZm9yIHRoaXMgcGFja2FnZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRMb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJjb3Ntb3NkYlwiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/partitionKeys.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/partitionKeys.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_PARTITION_KEY_PATH: () => (/* binding */ DEFAULT_PARTITION_KEY_PATH)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst DEFAULT_PARTITION_KEY_PATH = \"/_partitionKey\"; // eslint-disable-line @typescript-eslint/prefer-as-const\n//# sourceMappingURL=partitionKeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vcGFydGl0aW9uS2V5cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPLHFEQUFxRDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vY29tbW9uL3BhcnRpdGlvbktleXMuanM/OTQzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1BBUlRJVElPTl9LRVlfUEFUSCA9IFwiL19wYXJ0aXRpb25LZXlcIjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLWFzLWNvbnN0XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJ0aXRpb25LZXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/partitionKeys.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/platform.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/platform.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFeatureFlagsToUserAgent: () => (/* binding */ addFeatureFlagsToUserAgent),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @hidden\n */\nfunction getUserAgent(optionsOrConnectionString, hostFramework) {\n    let ua = `${userAgentDetails()} ${_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.SDKName}/${_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.SDKVersion}`;\n    if (hostFramework) {\n        ua = ua + \" \" + hostFramework;\n    }\n    if (optionsOrConnectionString) {\n        ua = ua + addFeatureFlagsToUserAgent(optionsOrConnectionString);\n    }\n    if (optionsOrConnectionString && optionsOrConnectionString.userAgentSuffix) {\n        ua = ua + \" \" + optionsOrConnectionString.userAgentSuffix;\n    }\n    return ua;\n}\n// TODO: Standardize across other platforms from @azure/core-util\nfunction userAgentDetails() {\n    let userAgentDetail = \"<environment undetectable>\";\n    if (globalThis.navigator && globalThis.navigator.userAgent) {\n        userAgentDetail = globalThis.navigator.userAgent;\n    }\n    if (globalThis.process && globalThis.process.version) {\n        userAgentDetail = `Node.js/${process.version.slice(1)} (${process.platform}; ${process.arch})`;\n    }\n    return userAgentDetail;\n}\n/**\n * @hidden\n */\nfunction addFeatureFlagsToUserAgent(optionsOrConnectionString) {\n    let featureFlag = 0;\n    if (optionsOrConnectionString.connectionPolicy) {\n        if (optionsOrConnectionString.connectionPolicy.enablePartitionLevelFailover) {\n            featureFlag += _constants_js__WEBPACK_IMPORTED_MODULE_0__.UserAgentFeatureFlags.PerPartitionAutomaticFailover;\n        }\n        if (optionsOrConnectionString.connectionPolicy.enablePartitionLevelFailover ||\n            optionsOrConnectionString.connectionPolicy.enablePartitionLevelCircuitBreaker) {\n            featureFlag += _constants_js__WEBPACK_IMPORTED_MODULE_0__.UserAgentFeatureFlags.PerPartitionCircuitBreaker;\n        }\n    }\n    return featureFlag === 0 ? \"\" : ` F${featureFlag.toString(16).toUpperCase()}`;\n}\n//# sourceMappingURL=platform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vcGxhdGZvcm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDTztBQUNQLGdCQUFnQixvQkFBb0IsRUFBRSxvREFBUyxTQUFTLEdBQUcsb0RBQVMsWUFBWTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsMEJBQTBCLEdBQUcsbUJBQW1CLEVBQUUsYUFBYTtBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixnRUFBcUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGdFQUFxQjtBQUNoRDtBQUNBO0FBQ0EseUNBQXlDLHVDQUF1QztBQUNoRjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vcGxhdGZvcm0uanM/YmM0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvbnN0YW50cywgVXNlckFnZW50RmVhdHVyZUZsYWdzIH0gZnJvbSBcIi4vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJBZ2VudChvcHRpb25zT3JDb25uZWN0aW9uU3RyaW5nLCBob3N0RnJhbWV3b3JrKSB7XG4gICAgbGV0IHVhID0gYCR7dXNlckFnZW50RGV0YWlscygpfSAke0NvbnN0YW50cy5TREtOYW1lfS8ke0NvbnN0YW50cy5TREtWZXJzaW9ufWA7XG4gICAgaWYgKGhvc3RGcmFtZXdvcmspIHtcbiAgICAgICAgdWEgPSB1YSArIFwiIFwiICsgaG9zdEZyYW1ld29yaztcbiAgICB9XG4gICAgaWYgKG9wdGlvbnNPckNvbm5lY3Rpb25TdHJpbmcpIHtcbiAgICAgICAgdWEgPSB1YSArIGFkZEZlYXR1cmVGbGFnc1RvVXNlckFnZW50KG9wdGlvbnNPckNvbm5lY3Rpb25TdHJpbmcpO1xuICAgIH1cbiAgICBpZiAob3B0aW9uc09yQ29ubmVjdGlvblN0cmluZyAmJiBvcHRpb25zT3JDb25uZWN0aW9uU3RyaW5nLnVzZXJBZ2VudFN1ZmZpeCkge1xuICAgICAgICB1YSA9IHVhICsgXCIgXCIgKyBvcHRpb25zT3JDb25uZWN0aW9uU3RyaW5nLnVzZXJBZ2VudFN1ZmZpeDtcbiAgICB9XG4gICAgcmV0dXJuIHVhO1xufVxuLy8gVE9ETzogU3RhbmRhcmRpemUgYWNyb3NzIG90aGVyIHBsYXRmb3JtcyBmcm9tIEBhenVyZS9jb3JlLXV0aWxcbmZ1bmN0aW9uIHVzZXJBZ2VudERldGFpbHMoKSB7XG4gICAgbGV0IHVzZXJBZ2VudERldGFpbCA9IFwiPGVudmlyb25tZW50IHVuZGV0ZWN0YWJsZT5cIjtcbiAgICBpZiAoZ2xvYmFsVGhpcy5uYXZpZ2F0b3IgJiYgZ2xvYmFsVGhpcy5uYXZpZ2F0b3IudXNlckFnZW50KSB7XG4gICAgICAgIHVzZXJBZ2VudERldGFpbCA9IGdsb2JhbFRoaXMubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgICB9XG4gICAgaWYgKGdsb2JhbFRoaXMucHJvY2VzcyAmJiBnbG9iYWxUaGlzLnByb2Nlc3MudmVyc2lvbikge1xuICAgICAgICB1c2VyQWdlbnREZXRhaWwgPSBgTm9kZS5qcy8ke3Byb2Nlc3MudmVyc2lvbi5zbGljZSgxKX0gKCR7cHJvY2Vzcy5wbGF0Zm9ybX07ICR7cHJvY2Vzcy5hcmNofSlgO1xuICAgIH1cbiAgICByZXR1cm4gdXNlckFnZW50RGV0YWlsO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRGZWF0dXJlRmxhZ3NUb1VzZXJBZ2VudChvcHRpb25zT3JDb25uZWN0aW9uU3RyaW5nKSB7XG4gICAgbGV0IGZlYXR1cmVGbGFnID0gMDtcbiAgICBpZiAob3B0aW9uc09yQ29ubmVjdGlvblN0cmluZy5jb25uZWN0aW9uUG9saWN5KSB7XG4gICAgICAgIGlmIChvcHRpb25zT3JDb25uZWN0aW9uU3RyaW5nLmNvbm5lY3Rpb25Qb2xpY3kuZW5hYmxlUGFydGl0aW9uTGV2ZWxGYWlsb3Zlcikge1xuICAgICAgICAgICAgZmVhdHVyZUZsYWcgKz0gVXNlckFnZW50RmVhdHVyZUZsYWdzLlBlclBhcnRpdGlvbkF1dG9tYXRpY0ZhaWxvdmVyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zT3JDb25uZWN0aW9uU3RyaW5nLmNvbm5lY3Rpb25Qb2xpY3kuZW5hYmxlUGFydGl0aW9uTGV2ZWxGYWlsb3ZlciB8fFxuICAgICAgICAgICAgb3B0aW9uc09yQ29ubmVjdGlvblN0cmluZy5jb25uZWN0aW9uUG9saWN5LmVuYWJsZVBhcnRpdGlvbkxldmVsQ2lyY3VpdEJyZWFrZXIpIHtcbiAgICAgICAgICAgIGZlYXR1cmVGbGFnICs9IFVzZXJBZ2VudEZlYXR1cmVGbGFncy5QZXJQYXJ0aXRpb25DaXJjdWl0QnJlYWtlcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmVhdHVyZUZsYWcgPT09IDAgPyBcIlwiIDogYCBGJHtmZWF0dXJlRmxhZy50b1N0cmluZygxNikudG9VcHBlckNhc2UoKX1gO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGxhdGZvcm0uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/platform.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodes: () => (/* binding */ StatusCodes),\n/* harmony export */   SubStatusCodes: () => (/* binding */ SubStatusCodes)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @hidden\n */\nconst StatusCodes = {\n    // Success\n    Ok: 200,\n    Created: 201,\n    Accepted: 202,\n    NoContent: 204,\n    MultiStatus: 207,\n    NotModified: 304,\n    // Client error\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 403,\n    NotFound: 404,\n    MethodNotAllowed: 405,\n    RequestTimeout: 408,\n    Conflict: 409,\n    Gone: 410,\n    PreconditionFailed: 412,\n    RequestEntityTooLarge: 413,\n    FailedDependency: 424,\n    TooManyRequests: 429,\n    RetryWith: 449,\n    // Server Error\n    InternalServerError: 500,\n    ServiceUnavailable: 503,\n    // System codes\n    ENOTFOUND: \"ENOTFOUND\",\n    // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n    OperationPaused: 1200,\n    OperationCancelled: 1201,\n};\n/**\n * @hidden\n */\nconst SubStatusCodes = {\n    Unknown: 0,\n    // 400: Bad Request Substatus\n    CrossPartitionQueryNotServable: 1004,\n    IncorrectContainerRidSubstatus: 1024,\n    PartitionKeyMismatch: 1001,\n    // 410: StatusCodeType_Gone: substatus\n    PartitionKeyRangeGone: 1002,\n    CompletingSplit: 1007,\n    CompletingPartitionMigration: 1008,\n    NameCacheIsStale: 1000,\n    // 404: NotFound Substatus\n    ReadSessionNotAvailable: 1002,\n    // 403: Forbidden Substatus\n    WriteForbidden: 3,\n    DatabaseAccountNotFound: 1008,\n    // 413: Request Entity Too Large Substatus\n    ResponseSizeExceeded: 3402,\n};\n//# sourceMappingURL=statusCodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vc3RhdHVzQ29kZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9jb21tb24vc3RhdHVzQ29kZXMuanM/NTUyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY29uc3QgU3RhdHVzQ29kZXMgPSB7XG4gICAgLy8gU3VjY2Vzc1xuICAgIE9rOiAyMDAsXG4gICAgQ3JlYXRlZDogMjAxLFxuICAgIEFjY2VwdGVkOiAyMDIsXG4gICAgTm9Db250ZW50OiAyMDQsXG4gICAgTXVsdGlTdGF0dXM6IDIwNyxcbiAgICBOb3RNb2RpZmllZDogMzA0LFxuICAgIC8vIENsaWVudCBlcnJvclxuICAgIEJhZFJlcXVlc3Q6IDQwMCxcbiAgICBVbmF1dGhvcml6ZWQ6IDQwMSxcbiAgICBGb3JiaWRkZW46IDQwMyxcbiAgICBOb3RGb3VuZDogNDA0LFxuICAgIE1ldGhvZE5vdEFsbG93ZWQ6IDQwNSxcbiAgICBSZXF1ZXN0VGltZW91dDogNDA4LFxuICAgIENvbmZsaWN0OiA0MDksXG4gICAgR29uZTogNDEwLFxuICAgIFByZWNvbmRpdGlvbkZhaWxlZDogNDEyLFxuICAgIFJlcXVlc3RFbnRpdHlUb29MYXJnZTogNDEzLFxuICAgIEZhaWxlZERlcGVuZGVuY3k6IDQyNCxcbiAgICBUb29NYW55UmVxdWVzdHM6IDQyOSxcbiAgICBSZXRyeVdpdGg6IDQ0OSxcbiAgICAvLyBTZXJ2ZXIgRXJyb3JcbiAgICBJbnRlcm5hbFNlcnZlckVycm9yOiA1MDAsXG4gICAgU2VydmljZVVuYXZhaWxhYmxlOiA1MDMsXG4gICAgLy8gU3lzdGVtIGNvZGVzXG4gICAgRU5PVEZPVU5EOiBcIkVOT1RGT1VORFwiLFxuICAgIC8vIE9wZXJhdGlvbiBwYXVzZSBhbmQgY2FuY2VsLiBUaGVzZSBhcmUgRkFLRSBzdGF0dXMgY29kZXMgZm9yIFFPUyBsb2dnaW5nIHB1cnBvc2Ugb25seS5cbiAgICBPcGVyYXRpb25QYXVzZWQ6IDEyMDAsXG4gICAgT3BlcmF0aW9uQ2FuY2VsbGVkOiAxMjAxLFxufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY29uc3QgU3ViU3RhdHVzQ29kZXMgPSB7XG4gICAgVW5rbm93bjogMCxcbiAgICAvLyA0MDA6IEJhZCBSZXF1ZXN0IFN1YnN0YXR1c1xuICAgIENyb3NzUGFydGl0aW9uUXVlcnlOb3RTZXJ2YWJsZTogMTAwNCxcbiAgICBJbmNvcnJlY3RDb250YWluZXJSaWRTdWJzdGF0dXM6IDEwMjQsXG4gICAgUGFydGl0aW9uS2V5TWlzbWF0Y2g6IDEwMDEsXG4gICAgLy8gNDEwOiBTdGF0dXNDb2RlVHlwZV9Hb25lOiBzdWJzdGF0dXNcbiAgICBQYXJ0aXRpb25LZXlSYW5nZUdvbmU6IDEwMDIsXG4gICAgQ29tcGxldGluZ1NwbGl0OiAxMDA3LFxuICAgIENvbXBsZXRpbmdQYXJ0aXRpb25NaWdyYXRpb246IDEwMDgsXG4gICAgTmFtZUNhY2hlSXNTdGFsZTogMTAwMCxcbiAgICAvLyA0MDQ6IE5vdEZvdW5kIFN1YnN0YXR1c1xuICAgIFJlYWRTZXNzaW9uTm90QXZhaWxhYmxlOiAxMDAyLFxuICAgIC8vIDQwMzogRm9yYmlkZGVuIFN1YnN0YXR1c1xuICAgIFdyaXRlRm9yYmlkZGVuOiAzLFxuICAgIERhdGFiYXNlQWNjb3VudE5vdEZvdW5kOiAxMDA4LFxuICAgIC8vIDQxMzogUmVxdWVzdCBFbnRpdHkgVG9vIExhcmdlIFN1YnN0YXR1c1xuICAgIFJlc3BvbnNlU2l6ZUV4Y2VlZGVkOiAzNDAyLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXR1c0NvZGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/common/uriFactory.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/common/uriFactory.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAttachmentUri: () => (/* binding */ createAttachmentUri),\n/* harmony export */   createConflictUri: () => (/* binding */ createConflictUri),\n/* harmony export */   createDatabaseUri: () => (/* binding */ createDatabaseUri),\n/* harmony export */   createDocumentCollectionUri: () => (/* binding */ createDocumentCollectionUri),\n/* harmony export */   createDocumentUri: () => (/* binding */ createDocumentUri),\n/* harmony export */   createPartitionKeyRangesUri: () => (/* binding */ createPartitionKeyRangesUri),\n/* harmony export */   createPermissionUri: () => (/* binding */ createPermissionUri),\n/* harmony export */   createStoredProcedureUri: () => (/* binding */ createStoredProcedureUri),\n/* harmony export */   createTriggerUri: () => (/* binding */ createTriggerUri),\n/* harmony export */   createUserDefinedFunctionUri: () => (/* binding */ createUserDefinedFunctionUri),\n/* harmony export */   createUserUri: () => (/* binding */ createUserUri)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Would be used when creating or deleting a DocumentCollection\n * or a User in Azure Cosmos DB database service\n * @hidden\n * Given a database id, this creates a database link.\n * @param databaseId - The database id\n * @returns A database link in the format of `dbs/{0}`\n * with `{0}` being a Uri escaped version of the databaseId\n */\nfunction createDatabaseUri(databaseId) {\n    databaseId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(databaseId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(databaseId);\n    return _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.DatabasesPathSegment + \"/\" + databaseId;\n}\n/**\n * Given a database and collection id, this creates a collection link.\n * Would be used when updating or deleting a DocumentCollection, creating a\n * Document, a StoredProcedure, a Trigger, a UserDefinedFunction, or when executing a query\n * with CreateDocumentQuery in Azure Cosmos DB database service.\n * @param databaseId - The database id\n * @param collectionId - The collection id\n * @returns A collection link in the format of `dbs/{0}/colls/{1}`\n * with `{0}` being a Uri escaped version of the databaseId and `{1}` being collectionId\n * @hidden\n */\nfunction createDocumentCollectionUri(databaseId, collectionId) {\n    collectionId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(collectionId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(collectionId);\n    return (createDatabaseUri(databaseId) + \"/\" + _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.CollectionsPathSegment + \"/\" + collectionId);\n}\n/**\n * Given a database and user id, this creates a user link.\n * Would be used when creating a Permission, or when replacing or deleting\n * a User in Azure Cosmos DB database service\n * @param databaseId - The database id\n * @param userId - The user id\n * @returns A user link in the format of `dbs/{0}/users/{1}`\n * with `{0}` being a Uri escaped version of the databaseId and `{1}` being userId\n * @hidden\n */\nfunction createUserUri(databaseId, userId) {\n    userId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(userId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(userId);\n    return createDatabaseUri(databaseId) + \"/\" + _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.UsersPathSegment + \"/\" + userId;\n}\n/**\n * Given a database and collection id, this creates a collection link.\n * Would be used when creating an Attachment, or when replacing\n * or deleting a Document in Azure Cosmos DB database service\n * @param databaseId - The database id\n * @param collectionId - The collection id\n * @param documentId - The document id\n * @returns A document link in the format of\n * `dbs/{0}/colls/{1}/docs/{2}` with `{0}` being a Uri escaped version of\n * the databaseId, `{1}` being collectionId and `{2}` being the documentId\n * @hidden\n */\nfunction createDocumentUri(databaseId, collectionId, documentId) {\n    documentId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(documentId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateItemResourceId)(documentId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.DocumentsPathSegment +\n        \"/\" +\n        documentId);\n}\n/**\n * Given a database, collection and document id, this creates a document link.\n * Would be used when replacing or deleting a Permission in Azure Cosmos DB database service.\n * @param databaseId    -The database Id\n * @param userId        -The user Id\n * @param permissionId  - The permissionId\n * @returns A permission link in the format of `dbs/{0}/users/{1}/permissions/{2}`\n * with `{0}` being a Uri escaped version of the databaseId, `{1}` being userId and `{2}` being permissionId\n * @hidden\n */\nfunction createPermissionUri(databaseId, userId, permissionId) {\n    permissionId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(permissionId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(permissionId);\n    return (createUserUri(databaseId, userId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.PermissionsPathSegment +\n        \"/\" +\n        permissionId);\n}\n/**\n * Given a database, collection and stored proc id, this creates a stored proc link.\n * Would be used when replacing, executing, or deleting a StoredProcedure in\n * Azure Cosmos DB database service.\n * @param databaseId        -The database Id\n * @param collectionId      -The collection Id\n * @param storedProcedureId -The stored procedure Id\n * @returns A stored procedure link in the format of\n * `dbs/{0}/colls/{1}/sprocs/{2}` with `{0}` being a Uri escaped version of the databaseId,\n * `{1}` being collectionId and `{2}` being the storedProcedureId\n * @hidden\n */\nfunction createStoredProcedureUri(databaseId, collectionId, storedProcedureId) {\n    storedProcedureId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(storedProcedureId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(storedProcedureId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.StoredProceduresPathSegment +\n        \"/\" +\n        storedProcedureId);\n}\n/**\n * Given a database, collection and trigger id, this creates a trigger link.\n * Would be used when replacing, executing, or deleting a Trigger in Azure Cosmos DB database service\n * @param databaseId        -The database Id\n * @param collectionId      -The collection Id\n * @param triggerId         -The trigger Id\n * @returns A trigger link in the format of\n * `dbs/{0}/colls/{1}/triggers/{2}` with `{0}` being a Uri escaped version of the databaseId,\n * `{1}` being collectionId and `{2}` being the triggerId\n * @hidden\n */\nfunction createTriggerUri(databaseId, collectionId, triggerId) {\n    triggerId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(triggerId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(triggerId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.TriggersPathSegment +\n        \"/\" +\n        triggerId);\n}\n/**\n * Given a database, collection and udf id, this creates a udf link.\n * Would be used when replacing, executing, or deleting a UserDefinedFunction in\n * Azure Cosmos DB database service\n * @param databaseId        -The database Id\n * @param collectionId      -The collection Id\n * @param udfId             -The User Defined Function Id\n * @returns A udf link in the format of `dbs/{0}/colls/{1}/udfs/{2}`\n * with `{0}` being a Uri escaped version of the databaseId, `{1}` being collectionId and `{2}` being the udfId\n * @hidden\n */\nfunction createUserDefinedFunctionUri(databaseId, collectionId, udfId) {\n    udfId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(udfId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(udfId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.UserDefinedFunctionsPathSegment +\n        \"/\" +\n        udfId);\n}\n/**\n * Given a database, collection and conflict id, this creates a conflict link.\n * Would be used when creating a Conflict in Azure Cosmos DB database service.\n * @param databaseId        -The database Id\n * @param collectionId      -The collection Id\n * @param conflictId        -The conflict Id\n * @returns A conflict link in the format of `dbs/{0}/colls/{1}/conflicts/{2}`\n * with `{0}` being a Uri escaped version of the databaseId, `{1}` being collectionId and `{2}` being the conflictId\n * @hidden\n */\nfunction createConflictUri(databaseId, collectionId, conflictId) {\n    conflictId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(conflictId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(conflictId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.ConflictsPathSegment +\n        \"/\" +\n        conflictId);\n}\n/**\n * Given a database, collection and conflict id, this creates a conflict link.\n * Would be used when creating a Conflict in Azure Cosmos DB database service.\n * @param databaseId        -The database Id\n * @param collectionId      -The collection Id\n * @param documentId        -The document Id\n * @param attachmentId      -The attachment Id\n * @returns A conflict link in the format of `dbs/{0}/colls/{1}/conflicts/{2}`\n * with `{0}` being a Uri escaped version of the databaseId, `{1}` being collectionId and `{2}` being the conflictId\n * @hidden\n */\nfunction createAttachmentUri(databaseId, collectionId, documentId, attachmentId) {\n    attachmentId = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashFromLeftAndRight)(attachmentId);\n    (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.validateResourceId)(attachmentId);\n    return (createDocumentUri(databaseId, collectionId, documentId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.AttachmentsPathSegment +\n        \"/\" +\n        attachmentId);\n}\n/**\n * Given a database and collection, this creates a partition key ranges link in\n *  the Azure Cosmos DB database service.\n * @param databaseId - The database Id\n * @param collectionId - The collection Id\n * @returns A partition key ranges link in the format of\n * `dbs/{0}/colls/{1}/pkranges` with `{0}` being a Uri escaped version of the databaseId and `{1}` being collectionId\n * @hidden\n */\nfunction createPartitionKeyRangesUri(databaseId, collectionId) {\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        _constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.PartitionKeyRangesPathSegment);\n}\n//# sourceMappingURL=uriFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/common/uriFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosDbDiagnosticLevel: () => (/* binding */ CosmosDbDiagnosticLevel)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Cosmos DB Diagnostic Level\n */\nvar CosmosDbDiagnosticLevel;\n(function (CosmosDbDiagnosticLevel) {\n    CosmosDbDiagnosticLevel[\"info\"] = \"info\";\n    CosmosDbDiagnosticLevel[\"debug\"] = \"debug\";\n    CosmosDbDiagnosticLevel[\"debugUnsafe\"] = \"debug-unsafe\";\n})(CosmosDbDiagnosticLevel || (CosmosDbDiagnosticLevel = {}));\n//# sourceMappingURL=CosmosDbDiagnosticLevel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBEQUEwRDtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZGlhZ25vc3RpY3MvQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuanM/MTAwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogQ29zbW9zIERCIERpYWdub3N0aWMgTGV2ZWxcbiAqL1xuZXhwb3J0IHZhciBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbDtcbihmdW5jdGlvbiAoQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwpIHtcbiAgICBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbFtcImluZm9cIl0gPSBcImluZm9cIjtcbiAgICBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbFtcImRlYnVnXCJdID0gXCJkZWJ1Z1wiO1xuICAgIENvc21vc0RiRGlhZ25vc3RpY0xldmVsW1wiZGVidWdVbnNhZmVcIl0gPSBcImRlYnVnLXVuc2FmZVwiO1xufSkoQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwgfHwgKENvc21vc0RiRGlhZ25vc3RpY0xldmVsID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvc21vc0RiRGlhZ25vc3RpY0xldmVsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDiagnosticsContext.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDiagnosticsContext.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosDiagnosticContext: () => (/* binding */ CosmosDiagnosticContext)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @hidden\n * Internal class to hold CosmosDiagnostic aggregate information all through the lifecycle of a request.\n * This object gathers diagnostic information throughout Client operation which may span across multiple\n * Server call, retries etc.\n * Functions - recordFailedAttempt, recordMetaDataQuery, recordEndpointContactEvent are used to ingest\n * data into the context. At the end of operation, getDiagnostics() is used to\n * get final CosmosDiagnostic object.\n */\nclass CosmosDiagnosticContext {\n    requestStartTimeUTCinMs;\n    failedAttempts = [];\n    metadataLookups = [];\n    gatewayStatistics = [];\n    locationEndpointsContacted = new Set();\n    encryptionDiagnostics;\n    constructor() {\n        this.requestStartTimeUTCinMs = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentTimestampInMs)();\n    }\n    recordFailedAttempt(gatewayStatistics, retryAttemptNumber) {\n        const attempt = {\n            attemptNumber: retryAttemptNumber,\n            startTimeUTCInMs: gatewayStatistics.startTimeUTCInMs,\n            durationInMs: gatewayStatistics.durationInMs,\n            statusCode: gatewayStatistics.statusCode,\n            substatusCode: gatewayStatistics.subStatusCode,\n            requestPayloadLengthInBytes: gatewayStatistics.requestPayloadLengthInBytes,\n            responsePayloadLengthInBytes: gatewayStatistics.responsePayloadLengthInBytes,\n            activityId: gatewayStatistics.activityId,\n            operationType: gatewayStatistics.operationType,\n            resourceType: gatewayStatistics.resourceType,\n        };\n        this.failedAttempts.push(attempt);\n    }\n    recordNetworkCall(gatewayStatistics) {\n        this.gatewayStatistics.push(gatewayStatistics);\n    }\n    recordEncryptionDiagnostics(encryptionDiagnostics) {\n        const { encryptContent, decryptContent } = encryptionDiagnostics;\n        const encryptionDuration = encryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDuration] ?? 0;\n        const decryptionDuration = decryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDuration] ?? 0;\n        encryptionDiagnostics.processingDurationInMs = encryptionDuration + decryptionDuration;\n        this.encryptionDiagnostics = encryptionDiagnostics;\n    }\n    /**\n     * Merge given DiagnosticContext to current node's DiagnosticContext, Treating GatewayRequests of\n     * given DiagnosticContext, as metadata requests.\n     */\n    mergeDiagnostics(childDiagnostics, metadataType) {\n        // Copy Location endpoints contacted.\n        childDiagnostics.locationEndpointsContacted.forEach((endpoint) => this.locationEndpointsContacted.add(endpoint));\n        // Copy child nodes's GatewayStatistics to parent's metadata lookups.\n        childDiagnostics.gatewayStatistics.forEach((gateway) => this.metadataLookups.push({\n            activityId: gateway.activityId,\n            requestPayloadLengthInBytes: gateway.requestPayloadLengthInBytes,\n            responsePayloadLengthInBytes: gateway.responsePayloadLengthInBytes,\n            startTimeUTCInMs: gateway.startTimeUTCInMs,\n            operationType: gateway.operationType,\n            resourceType: gateway.resourceType,\n            durationInMs: gateway.durationInMs,\n            metaDataType: metadataType,\n        }));\n    }\n    /**\n     * Merge given DiagnosticContext to current node's DiagnosticContext for bulk\n     */\n    mergeBulkDiagnostics(childDiagnostics) {\n        // Copy Location endpoints contacted.\n        childDiagnostics.locationEndpointsContacted.forEach((endpoint) => this.locationEndpointsContacted.add(endpoint));\n        // Copy child nodes's GatewayStatistics to parent's gateway statistics.\n        childDiagnostics.gatewayStatistics.forEach((gateway) => this.gatewayStatistics.push(gateway));\n        // merge metadata lookups and failed attempts\n        childDiagnostics.metadataLookups.forEach((lookup) => this.metadataLookups.push(lookup));\n        childDiagnostics.failedAttempts.forEach((lookup) => this.failedAttempts.push(lookup));\n        if (!this.encryptionDiagnostics) {\n            this.encryptionDiagnostics = childDiagnostics.encryptionDiagnostics;\n        }\n        else if (childDiagnostics.encryptionDiagnostics) {\n            this.encryptionDiagnostics.decryptContent =\n                childDiagnostics.encryptionDiagnostics.decryptContent;\n            this.encryptionDiagnostics.processingDurationInMs =\n                (this.encryptionDiagnostics.processingDurationInMs || 0) +\n                    (childDiagnostics.encryptionDiagnostics.processingDurationInMs || 0);\n        }\n    }\n    getClientSideStats(endTimeUTCInMs = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentTimestampInMs)()) {\n        return {\n            requestStartTimeUTCInMs: this.requestStartTimeUTCinMs,\n            requestDurationInMs: endTimeUTCInMs - this.requestStartTimeUTCinMs,\n            totalRequestPayloadLengthInBytes: this.getTotalRequestPayloadLength(),\n            totalResponsePayloadLengthInBytes: this.getTotalResponsePayloadLength(),\n            locationEndpointsContacted: [...this.locationEndpointsContacted.values()],\n            metadataDiagnostics: {\n                metadataLookups: [...this.metadataLookups],\n            },\n            retryDiagnostics: {\n                failedAttempts: [...this.failedAttempts],\n            },\n            gatewayStatistics: this.gatewayStatistics,\n            encryptionDiagnostics: this.encryptionDiagnostics,\n        };\n    }\n    getTotalRequestPayloadLength() {\n        let totalRequestPayloadLength = 0;\n        this.gatewayStatistics.forEach((req) => (totalRequestPayloadLength += req.requestPayloadLengthInBytes));\n        this.metadataLookups.forEach((req) => (totalRequestPayloadLength += req.requestPayloadLengthInBytes));\n        this.failedAttempts.forEach((req) => (totalRequestPayloadLength += req.requestPayloadLengthInBytes));\n        return totalRequestPayloadLength;\n    }\n    getTotalResponsePayloadLength() {\n        let totalResponsePayloadLength = 0;\n        this.gatewayStatistics.forEach((req) => (totalResponsePayloadLength += req.responsePayloadLengthInBytes));\n        this.metadataLookups.forEach((req) => (totalResponsePayloadLength += req.responsePayloadLengthInBytes));\n        this.failedAttempts.forEach((req) => (totalResponsePayloadLength += req.responsePayloadLengthInBytes));\n        return totalResponsePayloadLength;\n    }\n    recordEndpointResolution(location) {\n        this.locationEndpointsContacted.add(location);\n    }\n}\n//# sourceMappingURL=CosmosDiagnosticsContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDiagnosticsContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticFormatter.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticFormatter.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultDiagnosticFormatter: () => (/* binding */ DefaultDiagnosticFormatter)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass DefaultDiagnosticFormatter {\n    format(cosmosDiagnostic) {\n        return JSON.stringify(cosmosDiagnostic);\n    }\n}\n//# sourceMappingURL=DiagnosticFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9EaWFnbm9zdGljRm9ybWF0dGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9EaWFnbm9zdGljRm9ybWF0dGVyLmpzP2FkZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY2xhc3MgRGVmYXVsdERpYWdub3N0aWNGb3JtYXR0ZXIge1xuICAgIGZvcm1hdChjb3Ntb3NEaWFnbm9zdGljKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShjb3Ntb3NEaWFnbm9zdGljKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaWFnbm9zdGljRm9ybWF0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticFormatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DiagnosticNodeInternal: () => (/* binding */ DiagnosticNodeInternal),\n/* harmony export */   DiagnosticNodeType: () => (/* binding */ DiagnosticNodeType)\n/* harmony export */ });\n/* harmony import */ var _CosmosDiagnosticsContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CosmosDiagnosticsContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDiagnosticsContext.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n/* harmony import */ var _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./diagnosticLevelComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/diagnosticLevelComparator.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * This is Internal Representation for DiagnosticNode. It contains useful helper functions to collect\n * diagnostic information throughout the lifetime of Diagnostic session.\n * The functions toDiagnosticNode() & toDiagnostic() are given to convert it to public facing counterpart.\n */\nclass DiagnosticNodeInternal {\n    id;\n    nodeType;\n    parent;\n    children;\n    data;\n    startTimeUTCInMs;\n    durationInMs;\n    diagnosticLevel;\n    diagnosticCtx;\n    encryptionDiagnostics;\n    /**\n     * @internal\n     */\n    constructor(diagnosticLevel, type, parent, data = {}, startTimeUTCInMs = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)(), ctx = new _CosmosDiagnosticsContext_js__WEBPACK_IMPORTED_MODULE_0__.CosmosDiagnosticContext()) {\n        this.id = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_7__.randomUUID)();\n        this.nodeType = type;\n        this.startTimeUTCInMs = startTimeUTCInMs;\n        this.data = data;\n        this.children = [];\n        this.durationInMs = 0;\n        this.parent = parent;\n        this.diagnosticCtx = ctx;\n        this.diagnosticLevel = diagnosticLevel;\n        // Initialize EncryptionDiagnostics\n        this.encryptionDiagnostics = {\n            encryptContent: {},\n            decryptContent: {},\n            processingDurationInMs: 0,\n        };\n    }\n    /**\n     * @internal\n     */\n    addLog(msg) {\n        if (!this.data.log) {\n            this.data.log = [];\n        }\n        this.data.log.push(msg);\n    }\n    /**\n     * @internal\n     */\n    sanitizeHeaders(headers) {\n        return headers;\n    }\n    /**\n     * Updated durationInMs for node, based on endTimeUTCInMs provided.\n     * @internal\n     */\n    updateTimestamp(endTimeUTCInMs = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)()) {\n        this.durationInMs = endTimeUTCInMs - this.startTimeUTCInMs;\n    }\n    /**\n     * @internal\n     */\n    recordSuccessfulNetworkCall(startTimeUTCInMs, requestContext, pipelineResponse, substatus, url) {\n        const responseHeaders = pipelineResponse.headers.toJSON();\n        const gatewayRequest = {\n            activityId: responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.HttpHeaders.ActivityId],\n            correlateActivityId: requestContext.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.HttpHeaders.CorrelatedActivityId],\n            startTimeUTCInMs,\n            durationInMs: (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)() - startTimeUTCInMs,\n            statusCode: pipelineResponse.status,\n            subStatusCode: substatus,\n            requestPayloadLengthInBytes: calculateRequestPayloadLength(requestContext),\n            responsePayloadLengthInBytes: calculateResponsePayloadLength(pipelineResponse),\n            operationType: requestContext.operationType,\n            resourceType: requestContext.resourceType,\n            partitionKeyRangeId: requestContext.partitionKeyRangeId,\n        };\n        let requestData = {\n            OperationType: gatewayRequest.operationType,\n            resourceType: gatewayRequest.resourceType,\n            requestPayloadLengthInBytes: gatewayRequest.requestPayloadLengthInBytes,\n        };\n        if ((0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_4__.CosmosDbDiagnosticLevel.debugUnsafe, this.diagnosticLevel)) {\n            requestData = {\n                ...requestData,\n                headers: this.sanitizeHeaders(requestContext.headers),\n                requestBody: requestContext.body,\n                responseBody: pipelineResponse.bodyAsText,\n                url: url,\n            };\n        }\n        this.addData({\n            requestPayloadLengthInBytes: gatewayRequest.requestPayloadLengthInBytes,\n            responsePayloadLengthInBytes: gatewayRequest.responsePayloadLengthInBytes,\n            startTimeUTCInMs: gatewayRequest.startTimeUTCInMs,\n            durationInMs: gatewayRequest.durationInMs,\n            requestData,\n        });\n        this.diagnosticCtx.recordNetworkCall(gatewayRequest);\n    }\n    /**\n     * @internal\n     */\n    recordFailedNetworkCall(startTimeUTCInMs, requestContext, retryAttemptNumber, statusCode, substatusCode, responseHeaders) {\n        this.addData({ failedAttempty: true });\n        const requestPayloadLengthInBytes = calculateRequestPayloadLength(requestContext);\n        this.diagnosticCtx.recordFailedAttempt({\n            activityId: responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.HttpHeaders.ActivityId],\n            correlatedActivityId: requestContext.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.HttpHeaders.CorrelatedActivityId],\n            startTimeUTCInMs,\n            durationInMs: (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)() - startTimeUTCInMs,\n            statusCode,\n            subStatusCode: substatusCode,\n            requestPayloadLengthInBytes,\n            responsePayloadLengthInBytes: 0,\n            operationType: requestContext.operationType,\n            resourceType: requestContext.resourceType,\n        }, retryAttemptNumber);\n        let requestData = {\n            OperationType: requestContext.operationType,\n            resourceType: requestContext.resourceType,\n            requestPayloadLengthInBytes,\n        };\n        if ((0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_4__.CosmosDbDiagnosticLevel.debugUnsafe, this.diagnosticLevel)) {\n            requestData = {\n                ...requestData,\n                headers: this.sanitizeHeaders(requestContext.headers),\n                requestBody: requestContext.body,\n                url: (0,_common_index_js__WEBPACK_IMPORTED_MODULE_5__.prepareURL)(requestContext.endpoint, requestContext.path),\n            };\n        }\n        this.addData({\n            failedAttempty: true,\n            requestData,\n        });\n    }\n    /**\n     * @internal\n     */\n    recordEndpointResolution(location) {\n        this.addData({ selectedLocation: location });\n        this.diagnosticCtx.recordEndpointResolution(location);\n    }\n    /**\n     * @internal\n     */\n    addData(data, msg, level = this.diagnosticLevel) {\n        if (level !== _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_4__.CosmosDbDiagnosticLevel.info) {\n            this.data = { ...this.data, ...data };\n            if (msg) {\n                this.addLog(msg);\n            }\n        }\n    }\n    /**\n     * Merge given DiagnosticNodeInternal's context to current node's DiagnosticContext, Treating GatewayRequests of\n     * given DiagnosticContext, as metadata requests. Given DiagnosticNodeInternal becomes a child of this node.\n     * @internal\n     */\n    addChildNode(child, level, metadataType) {\n        this.diagnosticCtx.mergeDiagnostics(child.diagnosticCtx, metadataType);\n        if ((0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(level, this.diagnosticLevel)) {\n            child.parent = this;\n            this.children.push(child);\n        }\n        return child;\n    }\n    /**\n     * Merge given DiagnosticNodeInternal's context to current node's DiagnosticContext for bulk.\n     * Given DiagnosticNodeInternal becomes a child of this node.\n     * @internal\n     */\n    addBulkChildNode(child, level) {\n        this.diagnosticCtx.mergeBulkDiagnostics(child.diagnosticCtx);\n        if ((0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(level, this.diagnosticLevel)) {\n            child.parent = this;\n            this.children.push(child);\n        }\n        return child;\n    }\n    /**\n     * @internal\n     */\n    initializeChildNode(type, level, data = {}) {\n        if ((0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(level, this.diagnosticLevel)) {\n            const child = new DiagnosticNodeInternal(this.diagnosticLevel, type, this, data, (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)(), this.diagnosticCtx);\n            this.children.push(child);\n            return child;\n        }\n        else {\n            return this;\n        }\n    }\n    /**\n     * @internal\n     */\n    recordQueryResult(resources, level) {\n        if ((0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(level, this.diagnosticLevel)) {\n            const previousCount = this.data.queryRecordsRead ?? 0;\n            if (Array.isArray(resources)) {\n                this.data.queryRecordsRead = previousCount + resources.length;\n            }\n        }\n    }\n    /**\n     * @internal\n     * record startTime for encryption in an operation\n     */\n    beginEncryptionDiagnostics(operation) {\n        const startTime = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)();\n        switch (operation) {\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsEncryptOperation:\n                this.encryptionDiagnostics.encryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsStartTime] =\n                    startTime;\n                break;\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsDecryptOperation:\n                this.encryptionDiagnostics.decryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsStartTime] =\n                    startTime;\n                break;\n            default:\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Invalid operation type for encryption diagnostics\");\n        }\n    }\n    /**\n     * @internal\n     * record duration from startTime and properties count for encryption in an operation\n     */\n    endEncryptionDiagnostics(operation, propertiesCount) {\n        const endTime = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimestampInMs)();\n        let processingDuration = 0;\n        switch (operation) {\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsEncryptOperation:\n                processingDuration =\n                    endTime -\n                        this.encryptionDiagnostics.encryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsStartTime];\n                this.encryptionDiagnostics.encryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsDuration] =\n                    processingDuration;\n                // will be undefined in case of bulk/batch\n                if (propertiesCount !== undefined) {\n                    this.encryptionDiagnostics.encryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsPropertiesEncryptedCount] = propertiesCount;\n                }\n                break;\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsDecryptOperation:\n                processingDuration =\n                    endTime -\n                        this.encryptionDiagnostics.decryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsStartTime];\n                this.encryptionDiagnostics.decryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsDuration] =\n                    processingDuration;\n                if (propertiesCount !== undefined) {\n                    this.encryptionDiagnostics.decryptContent[_common_index_js__WEBPACK_IMPORTED_MODULE_5__.Constants.Encryption.DiagnosticsPropertiesDecryptedCount] = propertiesCount;\n                }\n                break;\n            default:\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Invalid operation type for encryption diagnostics\");\n        }\n        this.diagnosticCtx.recordEncryptionDiagnostics(this.encryptionDiagnostics);\n    }\n    /**\n     * Convert DiagnosticNodeInternal (internal representation) to DiagnosticNode (public, sanitized representation)\n     * @internal\n     */\n    toDiagnosticNode() {\n        return {\n            id: this.id,\n            nodeType: this.nodeType,\n            children: this.children.map((child) => child.toDiagnosticNode()),\n            data: this.data,\n            startTimeUTCInMs: this.startTimeUTCInMs,\n            durationInMs: this.durationInMs,\n        };\n    }\n    /**\n     * Convert to CosmosDiagnostics\n     * @internal\n     */\n    toDiagnostic(clientConfigDiagnostic) {\n        const rootNode = (0,_CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_2__.getRootNode)(this);\n        const diagnostiNode = (0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_4__.CosmosDbDiagnosticLevel.debug, this.diagnosticLevel)\n            ? rootNode.toDiagnosticNode()\n            : undefined;\n        const clientConfig = (0,_diagnosticLevelComparator_js__WEBPACK_IMPORTED_MODULE_6__.allowTracing)(_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_4__.CosmosDbDiagnosticLevel.debug, this.diagnosticLevel)\n            ? clientConfigDiagnostic\n            : undefined;\n        const cosmosDiagnostic = new _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_2__.CosmosDiagnostics(this.diagnosticCtx.getClientSideStats(), diagnostiNode, clientConfig);\n        return cosmosDiagnostic;\n    }\n}\n/**\n * @hidden\n */\nvar DiagnosticNodeType;\n(function (DiagnosticNodeType) {\n    DiagnosticNodeType[\"CLIENT_REQUEST_NODE\"] = \"CLIENT_REQUEST_NODE\";\n    DiagnosticNodeType[\"METADATA_REQUEST_NODE\"] = \"METADATA_REQUEST_NODE\";\n    DiagnosticNodeType[\"HTTP_REQUEST\"] = \"HTTP_REQUEST\";\n    DiagnosticNodeType[\"BATCH_REQUEST\"] = \"BATCH_REQUEST\";\n    DiagnosticNodeType[\"PARALLEL_QUERY_NODE\"] = \"PARALLEL_QUERY_NODE\";\n    DiagnosticNodeType[\"DEFAULT_QUERY_NODE\"] = \"DEFAULT_QUERY_NODE\";\n    DiagnosticNodeType[\"QUERY_REPAIR_NODE\"] = \"QUERY_REPAIR_NODE\";\n    DiagnosticNodeType[\"BACKGROUND_REFRESH_THREAD\"] = \"BACKGROUND_REFRESH_THREAD\";\n    DiagnosticNodeType[\"REQUEST_ATTEMPTS\"] = \"REQUEST_ATTEMPTS\";\n})(DiagnosticNodeType || (DiagnosticNodeType = {}));\nfunction calculateResponsePayloadLength(response) {\n    return response?.bodyAsText?.length || 0;\n}\nfunction calculateRequestPayloadLength(requestContext) {\n    return requestContext.body ? requestContext.body.length : 0;\n}\n//# sourceMappingURL=DiagnosticNodeInternal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9EaWFnbm9zdGljTm9kZUludGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3dFO0FBQ3BCO0FBQ3FCO0FBQ2Q7QUFDWTtBQUNaO0FBQ0c7QUFDaEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxxQkFBcUIsdUVBQXVCLGNBQWMsaUZBQXVCO0FBQ3pJLGtCQUFrQiw0REFBVTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5Qiw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsdUVBQXVCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsdURBQVM7QUFDakQsd0RBQXdELHVEQUFTO0FBQ2pFO0FBQ0EsMEJBQTBCLHVFQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkVBQVksQ0FBQyxnRkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQSx3Q0FBd0MsdURBQVM7QUFDakQseURBQXlELHVEQUFTO0FBQ2xFO0FBQ0EsMEJBQTBCLHVFQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkVBQVksQ0FBQyxnRkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNERBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDRCQUE0QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0ZBQXVCO0FBQzdDLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJFQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkVBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QyxZQUFZLDJFQUFZO0FBQ3hCLDZGQUE2Rix1RUFBdUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkVBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix1RUFBdUI7QUFDakQ7QUFDQSxpQkFBaUIsdURBQVM7QUFDMUIsMERBQTBELHVEQUFTO0FBQ25FO0FBQ0E7QUFDQSxpQkFBaUIsdURBQVM7QUFDMUIsMERBQTBELHVEQUFTO0FBQ25FO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0REFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1RUFBdUI7QUFDL0M7QUFDQTtBQUNBLGlCQUFpQix1REFBUztBQUMxQjtBQUNBO0FBQ0Esa0VBQWtFLHVEQUFTO0FBQzNFLDBEQUEwRCx1REFBUztBQUNuRTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsdURBQVM7QUFDdkU7QUFDQTtBQUNBLGlCQUFpQix1REFBUztBQUMxQjtBQUNBO0FBQ0Esa0VBQWtFLHVEQUFTO0FBQzNFLDBEQUEwRCx1REFBUztBQUNuRTtBQUNBO0FBQ0EsOERBQThELHVEQUFTO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0REFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixrRUFBVztBQUNwQyw4QkFBOEIsMkVBQVksQ0FBQyxnRkFBdUI7QUFDbEU7QUFDQTtBQUNBLDZCQUE2QiwyRUFBWSxDQUFDLGdGQUF1QjtBQUNqRTtBQUNBO0FBQ0EscUNBQXFDLG9FQUFpQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RpYWdub3N0aWNzL0RpYWdub3N0aWNOb2RlSW50ZXJuYWwuanM/NjE1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvc21vc0RpYWdub3N0aWNDb250ZXh0IH0gZnJvbSBcIi4vQ29zbW9zRGlhZ25vc3RpY3NDb250ZXh0LmpzXCI7XG5pbXBvcnQgeyBFcnJvclJlc3BvbnNlIH0gZnJvbSBcIi4uL3JlcXVlc3QvaW5kZXguanNcIjtcbmltcG9ydCB7IENvc21vc0RpYWdub3N0aWNzLCBnZXRSb290Tm9kZSB9IGZyb20gXCIuLi9Db3Ntb3NEaWFnbm9zdGljcy5qc1wiO1xuaW1wb3J0IHsgZ2V0Q3VycmVudFRpbWVzdGFtcEluTXMgfSBmcm9tIFwiLi4vdXRpbHMvdGltZS5qc1wiO1xuaW1wb3J0IHsgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwgfSBmcm9tIFwiLi9Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5qc1wiO1xuaW1wb3J0IHsgQ29uc3RhbnRzLCBwcmVwYXJlVVJMIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgYWxsb3dUcmFjaW5nIH0gZnJvbSBcIi4vZGlhZ25vc3RpY0xldmVsQ29tcGFyYXRvci5qc1wiO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqIFRoaXMgaXMgSW50ZXJuYWwgUmVwcmVzZW50YXRpb24gZm9yIERpYWdub3N0aWNOb2RlLiBJdCBjb250YWlucyB1c2VmdWwgaGVscGVyIGZ1bmN0aW9ucyB0byBjb2xsZWN0XG4gKiBkaWFnbm9zdGljIGluZm9ybWF0aW9uIHRocm91Z2hvdXQgdGhlIGxpZmV0aW1lIG9mIERpYWdub3N0aWMgc2Vzc2lvbi5cbiAqIFRoZSBmdW5jdGlvbnMgdG9EaWFnbm9zdGljTm9kZSgpICYgdG9EaWFnbm9zdGljKCkgYXJlIGdpdmVuIHRvIGNvbnZlcnQgaXQgdG8gcHVibGljIGZhY2luZyBjb3VudGVycGFydC5cbiAqL1xuZXhwb3J0IGNsYXNzIERpYWdub3N0aWNOb2RlSW50ZXJuYWwge1xuICAgIGlkO1xuICAgIG5vZGVUeXBlO1xuICAgIHBhcmVudDtcbiAgICBjaGlsZHJlbjtcbiAgICBkYXRhO1xuICAgIHN0YXJ0VGltZVVUQ0luTXM7XG4gICAgZHVyYXRpb25Jbk1zO1xuICAgIGRpYWdub3N0aWNMZXZlbDtcbiAgICBkaWFnbm9zdGljQ3R4O1xuICAgIGVuY3J5cHRpb25EaWFnbm9zdGljcztcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihkaWFnbm9zdGljTGV2ZWwsIHR5cGUsIHBhcmVudCwgZGF0YSA9IHt9LCBzdGFydFRpbWVVVENJbk1zID0gZ2V0Q3VycmVudFRpbWVzdGFtcEluTXMoKSwgY3R4ID0gbmV3IENvc21vc0RpYWdub3N0aWNDb250ZXh0KCkpIHtcbiAgICAgICAgdGhpcy5pZCA9IHJhbmRvbVVVSUQoKTtcbiAgICAgICAgdGhpcy5ub2RlVHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuc3RhcnRUaW1lVVRDSW5NcyA9IHN0YXJ0VGltZVVUQ0luTXM7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICAgICAgdGhpcy5kdXJhdGlvbkluTXMgPSAwO1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5kaWFnbm9zdGljQ3R4ID0gY3R4O1xuICAgICAgICB0aGlzLmRpYWdub3N0aWNMZXZlbCA9IGRpYWdub3N0aWNMZXZlbDtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBFbmNyeXB0aW9uRGlhZ25vc3RpY3NcbiAgICAgICAgdGhpcy5lbmNyeXB0aW9uRGlhZ25vc3RpY3MgPSB7XG4gICAgICAgICAgICBlbmNyeXB0Q29udGVudDoge30sXG4gICAgICAgICAgICBkZWNyeXB0Q29udGVudDoge30sXG4gICAgICAgICAgICBwcm9jZXNzaW5nRHVyYXRpb25Jbk1zOiAwLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhZGRMb2cobXNnKSB7XG4gICAgICAgIGlmICghdGhpcy5kYXRhLmxvZykge1xuICAgICAgICAgICAgdGhpcy5kYXRhLmxvZyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGF0YS5sb2cucHVzaChtc2cpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBzYW5pdGl6ZUhlYWRlcnMoaGVhZGVycykge1xuICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlZCBkdXJhdGlvbkluTXMgZm9yIG5vZGUsIGJhc2VkIG9uIGVuZFRpbWVVVENJbk1zIHByb3ZpZGVkLlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHVwZGF0ZVRpbWVzdGFtcChlbmRUaW1lVVRDSW5NcyA9IGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCkpIHtcbiAgICAgICAgdGhpcy5kdXJhdGlvbkluTXMgPSBlbmRUaW1lVVRDSW5NcyAtIHRoaXMuc3RhcnRUaW1lVVRDSW5NcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgcmVjb3JkU3VjY2Vzc2Z1bE5ldHdvcmtDYWxsKHN0YXJ0VGltZVVUQ0luTXMsIHJlcXVlc3RDb250ZXh0LCBwaXBlbGluZVJlc3BvbnNlLCBzdWJzdGF0dXMsIHVybCkge1xuICAgICAgICBjb25zdCByZXNwb25zZUhlYWRlcnMgPSBwaXBlbGluZVJlc3BvbnNlLmhlYWRlcnMudG9KU09OKCk7XG4gICAgICAgIGNvbnN0IGdhdGV3YXlSZXF1ZXN0ID0ge1xuICAgICAgICAgICAgYWN0aXZpdHlJZDogcmVzcG9uc2VIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5BY3Rpdml0eUlkXSxcbiAgICAgICAgICAgIGNvcnJlbGF0ZUFjdGl2aXR5SWQ6IHJlcXVlc3RDb250ZXh0LmhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkNvcnJlbGF0ZWRBY3Rpdml0eUlkXSxcbiAgICAgICAgICAgIHN0YXJ0VGltZVVUQ0luTXMsXG4gICAgICAgICAgICBkdXJhdGlvbkluTXM6IGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCkgLSBzdGFydFRpbWVVVENJbk1zLFxuICAgICAgICAgICAgc3RhdHVzQ29kZTogcGlwZWxpbmVSZXNwb25zZS5zdGF0dXMsXG4gICAgICAgICAgICBzdWJTdGF0dXNDb2RlOiBzdWJzdGF0dXMsXG4gICAgICAgICAgICByZXF1ZXN0UGF5bG9hZExlbmd0aEluQnl0ZXM6IGNhbGN1bGF0ZVJlcXVlc3RQYXlsb2FkTGVuZ3RoKHJlcXVlc3RDb250ZXh0KSxcbiAgICAgICAgICAgIHJlc3BvbnNlUGF5bG9hZExlbmd0aEluQnl0ZXM6IGNhbGN1bGF0ZVJlc3BvbnNlUGF5bG9hZExlbmd0aChwaXBlbGluZVJlc3BvbnNlKSxcbiAgICAgICAgICAgIG9wZXJhdGlvblR5cGU6IHJlcXVlc3RDb250ZXh0Lm9wZXJhdGlvblR5cGUsXG4gICAgICAgICAgICByZXNvdXJjZVR5cGU6IHJlcXVlc3RDb250ZXh0LnJlc291cmNlVHlwZSxcbiAgICAgICAgICAgIHBhcnRpdGlvbktleVJhbmdlSWQ6IHJlcXVlc3RDb250ZXh0LnBhcnRpdGlvbktleVJhbmdlSWQsXG4gICAgICAgIH07XG4gICAgICAgIGxldCByZXF1ZXN0RGF0YSA9IHtcbiAgICAgICAgICAgIE9wZXJhdGlvblR5cGU6IGdhdGV3YXlSZXF1ZXN0Lm9wZXJhdGlvblR5cGUsXG4gICAgICAgICAgICByZXNvdXJjZVR5cGU6IGdhdGV3YXlSZXF1ZXN0LnJlc291cmNlVHlwZSxcbiAgICAgICAgICAgIHJlcXVlc3RQYXlsb2FkTGVuZ3RoSW5CeXRlczogZ2F0ZXdheVJlcXVlc3QucmVxdWVzdFBheWxvYWRMZW5ndGhJbkJ5dGVzLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoYWxsb3dUcmFjaW5nKENvc21vc0RiRGlhZ25vc3RpY0xldmVsLmRlYnVnVW5zYWZlLCB0aGlzLmRpYWdub3N0aWNMZXZlbCkpIHtcbiAgICAgICAgICAgIHJlcXVlc3REYXRhID0ge1xuICAgICAgICAgICAgICAgIC4uLnJlcXVlc3REYXRhLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuc2FuaXRpemVIZWFkZXJzKHJlcXVlc3RDb250ZXh0LmhlYWRlcnMpLFxuICAgICAgICAgICAgICAgIHJlcXVlc3RCb2R5OiByZXF1ZXN0Q29udGV4dC5ib2R5LFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlQm9keTogcGlwZWxpbmVSZXNwb25zZS5ib2R5QXNUZXh0LFxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFkZERhdGEoe1xuICAgICAgICAgICAgcmVxdWVzdFBheWxvYWRMZW5ndGhJbkJ5dGVzOiBnYXRld2F5UmVxdWVzdC5yZXF1ZXN0UGF5bG9hZExlbmd0aEluQnl0ZXMsXG4gICAgICAgICAgICByZXNwb25zZVBheWxvYWRMZW5ndGhJbkJ5dGVzOiBnYXRld2F5UmVxdWVzdC5yZXNwb25zZVBheWxvYWRMZW5ndGhJbkJ5dGVzLFxuICAgICAgICAgICAgc3RhcnRUaW1lVVRDSW5NczogZ2F0ZXdheVJlcXVlc3Quc3RhcnRUaW1lVVRDSW5NcyxcbiAgICAgICAgICAgIGR1cmF0aW9uSW5NczogZ2F0ZXdheVJlcXVlc3QuZHVyYXRpb25Jbk1zLFxuICAgICAgICAgICAgcmVxdWVzdERhdGEsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRpYWdub3N0aWNDdHgucmVjb3JkTmV0d29ya0NhbGwoZ2F0ZXdheVJlcXVlc3QpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICByZWNvcmRGYWlsZWROZXR3b3JrQ2FsbChzdGFydFRpbWVVVENJbk1zLCByZXF1ZXN0Q29udGV4dCwgcmV0cnlBdHRlbXB0TnVtYmVyLCBzdGF0dXNDb2RlLCBzdWJzdGF0dXNDb2RlLCByZXNwb25zZUhlYWRlcnMpIHtcbiAgICAgICAgdGhpcy5hZGREYXRhKHsgZmFpbGVkQXR0ZW1wdHk6IHRydWUgfSk7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RQYXlsb2FkTGVuZ3RoSW5CeXRlcyA9IGNhbGN1bGF0ZVJlcXVlc3RQYXlsb2FkTGVuZ3RoKHJlcXVlc3RDb250ZXh0KTtcbiAgICAgICAgdGhpcy5kaWFnbm9zdGljQ3R4LnJlY29yZEZhaWxlZEF0dGVtcHQoe1xuICAgICAgICAgICAgYWN0aXZpdHlJZDogcmVzcG9uc2VIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5BY3Rpdml0eUlkXSxcbiAgICAgICAgICAgIGNvcnJlbGF0ZWRBY3Rpdml0eUlkOiByZXF1ZXN0Q29udGV4dC5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Db3JyZWxhdGVkQWN0aXZpdHlJZF0sXG4gICAgICAgICAgICBzdGFydFRpbWVVVENJbk1zLFxuICAgICAgICAgICAgZHVyYXRpb25Jbk1zOiBnZXRDdXJyZW50VGltZXN0YW1wSW5NcygpIC0gc3RhcnRUaW1lVVRDSW5NcyxcbiAgICAgICAgICAgIHN0YXR1c0NvZGUsXG4gICAgICAgICAgICBzdWJTdGF0dXNDb2RlOiBzdWJzdGF0dXNDb2RlLFxuICAgICAgICAgICAgcmVxdWVzdFBheWxvYWRMZW5ndGhJbkJ5dGVzLFxuICAgICAgICAgICAgcmVzcG9uc2VQYXlsb2FkTGVuZ3RoSW5CeXRlczogMCxcbiAgICAgICAgICAgIG9wZXJhdGlvblR5cGU6IHJlcXVlc3RDb250ZXh0Lm9wZXJhdGlvblR5cGUsXG4gICAgICAgICAgICByZXNvdXJjZVR5cGU6IHJlcXVlc3RDb250ZXh0LnJlc291cmNlVHlwZSxcbiAgICAgICAgfSwgcmV0cnlBdHRlbXB0TnVtYmVyKTtcbiAgICAgICAgbGV0IHJlcXVlc3REYXRhID0ge1xuICAgICAgICAgICAgT3BlcmF0aW9uVHlwZTogcmVxdWVzdENvbnRleHQub3BlcmF0aW9uVHlwZSxcbiAgICAgICAgICAgIHJlc291cmNlVHlwZTogcmVxdWVzdENvbnRleHQucmVzb3VyY2VUeXBlLFxuICAgICAgICAgICAgcmVxdWVzdFBheWxvYWRMZW5ndGhJbkJ5dGVzLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoYWxsb3dUcmFjaW5nKENvc21vc0RiRGlhZ25vc3RpY0xldmVsLmRlYnVnVW5zYWZlLCB0aGlzLmRpYWdub3N0aWNMZXZlbCkpIHtcbiAgICAgICAgICAgIHJlcXVlc3REYXRhID0ge1xuICAgICAgICAgICAgICAgIC4uLnJlcXVlc3REYXRhLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuc2FuaXRpemVIZWFkZXJzKHJlcXVlc3RDb250ZXh0LmhlYWRlcnMpLFxuICAgICAgICAgICAgICAgIHJlcXVlc3RCb2R5OiByZXF1ZXN0Q29udGV4dC5ib2R5LFxuICAgICAgICAgICAgICAgIHVybDogcHJlcGFyZVVSTChyZXF1ZXN0Q29udGV4dC5lbmRwb2ludCwgcmVxdWVzdENvbnRleHQucGF0aCksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYWRkRGF0YSh7XG4gICAgICAgICAgICBmYWlsZWRBdHRlbXB0eTogdHJ1ZSxcbiAgICAgICAgICAgIHJlcXVlc3REYXRhLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgcmVjb3JkRW5kcG9pbnRSZXNvbHV0aW9uKGxvY2F0aW9uKSB7XG4gICAgICAgIHRoaXMuYWRkRGF0YSh7IHNlbGVjdGVkTG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB0aGlzLmRpYWdub3N0aWNDdHgucmVjb3JkRW5kcG9pbnRSZXNvbHV0aW9uKGxvY2F0aW9uKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYWRkRGF0YShkYXRhLCBtc2csIGxldmVsID0gdGhpcy5kaWFnbm9zdGljTGV2ZWwpIHtcbiAgICAgICAgaWYgKGxldmVsICE9PSBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5pbmZvKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGEgPSB7IC4uLnRoaXMuZGF0YSwgLi4uZGF0YSB9O1xuICAgICAgICAgICAgaWYgKG1zZykge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkTG9nKG1zZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogTWVyZ2UgZ2l2ZW4gRGlhZ25vc3RpY05vZGVJbnRlcm5hbCdzIGNvbnRleHQgdG8gY3VycmVudCBub2RlJ3MgRGlhZ25vc3RpY0NvbnRleHQsIFRyZWF0aW5nIEdhdGV3YXlSZXF1ZXN0cyBvZlxuICAgICAqIGdpdmVuIERpYWdub3N0aWNDb250ZXh0LCBhcyBtZXRhZGF0YSByZXF1ZXN0cy4gR2l2ZW4gRGlhZ25vc3RpY05vZGVJbnRlcm5hbCBiZWNvbWVzIGEgY2hpbGQgb2YgdGhpcyBub2RlLlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFkZENoaWxkTm9kZShjaGlsZCwgbGV2ZWwsIG1ldGFkYXRhVHlwZSkge1xuICAgICAgICB0aGlzLmRpYWdub3N0aWNDdHgubWVyZ2VEaWFnbm9zdGljcyhjaGlsZC5kaWFnbm9zdGljQ3R4LCBtZXRhZGF0YVR5cGUpO1xuICAgICAgICBpZiAoYWxsb3dUcmFjaW5nKGxldmVsLCB0aGlzLmRpYWdub3N0aWNMZXZlbCkpIHtcbiAgICAgICAgICAgIGNoaWxkLnBhcmVudCA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjaGlsZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWVyZ2UgZ2l2ZW4gRGlhZ25vc3RpY05vZGVJbnRlcm5hbCdzIGNvbnRleHQgdG8gY3VycmVudCBub2RlJ3MgRGlhZ25vc3RpY0NvbnRleHQgZm9yIGJ1bGsuXG4gICAgICogR2l2ZW4gRGlhZ25vc3RpY05vZGVJbnRlcm5hbCBiZWNvbWVzIGEgY2hpbGQgb2YgdGhpcyBub2RlLlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFkZEJ1bGtDaGlsZE5vZGUoY2hpbGQsIGxldmVsKSB7XG4gICAgICAgIHRoaXMuZGlhZ25vc3RpY0N0eC5tZXJnZUJ1bGtEaWFnbm9zdGljcyhjaGlsZC5kaWFnbm9zdGljQ3R4KTtcbiAgICAgICAgaWYgKGFsbG93VHJhY2luZyhsZXZlbCwgdGhpcy5kaWFnbm9zdGljTGV2ZWwpKSB7XG4gICAgICAgICAgICBjaGlsZC5wYXJlbnQgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2hpbGQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGluaXRpYWxpemVDaGlsZE5vZGUodHlwZSwgbGV2ZWwsIGRhdGEgPSB7fSkge1xuICAgICAgICBpZiAoYWxsb3dUcmFjaW5nKGxldmVsLCB0aGlzLmRpYWdub3N0aWNMZXZlbCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gbmV3IERpYWdub3N0aWNOb2RlSW50ZXJuYWwodGhpcy5kaWFnbm9zdGljTGV2ZWwsIHR5cGUsIHRoaXMsIGRhdGEsIGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCksIHRoaXMuZGlhZ25vc3RpY0N0eCk7XG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgICAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgcmVjb3JkUXVlcnlSZXN1bHQocmVzb3VyY2VzLCBsZXZlbCkge1xuICAgICAgICBpZiAoYWxsb3dUcmFjaW5nKGxldmVsLCB0aGlzLmRpYWdub3N0aWNMZXZlbCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHByZXZpb3VzQ291bnQgPSB0aGlzLmRhdGEucXVlcnlSZWNvcmRzUmVhZCA/PyAwO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzb3VyY2VzKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5xdWVyeVJlY29yZHNSZWFkID0gcHJldmlvdXNDb3VudCArIHJlc291cmNlcy5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICogcmVjb3JkIHN0YXJ0VGltZSBmb3IgZW5jcnlwdGlvbiBpbiBhbiBvcGVyYXRpb25cbiAgICAgKi9cbiAgICBiZWdpbkVuY3J5cHRpb25EaWFnbm9zdGljcyhvcGVyYXRpb24pIHtcbiAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gZ2V0Q3VycmVudFRpbWVzdGFtcEluTXMoKTtcbiAgICAgICAgc3dpdGNoIChvcGVyYXRpb24pIHtcbiAgICAgICAgICAgIGNhc2UgQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NFbmNyeXB0T3BlcmF0aW9uOlxuICAgICAgICAgICAgICAgIHRoaXMuZW5jcnlwdGlvbkRpYWdub3N0aWNzLmVuY3J5cHRDb250ZW50W0NvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzU3RhcnRUaW1lXSA9XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0VGltZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEZWNyeXB0T3BlcmF0aW9uOlxuICAgICAgICAgICAgICAgIHRoaXMuZW5jcnlwdGlvbkRpYWdub3N0aWNzLmRlY3J5cHRDb250ZW50W0NvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzU3RhcnRUaW1lXSA9XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0VGltZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJJbnZhbGlkIG9wZXJhdGlvbiB0eXBlIGZvciBlbmNyeXB0aW9uIGRpYWdub3N0aWNzXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqIHJlY29yZCBkdXJhdGlvbiBmcm9tIHN0YXJ0VGltZSBhbmQgcHJvcGVydGllcyBjb3VudCBmb3IgZW5jcnlwdGlvbiBpbiBhbiBvcGVyYXRpb25cbiAgICAgKi9cbiAgICBlbmRFbmNyeXB0aW9uRGlhZ25vc3RpY3Mob3BlcmF0aW9uLCBwcm9wZXJ0aWVzQ291bnQpIHtcbiAgICAgICAgY29uc3QgZW5kVGltZSA9IGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCk7XG4gICAgICAgIGxldCBwcm9jZXNzaW5nRHVyYXRpb24gPSAwO1xuICAgICAgICBzd2l0Y2ggKG9wZXJhdGlvbikge1xuICAgICAgICAgICAgY2FzZSBDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0VuY3J5cHRPcGVyYXRpb246XG4gICAgICAgICAgICAgICAgcHJvY2Vzc2luZ0R1cmF0aW9uID1cbiAgICAgICAgICAgICAgICAgICAgZW5kVGltZSAtXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVuY3J5cHRpb25EaWFnbm9zdGljcy5lbmNyeXB0Q29udGVudFtDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc1N0YXJ0VGltZV07XG4gICAgICAgICAgICAgICAgdGhpcy5lbmNyeXB0aW9uRGlhZ25vc3RpY3MuZW5jcnlwdENvbnRlbnRbQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEdXJhdGlvbl0gPVxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nRHVyYXRpb247XG4gICAgICAgICAgICAgICAgLy8gd2lsbCBiZSB1bmRlZmluZWQgaW4gY2FzZSBvZiBidWxrL2JhdGNoXG4gICAgICAgICAgICAgICAgaWYgKHByb3BlcnRpZXNDb3VudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW5jcnlwdGlvbkRpYWdub3N0aWNzLmVuY3J5cHRDb250ZW50W0NvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzUHJvcGVydGllc0VuY3J5cHRlZENvdW50XSA9IHByb3BlcnRpZXNDb3VudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRGVjcnlwdE9wZXJhdGlvbjpcbiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nRHVyYXRpb24gPVxuICAgICAgICAgICAgICAgICAgICBlbmRUaW1lIC1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW5jcnlwdGlvbkRpYWdub3N0aWNzLmRlY3J5cHRDb250ZW50W0NvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzU3RhcnRUaW1lXTtcbiAgICAgICAgICAgICAgICB0aGlzLmVuY3J5cHRpb25EaWFnbm9zdGljcy5kZWNyeXB0Q29udGVudFtDb25zdGFudHMuRW5jcnlwdGlvbi5EaWFnbm9zdGljc0R1cmF0aW9uXSA9XG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdEdXJhdGlvbjtcbiAgICAgICAgICAgICAgICBpZiAocHJvcGVydGllc0NvdW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmNyeXB0aW9uRGlhZ25vc3RpY3MuZGVjcnlwdENvbnRlbnRbQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NQcm9wZXJ0aWVzRGVjcnlwdGVkQ291bnRdID0gcHJvcGVydGllc0NvdW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoXCJJbnZhbGlkIG9wZXJhdGlvbiB0eXBlIGZvciBlbmNyeXB0aW9uIGRpYWdub3N0aWNzXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGlhZ25vc3RpY0N0eC5yZWNvcmRFbmNyeXB0aW9uRGlhZ25vc3RpY3ModGhpcy5lbmNyeXB0aW9uRGlhZ25vc3RpY3MpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IERpYWdub3N0aWNOb2RlSW50ZXJuYWwgKGludGVybmFsIHJlcHJlc2VudGF0aW9uKSB0byBEaWFnbm9zdGljTm9kZSAocHVibGljLCBzYW5pdGl6ZWQgcmVwcmVzZW50YXRpb24pXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgdG9EaWFnbm9zdGljTm9kZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgICAgICAgbm9kZVR5cGU6IHRoaXMubm9kZVR5cGUsXG4gICAgICAgICAgICBjaGlsZHJlbjogdGhpcy5jaGlsZHJlbi5tYXAoKGNoaWxkKSA9PiBjaGlsZC50b0RpYWdub3N0aWNOb2RlKCkpLFxuICAgICAgICAgICAgZGF0YTogdGhpcy5kYXRhLFxuICAgICAgICAgICAgc3RhcnRUaW1lVVRDSW5NczogdGhpcy5zdGFydFRpbWVVVENJbk1zLFxuICAgICAgICAgICAgZHVyYXRpb25Jbk1zOiB0aGlzLmR1cmF0aW9uSW5NcyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29udmVydCB0byBDb3Ntb3NEaWFnbm9zdGljc1xuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHRvRGlhZ25vc3RpYyhjbGllbnRDb25maWdEaWFnbm9zdGljKSB7XG4gICAgICAgIGNvbnN0IHJvb3ROb2RlID0gZ2V0Um9vdE5vZGUodGhpcyk7XG4gICAgICAgIGNvbnN0IGRpYWdub3N0aU5vZGUgPSBhbGxvd1RyYWNpbmcoQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuZGVidWcsIHRoaXMuZGlhZ25vc3RpY0xldmVsKVxuICAgICAgICAgICAgPyByb290Tm9kZS50b0RpYWdub3N0aWNOb2RlKClcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCBjbGllbnRDb25maWcgPSBhbGxvd1RyYWNpbmcoQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuZGVidWcsIHRoaXMuZGlhZ25vc3RpY0xldmVsKVxuICAgICAgICAgICAgPyBjbGllbnRDb25maWdEaWFnbm9zdGljXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgICAgY29uc3QgY29zbW9zRGlhZ25vc3RpYyA9IG5ldyBDb3Ntb3NEaWFnbm9zdGljcyh0aGlzLmRpYWdub3N0aWNDdHguZ2V0Q2xpZW50U2lkZVN0YXRzKCksIGRpYWdub3N0aU5vZGUsIGNsaWVudENvbmZpZyk7XG4gICAgICAgIHJldHVybiBjb3Ntb3NEaWFnbm9zdGljO1xuICAgIH1cbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgdmFyIERpYWdub3N0aWNOb2RlVHlwZTtcbihmdW5jdGlvbiAoRGlhZ25vc3RpY05vZGVUeXBlKSB7XG4gICAgRGlhZ25vc3RpY05vZGVUeXBlW1wiQ0xJRU5UX1JFUVVFU1RfTk9ERVwiXSA9IFwiQ0xJRU5UX1JFUVVFU1RfTk9ERVwiO1xuICAgIERpYWdub3N0aWNOb2RlVHlwZVtcIk1FVEFEQVRBX1JFUVVFU1RfTk9ERVwiXSA9IFwiTUVUQURBVEFfUkVRVUVTVF9OT0RFXCI7XG4gICAgRGlhZ25vc3RpY05vZGVUeXBlW1wiSFRUUF9SRVFVRVNUXCJdID0gXCJIVFRQX1JFUVVFU1RcIjtcbiAgICBEaWFnbm9zdGljTm9kZVR5cGVbXCJCQVRDSF9SRVFVRVNUXCJdID0gXCJCQVRDSF9SRVFVRVNUXCI7XG4gICAgRGlhZ25vc3RpY05vZGVUeXBlW1wiUEFSQUxMRUxfUVVFUllfTk9ERVwiXSA9IFwiUEFSQUxMRUxfUVVFUllfTk9ERVwiO1xuICAgIERpYWdub3N0aWNOb2RlVHlwZVtcIkRFRkFVTFRfUVVFUllfTk9ERVwiXSA9IFwiREVGQVVMVF9RVUVSWV9OT0RFXCI7XG4gICAgRGlhZ25vc3RpY05vZGVUeXBlW1wiUVVFUllfUkVQQUlSX05PREVcIl0gPSBcIlFVRVJZX1JFUEFJUl9OT0RFXCI7XG4gICAgRGlhZ25vc3RpY05vZGVUeXBlW1wiQkFDS0dST1VORF9SRUZSRVNIX1RIUkVBRFwiXSA9IFwiQkFDS0dST1VORF9SRUZSRVNIX1RIUkVBRFwiO1xuICAgIERpYWdub3N0aWNOb2RlVHlwZVtcIlJFUVVFU1RfQVRURU1QVFNcIl0gPSBcIlJFUVVFU1RfQVRURU1QVFNcIjtcbn0pKERpYWdub3N0aWNOb2RlVHlwZSB8fCAoRGlhZ25vc3RpY05vZGVUeXBlID0ge30pKTtcbmZ1bmN0aW9uIGNhbGN1bGF0ZVJlc3BvbnNlUGF5bG9hZExlbmd0aChyZXNwb25zZSkge1xuICAgIHJldHVybiByZXNwb25zZT8uYm9keUFzVGV4dD8ubGVuZ3RoIHx8IDA7XG59XG5mdW5jdGlvbiBjYWxjdWxhdGVSZXF1ZXN0UGF5bG9hZExlbmd0aChyZXF1ZXN0Q29udGV4dCkge1xuICAgIHJldHVybiByZXF1ZXN0Q29udGV4dC5ib2R5ID8gcmVxdWVzdENvbnRleHQuYm9keS5sZW5ndGggOiAwO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGlhZ25vc3RpY05vZGVJbnRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticWriter.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticWriter.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogDiagnosticWriter: () => (/* binding */ LogDiagnosticWriter),\n/* harmony export */   NoOpDiagnosticWriter: () => (/* binding */ NoOpDiagnosticWriter)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Implementation of DiagnosticWriter, which uses \\@azure/logger to write\n * diagnostics.\n * @hidden\n */\nclass LogDiagnosticWriter {\n    logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"CosmosDBDiagnostics\");\n    async write(diagnosticsData) {\n        this.logger.verbose(diagnosticsData);\n    }\n}\n/**\n * Implementation of a no-op DiagnosticWriter.\n * @hidden\n */\nclass NoOpDiagnosticWriter {\n    async write(_diagnosticsData) {\n        // No op\n    }\n}\n//# sourceMappingURL=DiagnosticWriter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9EaWFnbm9zdGljV3JpdGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsYUFBYSxpRUFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZGlhZ25vc3RpY3MvRGlhZ25vc3RpY1dyaXRlci5qcz83NzlhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIkBhenVyZS9sb2dnZXJcIjtcbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgRGlhZ25vc3RpY1dyaXRlciwgd2hpY2ggdXNlcyBcXEBhenVyZS9sb2dnZXIgdG8gd3JpdGVcbiAqIGRpYWdub3N0aWNzLlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgTG9nRGlhZ25vc3RpY1dyaXRlciB7XG4gICAgbG9nZ2VyID0gY3JlYXRlQ2xpZW50TG9nZ2VyKFwiQ29zbW9zREJEaWFnbm9zdGljc1wiKTtcbiAgICBhc3luYyB3cml0ZShkaWFnbm9zdGljc0RhdGEpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShkaWFnbm9zdGljc0RhdGEpO1xuICAgIH1cbn1cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgYSBuby1vcCBEaWFnbm9zdGljV3JpdGVyLlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgTm9PcERpYWdub3N0aWNXcml0ZXIge1xuICAgIGFzeW5jIHdyaXRlKF9kaWFnbm9zdGljc0RhdGEpIHtcbiAgICAgICAgLy8gTm8gb3BcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaWFnbm9zdGljV3JpdGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticWriter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/diagnosticLevelComparator.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/diagnosticLevelComparator.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosDbDiagnosticLevelOrder: () => (/* binding */ CosmosDbDiagnosticLevelOrder),\n/* harmony export */   allowTracing: () => (/* binding */ allowTracing)\n/* harmony export */ });\n/* harmony import */ var _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @hidden\n */\nconst CosmosDbDiagnosticLevelOrder = [\n    _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_0__.CosmosDbDiagnosticLevel.info,\n    _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_0__.CosmosDbDiagnosticLevel.debug,\n    _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_0__.CosmosDbDiagnosticLevel.debugUnsafe,\n];\n/**\n * @hidden\n */\nfunction allowTracing(levelToCheck, clientDiagnosticLevel) {\n    const indexOfDiagnosticLevelToCheck = CosmosDbDiagnosticLevelOrder.indexOf(levelToCheck);\n    const indexOfClientDiagnosticLevel = CosmosDbDiagnosticLevelOrder.indexOf(clientDiagnosticLevel);\n    if (indexOfDiagnosticLevelToCheck === -1 || indexOfClientDiagnosticLevel === -1) {\n        return false;\n    }\n    return indexOfDiagnosticLevelToCheck <= indexOfClientDiagnosticLevel;\n}\n//# sourceMappingURL=diagnosticLevelComparator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9kaWFnbm9zdGljTGV2ZWxDb21wYXJhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDdUU7QUFDdkU7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLGdGQUF1QjtBQUMzQixJQUFJLGdGQUF1QjtBQUMzQixJQUFJLGdGQUF1QjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZGlhZ25vc3RpY3MvZGlhZ25vc3RpY0xldmVsQ29tcGFyYXRvci5qcz81ODViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwgfSBmcm9tIFwiLi9Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5qc1wiO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBjb25zdCBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbE9yZGVyID0gW1xuICAgIENvc21vc0RiRGlhZ25vc3RpY0xldmVsLmluZm8sXG4gICAgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuZGVidWcsXG4gICAgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuZGVidWdVbnNhZmUsXG5dO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbGxvd1RyYWNpbmcobGV2ZWxUb0NoZWNrLCBjbGllbnREaWFnbm9zdGljTGV2ZWwpIHtcbiAgICBjb25zdCBpbmRleE9mRGlhZ25vc3RpY0xldmVsVG9DaGVjayA9IENvc21vc0RiRGlhZ25vc3RpY0xldmVsT3JkZXIuaW5kZXhPZihsZXZlbFRvQ2hlY2spO1xuICAgIGNvbnN0IGluZGV4T2ZDbGllbnREaWFnbm9zdGljTGV2ZWwgPSBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbE9yZGVyLmluZGV4T2YoY2xpZW50RGlhZ25vc3RpY0xldmVsKTtcbiAgICBpZiAoaW5kZXhPZkRpYWdub3N0aWNMZXZlbFRvQ2hlY2sgPT09IC0xIHx8IGluZGV4T2ZDbGllbnREaWFnbm9zdGljTGV2ZWwgPT09IC0xKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGluZGV4T2ZEaWFnbm9zdGljTGV2ZWxUb0NoZWNrIDw9IGluZGV4T2ZDbGllbnREaWFnbm9zdGljTGV2ZWw7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaWFnbm9zdGljTGV2ZWxDb21wYXJhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/diagnosticLevelComparator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/diagnostics/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultDiagnosticFormatter: () => (/* reexport safe */ _DiagnosticFormatter_js__WEBPACK_IMPORTED_MODULE_5__.DefaultDiagnosticFormatter),\n/* harmony export */   DefaultDiagnosticLevelValue: () => (/* binding */ DefaultDiagnosticLevelValue),\n/* harmony export */   LogDiagnosticWriter: () => (/* reexport safe */ _DiagnosticWriter_js__WEBPACK_IMPORTED_MODULE_4__.LogDiagnosticWriter),\n/* harmony export */   NoOpDiagnosticWriter: () => (/* reexport safe */ _DiagnosticWriter_js__WEBPACK_IMPORTED_MODULE_4__.NoOpDiagnosticWriter),\n/* harmony export */   determineDiagnosticLevel: () => (/* binding */ determineDiagnosticLevel),\n/* harmony export */   getDiagnosticLevelFromEnvironment: () => (/* binding */ getDiagnosticLevelFromEnvironment),\n/* harmony export */   setDiagnosticLevel: () => (/* binding */ setDiagnosticLevel)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/strings.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/strings.js\");\n/* harmony import */ var _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n/* harmony import */ var _utils_envUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/envUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/envUtils.js\");\n/* harmony import */ var _DiagnosticWriter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DiagnosticWriter.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticWriter.js\");\n/* harmony import */ var _DiagnosticFormatter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DiagnosticFormatter.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticFormatter.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\nconst DefaultDiagnosticLevelValue = _CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_2__.CosmosDbDiagnosticLevel.info;\nconst acceptableDiagnosticLevelValues = Object.values(_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_2__.CosmosDbDiagnosticLevel).map((x) => x.toString());\nlet cosmosDiagnosticLevel;\nif ((0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__.isNonEmptyString)(_utils_envUtils_js__WEBPACK_IMPORTED_MODULE_3__.diagnosticLevelFromEnv)) {\n    // avoid calling setDiagnosticLevel because we don't want a mis-set environment variable to crash\n    if (isCosmosDiagnosticLevel(_utils_envUtils_js__WEBPACK_IMPORTED_MODULE_3__.diagnosticLevelFromEnv)) {\n        setDiagnosticLevel(_utils_envUtils_js__WEBPACK_IMPORTED_MODULE_3__.diagnosticLevelFromEnv);\n    }\n    else {\n        console.error(`${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.CosmosDbDiagnosticLevelEnvVarName} set to unknown diagnostic level '${_utils_envUtils_js__WEBPACK_IMPORTED_MODULE_3__.diagnosticLevelFromEnv}'; Setting Cosmos Db diagnostic level to info. Acceptable values: ${acceptableDiagnosticLevelValues.join(\", \")}.`);\n    }\n}\nfunction setDiagnosticLevel(level) {\n    if (level && !isCosmosDiagnosticLevel(level)) {\n        throw new Error(`Unknown diagnostic level '${level}'. Acceptable values: ${acceptableDiagnosticLevelValues.join(\",\")}`);\n    }\n    cosmosDiagnosticLevel = level;\n}\nfunction getDiagnosticLevelFromEnvironment() {\n    return cosmosDiagnosticLevel;\n}\nfunction isCosmosDiagnosticLevel(diagnosticLevel) {\n    return acceptableDiagnosticLevelValues.includes(diagnosticLevel);\n}\nfunction determineDiagnosticLevel(diagnosticLevelFromClientConfig, diagnosticLevelFromEnvironment) {\n    const diagnosticLevelFromEnvOrClient = diagnosticLevelFromEnvironment ?? diagnosticLevelFromClientConfig; // Diagnostic Setting from environment gets first priority.\n    return diagnosticLevelFromEnvOrClient ?? DefaultDiagnosticLevelValue; // Diagnostic Setting supplied in Client config gets second priority.\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kaWFnbm9zdGljcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMrQztBQUNRO0FBQ2dCO0FBQ1Q7QUFDeEI7QUFDRztBQUNsQyxvQ0FBb0MsZ0ZBQXVCO0FBQ2xFLHNEQUFzRCxnRkFBdUI7QUFDN0U7QUFDQSxJQUFJLG1FQUFnQixDQUFDLHNFQUFzQjtBQUMzQztBQUNBLGdDQUFnQyxzRUFBc0I7QUFDdEQsMkJBQTJCLHNFQUFzQjtBQUNqRDtBQUNBO0FBQ0EseUJBQXlCLHVEQUFTLG9DQUFvQyxtQ0FBbUMsc0VBQXNCLENBQUMsR0FBRyxpRUFBaUUsMkNBQTJDO0FBQy9PO0FBQ0E7QUFDTztBQUNQO0FBQ0EscURBQXFELE1BQU0sd0JBQXdCLDBDQUEwQztBQUM3SDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDhHQUE4RztBQUM5RywwRUFBMEU7QUFDMUU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZGlhZ25vc3RpY3MvaW5kZXguanM/NTk3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gXCIuLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IGlzTm9uRW1wdHlTdHJpbmcgfSBmcm9tIFwiLi4vdXRpbHMvc3RyaW5ncy5qc1wiO1xuaW1wb3J0IHsgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwgfSBmcm9tIFwiLi9Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5qc1wiO1xuaW1wb3J0IHsgZGlhZ25vc3RpY0xldmVsRnJvbUVudiB9IGZyb20gXCIuLi91dGlscy9lbnZVdGlscy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRGlhZ25vc3RpY1dyaXRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRGlhZ25vc3RpY0Zvcm1hdHRlci5qc1wiO1xuZXhwb3J0IGNvbnN0IERlZmF1bHREaWFnbm9zdGljTGV2ZWxWYWx1ZSA9IENvc21vc0RiRGlhZ25vc3RpY0xldmVsLmluZm87XG5jb25zdCBhY2NlcHRhYmxlRGlhZ25vc3RpY0xldmVsVmFsdWVzID0gT2JqZWN0LnZhbHVlcyhDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbCkubWFwKCh4KSA9PiB4LnRvU3RyaW5nKCkpO1xubGV0IGNvc21vc0RpYWdub3N0aWNMZXZlbDtcbmlmIChpc05vbkVtcHR5U3RyaW5nKGRpYWdub3N0aWNMZXZlbEZyb21FbnYpKSB7XG4gICAgLy8gYXZvaWQgY2FsbGluZyBzZXREaWFnbm9zdGljTGV2ZWwgYmVjYXVzZSB3ZSBkb24ndCB3YW50IGEgbWlzLXNldCBlbnZpcm9ubWVudCB2YXJpYWJsZSB0byBjcmFzaFxuICAgIGlmIChpc0Nvc21vc0RpYWdub3N0aWNMZXZlbChkaWFnbm9zdGljTGV2ZWxGcm9tRW52KSkge1xuICAgICAgICBzZXREaWFnbm9zdGljTGV2ZWwoZGlhZ25vc3RpY0xldmVsRnJvbUVudik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKGAke0NvbnN0YW50cy5Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbEVudlZhck5hbWV9IHNldCB0byB1bmtub3duIGRpYWdub3N0aWMgbGV2ZWwgJyR7ZGlhZ25vc3RpY0xldmVsRnJvbUVudn0nOyBTZXR0aW5nIENvc21vcyBEYiBkaWFnbm9zdGljIGxldmVsIHRvIGluZm8uIEFjY2VwdGFibGUgdmFsdWVzOiAke2FjY2VwdGFibGVEaWFnbm9zdGljTGV2ZWxWYWx1ZXMuam9pbihcIiwgXCIpfS5gKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0RGlhZ25vc3RpY0xldmVsKGxldmVsKSB7XG4gICAgaWYgKGxldmVsICYmICFpc0Nvc21vc0RpYWdub3N0aWNMZXZlbChsZXZlbCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGRpYWdub3N0aWMgbGV2ZWwgJyR7bGV2ZWx9Jy4gQWNjZXB0YWJsZSB2YWx1ZXM6ICR7YWNjZXB0YWJsZURpYWdub3N0aWNMZXZlbFZhbHVlcy5qb2luKFwiLFwiKX1gKTtcbiAgICB9XG4gICAgY29zbW9zRGlhZ25vc3RpY0xldmVsID0gbGV2ZWw7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlhZ25vc3RpY0xldmVsRnJvbUVudmlyb25tZW50KCkge1xuICAgIHJldHVybiBjb3Ntb3NEaWFnbm9zdGljTGV2ZWw7XG59XG5mdW5jdGlvbiBpc0Nvc21vc0RpYWdub3N0aWNMZXZlbChkaWFnbm9zdGljTGV2ZWwpIHtcbiAgICByZXR1cm4gYWNjZXB0YWJsZURpYWdub3N0aWNMZXZlbFZhbHVlcy5pbmNsdWRlcyhkaWFnbm9zdGljTGV2ZWwpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRldGVybWluZURpYWdub3N0aWNMZXZlbChkaWFnbm9zdGljTGV2ZWxGcm9tQ2xpZW50Q29uZmlnLCBkaWFnbm9zdGljTGV2ZWxGcm9tRW52aXJvbm1lbnQpIHtcbiAgICBjb25zdCBkaWFnbm9zdGljTGV2ZWxGcm9tRW52T3JDbGllbnQgPSBkaWFnbm9zdGljTGV2ZWxGcm9tRW52aXJvbm1lbnQgPz8gZGlhZ25vc3RpY0xldmVsRnJvbUNsaWVudENvbmZpZzsgLy8gRGlhZ25vc3RpYyBTZXR0aW5nIGZyb20gZW52aXJvbm1lbnQgZ2V0cyBmaXJzdCBwcmlvcml0eS5cbiAgICByZXR1cm4gZGlhZ25vc3RpY0xldmVsRnJvbUVudk9yQ2xpZW50ID8/IERlZmF1bHREaWFnbm9zdGljTGV2ZWxWYWx1ZTsgLy8gRGlhZ25vc3RpYyBTZXR0aW5nIHN1cHBsaWVkIGluIENsaWVudCBjb25maWcgZ2V0cyBzZWNvbmQgcHJpb3JpdHkuXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ComputedProperty.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/ComputedProperty.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=ComputedProperty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvQ29tcHV0ZWRQcm9wZXJ0eS5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0NvbXB1dGVkUHJvcGVydHkuanM/MDk2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db21wdXRlZFByb3BlcnR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ComputedProperty.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionMode.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/ConnectionMode.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectionMode: () => (/* binding */ ConnectionMode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** Determines the connection behavior of the CosmosClient. Note, we currently only support Gateway Mode. */\nvar ConnectionMode;\n(function (ConnectionMode) {\n    /** Gateway mode talks to an intermediate gateway which handles the direct communication with your individual partitions. */\n    ConnectionMode[ConnectionMode[\"Gateway\"] = 0] = \"Gateway\";\n})(ConnectionMode || (ConnectionMode = {}));\n//# sourceMappingURL=ConnectionMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvQ29ubmVjdGlvbk1vZGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RvY3VtZW50cy9Db25uZWN0aW9uTW9kZS5qcz9kNTEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqIERldGVybWluZXMgdGhlIGNvbm5lY3Rpb24gYmVoYXZpb3Igb2YgdGhlIENvc21vc0NsaWVudC4gTm90ZSwgd2UgY3VycmVudGx5IG9ubHkgc3VwcG9ydCBHYXRld2F5IE1vZGUuICovXG5leHBvcnQgdmFyIENvbm5lY3Rpb25Nb2RlO1xuKGZ1bmN0aW9uIChDb25uZWN0aW9uTW9kZSkge1xuICAgIC8qKiBHYXRld2F5IG1vZGUgdGFsa3MgdG8gYW4gaW50ZXJtZWRpYXRlIGdhdGV3YXkgd2hpY2ggaGFuZGxlcyB0aGUgZGlyZWN0IGNvbW11bmljYXRpb24gd2l0aCB5b3VyIGluZGl2aWR1YWwgcGFydGl0aW9ucy4gKi9cbiAgICBDb25uZWN0aW9uTW9kZVtDb25uZWN0aW9uTW9kZVtcIkdhdGV3YXlcIl0gPSAwXSA9IFwiR2F0ZXdheVwiO1xufSkoQ29ubmVjdGlvbk1vZGUgfHwgKENvbm5lY3Rpb25Nb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbm5lY3Rpb25Nb2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionMode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionPolicy.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/ConnectionPolicy.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultConnectionPolicy: () => (/* binding */ defaultConnectionPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _ConnectionMode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConnectionMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionMode.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @hidden\n */\nconst defaultConnectionPolicy = Object.freeze({\n    connectionMode: _ConnectionMode_js__WEBPACK_IMPORTED_MODULE_1__.ConnectionMode.Gateway,\n    requestTimeout: 60000,\n    enableEndpointDiscovery: true,\n    preferredLocations: [],\n    retryOptions: {\n        maxRetryAttemptCount: _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottledRequestMaxRetryAttemptCount,\n        fixedRetryIntervalInMilliseconds: _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottledRequestFixedRetryIntervalInMs,\n        maxWaitTimeInSeconds: _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottledRequestMaxWaitTimeInSeconds,\n    },\n    useMultipleWriteLocations: true,\n    endpointRefreshRateInMs: 300000,\n    enableBackgroundEndpointRefreshing: true,\n    enablePartitionLevelFailover: false,\n    enablePartitionLevelCircuitBreaker: false,\n});\n//# sourceMappingURL=ConnectionPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvQ29ubmVjdGlvblBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQ0U7QUFDckQ7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsOERBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsMkRBQVM7QUFDdkMsMENBQTBDLDJEQUFTO0FBQ25ELDhCQUE4QiwyREFBUztBQUN2QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0Nvbm5lY3Rpb25Qb2xpY3kuanM/ODYyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gXCIuLi9jb21tb24vY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0aW9uTW9kZSB9IGZyb20gXCIuL0Nvbm5lY3Rpb25Nb2RlLmpzXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRDb25uZWN0aW9uUG9saWN5ID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgY29ubmVjdGlvbk1vZGU6IENvbm5lY3Rpb25Nb2RlLkdhdGV3YXksXG4gICAgcmVxdWVzdFRpbWVvdXQ6IDYwMDAwLFxuICAgIGVuYWJsZUVuZHBvaW50RGlzY292ZXJ5OiB0cnVlLFxuICAgIHByZWZlcnJlZExvY2F0aW9uczogW10sXG4gICAgcmV0cnlPcHRpb25zOiB7XG4gICAgICAgIG1heFJldHJ5QXR0ZW1wdENvdW50OiBDb25zdGFudHMuVGhyb3R0bGVkUmVxdWVzdE1heFJldHJ5QXR0ZW1wdENvdW50LFxuICAgICAgICBmaXhlZFJldHJ5SW50ZXJ2YWxJbk1pbGxpc2Vjb25kczogQ29uc3RhbnRzLlRocm90dGxlZFJlcXVlc3RGaXhlZFJldHJ5SW50ZXJ2YWxJbk1zLFxuICAgICAgICBtYXhXYWl0VGltZUluU2Vjb25kczogQ29uc3RhbnRzLlRocm90dGxlZFJlcXVlc3RNYXhXYWl0VGltZUluU2Vjb25kcyxcbiAgICB9LFxuICAgIHVzZU11bHRpcGxlV3JpdGVMb2NhdGlvbnM6IHRydWUsXG4gICAgZW5kcG9pbnRSZWZyZXNoUmF0ZUluTXM6IDMwMDAwMCxcbiAgICBlbmFibGVCYWNrZ3JvdW5kRW5kcG9pbnRSZWZyZXNoaW5nOiB0cnVlLFxuICAgIGVuYWJsZVBhcnRpdGlvbkxldmVsRmFpbG92ZXI6IGZhbHNlLFxuICAgIGVuYWJsZVBhcnRpdGlvbkxldmVsQ2lyY3VpdEJyZWFrZXI6IGZhbHNlLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConsistencyLevel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/ConsistencyLevel.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsistencyLevel: () => (/* binding */ ConsistencyLevel)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Represents the consistency levels supported for Azure Cosmos DB client operations.<br>\n * The requested ConsistencyLevel must match or be weaker than that provisioned for the database account.\n * Consistency levels.\n *\n * Consistency levels by order of strength are Strong, BoundedStaleness, Session, Consistent Prefix, and Eventual.\n *\n * See https://aka.ms/cosmos-consistency for more detailed documentation on Consistency Levels.\n */\nvar ConsistencyLevel;\n(function (ConsistencyLevel) {\n    /**\n     * Strong Consistency guarantees that read operations always return the value that was last written.\n     */\n    ConsistencyLevel[\"Strong\"] = \"Strong\";\n    /**\n     * Bounded Staleness guarantees that reads are not too out-of-date.\n     * This can be configured based on number of operations (MaxStalenessPrefix) or time (MaxStalenessIntervalInSeconds).\n     */\n    ConsistencyLevel[\"BoundedStaleness\"] = \"BoundedStaleness\";\n    /**\n     * Session Consistency guarantees monotonic reads (you never read old data, then new, then old again),\n     * monotonic writes (writes are ordered) and read your writes (your writes are immediately visible to your reads)\n     * within any single session.\n     */\n    ConsistencyLevel[\"Session\"] = \"Session\";\n    /**\n     * Eventual Consistency guarantees that reads will return a subset of writes.\n     * All writes will be eventually be available for reads.\n     */\n    ConsistencyLevel[\"Eventual\"] = \"Eventual\";\n    /**\n     * ConsistentPrefix Consistency guarantees that reads will return some prefix of all writes with no gaps.\n     * All writes will be eventually be available for reads.\n     */\n    ConsistencyLevel[\"ConsistentPrefix\"] = \"ConsistentPrefix\";\n})(ConsistencyLevel || (ConsistencyLevel = {}));\n//# sourceMappingURL=ConsistencyLevel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvQ29uc2lzdGVuY3lMZXZlbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvQ29uc2lzdGVuY3lMZXZlbC5qcz9jZmFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBjb25zaXN0ZW5jeSBsZXZlbHMgc3VwcG9ydGVkIGZvciBBenVyZSBDb3Ntb3MgREIgY2xpZW50IG9wZXJhdGlvbnMuPGJyPlxuICogVGhlIHJlcXVlc3RlZCBDb25zaXN0ZW5jeUxldmVsIG11c3QgbWF0Y2ggb3IgYmUgd2Vha2VyIHRoYW4gdGhhdCBwcm92aXNpb25lZCBmb3IgdGhlIGRhdGFiYXNlIGFjY291bnQuXG4gKiBDb25zaXN0ZW5jeSBsZXZlbHMuXG4gKlxuICogQ29uc2lzdGVuY3kgbGV2ZWxzIGJ5IG9yZGVyIG9mIHN0cmVuZ3RoIGFyZSBTdHJvbmcsIEJvdW5kZWRTdGFsZW5lc3MsIFNlc3Npb24sIENvbnNpc3RlbnQgUHJlZml4LCBhbmQgRXZlbnR1YWwuXG4gKlxuICogU2VlIGh0dHBzOi8vYWthLm1zL2Nvc21vcy1jb25zaXN0ZW5jeSBmb3IgbW9yZSBkZXRhaWxlZCBkb2N1bWVudGF0aW9uIG9uIENvbnNpc3RlbmN5IExldmVscy5cbiAqL1xuZXhwb3J0IHZhciBDb25zaXN0ZW5jeUxldmVsO1xuKGZ1bmN0aW9uIChDb25zaXN0ZW5jeUxldmVsKSB7XG4gICAgLyoqXG4gICAgICogU3Ryb25nIENvbnNpc3RlbmN5IGd1YXJhbnRlZXMgdGhhdCByZWFkIG9wZXJhdGlvbnMgYWx3YXlzIHJldHVybiB0aGUgdmFsdWUgdGhhdCB3YXMgbGFzdCB3cml0dGVuLlxuICAgICAqL1xuICAgIENvbnNpc3RlbmN5TGV2ZWxbXCJTdHJvbmdcIl0gPSBcIlN0cm9uZ1wiO1xuICAgIC8qKlxuICAgICAqIEJvdW5kZWQgU3RhbGVuZXNzIGd1YXJhbnRlZXMgdGhhdCByZWFkcyBhcmUgbm90IHRvbyBvdXQtb2YtZGF0ZS5cbiAgICAgKiBUaGlzIGNhbiBiZSBjb25maWd1cmVkIGJhc2VkIG9uIG51bWJlciBvZiBvcGVyYXRpb25zIChNYXhTdGFsZW5lc3NQcmVmaXgpIG9yIHRpbWUgKE1heFN0YWxlbmVzc0ludGVydmFsSW5TZWNvbmRzKS5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiQm91bmRlZFN0YWxlbmVzc1wiXSA9IFwiQm91bmRlZFN0YWxlbmVzc1wiO1xuICAgIC8qKlxuICAgICAqIFNlc3Npb24gQ29uc2lzdGVuY3kgZ3VhcmFudGVlcyBtb25vdG9uaWMgcmVhZHMgKHlvdSBuZXZlciByZWFkIG9sZCBkYXRhLCB0aGVuIG5ldywgdGhlbiBvbGQgYWdhaW4pLFxuICAgICAqIG1vbm90b25pYyB3cml0ZXMgKHdyaXRlcyBhcmUgb3JkZXJlZCkgYW5kIHJlYWQgeW91ciB3cml0ZXMgKHlvdXIgd3JpdGVzIGFyZSBpbW1lZGlhdGVseSB2aXNpYmxlIHRvIHlvdXIgcmVhZHMpXG4gICAgICogd2l0aGluIGFueSBzaW5nbGUgc2Vzc2lvbi5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiU2Vzc2lvblwiXSA9IFwiU2Vzc2lvblwiO1xuICAgIC8qKlxuICAgICAqIEV2ZW50dWFsIENvbnNpc3RlbmN5IGd1YXJhbnRlZXMgdGhhdCByZWFkcyB3aWxsIHJldHVybiBhIHN1YnNldCBvZiB3cml0ZXMuXG4gICAgICogQWxsIHdyaXRlcyB3aWxsIGJlIGV2ZW50dWFsbHkgYmUgYXZhaWxhYmxlIGZvciByZWFkcy5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiRXZlbnR1YWxcIl0gPSBcIkV2ZW50dWFsXCI7XG4gICAgLyoqXG4gICAgICogQ29uc2lzdGVudFByZWZpeCBDb25zaXN0ZW5jeSBndWFyYW50ZWVzIHRoYXQgcmVhZHMgd2lsbCByZXR1cm4gc29tZSBwcmVmaXggb2YgYWxsIHdyaXRlcyB3aXRoIG5vIGdhcHMuXG4gICAgICogQWxsIHdyaXRlcyB3aWxsIGJlIGV2ZW50dWFsbHkgYmUgYXZhaWxhYmxlIGZvciByZWFkcy5cbiAgICAgKi9cbiAgICBDb25zaXN0ZW5jeUxldmVsW1wiQ29uc2lzdGVudFByZWZpeFwiXSA9IFwiQ29uc2lzdGVudFByZWZpeFwiO1xufSkoQ29uc2lzdGVuY3lMZXZlbCB8fCAoQ29uc2lzdGVuY3lMZXZlbCA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25zaXN0ZW5jeUxldmVsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConsistencyLevel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/DataType.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/DataType.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataType: () => (/* binding */ DataType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** Defines a target data type of an index path specification in the Azure Cosmos DB service. */\nvar DataType;\n(function (DataType) {\n    /** Represents a numeric data type. */\n    DataType[\"Number\"] = \"Number\";\n    /** Represents a string data type. */\n    DataType[\"String\"] = \"String\";\n    /** Represents a point data type. */\n    DataType[\"Point\"] = \"Point\";\n    /** Represents a line string data type. */\n    DataType[\"LineString\"] = \"LineString\";\n    /** Represents a polygon data type. */\n    DataType[\"Polygon\"] = \"Polygon\";\n    /** Represents a multi-polygon data type. */\n    DataType[\"MultiPolygon\"] = \"MultiPolygon\";\n})(DataType || (DataType = {}));\n//# sourceMappingURL=DataType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvRGF0YVR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0RhdGFUeXBlLmpzPzYwYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKiogRGVmaW5lcyBhIHRhcmdldCBkYXRhIHR5cGUgb2YgYW4gaW5kZXggcGF0aCBzcGVjaWZpY2F0aW9uIGluIHRoZSBBenVyZSBDb3Ntb3MgREIgc2VydmljZS4gKi9cbmV4cG9ydCB2YXIgRGF0YVR5cGU7XG4oZnVuY3Rpb24gKERhdGFUeXBlKSB7XG4gICAgLyoqIFJlcHJlc2VudHMgYSBudW1lcmljIGRhdGEgdHlwZS4gKi9cbiAgICBEYXRhVHlwZVtcIk51bWJlclwiXSA9IFwiTnVtYmVyXCI7XG4gICAgLyoqIFJlcHJlc2VudHMgYSBzdHJpbmcgZGF0YSB0eXBlLiAqL1xuICAgIERhdGFUeXBlW1wiU3RyaW5nXCJdID0gXCJTdHJpbmdcIjtcbiAgICAvKiogUmVwcmVzZW50cyBhIHBvaW50IGRhdGEgdHlwZS4gKi9cbiAgICBEYXRhVHlwZVtcIlBvaW50XCJdID0gXCJQb2ludFwiO1xuICAgIC8qKiBSZXByZXNlbnRzIGEgbGluZSBzdHJpbmcgZGF0YSB0eXBlLiAqL1xuICAgIERhdGFUeXBlW1wiTGluZVN0cmluZ1wiXSA9IFwiTGluZVN0cmluZ1wiO1xuICAgIC8qKiBSZXByZXNlbnRzIGEgcG9seWdvbiBkYXRhIHR5cGUuICovXG4gICAgRGF0YVR5cGVbXCJQb2x5Z29uXCJdID0gXCJQb2x5Z29uXCI7XG4gICAgLyoqIFJlcHJlc2VudHMgYSBtdWx0aS1wb2x5Z29uIGRhdGEgdHlwZS4gKi9cbiAgICBEYXRhVHlwZVtcIk11bHRpUG9seWdvblwiXSA9IFwiTXVsdGlQb2x5Z29uXCI7XG59KShEYXRhVHlwZSB8fCAoRGF0YVR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGF0YVR5cGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/DataType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/DatabaseAccount.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/DatabaseAccount.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseAccount: () => (/* binding */ DatabaseAccount)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _ConsistencyLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConsistencyLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConsistencyLevel.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Represents a DatabaseAccount in the Azure Cosmos DB database service.\n */\nclass DatabaseAccount {\n    /** The list of writable locations for a geo-replicated database account. */\n    writableLocations = [];\n    /** The list of readable locations for a geo-replicated database account. */\n    readableLocations = [];\n    /**\n     * The self-link for Databases in the databaseAccount.\n     * @deprecated Use `databasesLink`\n     */\n    get DatabasesLink() {\n        return this.databasesLink;\n    }\n    /** The self-link for Databases in the databaseAccount. */\n    databasesLink;\n    /**\n     * The self-link for Media in the databaseAccount.\n     * @deprecated Use `mediaLink`\n     */\n    get MediaLink() {\n        return this.mediaLink;\n    }\n    /** The self-link for Media in the databaseAccount. */\n    mediaLink;\n    /**\n     * Attachment content (media) storage quota in MBs ( Retrieved from gateway ).\n     * @deprecated use `maxMediaStorageUsageInMB`\n     */\n    get MaxMediaStorageUsageInMB() {\n        return this.maxMediaStorageUsageInMB;\n    }\n    /** Attachment content (media) storage quota in MBs ( Retrieved from gateway ). */\n    maxMediaStorageUsageInMB;\n    /**\n     * Current attachment content (media) usage in MBs (Retrieved from gateway )\n     *\n     * Value is returned from cached information updated periodically and is not guaranteed\n     * to be real time.\n     *\n     * @deprecated use `currentMediaStorageUsageInMB`\n     */\n    get CurrentMediaStorageUsageInMB() {\n        return this.currentMediaStorageUsageInMB;\n    }\n    /**\n     * Current attachment content (media) usage in MBs (Retrieved from gateway )\n     *\n     * Value is returned from cached information updated periodically and is not guaranteed\n     * to be real time.\n     */\n    currentMediaStorageUsageInMB;\n    /**\n     * Gets the UserConsistencyPolicy settings.\n     * @deprecated use `consistencyPolicy`\n     */\n    get ConsistencyPolicy() {\n        return this.consistencyPolicy;\n    }\n    /** Gets the UserConsistencyPolicy settings. */\n    consistencyPolicy;\n    enableMultipleWritableLocations;\n    // TODO: body - any\n    constructor(body, headers) {\n        this.databasesLink = \"/dbs/\";\n        this.mediaLink = \"/media/\";\n        this.maxMediaStorageUsageInMB = headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.MaxMediaStorageUsageInMB];\n        this.currentMediaStorageUsageInMB = headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CurrentMediaStorageUsageInMB];\n        this.consistencyPolicy = body.userConsistencyPolicy\n            ? body.userConsistencyPolicy.defaultConsistencyLevel\n            : _ConsistencyLevel_js__WEBPACK_IMPORTED_MODULE_1__.ConsistencyLevel.Session;\n        if (body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.WritableLocations] && body.id !== \"localhost\") {\n            this.writableLocations = body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.WritableLocations];\n        }\n        if (body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ReadableLocations] && body.id !== \"localhost\") {\n            this.readableLocations = body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ReadableLocations];\n        }\n        if (body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS]) {\n            this.enableMultipleWritableLocations =\n                body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS] === true ||\n                    body[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS] === \"true\";\n        }\n        else {\n            this.enableMultipleWritableLocations = false;\n        }\n    }\n}\n//# sourceMappingURL=DatabaseAccount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvRGF0YWJhc2VBY2NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDK0M7QUFDVTtBQUN6RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCx1REFBUztBQUN6RCxvREFBb0QsdURBQVM7QUFDN0Q7QUFDQTtBQUNBLGNBQWMsa0VBQWdCO0FBQzlCLGlCQUFpQix1REFBUztBQUMxQiwwQ0FBMEMsdURBQVM7QUFDbkQ7QUFDQSxpQkFBaUIsdURBQVM7QUFDMUIsMENBQTBDLHVEQUFTO0FBQ25EO0FBQ0EsaUJBQWlCLHVEQUFTO0FBQzFCO0FBQ0EscUJBQXFCLHVEQUFTO0FBQzlCLHlCQUF5Qix1REFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0RhdGFiYXNlQWNjb3VudC5qcz81YmE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgQ29uc2lzdGVuY3lMZXZlbCB9IGZyb20gXCIuL0NvbnNpc3RlbmN5TGV2ZWwuanNcIjtcbi8qKlxuICogUmVwcmVzZW50cyBhIERhdGFiYXNlQWNjb3VudCBpbiB0aGUgQXp1cmUgQ29zbW9zIERCIGRhdGFiYXNlIHNlcnZpY2UuXG4gKi9cbmV4cG9ydCBjbGFzcyBEYXRhYmFzZUFjY291bnQge1xuICAgIC8qKiBUaGUgbGlzdCBvZiB3cml0YWJsZSBsb2NhdGlvbnMgZm9yIGEgZ2VvLXJlcGxpY2F0ZWQgZGF0YWJhc2UgYWNjb3VudC4gKi9cbiAgICB3cml0YWJsZUxvY2F0aW9ucyA9IFtdO1xuICAgIC8qKiBUaGUgbGlzdCBvZiByZWFkYWJsZSBsb2NhdGlvbnMgZm9yIGEgZ2VvLXJlcGxpY2F0ZWQgZGF0YWJhc2UgYWNjb3VudC4gKi9cbiAgICByZWFkYWJsZUxvY2F0aW9ucyA9IFtdO1xuICAgIC8qKlxuICAgICAqIFRoZSBzZWxmLWxpbmsgZm9yIERhdGFiYXNlcyBpbiB0aGUgZGF0YWJhc2VBY2NvdW50LlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBgZGF0YWJhc2VzTGlua2BcbiAgICAgKi9cbiAgICBnZXQgRGF0YWJhc2VzTGluaygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YWJhc2VzTGluaztcbiAgICB9XG4gICAgLyoqIFRoZSBzZWxmLWxpbmsgZm9yIERhdGFiYXNlcyBpbiB0aGUgZGF0YWJhc2VBY2NvdW50LiAqL1xuICAgIGRhdGFiYXNlc0xpbms7XG4gICAgLyoqXG4gICAgICogVGhlIHNlbGYtbGluayBmb3IgTWVkaWEgaW4gdGhlIGRhdGFiYXNlQWNjb3VudC5cbiAgICAgKiBAZGVwcmVjYXRlZCBVc2UgYG1lZGlhTGlua2BcbiAgICAgKi9cbiAgICBnZXQgTWVkaWFMaW5rKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZWRpYUxpbms7XG4gICAgfVxuICAgIC8qKiBUaGUgc2VsZi1saW5rIGZvciBNZWRpYSBpbiB0aGUgZGF0YWJhc2VBY2NvdW50LiAqL1xuICAgIG1lZGlhTGluaztcbiAgICAvKipcbiAgICAgKiBBdHRhY2htZW50IGNvbnRlbnQgKG1lZGlhKSBzdG9yYWdlIHF1b3RhIGluIE1CcyAoIFJldHJpZXZlZCBmcm9tIGdhdGV3YXkgKS5cbiAgICAgKiBAZGVwcmVjYXRlZCB1c2UgYG1heE1lZGlhU3RvcmFnZVVzYWdlSW5NQmBcbiAgICAgKi9cbiAgICBnZXQgTWF4TWVkaWFTdG9yYWdlVXNhZ2VJbk1CKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXhNZWRpYVN0b3JhZ2VVc2FnZUluTUI7XG4gICAgfVxuICAgIC8qKiBBdHRhY2htZW50IGNvbnRlbnQgKG1lZGlhKSBzdG9yYWdlIHF1b3RhIGluIE1CcyAoIFJldHJpZXZlZCBmcm9tIGdhdGV3YXkgKS4gKi9cbiAgICBtYXhNZWRpYVN0b3JhZ2VVc2FnZUluTUI7XG4gICAgLyoqXG4gICAgICogQ3VycmVudCBhdHRhY2htZW50IGNvbnRlbnQgKG1lZGlhKSB1c2FnZSBpbiBNQnMgKFJldHJpZXZlZCBmcm9tIGdhdGV3YXkgKVxuICAgICAqXG4gICAgICogVmFsdWUgaXMgcmV0dXJuZWQgZnJvbSBjYWNoZWQgaW5mb3JtYXRpb24gdXBkYXRlZCBwZXJpb2RpY2FsbHkgYW5kIGlzIG5vdCBndWFyYW50ZWVkXG4gICAgICogdG8gYmUgcmVhbCB0aW1lLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgdXNlIGBjdXJyZW50TWVkaWFTdG9yYWdlVXNhZ2VJbk1CYFxuICAgICAqL1xuICAgIGdldCBDdXJyZW50TWVkaWFTdG9yYWdlVXNhZ2VJbk1CKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50TWVkaWFTdG9yYWdlVXNhZ2VJbk1CO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDdXJyZW50IGF0dGFjaG1lbnQgY29udGVudCAobWVkaWEpIHVzYWdlIGluIE1CcyAoUmV0cmlldmVkIGZyb20gZ2F0ZXdheSApXG4gICAgICpcbiAgICAgKiBWYWx1ZSBpcyByZXR1cm5lZCBmcm9tIGNhY2hlZCBpbmZvcm1hdGlvbiB1cGRhdGVkIHBlcmlvZGljYWxseSBhbmQgaXMgbm90IGd1YXJhbnRlZWRcbiAgICAgKiB0byBiZSByZWFsIHRpbWUuXG4gICAgICovXG4gICAgY3VycmVudE1lZGlhU3RvcmFnZVVzYWdlSW5NQjtcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBVc2VyQ29uc2lzdGVuY3lQb2xpY3kgc2V0dGluZ3MuXG4gICAgICogQGRlcHJlY2F0ZWQgdXNlIGBjb25zaXN0ZW5jeVBvbGljeWBcbiAgICAgKi9cbiAgICBnZXQgQ29uc2lzdGVuY3lQb2xpY3koKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnNpc3RlbmN5UG9saWN5O1xuICAgIH1cbiAgICAvKiogR2V0cyB0aGUgVXNlckNvbnNpc3RlbmN5UG9saWN5IHNldHRpbmdzLiAqL1xuICAgIGNvbnNpc3RlbmN5UG9saWN5O1xuICAgIGVuYWJsZU11bHRpcGxlV3JpdGFibGVMb2NhdGlvbnM7XG4gICAgLy8gVE9ETzogYm9keSAtIGFueVxuICAgIGNvbnN0cnVjdG9yKGJvZHksIGhlYWRlcnMpIHtcbiAgICAgICAgdGhpcy5kYXRhYmFzZXNMaW5rID0gXCIvZGJzL1wiO1xuICAgICAgICB0aGlzLm1lZGlhTGluayA9IFwiL21lZGlhL1wiO1xuICAgICAgICB0aGlzLm1heE1lZGlhU3RvcmFnZVVzYWdlSW5NQiA9IGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLk1heE1lZGlhU3RvcmFnZVVzYWdlSW5NQl07XG4gICAgICAgIHRoaXMuY3VycmVudE1lZGlhU3RvcmFnZVVzYWdlSW5NQiA9IGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkN1cnJlbnRNZWRpYVN0b3JhZ2VVc2FnZUluTUJdO1xuICAgICAgICB0aGlzLmNvbnNpc3RlbmN5UG9saWN5ID0gYm9keS51c2VyQ29uc2lzdGVuY3lQb2xpY3lcbiAgICAgICAgICAgID8gYm9keS51c2VyQ29uc2lzdGVuY3lQb2xpY3kuZGVmYXVsdENvbnNpc3RlbmN5TGV2ZWxcbiAgICAgICAgICAgIDogQ29uc2lzdGVuY3lMZXZlbC5TZXNzaW9uO1xuICAgICAgICBpZiAoYm9keVtDb25zdGFudHMuV3JpdGFibGVMb2NhdGlvbnNdICYmIGJvZHkuaWQgIT09IFwibG9jYWxob3N0XCIpIHtcbiAgICAgICAgICAgIHRoaXMud3JpdGFibGVMb2NhdGlvbnMgPSBib2R5W0NvbnN0YW50cy5Xcml0YWJsZUxvY2F0aW9uc107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJvZHlbQ29uc3RhbnRzLlJlYWRhYmxlTG9jYXRpb25zXSAmJiBib2R5LmlkICE9PSBcImxvY2FsaG9zdFwiKSB7XG4gICAgICAgICAgICB0aGlzLnJlYWRhYmxlTG9jYXRpb25zID0gYm9keVtDb25zdGFudHMuUmVhZGFibGVMb2NhdGlvbnNdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChib2R5W0NvbnN0YW50cy5FTkFCTEVfTVVMVElQTEVfV1JJVEFCTEVfTE9DQVRJT05TXSkge1xuICAgICAgICAgICAgdGhpcy5lbmFibGVNdWx0aXBsZVdyaXRhYmxlTG9jYXRpb25zID1cbiAgICAgICAgICAgICAgICBib2R5W0NvbnN0YW50cy5FTkFCTEVfTVVMVElQTEVfV1JJVEFCTEVfTE9DQVRJT05TXSA9PT0gdHJ1ZSB8fFxuICAgICAgICAgICAgICAgICAgICBib2R5W0NvbnN0YW50cy5FTkFCTEVfTVVMVElQTEVfV1JJVEFCTEVfTE9DQVRJT05TXSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVuYWJsZU11bHRpcGxlV3JpdGFibGVMb2NhdGlvbnMgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURhdGFiYXNlQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/DatabaseAccount.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/Document.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/Document.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=Document.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvRG9jdW1lbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RvY3VtZW50cy9Eb2N1bWVudC5qcz84MTUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURvY3VtZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/Document.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/FullTextPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/FullTextPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n//# sourceMappingURL=FullTextPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvRnVsbFRleHRQb2xpY3kuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvRnVsbFRleHRQb2xpY3kuanM/OWZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZ1bGxUZXh0UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/FullTextPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/GeospatialType.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/GeospatialType.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GeospatialType: () => (/* binding */ GeospatialType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar GeospatialType;\n(function (GeospatialType) {\n    /** Represents data in round-earth coordinate system. */\n    GeospatialType[\"Geography\"] = \"Geography\";\n    /** Represents data in Eucledian(flat) coordinate system. */\n    GeospatialType[\"Geometry\"] = \"Geometry\";\n})(GeospatialType || (GeospatialType = {}));\n//# sourceMappingURL=GeospatialType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvR2Vvc3BhdGlhbFR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0dlb3NwYXRpYWxUeXBlLmpzPzE1ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgdmFyIEdlb3NwYXRpYWxUeXBlO1xuKGZ1bmN0aW9uIChHZW9zcGF0aWFsVHlwZSkge1xuICAgIC8qKiBSZXByZXNlbnRzIGRhdGEgaW4gcm91bmQtZWFydGggY29vcmRpbmF0ZSBzeXN0ZW0uICovXG4gICAgR2Vvc3BhdGlhbFR5cGVbXCJHZW9ncmFwaHlcIl0gPSBcIkdlb2dyYXBoeVwiO1xuICAgIC8qKiBSZXByZXNlbnRzIGRhdGEgaW4gRXVjbGVkaWFuKGZsYXQpIGNvb3JkaW5hdGUgc3lzdGVtLiAqL1xuICAgIEdlb3NwYXRpYWxUeXBlW1wiR2VvbWV0cnlcIl0gPSBcIkdlb21ldHJ5XCI7XG59KShHZW9zcGF0aWFsVHlwZSB8fCAoR2Vvc3BhdGlhbFR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R2Vvc3BhdGlhbFR5cGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/GeospatialType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexKind.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/IndexKind.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexKind: () => (/* binding */ IndexKind)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Specifies the supported Index types.\n */\nvar IndexKind;\n(function (IndexKind) {\n    /**\n     * This is supplied for a path which requires sorting.\n     */\n    IndexKind[\"Range\"] = \"Range\";\n    /**\n     * This is supplied for a path which requires geospatial indexing.\n     */\n    IndexKind[\"Spatial\"] = \"Spatial\";\n})(IndexKind || (IndexKind = {}));\n//# sourceMappingURL=IndexKind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvSW5kZXhLaW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0luZGV4S2luZC5qcz9hNzVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBTcGVjaWZpZXMgdGhlIHN1cHBvcnRlZCBJbmRleCB0eXBlcy5cbiAqL1xuZXhwb3J0IHZhciBJbmRleEtpbmQ7XG4oZnVuY3Rpb24gKEluZGV4S2luZCkge1xuICAgIC8qKlxuICAgICAqIFRoaXMgaXMgc3VwcGxpZWQgZm9yIGEgcGF0aCB3aGljaCByZXF1aXJlcyBzb3J0aW5nLlxuICAgICAqL1xuICAgIEluZGV4S2luZFtcIlJhbmdlXCJdID0gXCJSYW5nZVwiO1xuICAgIC8qKlxuICAgICAqIFRoaXMgaXMgc3VwcGxpZWQgZm9yIGEgcGF0aCB3aGljaCByZXF1aXJlcyBnZW9zcGF0aWFsIGluZGV4aW5nLlxuICAgICAqL1xuICAgIEluZGV4S2luZFtcIlNwYXRpYWxcIl0gPSBcIlNwYXRpYWxcIjtcbn0pKEluZGV4S2luZCB8fCAoSW5kZXhLaW5kID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluZGV4S2luZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexKind.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexingMode.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/IndexingMode.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexingMode: () => (/* binding */ IndexingMode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Specifies the supported indexing modes.\n */\nvar IndexingMode;\n(function (IndexingMode) {\n    /**\n     * Index is updated synchronously with a create or update operation.\n     *\n     * With consistent indexing, query behavior is the same as the default consistency level for the container.\n     * The index is always kept up to date with the data.\n     */\n    IndexingMode[\"consistent\"] = \"consistent\";\n    /**\n     * Index is updated asynchronously with respect to a create or update operation.\n     *\n     * With lazy indexing, queries are eventually consistent. The index is updated when the container is idle.\n     */\n    IndexingMode[\"lazy\"] = \"lazy\";\n    /** No Index is provided. */\n    IndexingMode[\"none\"] = \"none\";\n})(IndexingMode || (IndexingMode = {}));\n//# sourceMappingURL=IndexingMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvSW5kZXhpbmdNb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0NBQW9DO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvSW5kZXhpbmdNb2RlLmpzPzJmOTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFNwZWNpZmllcyB0aGUgc3VwcG9ydGVkIGluZGV4aW5nIG1vZGVzLlxuICovXG5leHBvcnQgdmFyIEluZGV4aW5nTW9kZTtcbihmdW5jdGlvbiAoSW5kZXhpbmdNb2RlKSB7XG4gICAgLyoqXG4gICAgICogSW5kZXggaXMgdXBkYXRlZCBzeW5jaHJvbm91c2x5IHdpdGggYSBjcmVhdGUgb3IgdXBkYXRlIG9wZXJhdGlvbi5cbiAgICAgKlxuICAgICAqIFdpdGggY29uc2lzdGVudCBpbmRleGluZywgcXVlcnkgYmVoYXZpb3IgaXMgdGhlIHNhbWUgYXMgdGhlIGRlZmF1bHQgY29uc2lzdGVuY3kgbGV2ZWwgZm9yIHRoZSBjb250YWluZXIuXG4gICAgICogVGhlIGluZGV4IGlzIGFsd2F5cyBrZXB0IHVwIHRvIGRhdGUgd2l0aCB0aGUgZGF0YS5cbiAgICAgKi9cbiAgICBJbmRleGluZ01vZGVbXCJjb25zaXN0ZW50XCJdID0gXCJjb25zaXN0ZW50XCI7XG4gICAgLyoqXG4gICAgICogSW5kZXggaXMgdXBkYXRlZCBhc3luY2hyb25vdXNseSB3aXRoIHJlc3BlY3QgdG8gYSBjcmVhdGUgb3IgdXBkYXRlIG9wZXJhdGlvbi5cbiAgICAgKlxuICAgICAqIFdpdGggbGF6eSBpbmRleGluZywgcXVlcmllcyBhcmUgZXZlbnR1YWxseSBjb25zaXN0ZW50LiBUaGUgaW5kZXggaXMgdXBkYXRlZCB3aGVuIHRoZSBjb250YWluZXIgaXMgaWRsZS5cbiAgICAgKi9cbiAgICBJbmRleGluZ01vZGVbXCJsYXp5XCJdID0gXCJsYXp5XCI7XG4gICAgLyoqIE5vIEluZGV4IGlzIHByb3ZpZGVkLiAqL1xuICAgIEluZGV4aW5nTW9kZVtcIm5vbmVcIl0gPSBcIm5vbmVcIjtcbn0pKEluZGV4aW5nTW9kZSB8fCAoSW5kZXhpbmdNb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluZGV4aW5nTW9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexingMode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexingPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/IndexingPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpatialType: () => (/* binding */ SpatialType),\n/* harmony export */   VectorIndexType: () => (/* binding */ VectorIndexType)\n/* harmony export */ });\n/* The target data type of a spatial path */\nvar SpatialType;\n(function (SpatialType) {\n    SpatialType[\"LineString\"] = \"LineString\";\n    SpatialType[\"MultiPolygon\"] = \"MultiPolygon\";\n    SpatialType[\"Point\"] = \"Point\";\n    SpatialType[\"Polygon\"] = \"Polygon\";\n})(SpatialType || (SpatialType = {}));\n/**\n * Represents the index type of the vector.\n */\nvar VectorIndexType;\n(function (VectorIndexType) {\n    /**\n     * Represents flat index type.\n     */\n    VectorIndexType[\"Flat\"] = \"flat\";\n    /**\n     * Represents diskANN index type.\n     */\n    VectorIndexType[\"DiskANN\"] = \"diskANN\";\n    /**\n     * Represents quantizedFlat index type.\n     */\n    VectorIndexType[\"QuantizedFlat\"] = \"quantizedFlat\";\n})(VectorIndexType || (VectorIndexType = {}));\n//# sourceMappingURL=IndexingPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvSW5kZXhpbmdQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQ25DO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBDQUEwQztBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL0luZGV4aW5nUG9saWN5LmpzP2UwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhlIHRhcmdldCBkYXRhIHR5cGUgb2YgYSBzcGF0aWFsIHBhdGggKi9cbmV4cG9ydCB2YXIgU3BhdGlhbFR5cGU7XG4oZnVuY3Rpb24gKFNwYXRpYWxUeXBlKSB7XG4gICAgU3BhdGlhbFR5cGVbXCJMaW5lU3RyaW5nXCJdID0gXCJMaW5lU3RyaW5nXCI7XG4gICAgU3BhdGlhbFR5cGVbXCJNdWx0aVBvbHlnb25cIl0gPSBcIk11bHRpUG9seWdvblwiO1xuICAgIFNwYXRpYWxUeXBlW1wiUG9pbnRcIl0gPSBcIlBvaW50XCI7XG4gICAgU3BhdGlhbFR5cGVbXCJQb2x5Z29uXCJdID0gXCJQb2x5Z29uXCI7XG59KShTcGF0aWFsVHlwZSB8fCAoU3BhdGlhbFR5cGUgPSB7fSkpO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBpbmRleCB0eXBlIG9mIHRoZSB2ZWN0b3IuXG4gKi9cbmV4cG9ydCB2YXIgVmVjdG9ySW5kZXhUeXBlO1xuKGZ1bmN0aW9uIChWZWN0b3JJbmRleFR5cGUpIHtcbiAgICAvKipcbiAgICAgKiBSZXByZXNlbnRzIGZsYXQgaW5kZXggdHlwZS5cbiAgICAgKi9cbiAgICBWZWN0b3JJbmRleFR5cGVbXCJGbGF0XCJdID0gXCJmbGF0XCI7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBkaXNrQU5OIGluZGV4IHR5cGUuXG4gICAgICovXG4gICAgVmVjdG9ySW5kZXhUeXBlW1wiRGlza0FOTlwiXSA9IFwiZGlza0FOTlwiO1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgcXVhbnRpemVkRmxhdCBpbmRleCB0eXBlLlxuICAgICAqL1xuICAgIFZlY3RvckluZGV4VHlwZVtcIlF1YW50aXplZEZsYXRcIl0gPSBcInF1YW50aXplZEZsYXRcIjtcbn0pKFZlY3RvckluZGV4VHlwZSB8fCAoVmVjdG9ySW5kZXhUeXBlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluZGV4aW5nUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexingPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKey.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PartitionKey.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartitionKeyBuilder: () => (/* binding */ PartitionKeyBuilder)\n/* harmony export */ });\n/* harmony import */ var _PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PartitionKeyInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyInternal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Builder class for building PartitionKey.\n */\nclass PartitionKeyBuilder {\n    values = [];\n    addValue(value) {\n        this.values.push(value);\n        return this;\n    }\n    addNullValue() {\n        this.values.push(_PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_0__.NullPartitionKeyLiteral);\n        return this;\n    }\n    addNoneValue() {\n        this.values.push(_PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_0__.NonePartitionKeyLiteral);\n        return this;\n    }\n    build() {\n        return [...this.values];\n    }\n}\n//# sourceMappingURL=PartitionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGFydGl0aW9uS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUM2RjtBQUM3RjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw2RUFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZFQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL1BhcnRpdGlvbktleS5qcz8xMTFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgTm9uZVBhcnRpdGlvbktleUxpdGVyYWwsIE51bGxQYXJ0aXRpb25LZXlMaXRlcmFsIH0gZnJvbSBcIi4vUGFydGl0aW9uS2V5SW50ZXJuYWwuanNcIjtcbi8qKlxuICogQnVpbGRlciBjbGFzcyBmb3IgYnVpbGRpbmcgUGFydGl0aW9uS2V5LlxuICovXG5leHBvcnQgY2xhc3MgUGFydGl0aW9uS2V5QnVpbGRlciB7XG4gICAgdmFsdWVzID0gW107XG4gICAgYWRkVmFsdWUodmFsdWUpIHtcbiAgICAgICAgdGhpcy52YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhZGROdWxsVmFsdWUoKSB7XG4gICAgICAgIHRoaXMudmFsdWVzLnB1c2goTnVsbFBhcnRpdGlvbktleUxpdGVyYWwpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYWRkTm9uZVZhbHVlKCkge1xuICAgICAgICB0aGlzLnZhbHVlcy5wdXNoKE5vbmVQYXJ0aXRpb25LZXlMaXRlcmFsKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGJ1aWxkKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMudmFsdWVzXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aXRpb25LZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinition.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinition.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=PartitionKeyDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGFydGl0aW9uS2V5RGVmaW5pdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL1BhcnRpdGlvbktleURlZmluaXRpb24uanM/YWM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aXRpb25LZXlEZWZpbml0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinition.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinitionVersion.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinitionVersion.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartitionKeyDefinitionVersion: () => (/* binding */ PartitionKeyDefinitionVersion)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * PartitionKey Definition Version\n */\nvar PartitionKeyDefinitionVersion;\n(function (PartitionKeyDefinitionVersion) {\n    PartitionKeyDefinitionVersion[PartitionKeyDefinitionVersion[\"V1\"] = 1] = \"V1\";\n    PartitionKeyDefinitionVersion[PartitionKeyDefinitionVersion[\"V2\"] = 2] = \"V2\";\n})(PartitionKeyDefinitionVersion || (PartitionKeyDefinitionVersion = {}));\n//# sourceMappingURL=PartitionKeyDefinitionVersion.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGFydGl0aW9uS2V5RGVmaW5pdGlvblZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0VBQXNFO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGFydGl0aW9uS2V5RGVmaW5pdGlvblZlcnNpb24uanM/Mjg2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogUGFydGl0aW9uS2V5IERlZmluaXRpb24gVmVyc2lvblxuICovXG5leHBvcnQgdmFyIFBhcnRpdGlvbktleURlZmluaXRpb25WZXJzaW9uO1xuKGZ1bmN0aW9uIChQYXJ0aXRpb25LZXlEZWZpbml0aW9uVmVyc2lvbikge1xuICAgIFBhcnRpdGlvbktleURlZmluaXRpb25WZXJzaW9uW1BhcnRpdGlvbktleURlZmluaXRpb25WZXJzaW9uW1wiVjFcIl0gPSAxXSA9IFwiVjFcIjtcbiAgICBQYXJ0aXRpb25LZXlEZWZpbml0aW9uVmVyc2lvbltQYXJ0aXRpb25LZXlEZWZpbml0aW9uVmVyc2lvbltcIlYyXCJdID0gMl0gPSBcIlYyXCI7XG59KShQYXJ0aXRpb25LZXlEZWZpbml0aW9uVmVyc2lvbiB8fCAoUGFydGl0aW9uS2V5RGVmaW5pdGlvblZlcnNpb24gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGFydGl0aW9uS2V5RGVmaW5pdGlvblZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinitionVersion.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyInternal.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyInternal.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NonePartitionKeyLiteral: () => (/* binding */ NonePartitionKeyLiteral),\n/* harmony export */   NullPartitionKeyLiteral: () => (/* binding */ NullPartitionKeyLiteral),\n/* harmony export */   convertToInternalPartitionKey: () => (/* binding */ convertToInternalPartitionKey)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @hidden\n * None PartitionKey Literal\n */\nconst NonePartitionKeyLiteral = {};\n/**\n * @hidden\n * Null PartitionKey Literal\n */\nconst NullPartitionKeyLiteral = null;\n/**\n * @hidden\n * Maps PartitionKey to InternalPartitionKey.\n * @param partitionKey - PartitonKey to be converted.\n * @returns PartitionKeyInternal\n */\nfunction convertToInternalPartitionKey(partitionKey) {\n    if (Array.isArray(partitionKey)) {\n        return partitionKey.map((key) => (key === undefined ? NonePartitionKeyLiteral : key));\n    }\n    else\n        return [partitionKey];\n}\n//# sourceMappingURL=PartitionKeyInternal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGFydGl0aW9uS2V5SW50ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL1BhcnRpdGlvbktleUludGVybmFsLmpzP2JmYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEBoaWRkZW5cbiAqIE5vbmUgUGFydGl0aW9uS2V5IExpdGVyYWxcbiAqL1xuZXhwb3J0IGNvbnN0IE5vbmVQYXJ0aXRpb25LZXlMaXRlcmFsID0ge307XG4vKipcbiAqIEBoaWRkZW5cbiAqIE51bGwgUGFydGl0aW9uS2V5IExpdGVyYWxcbiAqL1xuZXhwb3J0IGNvbnN0IE51bGxQYXJ0aXRpb25LZXlMaXRlcmFsID0gbnVsbDtcbi8qKlxuICogQGhpZGRlblxuICogTWFwcyBQYXJ0aXRpb25LZXkgdG8gSW50ZXJuYWxQYXJ0aXRpb25LZXkuXG4gKiBAcGFyYW0gcGFydGl0aW9uS2V5IC0gUGFydGl0b25LZXkgdG8gYmUgY29udmVydGVkLlxuICogQHJldHVybnMgUGFydGl0aW9uS2V5SW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb0ludGVybmFsUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHBhcnRpdGlvbktleSkpIHtcbiAgICAgICAgcmV0dXJuIHBhcnRpdGlvbktleS5tYXAoKGtleSkgPT4gKGtleSA9PT0gdW5kZWZpbmVkID8gTm9uZVBhcnRpdGlvbktleUxpdGVyYWwgOiBrZXkpKTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICByZXR1cm4gW3BhcnRpdGlvbktleV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aXRpb25LZXlJbnRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyInternal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyKind.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyKind.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartitionKeyKind: () => (/* binding */ PartitionKeyKind)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Type of PartitionKey i.e. Hash, MultiHash\n */\nvar PartitionKeyKind;\n(function (PartitionKeyKind) {\n    PartitionKeyKind[\"Hash\"] = \"Hash\";\n    PartitionKeyKind[\"MultiHash\"] = \"MultiHash\";\n})(PartitionKeyKind || (PartitionKeyKind = {}));\n//# sourceMappingURL=PartitionKeyKind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGFydGl0aW9uS2V5S2luZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEM7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RvY3VtZW50cy9QYXJ0aXRpb25LZXlLaW5kLmpzP2MxMGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFR5cGUgb2YgUGFydGl0aW9uS2V5IGkuZS4gSGFzaCwgTXVsdGlIYXNoXG4gKi9cbmV4cG9ydCB2YXIgUGFydGl0aW9uS2V5S2luZDtcbihmdW5jdGlvbiAoUGFydGl0aW9uS2V5S2luZCkge1xuICAgIFBhcnRpdGlvbktleUtpbmRbXCJIYXNoXCJdID0gXCJIYXNoXCI7XG4gICAgUGFydGl0aW9uS2V5S2luZFtcIk11bHRpSGFzaFwiXSA9IFwiTXVsdGlIYXNoXCI7XG59KShQYXJ0aXRpb25LZXlLaW5kIHx8IChQYXJ0aXRpb25LZXlLaW5kID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBhcnRpdGlvbktleUtpbmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyKind.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PermissionMode.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PermissionMode.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PermissionMode: () => (/* binding */ PermissionMode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Enum for permission mode values.\n */\nvar PermissionMode;\n(function (PermissionMode) {\n    /** Permission not valid. */\n    PermissionMode[\"None\"] = \"none\";\n    /** Permission applicable for read operations only. */\n    PermissionMode[\"Read\"] = \"read\";\n    /** Permission applicable for all operations. */\n    PermissionMode[\"All\"] = \"all\";\n})(PermissionMode || (PermissionMode = {}));\n//# sourceMappingURL=PermissionMode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUGVybWlzc2lvbk1vZGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RvY3VtZW50cy9QZXJtaXNzaW9uTW9kZS5qcz80NjhmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBFbnVtIGZvciBwZXJtaXNzaW9uIG1vZGUgdmFsdWVzLlxuICovXG5leHBvcnQgdmFyIFBlcm1pc3Npb25Nb2RlO1xuKGZ1bmN0aW9uIChQZXJtaXNzaW9uTW9kZSkge1xuICAgIC8qKiBQZXJtaXNzaW9uIG5vdCB2YWxpZC4gKi9cbiAgICBQZXJtaXNzaW9uTW9kZVtcIk5vbmVcIl0gPSBcIm5vbmVcIjtcbiAgICAvKiogUGVybWlzc2lvbiBhcHBsaWNhYmxlIGZvciByZWFkIG9wZXJhdGlvbnMgb25seS4gKi9cbiAgICBQZXJtaXNzaW9uTW9kZVtcIlJlYWRcIl0gPSBcInJlYWRcIjtcbiAgICAvKiogUGVybWlzc2lvbiBhcHBsaWNhYmxlIGZvciBhbGwgb3BlcmF0aW9ucy4gKi9cbiAgICBQZXJtaXNzaW9uTW9kZVtcIkFsbFwiXSA9IFwiYWxsXCI7XG59KShQZXJtaXNzaW9uTW9kZSB8fCAoUGVybWlzc2lvbk1vZGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGVybWlzc2lvbk1vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PermissionMode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PriorityLevel.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/PriorityLevel.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PriorityLevel: () => (/* binding */ PriorityLevel)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Represents Priority Level associated with each Azure Cosmos DB client requests.<br>\n * The Low priority requests are always throttled before any High priority requests.\n *\n * By default all requests are considered as High priority requests.\n *\n * See https://aka.ms/CosmosDB/PriorityBasedExecution for more detailed documentation on Priority based throttling.\n */\nvar PriorityLevel;\n(function (PriorityLevel) {\n    /**\n     * High Priority requests are throttled after Low priority requests.\n     */\n    PriorityLevel[\"High\"] = \"High\";\n    /**\n     * Low Priority requests are throttled before High priority requests.\n     */\n    PriorityLevel[\"Low\"] = \"Low\";\n})(PriorityLevel || (PriorityLevel = {}));\n//# sourceMappingURL=PriorityLevel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUHJpb3JpdHlMZXZlbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0NBQXNDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvUHJpb3JpdHlMZXZlbC5qcz8yMzczIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBSZXByZXNlbnRzIFByaW9yaXR5IExldmVsIGFzc29jaWF0ZWQgd2l0aCBlYWNoIEF6dXJlIENvc21vcyBEQiBjbGllbnQgcmVxdWVzdHMuPGJyPlxuICogVGhlIExvdyBwcmlvcml0eSByZXF1ZXN0cyBhcmUgYWx3YXlzIHRocm90dGxlZCBiZWZvcmUgYW55IEhpZ2ggcHJpb3JpdHkgcmVxdWVzdHMuXG4gKlxuICogQnkgZGVmYXVsdCBhbGwgcmVxdWVzdHMgYXJlIGNvbnNpZGVyZWQgYXMgSGlnaCBwcmlvcml0eSByZXF1ZXN0cy5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9ha2EubXMvQ29zbW9zREIvUHJpb3JpdHlCYXNlZEV4ZWN1dGlvbiBmb3IgbW9yZSBkZXRhaWxlZCBkb2N1bWVudGF0aW9uIG9uIFByaW9yaXR5IGJhc2VkIHRocm90dGxpbmcuXG4gKi9cbmV4cG9ydCB2YXIgUHJpb3JpdHlMZXZlbDtcbihmdW5jdGlvbiAoUHJpb3JpdHlMZXZlbCkge1xuICAgIC8qKlxuICAgICAqIEhpZ2ggUHJpb3JpdHkgcmVxdWVzdHMgYXJlIHRocm90dGxlZCBhZnRlciBMb3cgcHJpb3JpdHkgcmVxdWVzdHMuXG4gICAgICovXG4gICAgUHJpb3JpdHlMZXZlbFtcIkhpZ2hcIl0gPSBcIkhpZ2hcIjtcbiAgICAvKipcbiAgICAgKiBMb3cgUHJpb3JpdHkgcmVxdWVzdHMgYXJlIHRocm90dGxlZCBiZWZvcmUgSGlnaCBwcmlvcml0eSByZXF1ZXN0cy5cbiAgICAgKi9cbiAgICBQcmlvcml0eUxldmVsW1wiTG93XCJdID0gXCJMb3dcIjtcbn0pKFByaW9yaXR5TGV2ZWwgfHwgKFByaW9yaXR5TGV2ZWwgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJpb3JpdHlMZXZlbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PriorityLevel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/TriggerOperation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/TriggerOperation.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TriggerOperation: () => (/* binding */ TriggerOperation)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Enum for trigger operation values.\n * specifies the operations on which a trigger should be executed.\n */\nvar TriggerOperation;\n(function (TriggerOperation) {\n    /** All operations. */\n    TriggerOperation[\"All\"] = \"all\";\n    /** Create operations only. */\n    TriggerOperation[\"Create\"] = \"create\";\n    /** Update operations only. */\n    TriggerOperation[\"Update\"] = \"update\";\n    /** Delete operations only. */\n    TriggerOperation[\"Delete\"] = \"delete\";\n    /** Replace operations only. */\n    TriggerOperation[\"Replace\"] = \"replace\";\n})(TriggerOperation || (TriggerOperation = {}));\n//# sourceMappingURL=TriggerOperation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvVHJpZ2dlck9wZXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEM7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RvY3VtZW50cy9UcmlnZ2VyT3BlcmF0aW9uLmpzPzg4NzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEVudW0gZm9yIHRyaWdnZXIgb3BlcmF0aW9uIHZhbHVlcy5cbiAqIHNwZWNpZmllcyB0aGUgb3BlcmF0aW9ucyBvbiB3aGljaCBhIHRyaWdnZXIgc2hvdWxkIGJlIGV4ZWN1dGVkLlxuICovXG5leHBvcnQgdmFyIFRyaWdnZXJPcGVyYXRpb247XG4oZnVuY3Rpb24gKFRyaWdnZXJPcGVyYXRpb24pIHtcbiAgICAvKiogQWxsIG9wZXJhdGlvbnMuICovXG4gICAgVHJpZ2dlck9wZXJhdGlvbltcIkFsbFwiXSA9IFwiYWxsXCI7XG4gICAgLyoqIENyZWF0ZSBvcGVyYXRpb25zIG9ubHkuICovXG4gICAgVHJpZ2dlck9wZXJhdGlvbltcIkNyZWF0ZVwiXSA9IFwiY3JlYXRlXCI7XG4gICAgLyoqIFVwZGF0ZSBvcGVyYXRpb25zIG9ubHkuICovXG4gICAgVHJpZ2dlck9wZXJhdGlvbltcIlVwZGF0ZVwiXSA9IFwidXBkYXRlXCI7XG4gICAgLyoqIERlbGV0ZSBvcGVyYXRpb25zIG9ubHkuICovXG4gICAgVHJpZ2dlck9wZXJhdGlvbltcIkRlbGV0ZVwiXSA9IFwiZGVsZXRlXCI7XG4gICAgLyoqIFJlcGxhY2Ugb3BlcmF0aW9ucyBvbmx5LiAqL1xuICAgIFRyaWdnZXJPcGVyYXRpb25bXCJSZXBsYWNlXCJdID0gXCJyZXBsYWNlXCI7XG59KShUcmlnZ2VyT3BlcmF0aW9uIHx8IChUcmlnZ2VyT3BlcmF0aW9uID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyaWdnZXJPcGVyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/TriggerOperation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/TriggerType.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/TriggerType.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TriggerType: () => (/* binding */ TriggerType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Enum for trigger type values.\n * Specifies the type of the trigger.\n */\nvar TriggerType;\n(function (TriggerType) {\n    /** Trigger should be executed before the associated operation(s). */\n    TriggerType[\"Pre\"] = \"pre\";\n    /** Trigger should be executed after the associated operation(s). */\n    TriggerType[\"Post\"] = \"post\";\n})(TriggerType || (TriggerType = {}));\n//# sourceMappingURL=TriggerType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvVHJpZ2dlclR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvVHJpZ2dlclR5cGUuanM/ZWZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogRW51bSBmb3IgdHJpZ2dlciB0eXBlIHZhbHVlcy5cbiAqIFNwZWNpZmllcyB0aGUgdHlwZSBvZiB0aGUgdHJpZ2dlci5cbiAqL1xuZXhwb3J0IHZhciBUcmlnZ2VyVHlwZTtcbihmdW5jdGlvbiAoVHJpZ2dlclR5cGUpIHtcbiAgICAvKiogVHJpZ2dlciBzaG91bGQgYmUgZXhlY3V0ZWQgYmVmb3JlIHRoZSBhc3NvY2lhdGVkIG9wZXJhdGlvbihzKS4gKi9cbiAgICBUcmlnZ2VyVHlwZVtcIlByZVwiXSA9IFwicHJlXCI7XG4gICAgLyoqIFRyaWdnZXIgc2hvdWxkIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBhc3NvY2lhdGVkIG9wZXJhdGlvbihzKS4gKi9cbiAgICBUcmlnZ2VyVHlwZVtcIlBvc3RcIl0gPSBcInBvc3RcIjtcbn0pKFRyaWdnZXJUeXBlIHx8IChUcmlnZ2VyVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmlnZ2VyVHlwZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/TriggerType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/UserDefinedFunctionType.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/UserDefinedFunctionType.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserDefinedFunctionType: () => (/* binding */ UserDefinedFunctionType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Enum for udf type values.\n * Specifies the types of user defined functions.\n */\nvar UserDefinedFunctionType;\n(function (UserDefinedFunctionType) {\n    /** The User Defined Function is written in JavaScript. This is currently the only option. */\n    UserDefinedFunctionType[\"Javascript\"] = \"Javascript\";\n})(UserDefinedFunctionType || (UserDefinedFunctionType = {}));\n//# sourceMappingURL=UserDefinedFunctionType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvVXNlckRlZmluZWRGdW5jdGlvblR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwREFBMEQ7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2RvY3VtZW50cy9Vc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZS5qcz84OTAyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBFbnVtIGZvciB1ZGYgdHlwZSB2YWx1ZXMuXG4gKiBTcGVjaWZpZXMgdGhlIHR5cGVzIG9mIHVzZXIgZGVmaW5lZCBmdW5jdGlvbnMuXG4gKi9cbmV4cG9ydCB2YXIgVXNlckRlZmluZWRGdW5jdGlvblR5cGU7XG4oZnVuY3Rpb24gKFVzZXJEZWZpbmVkRnVuY3Rpb25UeXBlKSB7XG4gICAgLyoqIFRoZSBVc2VyIERlZmluZWQgRnVuY3Rpb24gaXMgd3JpdHRlbiBpbiBKYXZhU2NyaXB0LiBUaGlzIGlzIGN1cnJlbnRseSB0aGUgb25seSBvcHRpb24uICovXG4gICAgVXNlckRlZmluZWRGdW5jdGlvblR5cGVbXCJKYXZhc2NyaXB0XCJdID0gXCJKYXZhc2NyaXB0XCI7XG59KShVc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZSB8fCAoVXNlckRlZmluZWRGdW5jdGlvblR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXNlckRlZmluZWRGdW5jdGlvblR5cGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/UserDefinedFunctionType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/VectorEmbeddingPolicy.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/VectorEmbeddingPolicy.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorEmbeddingDataType: () => (/* binding */ VectorEmbeddingDataType),\n/* harmony export */   VectorEmbeddingDistanceFunction: () => (/* binding */ VectorEmbeddingDistanceFunction)\n/* harmony export */ });\n/**\n * Represents the data type of the vector.\n */\nvar VectorEmbeddingDataType;\n(function (VectorEmbeddingDataType) {\n    /**\n     * 32-bit floating point number.\n     */\n    VectorEmbeddingDataType[\"Float32\"] = \"float32\";\n    /**\n     * 8-bit unsigned integer.\n     */\n    VectorEmbeddingDataType[\"UInt8\"] = \"uint8\";\n    /**\n     * 8-bit signed integer.\n     */\n    VectorEmbeddingDataType[\"Int8\"] = \"int8\";\n})(VectorEmbeddingDataType || (VectorEmbeddingDataType = {}));\n/**\n * Represents the distance function to use for distance calculation in between vectors.\n */\nvar VectorEmbeddingDistanceFunction;\n(function (VectorEmbeddingDistanceFunction) {\n    /**\n     * Represents euclidean distance function.\n     */\n    VectorEmbeddingDistanceFunction[\"Euclidean\"] = \"euclidean\";\n    /**\n     * Represents cosine distance function.\n     */\n    VectorEmbeddingDistanceFunction[\"Cosine\"] = \"cosine\";\n    /**\n     * Represents dot product distance function.\n     */\n    VectorEmbeddingDistanceFunction[\"DotProduct\"] = \"dotproduct\";\n})(VectorEmbeddingDistanceFunction || (VectorEmbeddingDistanceFunction = {}));\n//# sourceMappingURL=VectorEmbeddingPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvVmVjdG9yRW1iZWRkaW5nUG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBEO0FBQzNEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBFQUEwRTtBQUMzRSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL1ZlY3RvckVtYmVkZGluZ1BvbGljeS5qcz8zNTZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwcmVzZW50cyB0aGUgZGF0YSB0eXBlIG9mIHRoZSB2ZWN0b3IuXG4gKi9cbmV4cG9ydCB2YXIgVmVjdG9yRW1iZWRkaW5nRGF0YVR5cGU7XG4oZnVuY3Rpb24gKFZlY3RvckVtYmVkZGluZ0RhdGFUeXBlKSB7XG4gICAgLyoqXG4gICAgICogMzItYml0IGZsb2F0aW5nIHBvaW50IG51bWJlci5cbiAgICAgKi9cbiAgICBWZWN0b3JFbWJlZGRpbmdEYXRhVHlwZVtcIkZsb2F0MzJcIl0gPSBcImZsb2F0MzJcIjtcbiAgICAvKipcbiAgICAgKiA4LWJpdCB1bnNpZ25lZCBpbnRlZ2VyLlxuICAgICAqL1xuICAgIFZlY3RvckVtYmVkZGluZ0RhdGFUeXBlW1wiVUludDhcIl0gPSBcInVpbnQ4XCI7XG4gICAgLyoqXG4gICAgICogOC1iaXQgc2lnbmVkIGludGVnZXIuXG4gICAgICovXG4gICAgVmVjdG9yRW1iZWRkaW5nRGF0YVR5cGVbXCJJbnQ4XCJdID0gXCJpbnQ4XCI7XG59KShWZWN0b3JFbWJlZGRpbmdEYXRhVHlwZSB8fCAoVmVjdG9yRW1iZWRkaW5nRGF0YVR5cGUgPSB7fSkpO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBkaXN0YW5jZSBmdW5jdGlvbiB0byB1c2UgZm9yIGRpc3RhbmNlIGNhbGN1bGF0aW9uIGluIGJldHdlZW4gdmVjdG9ycy5cbiAqL1xuZXhwb3J0IHZhciBWZWN0b3JFbWJlZGRpbmdEaXN0YW5jZUZ1bmN0aW9uO1xuKGZ1bmN0aW9uIChWZWN0b3JFbWJlZGRpbmdEaXN0YW5jZUZ1bmN0aW9uKSB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBldWNsaWRlYW4gZGlzdGFuY2UgZnVuY3Rpb24uXG4gICAgICovXG4gICAgVmVjdG9yRW1iZWRkaW5nRGlzdGFuY2VGdW5jdGlvbltcIkV1Y2xpZGVhblwiXSA9IFwiZXVjbGlkZWFuXCI7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBjb3NpbmUgZGlzdGFuY2UgZnVuY3Rpb24uXG4gICAgICovXG4gICAgVmVjdG9yRW1iZWRkaW5nRGlzdGFuY2VGdW5jdGlvbltcIkNvc2luZVwiXSA9IFwiY29zaW5lXCI7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBkb3QgcHJvZHVjdCBkaXN0YW5jZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBWZWN0b3JFbWJlZGRpbmdEaXN0YW5jZUZ1bmN0aW9uW1wiRG90UHJvZHVjdFwiXSA9IFwiZG90cHJvZHVjdFwiO1xufSkoVmVjdG9yRW1iZWRkaW5nRGlzdGFuY2VGdW5jdGlvbiB8fCAoVmVjdG9yRW1iZWRkaW5nRGlzdGFuY2VGdW5jdGlvbiA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1WZWN0b3JFbWJlZGRpbmdQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/VectorEmbeddingPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/documents/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectionMode: () => (/* reexport safe */ _ConnectionMode_js__WEBPACK_IMPORTED_MODULE_0__.ConnectionMode),\n/* harmony export */   ConsistencyLevel: () => (/* reexport safe */ _ConsistencyLevel_js__WEBPACK_IMPORTED_MODULE_2__.ConsistencyLevel),\n/* harmony export */   DataType: () => (/* reexport safe */ _DataType_js__WEBPACK_IMPORTED_MODULE_4__.DataType),\n/* harmony export */   DatabaseAccount: () => (/* reexport safe */ _DatabaseAccount_js__WEBPACK_IMPORTED_MODULE_3__.DatabaseAccount),\n/* harmony export */   GeospatialType: () => (/* reexport safe */ _GeospatialType_js__WEBPACK_IMPORTED_MODULE_19__.GeospatialType),\n/* harmony export */   IndexKind: () => (/* reexport safe */ _IndexKind_js__WEBPACK_IMPORTED_MODULE_8__.IndexKind),\n/* harmony export */   IndexingMode: () => (/* reexport safe */ _IndexingMode_js__WEBPACK_IMPORTED_MODULE_6__.IndexingMode),\n/* harmony export */   NonePartitionKeyLiteral: () => (/* reexport safe */ _PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_10__.NonePartitionKeyLiteral),\n/* harmony export */   NullPartitionKeyLiteral: () => (/* reexport safe */ _PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_10__.NullPartitionKeyLiteral),\n/* harmony export */   PartitionKeyBuilder: () => (/* reexport safe */ _PartitionKey_js__WEBPACK_IMPORTED_MODULE_9__.PartitionKeyBuilder),\n/* harmony export */   PartitionKeyDefinitionVersion: () => (/* reexport safe */ _PartitionKeyDefinitionVersion_js__WEBPACK_IMPORTED_MODULE_11__.PartitionKeyDefinitionVersion),\n/* harmony export */   PartitionKeyKind: () => (/* reexport safe */ _PartitionKeyKind_js__WEBPACK_IMPORTED_MODULE_12__.PartitionKeyKind),\n/* harmony export */   PermissionMode: () => (/* reexport safe */ _PermissionMode_js__WEBPACK_IMPORTED_MODULE_14__.PermissionMode),\n/* harmony export */   PriorityLevel: () => (/* reexport safe */ _PriorityLevel_js__WEBPACK_IMPORTED_MODULE_15__.PriorityLevel),\n/* harmony export */   SpatialType: () => (/* reexport safe */ _IndexingPolicy_js__WEBPACK_IMPORTED_MODULE_7__.SpatialType),\n/* harmony export */   TriggerOperation: () => (/* reexport safe */ _TriggerOperation_js__WEBPACK_IMPORTED_MODULE_16__.TriggerOperation),\n/* harmony export */   TriggerType: () => (/* reexport safe */ _TriggerType_js__WEBPACK_IMPORTED_MODULE_17__.TriggerType),\n/* harmony export */   UserDefinedFunctionType: () => (/* reexport safe */ _UserDefinedFunctionType_js__WEBPACK_IMPORTED_MODULE_18__.UserDefinedFunctionType),\n/* harmony export */   VectorEmbeddingDataType: () => (/* reexport safe */ _VectorEmbeddingPolicy_js__WEBPACK_IMPORTED_MODULE_21__.VectorEmbeddingDataType),\n/* harmony export */   VectorEmbeddingDistanceFunction: () => (/* reexport safe */ _VectorEmbeddingPolicy_js__WEBPACK_IMPORTED_MODULE_21__.VectorEmbeddingDistanceFunction),\n/* harmony export */   VectorIndexType: () => (/* reexport safe */ _IndexingPolicy_js__WEBPACK_IMPORTED_MODULE_7__.VectorIndexType),\n/* harmony export */   convertToInternalPartitionKey: () => (/* reexport safe */ _PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_10__.convertToInternalPartitionKey),\n/* harmony export */   defaultConnectionPolicy: () => (/* reexport safe */ _ConnectionPolicy_js__WEBPACK_IMPORTED_MODULE_1__.defaultConnectionPolicy)\n/* harmony export */ });\n/* harmony import */ var _ConnectionMode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ConnectionMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionMode.js\");\n/* harmony import */ var _ConnectionPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConnectionPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConnectionPolicy.js\");\n/* harmony import */ var _ConsistencyLevel_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ConsistencyLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ConsistencyLevel.js\");\n/* harmony import */ var _DatabaseAccount_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DatabaseAccount.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/DatabaseAccount.js\");\n/* harmony import */ var _DataType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataType.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/DataType.js\");\n/* harmony import */ var _Document_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Document.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/Document.js\");\n/* harmony import */ var _IndexingMode_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IndexingMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexingMode.js\");\n/* harmony import */ var _IndexingPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./IndexingPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexingPolicy.js\");\n/* harmony import */ var _IndexKind_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./IndexKind.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/IndexKind.js\");\n/* harmony import */ var _PartitionKey_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./PartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKey.js\");\n/* harmony import */ var _PartitionKeyInternal_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./PartitionKeyInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyInternal.js\");\n/* harmony import */ var _PartitionKeyDefinitionVersion_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./PartitionKeyDefinitionVersion.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinitionVersion.js\");\n/* harmony import */ var _PartitionKeyKind_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./PartitionKeyKind.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyKind.js\");\n/* harmony import */ var _PartitionKeyDefinition_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./PartitionKeyDefinition.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PartitionKeyDefinition.js\");\n/* harmony import */ var _PermissionMode_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./PermissionMode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PermissionMode.js\");\n/* harmony import */ var _PriorityLevel_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./PriorityLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/PriorityLevel.js\");\n/* harmony import */ var _TriggerOperation_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./TriggerOperation.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/TriggerOperation.js\");\n/* harmony import */ var _TriggerType_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./TriggerType.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/TriggerType.js\");\n/* harmony import */ var _UserDefinedFunctionType_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./UserDefinedFunctionType.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/UserDefinedFunctionType.js\");\n/* harmony import */ var _GeospatialType_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./GeospatialType.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/GeospatialType.js\");\n/* harmony import */ var _ComputedProperty_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ComputedProperty.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/ComputedProperty.js\");\n/* harmony import */ var _VectorEmbeddingPolicy_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./VectorEmbeddingPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/VectorEmbeddingPolicy.js\");\n/* harmony import */ var _FullTextPolicy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./FullTextPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/FullTextPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9kb2N1bWVudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDb0M7QUFDRTtBQUNBO0FBQ0Q7QUFDUDtBQUNBO0FBQ0k7QUFDRTtBQUNMO0FBQ0c7QUFDUTtBQUNTO0FBQ2I7QUFDTTtBQUNSO0FBQ0Q7QUFDRztBQUNMO0FBQ1k7QUFDVDtBQUNFO0FBQ0s7QUFDUDtBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZG9jdW1lbnRzL2luZGV4LmpzP2IzZjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgKiBmcm9tIFwiLi9Db25uZWN0aW9uTW9kZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vQ29ubmVjdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vQ29uc2lzdGVuY3lMZXZlbC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRGF0YWJhc2VBY2NvdW50LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9EYXRhVHlwZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRG9jdW1lbnQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0luZGV4aW5nTW9kZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vSW5kZXhpbmdQb2xpY3kuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0luZGV4S2luZC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUGFydGl0aW9uS2V5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9QYXJ0aXRpb25LZXlJbnRlcm5hbC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUGFydGl0aW9uS2V5RGVmaW5pdGlvblZlcnNpb24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1BhcnRpdGlvbktleUtpbmQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1BhcnRpdGlvbktleURlZmluaXRpb24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1Blcm1pc3Npb25Nb2RlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Qcmlvcml0eUxldmVsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9UcmlnZ2VyT3BlcmF0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9UcmlnZ2VyVHlwZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vVXNlckRlZmluZWRGdW5jdGlvblR5cGUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0dlb3NwYXRpYWxUeXBlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9Db21wdXRlZFByb3BlcnR5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9WZWN0b3JFbWJlZGRpbmdQb2xpY3kuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0Z1bGxUZXh0UG9saWN5LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/AeadAes256CbcHmacSha256Algorithm.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/AeadAes256CbcHmacSha256Algorithm.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AeadAes256CbcHmacSha256Algorithm: () => (/* binding */ AeadAes256CbcHmacSha256Algorithm)\n/* harmony export */ });\n/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nclass AeadAes256CbcHmacSha256Algorithm {\n    algoVersion = 0x1;\n    blockSizeInBytes = 16;\n    encryptionType;\n    dataEncryptionKey;\n    version;\n    versionSize;\n    keySizeInBytes;\n    minimumCipherTextLength;\n    constructor(dataEncryptionKey, encryptionType) {\n        this.dataEncryptionKey = dataEncryptionKey;\n        this.encryptionType = encryptionType;\n        this.version = Buffer.from([this.algoVersion]);\n        this.versionSize = Buffer.from([1]);\n        this.keySizeInBytes = 32;\n        this.minimumCipherTextLength = 1 + 2 * this.blockSizeInBytes + this.keySizeInBytes;\n    }\n    encrypt(plainTextBuffer) {\n        let iv;\n        // create initialization vector\n        if (this.encryptionType === _enums_index_js__WEBPACK_IMPORTED_MODULE_0__.EncryptionType.RANDOMIZED) {\n            iv = (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(16);\n        }\n        else {\n            const ivHmac = (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.createHmac)(\"sha256\", this.dataEncryptionKey.ivKeyBuffer);\n            ivHmac.update(plainTextBuffer);\n            iv = ivHmac.digest().slice(0, this.blockSizeInBytes);\n        }\n        // create cipher text\n        const cipher = (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.createCipheriv)(\"aes-256-cbc\", this.dataEncryptionKey.encryptionKeyBuffer, iv);\n        const cipherTextBuffer = Buffer.concat([cipher.update(plainTextBuffer), cipher.final()]);\n        const authTagBuffer = this.generateAuthenticationTag(iv, cipherTextBuffer);\n        return Buffer.concat([Buffer.from([this.algoVersion]), authTagBuffer, iv, cipherTextBuffer]);\n    }\n    decrypt(cipherTextBuffer) {\n        if (cipherTextBuffer.length < this.minimumCipherTextLength) {\n            throw new Error(\"Invalid cipher text length\");\n        }\n        if (cipherTextBuffer[0] !== this.algoVersion) {\n            throw new Error(\"Invalid cipher text version\");\n        }\n        const authTagStartIndex = 1;\n        const authTagLength = this.keySizeInBytes;\n        const ivStartIndex = authTagStartIndex + authTagLength;\n        const ivLength = this.blockSizeInBytes;\n        const cipherTextStartIndex = ivStartIndex + ivLength;\n        const cipherTextLength = cipherTextBuffer.length - cipherTextStartIndex;\n        const authenticationTag = cipherTextBuffer.slice(authTagStartIndex, authTagStartIndex + authTagLength);\n        const iv = cipherTextBuffer.slice(ivStartIndex, ivStartIndex + ivLength);\n        const cipherText = cipherTextBuffer.slice(cipherTextStartIndex, cipherTextStartIndex + cipherTextLength);\n        this.validateAuthenticationTag(authenticationTag, iv, cipherText);\n        const decipher = (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.createDecipheriv)(\"aes-256-cbc\", this.dataEncryptionKey.encryptionKeyBuffer, iv);\n        const decrypted = decipher.update(cipherText);\n        const result = Buffer.concat([decrypted, decipher.final()]);\n        return result;\n    }\n    generateAuthenticationTag(iv, cipherTextBuffer) {\n        const hmac = (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.createHmac)(\"sha256\", this.dataEncryptionKey.macKeyBuffer);\n        const buffer = Buffer.concat([this.version, iv, cipherTextBuffer, this.versionSize]);\n        return hmac.update(buffer).digest();\n    }\n    validateAuthenticationTag(authenticationTag, iv, cipherText) {\n        const expectedAuthTag = this.generateAuthenticationTag(iv, cipherText);\n        if (!authenticationTag.equals(expectedAuthTag)) {\n            throw new Error(\"Invalid authentication tag\");\n        }\n    }\n}\n//# sourceMappingURL=AeadAes256CbcHmacSha256Algorithm.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0FlYWRBZXMyNTZDYmNIbWFjU2hhMjU2QWxnb3JpdGhtL0FlYWRBZXMyNTZDYmNIbWFjU2hhMjU2QWxnb3JpdGhtLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDcUM7QUFDakY7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQywyREFBYztBQUNsRCxpQkFBaUIsd0RBQVc7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQix1REFBVTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNkRBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdURBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9BZWFkQWVzMjU2Q2JjSG1hY1NoYTI1NkFsZ29yaXRobS9BZWFkQWVzMjU2Q2JjSG1hY1NoYTI1NkFsZ29yaXRobS5qcz9iYzJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgRW5jcnlwdGlvblR5cGUgfSBmcm9tIFwiLi4vZW51bXMvaW5kZXguanNcIjtcbmltcG9ydCB7IGNyZWF0ZUNpcGhlcml2LCByYW5kb21CeXRlcywgY3JlYXRlSG1hYywgY3JlYXRlRGVjaXBoZXJpdiB9IGZyb20gXCJub2RlOmNyeXB0b1wiO1xuZXhwb3J0IGNsYXNzIEFlYWRBZXMyNTZDYmNIbWFjU2hhMjU2QWxnb3JpdGhtIHtcbiAgICBhbGdvVmVyc2lvbiA9IDB4MTtcbiAgICBibG9ja1NpemVJbkJ5dGVzID0gMTY7XG4gICAgZW5jcnlwdGlvblR5cGU7XG4gICAgZGF0YUVuY3J5cHRpb25LZXk7XG4gICAgdmVyc2lvbjtcbiAgICB2ZXJzaW9uU2l6ZTtcbiAgICBrZXlTaXplSW5CeXRlcztcbiAgICBtaW5pbXVtQ2lwaGVyVGV4dExlbmd0aDtcbiAgICBjb25zdHJ1Y3RvcihkYXRhRW5jcnlwdGlvbktleSwgZW5jcnlwdGlvblR5cGUpIHtcbiAgICAgICAgdGhpcy5kYXRhRW5jcnlwdGlvbktleSA9IGRhdGFFbmNyeXB0aW9uS2V5O1xuICAgICAgICB0aGlzLmVuY3J5cHRpb25UeXBlID0gZW5jcnlwdGlvblR5cGU7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IEJ1ZmZlci5mcm9tKFt0aGlzLmFsZ29WZXJzaW9uXSk7XG4gICAgICAgIHRoaXMudmVyc2lvblNpemUgPSBCdWZmZXIuZnJvbShbMV0pO1xuICAgICAgICB0aGlzLmtleVNpemVJbkJ5dGVzID0gMzI7XG4gICAgICAgIHRoaXMubWluaW11bUNpcGhlclRleHRMZW5ndGggPSAxICsgMiAqIHRoaXMuYmxvY2tTaXplSW5CeXRlcyArIHRoaXMua2V5U2l6ZUluQnl0ZXM7XG4gICAgfVxuICAgIGVuY3J5cHQocGxhaW5UZXh0QnVmZmVyKSB7XG4gICAgICAgIGxldCBpdjtcbiAgICAgICAgLy8gY3JlYXRlIGluaXRpYWxpemF0aW9uIHZlY3RvclxuICAgICAgICBpZiAodGhpcy5lbmNyeXB0aW9uVHlwZSA9PT0gRW5jcnlwdGlvblR5cGUuUkFORE9NSVpFRCkge1xuICAgICAgICAgICAgaXYgPSByYW5kb21CeXRlcygxNik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBpdkhtYWMgPSBjcmVhdGVIbWFjKFwic2hhMjU2XCIsIHRoaXMuZGF0YUVuY3J5cHRpb25LZXkuaXZLZXlCdWZmZXIpO1xuICAgICAgICAgICAgaXZIbWFjLnVwZGF0ZShwbGFpblRleHRCdWZmZXIpO1xuICAgICAgICAgICAgaXYgPSBpdkhtYWMuZGlnZXN0KCkuc2xpY2UoMCwgdGhpcy5ibG9ja1NpemVJbkJ5dGVzKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBjcmVhdGUgY2lwaGVyIHRleHRcbiAgICAgICAgY29uc3QgY2lwaGVyID0gY3JlYXRlQ2lwaGVyaXYoXCJhZXMtMjU2LWNiY1wiLCB0aGlzLmRhdGFFbmNyeXB0aW9uS2V5LmVuY3J5cHRpb25LZXlCdWZmZXIsIGl2KTtcbiAgICAgICAgY29uc3QgY2lwaGVyVGV4dEJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW2NpcGhlci51cGRhdGUocGxhaW5UZXh0QnVmZmVyKSwgY2lwaGVyLmZpbmFsKCldKTtcbiAgICAgICAgY29uc3QgYXV0aFRhZ0J1ZmZlciA9IHRoaXMuZ2VuZXJhdGVBdXRoZW50aWNhdGlvblRhZyhpdiwgY2lwaGVyVGV4dEJ1ZmZlcik7XG4gICAgICAgIHJldHVybiBCdWZmZXIuY29uY2F0KFtCdWZmZXIuZnJvbShbdGhpcy5hbGdvVmVyc2lvbl0pLCBhdXRoVGFnQnVmZmVyLCBpdiwgY2lwaGVyVGV4dEJ1ZmZlcl0pO1xuICAgIH1cbiAgICBkZWNyeXB0KGNpcGhlclRleHRCdWZmZXIpIHtcbiAgICAgICAgaWYgKGNpcGhlclRleHRCdWZmZXIubGVuZ3RoIDwgdGhpcy5taW5pbXVtQ2lwaGVyVGV4dExlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjaXBoZXIgdGV4dCBsZW5ndGhcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNpcGhlclRleHRCdWZmZXJbMF0gIT09IHRoaXMuYWxnb1ZlcnNpb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY2lwaGVyIHRleHQgdmVyc2lvblwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhdXRoVGFnU3RhcnRJbmRleCA9IDE7XG4gICAgICAgIGNvbnN0IGF1dGhUYWdMZW5ndGggPSB0aGlzLmtleVNpemVJbkJ5dGVzO1xuICAgICAgICBjb25zdCBpdlN0YXJ0SW5kZXggPSBhdXRoVGFnU3RhcnRJbmRleCArIGF1dGhUYWdMZW5ndGg7XG4gICAgICAgIGNvbnN0IGl2TGVuZ3RoID0gdGhpcy5ibG9ja1NpemVJbkJ5dGVzO1xuICAgICAgICBjb25zdCBjaXBoZXJUZXh0U3RhcnRJbmRleCA9IGl2U3RhcnRJbmRleCArIGl2TGVuZ3RoO1xuICAgICAgICBjb25zdCBjaXBoZXJUZXh0TGVuZ3RoID0gY2lwaGVyVGV4dEJ1ZmZlci5sZW5ndGggLSBjaXBoZXJUZXh0U3RhcnRJbmRleDtcbiAgICAgICAgY29uc3QgYXV0aGVudGljYXRpb25UYWcgPSBjaXBoZXJUZXh0QnVmZmVyLnNsaWNlKGF1dGhUYWdTdGFydEluZGV4LCBhdXRoVGFnU3RhcnRJbmRleCArIGF1dGhUYWdMZW5ndGgpO1xuICAgICAgICBjb25zdCBpdiA9IGNpcGhlclRleHRCdWZmZXIuc2xpY2UoaXZTdGFydEluZGV4LCBpdlN0YXJ0SW5kZXggKyBpdkxlbmd0aCk7XG4gICAgICAgIGNvbnN0IGNpcGhlclRleHQgPSBjaXBoZXJUZXh0QnVmZmVyLnNsaWNlKGNpcGhlclRleHRTdGFydEluZGV4LCBjaXBoZXJUZXh0U3RhcnRJbmRleCArIGNpcGhlclRleHRMZW5ndGgpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlQXV0aGVudGljYXRpb25UYWcoYXV0aGVudGljYXRpb25UYWcsIGl2LCBjaXBoZXJUZXh0KTtcbiAgICAgICAgY29uc3QgZGVjaXBoZXIgPSBjcmVhdGVEZWNpcGhlcml2KFwiYWVzLTI1Ni1jYmNcIiwgdGhpcy5kYXRhRW5jcnlwdGlvbktleS5lbmNyeXB0aW9uS2V5QnVmZmVyLCBpdik7XG4gICAgICAgIGNvbnN0IGRlY3J5cHRlZCA9IGRlY2lwaGVyLnVwZGF0ZShjaXBoZXJUZXh0KTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gQnVmZmVyLmNvbmNhdChbZGVjcnlwdGVkLCBkZWNpcGhlci5maW5hbCgpXSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGdlbmVyYXRlQXV0aGVudGljYXRpb25UYWcoaXYsIGNpcGhlclRleHRCdWZmZXIpIHtcbiAgICAgICAgY29uc3QgaG1hYyA9IGNyZWF0ZUhtYWMoXCJzaGEyNTZcIiwgdGhpcy5kYXRhRW5jcnlwdGlvbktleS5tYWNLZXlCdWZmZXIpO1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuY29uY2F0KFt0aGlzLnZlcnNpb24sIGl2LCBjaXBoZXJUZXh0QnVmZmVyLCB0aGlzLnZlcnNpb25TaXplXSk7XG4gICAgICAgIHJldHVybiBobWFjLnVwZGF0ZShidWZmZXIpLmRpZ2VzdCgpO1xuICAgIH1cbiAgICB2YWxpZGF0ZUF1dGhlbnRpY2F0aW9uVGFnKGF1dGhlbnRpY2F0aW9uVGFnLCBpdiwgY2lwaGVyVGV4dCkge1xuICAgICAgICBjb25zdCBleHBlY3RlZEF1dGhUYWcgPSB0aGlzLmdlbmVyYXRlQXV0aGVudGljYXRpb25UYWcoaXYsIGNpcGhlclRleHQpO1xuICAgICAgICBpZiAoIWF1dGhlbnRpY2F0aW9uVGFnLmVxdWFscyhleHBlY3RlZEF1dGhUYWcpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGF1dGhlbnRpY2F0aW9uIHRhZ1wiKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFlYWRBZXMyNTZDYmNIbWFjU2hhMjU2QWxnb3JpdGhtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/AeadAes256CbcHmacSha256Algorithm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AeadAes256CbcHmacSha256Algorithm: () => (/* reexport safe */ _AeadAes256CbcHmacSha256Algorithm_js__WEBPACK_IMPORTED_MODULE_0__.AeadAes256CbcHmacSha256Algorithm)\n/* harmony export */ });\n/* harmony import */ var _AeadAes256CbcHmacSha256Algorithm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AeadAes256CbcHmacSha256Algorithm.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/AeadAes256CbcHmacSha256Algorithm.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0FlYWRBZXMyNTZDYmNIbWFjU2hhMjU2QWxnb3JpdGhtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUN5RjtBQUN6RiIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9BZWFkQWVzMjU2Q2JjSG1hY1NoYTI1NkFsZ29yaXRobS9pbmRleC5qcz80Y2EzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgQWVhZEFlczI1NkNiY0htYWNTaGEyNTZBbGdvcml0aG0gfSBmcm9tIFwiLi9BZWFkQWVzMjU2Q2JjSG1hY1NoYTI1NkFsZ29yaXRobS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ClientEncryptionKeyPropertiesCache.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ClientEncryptionKeyPropertiesCache.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientEncryptionKeyPropertiesCache: () => (/* binding */ ClientEncryptionKeyPropertiesCache)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The cache used to store the properties of the client encryption key\n * see {@link ClientEncryptionKeyProperties}\n * @hidden\n */\nclass ClientEncryptionKeyPropertiesCache {\n    // key is database rid + '/'+ clientEncryptionKeyId\n    clientEncryptionKeyPropertiesCache;\n    constructor() {\n        this.clientEncryptionKeyPropertiesCache = new Map();\n    }\n    get(key) {\n        return this.clientEncryptionKeyPropertiesCache.get(key);\n    }\n    set(key, clientEncryptionKeyProperties) {\n        this.clientEncryptionKeyPropertiesCache.set(key, clientEncryptionKeyProperties);\n    }\n}\n//# sourceMappingURL=ClientEncryptionKeyPropertiesCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NhY2hlL0NsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NhY2hlL0NsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGUuanM/YmExMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIGNhY2hlIHVzZWQgdG8gc3RvcmUgdGhlIHByb3BlcnRpZXMgb2YgdGhlIGNsaWVudCBlbmNyeXB0aW9uIGtleVxuICogc2VlIHtAbGluayBDbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllc31cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIENsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGUge1xuICAgIC8vIGtleSBpcyBkYXRhYmFzZSByaWQgKyAnLycrIGNsaWVudEVuY3J5cHRpb25LZXlJZFxuICAgIGNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGU7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXNDYWNoZSA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgZ2V0KGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllc0NhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICBzZXQoa2V5LCBjbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllcykge1xuICAgICAgICB0aGlzLmNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGUuc2V0KGtleSwgY2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ClientEncryptionKeyPropertiesCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/EncryptionSettingsCache.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Cache/EncryptionSettingsCache.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionSettingsCache: () => (/* binding */ EncryptionSettingsCache)\n/* harmony export */ });\n/* harmony import */ var _EncryptionSettings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EncryptionSettings.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettings.js\");\n/* harmony import */ var _EncryptionSettingForProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EncryptionSettingForProperty.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettingForProperty.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * The cache used to store encryption settings for a container.\n * see {@link EncryptionSettings}\n * @hidden\n */\nclass EncryptionSettingsCache {\n    // key is databaseRid + '/' + containerRid\n    cache;\n    constructor() {\n        this.cache = new Map();\n    }\n    async create(id, containerRid, partitionKeyPaths, clientEncryptionPolicy) {\n        const encryptionSettings = new _EncryptionSettings_js__WEBPACK_IMPORTED_MODULE_0__.EncryptionSettings(id, containerRid, partitionKeyPaths);\n        if (!clientEncryptionPolicy)\n            return;\n        for (const includedPath of clientEncryptionPolicy.includedPaths) {\n            const encryptionSettingForProperty = new _EncryptionSettingForProperty_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionSettingForProperty(includedPath);\n            encryptionSettings.pathsToEncrypt.push(includedPath.path);\n            encryptionSettings.setEncryptionSettingForProperty(includedPath.path, encryptionSettingForProperty);\n        }\n        this.set(id, encryptionSettings);\n        return encryptionSettings;\n    }\n    get(key) {\n        return this.cache.get(key);\n    }\n    set(key, encryptionSettings) {\n        this.cache.set(key, encryptionSettings);\n    }\n}\n//# sourceMappingURL=EncryptionSettingsCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NhY2hlL0VuY3J5cHRpb25TZXR0aW5nc0NhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDOEQ7QUFDb0I7QUFDbEY7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsc0VBQWtCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCwwRkFBNEI7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9DYWNoZS9FbmNyeXB0aW9uU2V0dGluZ3NDYWNoZS5qcz85N2Y1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgRW5jcnlwdGlvblNldHRpbmdzIH0gZnJvbSBcIi4uL0VuY3J5cHRpb25TZXR0aW5ncy5qc1wiO1xuaW1wb3J0IHsgRW5jcnlwdGlvblNldHRpbmdGb3JQcm9wZXJ0eSB9IGZyb20gXCIuLi9FbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnR5LmpzXCI7XG4vKipcbiAqIFRoZSBjYWNoZSB1c2VkIHRvIHN0b3JlIGVuY3J5cHRpb24gc2V0dGluZ3MgZm9yIGEgY29udGFpbmVyLlxuICogc2VlIHtAbGluayBFbmNyeXB0aW9uU2V0dGluZ3N9XG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBjbGFzcyBFbmNyeXB0aW9uU2V0dGluZ3NDYWNoZSB7XG4gICAgLy8ga2V5IGlzIGRhdGFiYXNlUmlkICsgJy8nICsgY29udGFpbmVyUmlkXG4gICAgY2FjaGU7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIGFzeW5jIGNyZWF0ZShpZCwgY29udGFpbmVyUmlkLCBwYXJ0aXRpb25LZXlQYXRocywgY2xpZW50RW5jcnlwdGlvblBvbGljeSkge1xuICAgICAgICBjb25zdCBlbmNyeXB0aW9uU2V0dGluZ3MgPSBuZXcgRW5jcnlwdGlvblNldHRpbmdzKGlkLCBjb250YWluZXJSaWQsIHBhcnRpdGlvbktleVBhdGhzKTtcbiAgICAgICAgaWYgKCFjbGllbnRFbmNyeXB0aW9uUG9saWN5KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBmb3IgKGNvbnN0IGluY2x1ZGVkUGF0aCBvZiBjbGllbnRFbmNyeXB0aW9uUG9saWN5LmluY2x1ZGVkUGF0aHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGVuY3J5cHRpb25TZXR0aW5nRm9yUHJvcGVydHkgPSBuZXcgRW5jcnlwdGlvblNldHRpbmdGb3JQcm9wZXJ0eShpbmNsdWRlZFBhdGgpO1xuICAgICAgICAgICAgZW5jcnlwdGlvblNldHRpbmdzLnBhdGhzVG9FbmNyeXB0LnB1c2goaW5jbHVkZWRQYXRoLnBhdGgpO1xuICAgICAgICAgICAgZW5jcnlwdGlvblNldHRpbmdzLnNldEVuY3J5cHRpb25TZXR0aW5nRm9yUHJvcGVydHkoaW5jbHVkZWRQYXRoLnBhdGgsIGVuY3J5cHRpb25TZXR0aW5nRm9yUHJvcGVydHkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0KGlkLCBlbmNyeXB0aW9uU2V0dGluZ3MpO1xuICAgICAgICByZXR1cm4gZW5jcnlwdGlvblNldHRpbmdzO1xuICAgIH1cbiAgICBnZXQoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICBzZXQoa2V5LCBlbmNyeXB0aW9uU2V0dGluZ3MpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoa2V5LCBlbmNyeXB0aW9uU2V0dGluZ3MpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVuY3J5cHRpb25TZXR0aW5nc0NhY2hlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/EncryptionSettingsCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/KeyEncryptionKeyCache.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Cache/KeyEncryptionKeyCache.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyEncryptionKeyCache: () => (/* binding */ KeyEncryptionKeyCache)\n/* harmony export */ });\n/* harmony import */ var _KeyEncryptionKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../KeyEncryptionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/KeyEncryptionKey.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The cache used to store the key encryption keys.\n * see {@link KeyEncryptionKey}\n * @hidden\n */\nclass KeyEncryptionKeyCache {\n    // key is JSON.stringify([name, path])\n    cache;\n    constructor() {\n        this.cache = new Map();\n    }\n    getOrCreate(name, path, keyStoreProvider) {\n        const key = JSON.stringify([name, path]);\n        let keyEncryptionKey = this.get(key);\n        if (!keyEncryptionKey) {\n            keyEncryptionKey = new _KeyEncryptionKey_js__WEBPACK_IMPORTED_MODULE_0__.KeyEncryptionKey(name, path, keyStoreProvider);\n            this.set(key, keyEncryptionKey);\n        }\n        return keyEncryptionKey;\n    }\n    get(key) {\n        return this.cache.get(key);\n    }\n    set(key, keyEncryptionKey) {\n        this.cache.set(key, keyEncryptionKey);\n    }\n}\n//# sourceMappingURL=KeyEncryptionKeyCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NhY2hlL0tleUVuY3J5cHRpb25LZXlDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDMEQ7QUFDMUQ7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0VBQWdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9DYWNoZS9LZXlFbmNyeXB0aW9uS2V5Q2FjaGUuanM/N2FjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEtleUVuY3J5cHRpb25LZXkgfSBmcm9tIFwiLi4vS2V5RW5jcnlwdGlvbktleS5qc1wiO1xuLyoqXG4gKiBUaGUgY2FjaGUgdXNlZCB0byBzdG9yZSB0aGUga2V5IGVuY3J5cHRpb24ga2V5cy5cbiAqIHNlZSB7QGxpbmsgS2V5RW5jcnlwdGlvbktleX1cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIEtleUVuY3J5cHRpb25LZXlDYWNoZSB7XG4gICAgLy8ga2V5IGlzIEpTT04uc3RyaW5naWZ5KFtuYW1lLCBwYXRoXSlcbiAgICBjYWNoZTtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jYWNoZSA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgZ2V0T3JDcmVhdGUobmFtZSwgcGF0aCwga2V5U3RvcmVQcm92aWRlcikge1xuICAgICAgICBjb25zdCBrZXkgPSBKU09OLnN0cmluZ2lmeShbbmFtZSwgcGF0aF0pO1xuICAgICAgICBsZXQga2V5RW5jcnlwdGlvbktleSA9IHRoaXMuZ2V0KGtleSk7XG4gICAgICAgIGlmICgha2V5RW5jcnlwdGlvbktleSkge1xuICAgICAgICAgICAga2V5RW5jcnlwdGlvbktleSA9IG5ldyBLZXlFbmNyeXB0aW9uS2V5KG5hbWUsIHBhdGgsIGtleVN0b3JlUHJvdmlkZXIpO1xuICAgICAgICAgICAgdGhpcy5zZXQoa2V5LCBrZXlFbmNyeXB0aW9uS2V5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ga2V5RW5jcnlwdGlvbktleTtcbiAgICB9XG4gICAgZ2V0KGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWNoZS5nZXQoa2V5KTtcbiAgICB9XG4gICAgc2V0KGtleSwga2V5RW5jcnlwdGlvbktleSkge1xuICAgICAgICB0aGlzLmNhY2hlLnNldChrZXksIGtleUVuY3J5cHRpb25LZXkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtleUVuY3J5cHRpb25LZXlDYWNoZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/KeyEncryptionKeyCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ProtectedDataEncryptionKeyCache.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ProtectedDataEncryptionKeyCache.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtectedDataEncryptionKeyCache: () => (/* binding */ ProtectedDataEncryptionKeyCache)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var _EncryptionKey_ProtectedDataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EncryptionKey/ProtectedDataEncryptionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/ProtectedDataEncryptionKey.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * The cache used to store the protected data encryption key.\n * see {@link ProtectedDataEncryptionKey}\n * @hidden\n */\nclass ProtectedDataEncryptionKeyCache {\n    cacheTimeToLive;\n    // key is JSON.stringify([encryptionKeyId, keyEncryptionKey.name, keyEncryptionKey.path, encryptedValue.toString(\"hex\")])\n    cache;\n    // interval for clear cache to run\n    cacheRefresher;\n    constructor(cacheTimeToLive) {\n        this.cacheTimeToLive = cacheTimeToLive;\n        this.cache = new Map();\n        this.clearCacheOnTtlExpiry();\n    }\n    get(key) {\n        if (!this.cache.has(key)) {\n            return undefined;\n        }\n        return this.cache.get(key)[1];\n    }\n    set(key, protectedDataEncryptionKey) {\n        if (this.cacheTimeToLive === 0) {\n            return;\n        }\n        this.cache.set(key, [new Date(), protectedDataEncryptionKey]);\n    }\n    async clearCacheOnTtlExpiry() {\n        this.cacheRefresher = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_3__.startBackgroundTask)(async () => {\n            const now = new Date();\n            for (const key of this.cache.keys()) {\n                if (now.getTime() - this.cache.get(key)[0].getTime() > this.cacheTimeToLive) {\n                    this.cache.delete(key);\n                }\n            }\n        }, _common_index_js__WEBPACK_IMPORTED_MODULE_2__.Constants.EncryptionCacheRefreshIntervalInMs);\n    }\n    async createProtectedDataEncryptionKey(name, keyEncryptionKey, encryptedValue) {\n        let rawKey;\n        let encryptedKey;\n        if (encryptedValue) {\n            rawKey = await keyEncryptionKey.unwrapEncryptionKey(encryptedValue);\n            encryptedKey = encryptedValue;\n        }\n        else {\n            rawKey = this.generateColumnEncryptionKey();\n            encryptedKey = await keyEncryptionKey.wrapEncryptionKey(rawKey);\n        }\n        const newKey = new _EncryptionKey_ProtectedDataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_1__.ProtectedDataEncryptionKey(name, keyEncryptionKey, rawKey, encryptedKey);\n        if (this.cacheTimeToLive !== 0) {\n            const key = JSON.stringify([\n                name,\n                keyEncryptionKey.name,\n                keyEncryptionKey.path,\n                encryptedKey.toString(\"hex\"),\n            ]);\n            this.set(key, newKey);\n        }\n        return newKey;\n    }\n    async getOrCreate(name, keyEncryptionKey, encryptedValue, forceRefresh) {\n        const encryptedValueBuffer = encryptedValue ? Buffer.from(encryptedValue) : undefined;\n        if (this.cacheTimeToLive === 0 || forceRefresh) {\n            return this.createProtectedDataEncryptionKey(name, keyEncryptionKey, encryptedValueBuffer);\n        }\n        if (encryptedValueBuffer) {\n            const key = JSON.stringify([\n                name,\n                keyEncryptionKey.name,\n                keyEncryptionKey.path,\n                encryptedValueBuffer.toString(\"hex\"),\n            ]);\n            const protectedDataEncryptionKey = this.get(key);\n            if (protectedDataEncryptionKey) {\n                return protectedDataEncryptionKey;\n            }\n        }\n        return this.createProtectedDataEncryptionKey(name, keyEncryptionKey, encryptedValueBuffer);\n    }\n    generateColumnEncryptionKey() {\n        return (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(32);\n    }\n}\n//# sourceMappingURL=ProtectedDataEncryptionKeyCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NhY2hlL1Byb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5Q2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzBDO0FBQ2tEO0FBQzFDO0FBQ1E7QUFDMUQ7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1FQUFtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLEVBQUUsdURBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG9HQUEwQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0RBQVc7QUFDMUI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NhY2hlL1Byb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5Q2FjaGUuanM/Y2M2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSBcIm5vZGU6Y3J5cHRvXCI7XG5pbXBvcnQgeyBQcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleSB9IGZyb20gXCIuLi9FbmNyeXB0aW9uS2V5L1Byb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5LmpzXCI7XG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBzdGFydEJhY2tncm91bmRUYXNrIH0gZnJvbSBcIi4uLy4uL3V0aWxzL3RpbWUuanNcIjtcbi8qKlxuICogVGhlIGNhY2hlIHVzZWQgdG8gc3RvcmUgdGhlIHByb3RlY3RlZCBkYXRhIGVuY3J5cHRpb24ga2V5LlxuICogc2VlIHtAbGluayBQcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleX1cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5Q2FjaGUge1xuICAgIGNhY2hlVGltZVRvTGl2ZTtcbiAgICAvLyBrZXkgaXMgSlNPTi5zdHJpbmdpZnkoW2VuY3J5cHRpb25LZXlJZCwga2V5RW5jcnlwdGlvbktleS5uYW1lLCBrZXlFbmNyeXB0aW9uS2V5LnBhdGgsIGVuY3J5cHRlZFZhbHVlLnRvU3RyaW5nKFwiaGV4XCIpXSlcbiAgICBjYWNoZTtcbiAgICAvLyBpbnRlcnZhbCBmb3IgY2xlYXIgY2FjaGUgdG8gcnVuXG4gICAgY2FjaGVSZWZyZXNoZXI7XG4gICAgY29uc3RydWN0b3IoY2FjaGVUaW1lVG9MaXZlKSB7XG4gICAgICAgIHRoaXMuY2FjaGVUaW1lVG9MaXZlID0gY2FjaGVUaW1lVG9MaXZlO1xuICAgICAgICB0aGlzLmNhY2hlID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLmNsZWFyQ2FjaGVPblR0bEV4cGlyeSgpO1xuICAgIH1cbiAgICBnZXQoa2V5KSB7XG4gICAgICAgIGlmICghdGhpcy5jYWNoZS5oYXMoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jYWNoZS5nZXQoa2V5KVsxXTtcbiAgICB9XG4gICAgc2V0KGtleSwgcHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXkpIHtcbiAgICAgICAgaWYgKHRoaXMuY2FjaGVUaW1lVG9MaXZlID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoa2V5LCBbbmV3IERhdGUoKSwgcHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXldKTtcbiAgICB9XG4gICAgYXN5bmMgY2xlYXJDYWNoZU9uVHRsRXhwaXJ5KCkge1xuICAgICAgICB0aGlzLmNhY2hlUmVmcmVzaGVyID0gc3RhcnRCYWNrZ3JvdW5kVGFzayhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgdGhpcy5jYWNoZS5rZXlzKCkpIHtcbiAgICAgICAgICAgICAgICBpZiAobm93LmdldFRpbWUoKSAtIHRoaXMuY2FjaGUuZ2V0KGtleSlbMF0uZ2V0VGltZSgpID4gdGhpcy5jYWNoZVRpbWVUb0xpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWNoZS5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIENvbnN0YW50cy5FbmNyeXB0aW9uQ2FjaGVSZWZyZXNoSW50ZXJ2YWxJbk1zKTtcbiAgICB9XG4gICAgYXN5bmMgY3JlYXRlUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXkobmFtZSwga2V5RW5jcnlwdGlvbktleSwgZW5jcnlwdGVkVmFsdWUpIHtcbiAgICAgICAgbGV0IHJhd0tleTtcbiAgICAgICAgbGV0IGVuY3J5cHRlZEtleTtcbiAgICAgICAgaWYgKGVuY3J5cHRlZFZhbHVlKSB7XG4gICAgICAgICAgICByYXdLZXkgPSBhd2FpdCBrZXlFbmNyeXB0aW9uS2V5LnVud3JhcEVuY3J5cHRpb25LZXkoZW5jcnlwdGVkVmFsdWUpO1xuICAgICAgICAgICAgZW5jcnlwdGVkS2V5ID0gZW5jcnlwdGVkVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByYXdLZXkgPSB0aGlzLmdlbmVyYXRlQ29sdW1uRW5jcnlwdGlvbktleSgpO1xuICAgICAgICAgICAgZW5jcnlwdGVkS2V5ID0gYXdhaXQga2V5RW5jcnlwdGlvbktleS53cmFwRW5jcnlwdGlvbktleShyYXdLZXkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG5ld0tleSA9IG5ldyBQcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleShuYW1lLCBrZXlFbmNyeXB0aW9uS2V5LCByYXdLZXksIGVuY3J5cHRlZEtleSk7XG4gICAgICAgIGlmICh0aGlzLmNhY2hlVGltZVRvTGl2ZSAhPT0gMCkge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gSlNPTi5zdHJpbmdpZnkoW1xuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAga2V5RW5jcnlwdGlvbktleS5uYW1lLFxuICAgICAgICAgICAgICAgIGtleUVuY3J5cHRpb25LZXkucGF0aCxcbiAgICAgICAgICAgICAgICBlbmNyeXB0ZWRLZXkudG9TdHJpbmcoXCJoZXhcIiksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIHRoaXMuc2V0KGtleSwgbmV3S2V5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3S2V5O1xuICAgIH1cbiAgICBhc3luYyBnZXRPckNyZWF0ZShuYW1lLCBrZXlFbmNyeXB0aW9uS2V5LCBlbmNyeXB0ZWRWYWx1ZSwgZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgIGNvbnN0IGVuY3J5cHRlZFZhbHVlQnVmZmVyID0gZW5jcnlwdGVkVmFsdWUgPyBCdWZmZXIuZnJvbShlbmNyeXB0ZWRWYWx1ZSkgOiB1bmRlZmluZWQ7XG4gICAgICAgIGlmICh0aGlzLmNhY2hlVGltZVRvTGl2ZSA9PT0gMCB8fCBmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5KG5hbWUsIGtleUVuY3J5cHRpb25LZXksIGVuY3J5cHRlZFZhbHVlQnVmZmVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZW5jcnlwdGVkVmFsdWVCdWZmZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IEpTT04uc3RyaW5naWZ5KFtcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIGtleUVuY3J5cHRpb25LZXkubmFtZSxcbiAgICAgICAgICAgICAgICBrZXlFbmNyeXB0aW9uS2V5LnBhdGgsXG4gICAgICAgICAgICAgICAgZW5jcnlwdGVkVmFsdWVCdWZmZXIudG9TdHJpbmcoXCJoZXhcIiksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGNvbnN0IHByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5ID0gdGhpcy5nZXQoa2V5KTtcbiAgICAgICAgICAgIGlmIChwcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVQcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleShuYW1lLCBrZXlFbmNyeXB0aW9uS2V5LCBlbmNyeXB0ZWRWYWx1ZUJ1ZmZlcik7XG4gICAgfVxuICAgIGdlbmVyYXRlQ29sdW1uRW5jcnlwdGlvbktleSgpIHtcbiAgICAgICAgcmV0dXJuIHJhbmRvbUJ5dGVzKDMyKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleUNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ProtectedDataEncryptionKeyCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/ClientEncryptionKeyResponse.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/ClientEncryptionKeyResponse.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientEncryptionKeyResponse: () => (/* binding */ ClientEncryptionKeyResponse)\n/* harmony export */ });\n/* harmony import */ var _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../request/ResourceResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** Response object for ClientEncryptionKey operations */\nclass ClientEncryptionKeyResponse extends _request_ResourceResponse_js__WEBPACK_IMPORTED_MODULE_0__.ResourceResponse {\n    constructor(resource, headers, statusCode, clientEncryptionKeyProperties, diagnostics) {\n        super(resource, headers, statusCode, diagnostics);\n        this.clientEncryptionKeyProperties = clientEncryptionKeyProperties;\n    }\n    /** Properties of the client encryption key */\n    clientEncryptionKeyProperties;\n}\n//# sourceMappingURL=ClientEncryptionKeyResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NsaWVudEVuY3J5cHRpb25LZXkvQ2xpZW50RW5jcnlwdGlvbktleVJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNxRTtBQUNyRTtBQUNPLDBDQUEwQywwRUFBZ0I7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9DbGllbnRFbmNyeXB0aW9uS2V5L0NsaWVudEVuY3J5cHRpb25LZXlSZXNwb25zZS5qcz83MmE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgUmVzb3VyY2VSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L1Jlc291cmNlUmVzcG9uc2UuanNcIjtcbi8qKiBSZXNwb25zZSBvYmplY3QgZm9yIENsaWVudEVuY3J5cHRpb25LZXkgb3BlcmF0aW9ucyAqL1xuZXhwb3J0IGNsYXNzIENsaWVudEVuY3J5cHRpb25LZXlSZXNwb25zZSBleHRlbmRzIFJlc291cmNlUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlc291cmNlLCBoZWFkZXJzLCBzdGF0dXNDb2RlLCBjbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllcywgZGlhZ25vc3RpY3MpIHtcbiAgICAgICAgc3VwZXIocmVzb3VyY2UsIGhlYWRlcnMsIHN0YXR1c0NvZGUsIGRpYWdub3N0aWNzKTtcbiAgICAgICAgdGhpcy5jbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllcyA9IGNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzO1xuICAgIH1cbiAgICAvKiogUHJvcGVydGllcyBvZiB0aGUgY2xpZW50IGVuY3J5cHRpb24ga2V5ICovXG4gICAgY2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRFbmNyeXB0aW9uS2V5UmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/ClientEncryptionKeyResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientEncryptionKeyResponse: () => (/* reexport safe */ _ClientEncryptionKeyResponse_js__WEBPACK_IMPORTED_MODULE_0__.ClientEncryptionKeyResponse)\n/* harmony export */ });\n/* harmony import */ var _ClientEncryptionKeyResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientEncryptionKeyResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/ClientEncryptionKeyResponse.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NsaWVudEVuY3J5cHRpb25LZXkvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQytFO0FBQy9FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0NsaWVudEVuY3J5cHRpb25LZXkvaW5kZXguanM/MTQ2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IENsaWVudEVuY3J5cHRpb25LZXlSZXNwb25zZSB9IGZyb20gXCIuL0NsaWVudEVuY3J5cHRpb25LZXlSZXNwb25zZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/CosmosEncryptedNumber.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/CosmosEncryptedNumber.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosEncryptedNumberType: () => (/* binding */ CosmosEncryptedNumberType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * This enum represents the type of number in the Cosmos DB SDK.\n */\nvar CosmosEncryptedNumberType;\n(function (CosmosEncryptedNumberType) {\n    /**\n     * Represents an integer number.\n     */\n    CosmosEncryptedNumberType[\"Integer\"] = \"Integer\";\n    /**\n     * Represents a floating-point number.\n     */\n    CosmosEncryptedNumberType[\"Float\"] = \"Float\";\n})(CosmosEncryptedNumberType || (CosmosEncryptedNumberType = {}));\n//# sourceMappingURL=CosmosEncryptedNumber.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0Nvc21vc0VuY3J5cHRlZE51bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4REFBOEQ7QUFDL0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vQ29zbW9zRW5jcnlwdGVkTnVtYmVyLmpzPzczYTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIFRoaXMgZW51bSByZXByZXNlbnRzIHRoZSB0eXBlIG9mIG51bWJlciBpbiB0aGUgQ29zbW9zIERCIFNESy5cbiAqL1xuZXhwb3J0IHZhciBDb3Ntb3NFbmNyeXB0ZWROdW1iZXJUeXBlO1xuKGZ1bmN0aW9uIChDb3Ntb3NFbmNyeXB0ZWROdW1iZXJUeXBlKSB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhbiBpbnRlZ2VyIG51bWJlci5cbiAgICAgKi9cbiAgICBDb3Ntb3NFbmNyeXB0ZWROdW1iZXJUeXBlW1wiSW50ZWdlclwiXSA9IFwiSW50ZWdlclwiO1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgYSBmbG9hdGluZy1wb2ludCBudW1iZXIuXG4gICAgICovXG4gICAgQ29zbW9zRW5jcnlwdGVkTnVtYmVyVHlwZVtcIkZsb2F0XCJdID0gXCJGbG9hdFwiO1xufSkoQ29zbW9zRW5jcnlwdGVkTnVtYmVyVHlwZSB8fCAoQ29zbW9zRW5jcnlwdGVkTnVtYmVyVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db3Ntb3NFbmNyeXB0ZWROdW1iZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/CosmosEncryptedNumber.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionItemQueryIterator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionItemQueryIterator.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionItemQueryIterator: () => (/* binding */ EncryptionItemQueryIterator)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n/**\n * @internal\n * Provides the iterator for handling encrypted items in the Azure Cosmos DB database service.\n * extends @see {@link QueryIterator}\n */\nclass EncryptionItemQueryIterator extends _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__.QueryIterator {\n    container;\n    encryptionClientContext;\n    encryptionOptions;\n    constructor(clientContext, query, options, fetchFunctions, container) {\n        super(clientContext, query, options, fetchFunctions, container.url, _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item);\n        this.container = container;\n        this.encryptionClientContext = clientContext;\n        this.encryptionOptions = options;\n    }\n    /**\n     * Gets an async iterator that will yield results until completion.\n     */\n    async *getAsyncIterator() {\n        let response;\n        const diagnosticNode = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeInternal(this.encryptionClientContext.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeType.CLIENT_REQUEST_NODE, null);\n        try {\n            response = yield* _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__.QueryIterator.prototype.getAsyncIteratorInternal.call(this, diagnosticNode);\n        }\n        catch (error) {\n            await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n        }\n        if (response?.resources?.length > 0) {\n            let count = 0;\n            diagnosticNode.beginEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n            for (let resource of response.resources) {\n                const { body, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(resource);\n                resource = body;\n                count += propertiesDecryptedCount;\n            }\n            diagnosticNode.endEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, count);\n        }\n        yield response;\n    }\n    /**\n     * Fetch all pages for the query and return a single FeedResponse.\n     */\n    async fetchAll() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.withDiagnostics)(async (diagnosticNode) => {\n            let response;\n            try {\n                response = await _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__.QueryIterator.prototype.fetchAllInternal.call(this, diagnosticNode);\n            }\n            catch (error) {\n                await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n            }\n            if (response?.resources?.length > 0) {\n                let count = 0;\n                diagnosticNode.beginEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n                for (let resource of response.resources) {\n                    const { body, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(resource);\n                    resource = body;\n                    count += propertiesDecryptedCount;\n                }\n                diagnosticNode.endEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, count);\n            }\n            return response;\n        }, this.encryptionClientContext);\n    }\n    /**\n     * Retrieve the next batch from the feed.\n     */\n    async fetchNext() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.withDiagnostics)(async (diagnosticNode) => {\n            let response;\n            try {\n                response = await _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__.QueryIterator.prototype.fetchNextInternal.call(this, diagnosticNode);\n            }\n            catch (error) {\n                await this.container.throwIfRequestNeedsARetryPostPolicyRefresh(error);\n            }\n            if (response?.resources?.length > 0) {\n                let count = 0;\n                diagnosticNode.beginEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation);\n                for (let resource of response.resources) {\n                    const { body, propertiesDecryptedCount } = await this.container.encryptionProcessor.decrypt(resource);\n                    resource = body;\n                    count += propertiesDecryptedCount;\n                }\n                diagnosticNode.endEncryptionDiagnostics(_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Encryption.DiagnosticsDecryptOperation, count);\n            }\n            return response;\n        }, this.encryptionClientContext);\n    }\n    /**\n     * @internal\n     */\n    async init(diagnosticNode) {\n        // Ensure encryption is initialized and set rid in options\n        await this.container.checkAndInitializeEncryption();\n        this.encryptionOptions.containerRid = this.container._rid;\n        await _queryIterator_js__WEBPACK_IMPORTED_MODULE_2__.QueryIterator.prototype.init.call(this, diagnosticNode);\n    }\n}\n//# sourceMappingURL=EncryptionItemQueryIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25JdGVtUXVlcnlJdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDaUU7QUFDc0M7QUFDbkQ7QUFDTTtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDTywwQ0FBMEMsNERBQWE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsOERBQVk7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDBGQUFzQiwrQ0FBK0Msc0ZBQWtCO0FBQzFIO0FBQ0EsOEJBQThCLDREQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCwyREFBUztBQUMvRDtBQUNBLHdCQUF3QixpQ0FBaUM7QUFDekQ7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDJEQUFTO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUNBQWlDLDREQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCwyREFBUztBQUNuRTtBQUNBLDRCQUE0QixpQ0FBaUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELDJEQUFTO0FBQ2pFO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0VBQWU7QUFDOUI7QUFDQTtBQUNBLGlDQUFpQyw0REFBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsMkRBQVM7QUFDbkU7QUFDQSw0QkFBNEIsaUNBQWlDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCwyREFBUztBQUNqRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDREQUFhO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9FbmNyeXB0aW9uSXRlbVF1ZXJ5SXRlcmF0b3IuanM/YTJkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvbnN0YW50cywgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uL2NvbW1vbi9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IERpYWdub3N0aWNOb2RlSW50ZXJuYWwsIERpYWdub3N0aWNOb2RlVHlwZSwgfSBmcm9tIFwiLi4vZGlhZ25vc3RpY3MvRGlhZ25vc3RpY05vZGVJbnRlcm5hbC5qc1wiO1xuaW1wb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuLi9xdWVyeUl0ZXJhdG9yLmpzXCI7XG5pbXBvcnQgeyB3aXRoRGlhZ25vc3RpY3MgfSBmcm9tIFwiLi4vdXRpbHMvZGlhZ25vc3RpY3MuanNcIjtcbi8qKlxuICogQGludGVybmFsXG4gKiBQcm92aWRlcyB0aGUgaXRlcmF0b3IgZm9yIGhhbmRsaW5nIGVuY3J5cHRlZCBpdGVtcyBpbiB0aGUgQXp1cmUgQ29zbW9zIERCIGRhdGFiYXNlIHNlcnZpY2UuXG4gKiBleHRlbmRzIEBzZWUge0BsaW5rIFF1ZXJ5SXRlcmF0b3J9XG4gKi9cbmV4cG9ydCBjbGFzcyBFbmNyeXB0aW9uSXRlbVF1ZXJ5SXRlcmF0b3IgZXh0ZW5kcyBRdWVyeUl0ZXJhdG9yIHtcbiAgICBjb250YWluZXI7XG4gICAgZW5jcnlwdGlvbkNsaWVudENvbnRleHQ7XG4gICAgZW5jcnlwdGlvbk9wdGlvbnM7XG4gICAgY29uc3RydWN0b3IoY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGZldGNoRnVuY3Rpb25zLCBjb250YWluZXIpIHtcbiAgICAgICAgc3VwZXIoY2xpZW50Q29udGV4dCwgcXVlcnksIG9wdGlvbnMsIGZldGNoRnVuY3Rpb25zLCBjb250YWluZXIudXJsLCBSZXNvdXJjZVR5cGUuaXRlbSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLmVuY3J5cHRpb25DbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICAgICAgdGhpcy5lbmNyeXB0aW9uT3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYW4gYXN5bmMgaXRlcmF0b3IgdGhhdCB3aWxsIHlpZWxkIHJlc3VsdHMgdW50aWwgY29tcGxldGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyAqZ2V0QXN5bmNJdGVyYXRvcigpIHtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICBjb25zdCBkaWFnbm9zdGljTm9kZSA9IG5ldyBEaWFnbm9zdGljTm9kZUludGVybmFsKHRoaXMuZW5jcnlwdGlvbkNsaWVudENvbnRleHQuZGlhZ25vc3RpY0xldmVsLCBEaWFnbm9zdGljTm9kZVR5cGUuQ0xJRU5UX1JFUVVFU1RfTk9ERSwgbnVsbCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IHlpZWxkKiBRdWVyeUl0ZXJhdG9yLnByb3RvdHlwZS5nZXRBc3luY0l0ZXJhdG9ySW50ZXJuYWwuY2FsbCh0aGlzLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmNvbnRhaW5lci50aHJvd0lmUmVxdWVzdE5lZWRzQVJldHJ5UG9zdFBvbGljeVJlZnJlc2goZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXNwb25zZT8ucmVzb3VyY2VzPy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuYmVnaW5FbmNyeXB0aW9uRGlhZ25vc3RpY3MoQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEZWNyeXB0T3BlcmF0aW9uKTtcbiAgICAgICAgICAgIGZvciAobGV0IHJlc291cmNlIG9mIHJlc3BvbnNlLnJlc291cmNlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYm9keSwgcHJvcGVydGllc0RlY3J5cHRlZENvdW50IH0gPSBhd2FpdCB0aGlzLmNvbnRhaW5lci5lbmNyeXB0aW9uUHJvY2Vzc29yLmRlY3J5cHQocmVzb3VyY2UpO1xuICAgICAgICAgICAgICAgIHJlc291cmNlID0gYm9keTtcbiAgICAgICAgICAgICAgICBjb3VudCArPSBwcm9wZXJ0aWVzRGVjcnlwdGVkQ291bnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5lbmRFbmNyeXB0aW9uRGlhZ25vc3RpY3MoQ29uc3RhbnRzLkVuY3J5cHRpb24uRGlhZ25vc3RpY3NEZWNyeXB0T3BlcmF0aW9uLCBjb3VudCk7XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQgcmVzcG9uc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZldGNoIGFsbCBwYWdlcyBmb3IgdGhlIHF1ZXJ5IGFuZCByZXR1cm4gYSBzaW5nbGUgRmVlZFJlc3BvbnNlLlxuICAgICAqL1xuICAgIGFzeW5jIGZldGNoQWxsKCkge1xuICAgICAgICByZXR1cm4gd2l0aERpYWdub3N0aWNzKGFzeW5jIChkaWFnbm9zdGljTm9kZSkgPT4ge1xuICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IFF1ZXJ5SXRlcmF0b3IucHJvdG90eXBlLmZldGNoQWxsSW50ZXJuYWwuY2FsbCh0aGlzLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmNvbnRhaW5lci50aHJvd0lmUmVxdWVzdE5lZWRzQVJldHJ5UG9zdFBvbGljeVJlZnJlc2goZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlPy5yZXNvdXJjZXM/Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmJlZ2luRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRGVjcnlwdE9wZXJhdGlvbik7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgcmVzb3VyY2Ugb2YgcmVzcG9uc2UucmVzb3VyY2VzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgYm9keSwgcHJvcGVydGllc0RlY3J5cHRlZENvdW50IH0gPSBhd2FpdCB0aGlzLmNvbnRhaW5lci5lbmNyeXB0aW9uUHJvY2Vzc29yLmRlY3J5cHQocmVzb3VyY2UpO1xuICAgICAgICAgICAgICAgICAgICByZXNvdXJjZSA9IGJvZHk7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50ICs9IHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRGVjcnlwdE9wZXJhdGlvbiwgY291bnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LCB0aGlzLmVuY3J5cHRpb25DbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgdGhlIG5leHQgYmF0Y2ggZnJvbSB0aGUgZmVlZC5cbiAgICAgKi9cbiAgICBhc3luYyBmZXRjaE5leHQoKSB7XG4gICAgICAgIHJldHVybiB3aXRoRGlhZ25vc3RpY3MoYXN5bmMgKGRpYWdub3N0aWNOb2RlKSA9PiB7XG4gICAgICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgUXVlcnlJdGVyYXRvci5wcm90b3R5cGUuZmV0Y2hOZXh0SW50ZXJuYWwuY2FsbCh0aGlzLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmNvbnRhaW5lci50aHJvd0lmUmVxdWVzdE5lZWRzQVJldHJ5UG9zdFBvbGljeVJlZnJlc2goZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlPy5yZXNvdXJjZXM/Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmJlZ2luRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRGVjcnlwdE9wZXJhdGlvbik7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgcmVzb3VyY2Ugb2YgcmVzcG9uc2UucmVzb3VyY2VzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgYm9keSwgcHJvcGVydGllc0RlY3J5cHRlZENvdW50IH0gPSBhd2FpdCB0aGlzLmNvbnRhaW5lci5lbmNyeXB0aW9uUHJvY2Vzc29yLmRlY3J5cHQocmVzb3VyY2UpO1xuICAgICAgICAgICAgICAgICAgICByZXNvdXJjZSA9IGJvZHk7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50ICs9IHByb3BlcnRpZXNEZWNyeXB0ZWRDb3VudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGlhZ25vc3RpY05vZGUuZW5kRW5jcnlwdGlvbkRpYWdub3N0aWNzKENvbnN0YW50cy5FbmNyeXB0aW9uLkRpYWdub3N0aWNzRGVjcnlwdE9wZXJhdGlvbiwgY291bnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LCB0aGlzLmVuY3J5cHRpb25DbGllbnRDb250ZXh0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgaW5pdChkaWFnbm9zdGljTm9kZSkge1xuICAgICAgICAvLyBFbnN1cmUgZW5jcnlwdGlvbiBpcyBpbml0aWFsaXplZCBhbmQgc2V0IHJpZCBpbiBvcHRpb25zXG4gICAgICAgIGF3YWl0IHRoaXMuY29udGFpbmVyLmNoZWNrQW5kSW5pdGlhbGl6ZUVuY3J5cHRpb24oKTtcbiAgICAgICAgdGhpcy5lbmNyeXB0aW9uT3B0aW9ucy5jb250YWluZXJSaWQgPSB0aGlzLmNvbnRhaW5lci5fcmlkO1xuICAgICAgICBhd2FpdCBRdWVyeUl0ZXJhdG9yLnByb3RvdHlwZS5pbml0LmNhbGwodGhpcywgZGlhZ25vc3RpY05vZGUpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVuY3J5cHRpb25JdGVtUXVlcnlJdGVyYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionItemQueryIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/AzureKeyVaultEncryptionKeyResolver.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/AzureKeyVaultEncryptionKeyResolver.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyVaultEncryptionKeyResolver: () => (/* binding */ AzureKeyVaultEncryptionKeyResolver)\n/* harmony export */ });\n/* harmony import */ var _azure_keyvault_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/keyvault-keys */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Implementation of EncryptionKeyResolver that uses Azure Key Vault for customer managed keys.\n */\nclass AzureKeyVaultEncryptionKeyResolver {\n    credentials;\n    constructor(credentials) {\n        this.credentials = credentials;\n    }\n    /**\n     * Name of the resolver to use for client side encryption.\n     * Currently only AzureKeyVault implementation is supported.\n     */\n    encryptionKeyResolverName = _enums_index_js__WEBPACK_IMPORTED_MODULE_2__.EncryptionKeyResolverName.AzureKeyVault;\n    /**\n     * wraps the given key using the specified key encryption key path and algorithm.\n     * @param encryptionKeyId - path to the customer managed key to be used for wrapping. For Azure Key Vault, this is url of the key in the vault.\n     * @param algorithm - algorithm to be used for wrapping.\n     * @param unwrappedKey - dek to be wrapped.\n     * @returns wrapped DEK.\n     */\n    async wrapKey(encryptionKeyId, algorithm, unwrappedKey) {\n        try {\n            const origin = this.getOrigin(encryptionKeyId);\n            const keyClient = new _azure_keyvault_keys__WEBPACK_IMPORTED_MODULE_0__.KeyClient(origin, this.credentials);\n            const [keyName, keyVersion] = this.getKeyDetails(encryptionKeyId);\n            const cryptographyClient = keyClient.getCryptographyClient(keyName, {\n                keyVersion: keyVersion,\n            });\n            const res = await cryptographyClient.wrapKey(algorithm, unwrappedKey);\n            if (!res || !res.result) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Failed to wrap key: ${res}`);\n            }\n            return res.result;\n        }\n        catch (e) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Failed to wrap key: ${e.message}`);\n        }\n    }\n    /**\n     * Unwraps the given wrapped key using the specified key encryption key path and algorithm.\n     * @param encryptionKeyId - path to the customer managed key to be used for unwrapping. For Azure Key Vault, this is url of the key in the vault.\n     * @param algorithm - algorithm to be used for unwrapping.\n     * @param wrappedKey - wrapped DEK.\n     * @returns unwrapped DEK.\n     */\n    async unwrapKey(encryptionKeyId, algorithm, wrappedKey) {\n        try {\n            const origin = this.getOrigin(encryptionKeyId);\n            const keyClient = new _azure_keyvault_keys__WEBPACK_IMPORTED_MODULE_0__.KeyClient(origin, this.credentials);\n            const [keyName, keyVersion] = this.getKeyDetails(encryptionKeyId);\n            const cryptographyClient = keyClient.getCryptographyClient(keyName, {\n                keyVersion: keyVersion,\n            });\n            const res = await cryptographyClient.unwrapKey(algorithm, wrappedKey);\n            if (!res || !res.result) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Failed to wrap key: ${res}`);\n            }\n            return res.result;\n        }\n        catch (e) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Failed to unwrap key: ${e.message}`);\n        }\n    }\n    // TODO: improve this method to extract key name and version from the url\n    getKeyDetails(encryptionKeyId) {\n        let url;\n        try {\n            url = new URL(encryptionKeyId);\n            const parts = url.pathname.split(\"/\");\n            if (parts.length < 4 || parts.length > 5) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Invalid key url: ${encryptionKeyId}. Key url must be in the format https://<vault>.vault.azure.net/keys/<key-name>/<key-version>`);\n            }\n            if (parts.length === 4 || parts.length === 5) {\n                return [parts[2], parts[3]];\n            }\n        }\n        catch (e) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Invalid key url: ${encryptionKeyId}. Key url must be in the format https://<vault>.vault.azure.net/keys/<key-name>/<key-version>. Error: ${e.message}`);\n        }\n    }\n    getOrigin(encryptionKeyId) {\n        try {\n            const url = new URL(encryptionKeyId);\n            return url.origin;\n        }\n        catch (e) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Invalid key url: ${encryptionKeyId}. Key url must be in the format https://<vault>.vault.azure.net/keys/<key-name>/<key-version>. Error: ${e.message}`);\n        }\n    }\n}\n//# sourceMappingURL=AzureKeyVaultEncryptionKeyResolver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXlSZXNvbHZlci9BenVyZUtleVZhdWx0RW5jcnlwdGlvbktleVJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2lEO0FBQ007QUFDTztBQUM5RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msc0VBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDJEQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsMEJBQTBCLDREQUFhLHdCQUF3QixJQUFJO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFhLHdCQUF3QixVQUFVO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywyREFBUztBQUMzQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDBCQUEwQiw0REFBYSx3QkFBd0IsSUFBSTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0REFBYSwwQkFBMEIsVUFBVTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNERBQWEscUJBQXFCLGdCQUFnQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNERBQWEscUJBQXFCLGdCQUFnQix3R0FBd0csVUFBVTtBQUMxTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFhLHFCQUFxQixnQkFBZ0Isd0dBQXdHLFVBQVU7QUFDMUw7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vRW5jcnlwdGlvbktleVJlc29sdmVyL0F6dXJlS2V5VmF1bHRFbmNyeXB0aW9uS2V5UmVzb2x2ZXIuanM/MTZlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEtleUNsaWVudCB9IGZyb20gXCJAYXp1cmUva2V5dmF1bHQta2V5c1wiO1xuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG5pbXBvcnQgeyBFbmNyeXB0aW9uS2V5UmVzb2x2ZXJOYW1lIH0gZnJvbSBcIi4uL2VudW1zL2luZGV4LmpzXCI7XG4vKipcbiAqIEltcGxlbWVudGF0aW9uIG9mIEVuY3J5cHRpb25LZXlSZXNvbHZlciB0aGF0IHVzZXMgQXp1cmUgS2V5IFZhdWx0IGZvciBjdXN0b21lciBtYW5hZ2VkIGtleXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBenVyZUtleVZhdWx0RW5jcnlwdGlvbktleVJlc29sdmVyIHtcbiAgICBjcmVkZW50aWFscztcbiAgICBjb25zdHJ1Y3RvcihjcmVkZW50aWFscykge1xuICAgICAgICB0aGlzLmNyZWRlbnRpYWxzID0gY3JlZGVudGlhbHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIHJlc29sdmVyIHRvIHVzZSBmb3IgY2xpZW50IHNpZGUgZW5jcnlwdGlvbi5cbiAgICAgKiBDdXJyZW50bHkgb25seSBBenVyZUtleVZhdWx0IGltcGxlbWVudGF0aW9uIGlzIHN1cHBvcnRlZC5cbiAgICAgKi9cbiAgICBlbmNyeXB0aW9uS2V5UmVzb2x2ZXJOYW1lID0gRW5jcnlwdGlvbktleVJlc29sdmVyTmFtZS5BenVyZUtleVZhdWx0O1xuICAgIC8qKlxuICAgICAqIHdyYXBzIHRoZSBnaXZlbiBrZXkgdXNpbmcgdGhlIHNwZWNpZmllZCBrZXkgZW5jcnlwdGlvbiBrZXkgcGF0aCBhbmQgYWxnb3JpdGhtLlxuICAgICAqIEBwYXJhbSBlbmNyeXB0aW9uS2V5SWQgLSBwYXRoIHRvIHRoZSBjdXN0b21lciBtYW5hZ2VkIGtleSB0byBiZSB1c2VkIGZvciB3cmFwcGluZy4gRm9yIEF6dXJlIEtleSBWYXVsdCwgdGhpcyBpcyB1cmwgb2YgdGhlIGtleSBpbiB0aGUgdmF1bHQuXG4gICAgICogQHBhcmFtIGFsZ29yaXRobSAtIGFsZ29yaXRobSB0byBiZSB1c2VkIGZvciB3cmFwcGluZy5cbiAgICAgKiBAcGFyYW0gdW53cmFwcGVkS2V5IC0gZGVrIHRvIGJlIHdyYXBwZWQuXG4gICAgICogQHJldHVybnMgd3JhcHBlZCBERUsuXG4gICAgICovXG4gICAgYXN5bmMgd3JhcEtleShlbmNyeXB0aW9uS2V5SWQsIGFsZ29yaXRobSwgdW53cmFwcGVkS2V5KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBvcmlnaW4gPSB0aGlzLmdldE9yaWdpbihlbmNyeXB0aW9uS2V5SWQpO1xuICAgICAgICAgICAgY29uc3Qga2V5Q2xpZW50ID0gbmV3IEtleUNsaWVudChvcmlnaW4sIHRoaXMuY3JlZGVudGlhbHMpO1xuICAgICAgICAgICAgY29uc3QgW2tleU5hbWUsIGtleVZlcnNpb25dID0gdGhpcy5nZXRLZXlEZXRhaWxzKGVuY3J5cHRpb25LZXlJZCk7XG4gICAgICAgICAgICBjb25zdCBjcnlwdG9ncmFwaHlDbGllbnQgPSBrZXlDbGllbnQuZ2V0Q3J5cHRvZ3JhcGh5Q2xpZW50KGtleU5hbWUsIHtcbiAgICAgICAgICAgICAgICBrZXlWZXJzaW9uOiBrZXlWZXJzaW9uLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBjcnlwdG9ncmFwaHlDbGllbnQud3JhcEtleShhbGdvcml0aG0sIHVud3JhcHBlZEtleSk7XG4gICAgICAgICAgICBpZiAoIXJlcyB8fCAhcmVzLnJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKGBGYWlsZWQgdG8gd3JhcCBrZXk6ICR7cmVzfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvclJlc3BvbnNlKGBGYWlsZWQgdG8gd3JhcCBrZXk6ICR7ZS5tZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVud3JhcHMgdGhlIGdpdmVuIHdyYXBwZWQga2V5IHVzaW5nIHRoZSBzcGVjaWZpZWQga2V5IGVuY3J5cHRpb24ga2V5IHBhdGggYW5kIGFsZ29yaXRobS5cbiAgICAgKiBAcGFyYW0gZW5jcnlwdGlvbktleUlkIC0gcGF0aCB0byB0aGUgY3VzdG9tZXIgbWFuYWdlZCBrZXkgdG8gYmUgdXNlZCBmb3IgdW53cmFwcGluZy4gRm9yIEF6dXJlIEtleSBWYXVsdCwgdGhpcyBpcyB1cmwgb2YgdGhlIGtleSBpbiB0aGUgdmF1bHQuXG4gICAgICogQHBhcmFtIGFsZ29yaXRobSAtIGFsZ29yaXRobSB0byBiZSB1c2VkIGZvciB1bndyYXBwaW5nLlxuICAgICAqIEBwYXJhbSB3cmFwcGVkS2V5IC0gd3JhcHBlZCBERUsuXG4gICAgICogQHJldHVybnMgdW53cmFwcGVkIERFSy5cbiAgICAgKi9cbiAgICBhc3luYyB1bndyYXBLZXkoZW5jcnlwdGlvbktleUlkLCBhbGdvcml0aG0sIHdyYXBwZWRLZXkpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IG9yaWdpbiA9IHRoaXMuZ2V0T3JpZ2luKGVuY3J5cHRpb25LZXlJZCk7XG4gICAgICAgICAgICBjb25zdCBrZXlDbGllbnQgPSBuZXcgS2V5Q2xpZW50KG9yaWdpbiwgdGhpcy5jcmVkZW50aWFscyk7XG4gICAgICAgICAgICBjb25zdCBba2V5TmFtZSwga2V5VmVyc2lvbl0gPSB0aGlzLmdldEtleURldGFpbHMoZW5jcnlwdGlvbktleUlkKTtcbiAgICAgICAgICAgIGNvbnN0IGNyeXB0b2dyYXBoeUNsaWVudCA9IGtleUNsaWVudC5nZXRDcnlwdG9ncmFwaHlDbGllbnQoa2V5TmFtZSwge1xuICAgICAgICAgICAgICAgIGtleVZlcnNpb246IGtleVZlcnNpb24sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNyeXB0b2dyYXBoeUNsaWVudC51bndyYXBLZXkoYWxnb3JpdGhtLCB3cmFwcGVkS2V5KTtcbiAgICAgICAgICAgIGlmICghcmVzIHx8ICFyZXMucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoYEZhaWxlZCB0byB3cmFwIGtleTogJHtyZXN9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLnJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoYEZhaWxlZCB0byB1bndyYXAga2V5OiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBUT0RPOiBpbXByb3ZlIHRoaXMgbWV0aG9kIHRvIGV4dHJhY3Qga2V5IG5hbWUgYW5kIHZlcnNpb24gZnJvbSB0aGUgdXJsXG4gICAgZ2V0S2V5RGV0YWlscyhlbmNyeXB0aW9uS2V5SWQpIHtcbiAgICAgICAgbGV0IHVybDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHVybCA9IG5ldyBVUkwoZW5jcnlwdGlvbktleUlkKTtcbiAgICAgICAgICAgIGNvbnN0IHBhcnRzID0gdXJsLnBhdGhuYW1lLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPCA0IHx8IHBhcnRzLmxlbmd0aCA+IDUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JSZXNwb25zZShgSW52YWxpZCBrZXkgdXJsOiAke2VuY3J5cHRpb25LZXlJZH0uIEtleSB1cmwgbXVzdCBiZSBpbiB0aGUgZm9ybWF0IGh0dHBzOi8vPHZhdWx0Pi52YXVsdC5henVyZS5uZXQva2V5cy88a2V5LW5hbWU+LzxrZXktdmVyc2lvbj5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDQgfHwgcGFydHMubGVuZ3RoID09PSA1KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtwYXJ0c1syXSwgcGFydHNbM11dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JSZXNwb25zZShgSW52YWxpZCBrZXkgdXJsOiAke2VuY3J5cHRpb25LZXlJZH0uIEtleSB1cmwgbXVzdCBiZSBpbiB0aGUgZm9ybWF0IGh0dHBzOi8vPHZhdWx0Pi52YXVsdC5henVyZS5uZXQva2V5cy88a2V5LW5hbWU+LzxrZXktdmVyc2lvbj4uIEVycm9yOiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRPcmlnaW4oZW5jcnlwdGlvbktleUlkKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGVuY3J5cHRpb25LZXlJZCk7XG4gICAgICAgICAgICByZXR1cm4gdXJsLm9yaWdpbjtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yUmVzcG9uc2UoYEludmFsaWQga2V5IHVybDogJHtlbmNyeXB0aW9uS2V5SWR9LiBLZXkgdXJsIG11c3QgYmUgaW4gdGhlIGZvcm1hdCBodHRwczovLzx2YXVsdD4udmF1bHQuYXp1cmUubmV0L2tleXMvPGtleS1uYW1lPi88a2V5LXZlcnNpb24+LiBFcnJvcjogJHtlLm1lc3NhZ2V9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BenVyZUtleVZhdWx0RW5jcnlwdGlvbktleVJlc29sdmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/AzureKeyVaultEncryptionKeyResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyVaultEncryptionKeyResolver: () => (/* reexport safe */ _AzureKeyVaultEncryptionKeyResolver_js__WEBPACK_IMPORTED_MODULE_0__.AzureKeyVaultEncryptionKeyResolver)\n/* harmony export */ });\n/* harmony import */ var _AzureKeyVaultEncryptionKeyResolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AzureKeyVaultEncryptionKeyResolver.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/AzureKeyVaultEncryptionKeyResolver.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXlSZXNvbHZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDNkY7QUFDN0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vRW5jcnlwdGlvbktleVJlc29sdmVyL2luZGV4LmpzPzQ2MWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBBenVyZUtleVZhdWx0RW5jcnlwdGlvbktleVJlc29sdmVyIH0gZnJvbSBcIi4vQXp1cmVLZXlWYXVsdEVuY3J5cHRpb25LZXlSZXNvbHZlci5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyStoreProvider.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyStoreProvider.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionKeyStoreProvider: () => (/* binding */ EncryptionKeyStoreProvider)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Class to store encryption keys in unwrapped form and provide an interface for wrapping and unwrapping the keys.\n */\nclass EncryptionKeyStoreProvider {\n    keyEncryptionKeyResolver;\n    cacheTimeToLive;\n    RsaOaepEncryptionAlgorithm = \"RSA-OAEP\";\n    // interval for clear cache to run\n    cacheRefresher;\n    // cache to store the unwrapped encryption key. Key is the path of the encryption key\n    unwrappedEncryptionKeyCache;\n    providerName;\n    constructor(keyEncryptionKeyResolver, cacheTimeToLive) {\n        this.keyEncryptionKeyResolver = keyEncryptionKeyResolver;\n        this.cacheTimeToLive = cacheTimeToLive;\n        this.keyEncryptionKeyResolver = keyEncryptionKeyResolver;\n        this.providerName = keyEncryptionKeyResolver.encryptionKeyResolverName;\n        this.unwrappedEncryptionKeyCache = {};\n        this.cacheTimeToLive = cacheTimeToLive;\n        this.clearCacheOnTtlExpiry();\n    }\n    async wrapKey(encryptionKeyId, algorithm, key) {\n        const uInt8ArrayKey = new Uint8Array(key);\n        const wrappedEncryptionKey = await this.keyEncryptionKeyResolver.wrapKey(encryptionKeyId, algorithm, uInt8ArrayKey);\n        return Buffer.from(wrappedEncryptionKey);\n    }\n    async unwrapKey(encryptionKeyId, algorithm, wrappedKey) {\n        if (this.cacheTimeToLive === 0) {\n            const res = await this.keyEncryptionKeyResolver.unwrapKey(encryptionKeyId, algorithm, wrappedKey);\n            return Buffer.from(res);\n        }\n        if (!this.unwrappedEncryptionKeyCache[encryptionKeyId]) {\n            const wrappedKeyUint8Array = new Uint8Array(wrappedKey);\n            const plainEncryptionKey = await this.keyEncryptionKeyResolver.unwrapKey(encryptionKeyId, algorithm, wrappedKeyUint8Array);\n            const plainEncryptionKeyBuffer = Buffer.from(plainEncryptionKey);\n            this.unwrappedEncryptionKeyCache[encryptionKeyId] = [new Date(), plainEncryptionKeyBuffer];\n        }\n        return this.unwrappedEncryptionKeyCache[encryptionKeyId][1];\n    }\n    async clearCacheOnTtlExpiry() {\n        this.cacheRefresher = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_1__.startBackgroundTask)(async () => {\n            const now = new Date();\n            for (const key in this.unwrappedEncryptionKeyCache) {\n                if (now.getTime() - this.unwrappedEncryptionKeyCache[key][0].getTime() >\n                    this.cacheTimeToLive) {\n                    delete this.unwrappedEncryptionKeyCache[key];\n                }\n            }\n        }, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.EncryptionCacheRefreshIntervalInMs);\n    }\n}\n//# sourceMappingURL=EncryptionKeyStoreProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXlTdG9yZVByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDK0M7QUFDUTtBQUN2RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtRUFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLEVBQUUsdURBQVM7QUFDcEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXlTdG9yZVByb3ZpZGVyLmpzPzQ2ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vY29tbW9uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBzdGFydEJhY2tncm91bmRUYXNrIH0gZnJvbSBcIi4uL3V0aWxzL3RpbWUuanNcIjtcbi8qKlxuICogQ2xhc3MgdG8gc3RvcmUgZW5jcnlwdGlvbiBrZXlzIGluIHVud3JhcHBlZCBmb3JtIGFuZCBwcm92aWRlIGFuIGludGVyZmFjZSBmb3Igd3JhcHBpbmcgYW5kIHVud3JhcHBpbmcgdGhlIGtleXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBFbmNyeXB0aW9uS2V5U3RvcmVQcm92aWRlciB7XG4gICAga2V5RW5jcnlwdGlvbktleVJlc29sdmVyO1xuICAgIGNhY2hlVGltZVRvTGl2ZTtcbiAgICBSc2FPYWVwRW5jcnlwdGlvbkFsZ29yaXRobSA9IFwiUlNBLU9BRVBcIjtcbiAgICAvLyBpbnRlcnZhbCBmb3IgY2xlYXIgY2FjaGUgdG8gcnVuXG4gICAgY2FjaGVSZWZyZXNoZXI7XG4gICAgLy8gY2FjaGUgdG8gc3RvcmUgdGhlIHVud3JhcHBlZCBlbmNyeXB0aW9uIGtleS4gS2V5IGlzIHRoZSBwYXRoIG9mIHRoZSBlbmNyeXB0aW9uIGtleVxuICAgIHVud3JhcHBlZEVuY3J5cHRpb25LZXlDYWNoZTtcbiAgICBwcm92aWRlck5hbWU7XG4gICAgY29uc3RydWN0b3Ioa2V5RW5jcnlwdGlvbktleVJlc29sdmVyLCBjYWNoZVRpbWVUb0xpdmUpIHtcbiAgICAgICAgdGhpcy5rZXlFbmNyeXB0aW9uS2V5UmVzb2x2ZXIgPSBrZXlFbmNyeXB0aW9uS2V5UmVzb2x2ZXI7XG4gICAgICAgIHRoaXMuY2FjaGVUaW1lVG9MaXZlID0gY2FjaGVUaW1lVG9MaXZlO1xuICAgICAgICB0aGlzLmtleUVuY3J5cHRpb25LZXlSZXNvbHZlciA9IGtleUVuY3J5cHRpb25LZXlSZXNvbHZlcjtcbiAgICAgICAgdGhpcy5wcm92aWRlck5hbWUgPSBrZXlFbmNyeXB0aW9uS2V5UmVzb2x2ZXIuZW5jcnlwdGlvbktleVJlc29sdmVyTmFtZTtcbiAgICAgICAgdGhpcy51bndyYXBwZWRFbmNyeXB0aW9uS2V5Q2FjaGUgPSB7fTtcbiAgICAgICAgdGhpcy5jYWNoZVRpbWVUb0xpdmUgPSBjYWNoZVRpbWVUb0xpdmU7XG4gICAgICAgIHRoaXMuY2xlYXJDYWNoZU9uVHRsRXhwaXJ5KCk7XG4gICAgfVxuICAgIGFzeW5jIHdyYXBLZXkoZW5jcnlwdGlvbktleUlkLCBhbGdvcml0aG0sIGtleSkge1xuICAgICAgICBjb25zdCB1SW50OEFycmF5S2V5ID0gbmV3IFVpbnQ4QXJyYXkoa2V5KTtcbiAgICAgICAgY29uc3Qgd3JhcHBlZEVuY3J5cHRpb25LZXkgPSBhd2FpdCB0aGlzLmtleUVuY3J5cHRpb25LZXlSZXNvbHZlci53cmFwS2V5KGVuY3J5cHRpb25LZXlJZCwgYWxnb3JpdGhtLCB1SW50OEFycmF5S2V5KTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHdyYXBwZWRFbmNyeXB0aW9uS2V5KTtcbiAgICB9XG4gICAgYXN5bmMgdW53cmFwS2V5KGVuY3J5cHRpb25LZXlJZCwgYWxnb3JpdGhtLCB3cmFwcGVkS2V5KSB7XG4gICAgICAgIGlmICh0aGlzLmNhY2hlVGltZVRvTGl2ZSA9PT0gMCkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5rZXlFbmNyeXB0aW9uS2V5UmVzb2x2ZXIudW53cmFwS2V5KGVuY3J5cHRpb25LZXlJZCwgYWxnb3JpdGhtLCB3cmFwcGVkS2V5KTtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShyZXMpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy51bndyYXBwZWRFbmNyeXB0aW9uS2V5Q2FjaGVbZW5jcnlwdGlvbktleUlkXSkge1xuICAgICAgICAgICAgY29uc3Qgd3JhcHBlZEtleVVpbnQ4QXJyYXkgPSBuZXcgVWludDhBcnJheSh3cmFwcGVkS2V5KTtcbiAgICAgICAgICAgIGNvbnN0IHBsYWluRW5jcnlwdGlvbktleSA9IGF3YWl0IHRoaXMua2V5RW5jcnlwdGlvbktleVJlc29sdmVyLnVud3JhcEtleShlbmNyeXB0aW9uS2V5SWQsIGFsZ29yaXRobSwgd3JhcHBlZEtleVVpbnQ4QXJyYXkpO1xuICAgICAgICAgICAgY29uc3QgcGxhaW5FbmNyeXB0aW9uS2V5QnVmZmVyID0gQnVmZmVyLmZyb20ocGxhaW5FbmNyeXB0aW9uS2V5KTtcbiAgICAgICAgICAgIHRoaXMudW53cmFwcGVkRW5jcnlwdGlvbktleUNhY2hlW2VuY3J5cHRpb25LZXlJZF0gPSBbbmV3IERhdGUoKSwgcGxhaW5FbmNyeXB0aW9uS2V5QnVmZmVyXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy51bndyYXBwZWRFbmNyeXB0aW9uS2V5Q2FjaGVbZW5jcnlwdGlvbktleUlkXVsxXTtcbiAgICB9XG4gICAgYXN5bmMgY2xlYXJDYWNoZU9uVHRsRXhwaXJ5KCkge1xuICAgICAgICB0aGlzLmNhY2hlUmVmcmVzaGVyID0gc3RhcnRCYWNrZ3JvdW5kVGFzayhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy51bndyYXBwZWRFbmNyeXB0aW9uS2V5Q2FjaGUpIHtcbiAgICAgICAgICAgICAgICBpZiAobm93LmdldFRpbWUoKSAtIHRoaXMudW53cmFwcGVkRW5jcnlwdGlvbktleUNhY2hlW2tleV1bMF0uZ2V0VGltZSgpID5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWNoZVRpbWVUb0xpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMudW53cmFwcGVkRW5jcnlwdGlvbktleUNhY2hlW2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCBDb25zdGFudHMuRW5jcnlwdGlvbkNhY2hlUmVmcmVzaEludGVydmFsSW5Ncyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jcnlwdGlvbktleVN0b3JlUHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyStoreProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/DataEncryptionKey.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/DataEncryptionKey.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataEncryptionKey: () => (/* binding */ DataEncryptionKey)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nclass DataEncryptionKey {\n    rootKeyBuffer;\n    keySizeInBits = 256;\n    keySizeInBytes = this.keySizeInBits / 8;\n    encryptionKeyBuffer;\n    macKeyBuffer;\n    ivKeyBuffer;\n    name;\n    constructor(rootKey, name) {\n        if (rootKey.length !== this.keySizeInBytes) {\n            throw new Error(\"Invalid root key size\");\n        }\n        this.rootKeyBuffer = rootKey;\n        this.name = name;\n        const encryptionKeySalt = `Microsoft SQL Server cell encryption key with encryption algorithm:AEAD_AES_256_CBC_HMAC_SHA256 and key length:${this.keySizeInBits}`;\n        const macKeySalt = `Microsoft SQL Server cell MAC key with encryption algorithm:AEAD_AES_256_CBC_HMAC_SHA256 and key length:${this.keySizeInBits}`;\n        const ivKeySalt = `Microsoft SQL Server cell IV key with encryption algorithm:AEAD_AES_256_CBC_HMAC_SHA256 and key length:${this.keySizeInBits}`;\n        this.encryptionKeyBuffer = this.getHmacWithSha256(encryptionKeySalt, this.rootKeyBuffer);\n        this.macKeyBuffer = this.getHmacWithSha256(macKeySalt, this.rootKeyBuffer);\n        this.ivKeyBuffer = this.getHmacWithSha256(ivKeySalt, this.rootKeyBuffer);\n    }\n    getHmacWithSha256(plainText, key) {\n        const hmac = (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac)(\"sha256\", key);\n        hmac.update(Buffer.from(plainText, \"utf16le\"));\n        return hmac.digest();\n    }\n}\n//# sourceMappingURL=DataEncryptionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXkvRGF0YUVuY3J5cHRpb25LZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ3lDO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvSkFBb0osbUJBQW1CO0FBQ3ZLLHNJQUFzSSxtQkFBbUI7QUFDekosb0lBQW9JLG1CQUFtQjtBQUN2SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVEQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vRW5jcnlwdGlvbktleS9EYXRhRW5jcnlwdGlvbktleS5qcz85MDkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlSG1hYyB9IGZyb20gXCJub2RlOmNyeXB0b1wiO1xuZXhwb3J0IGNsYXNzIERhdGFFbmNyeXB0aW9uS2V5IHtcbiAgICByb290S2V5QnVmZmVyO1xuICAgIGtleVNpemVJbkJpdHMgPSAyNTY7XG4gICAga2V5U2l6ZUluQnl0ZXMgPSB0aGlzLmtleVNpemVJbkJpdHMgLyA4O1xuICAgIGVuY3J5cHRpb25LZXlCdWZmZXI7XG4gICAgbWFjS2V5QnVmZmVyO1xuICAgIGl2S2V5QnVmZmVyO1xuICAgIG5hbWU7XG4gICAgY29uc3RydWN0b3Iocm9vdEtleSwgbmFtZSkge1xuICAgICAgICBpZiAocm9vdEtleS5sZW5ndGggIT09IHRoaXMua2V5U2l6ZUluQnl0ZXMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcm9vdCBrZXkgc2l6ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJvb3RLZXlCdWZmZXIgPSByb290S2V5O1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICBjb25zdCBlbmNyeXB0aW9uS2V5U2FsdCA9IGBNaWNyb3NvZnQgU1FMIFNlcnZlciBjZWxsIGVuY3J5cHRpb24ga2V5IHdpdGggZW5jcnlwdGlvbiBhbGdvcml0aG06QUVBRF9BRVNfMjU2X0NCQ19ITUFDX1NIQTI1NiBhbmQga2V5IGxlbmd0aDoke3RoaXMua2V5U2l6ZUluQml0c31gO1xuICAgICAgICBjb25zdCBtYWNLZXlTYWx0ID0gYE1pY3Jvc29mdCBTUUwgU2VydmVyIGNlbGwgTUFDIGtleSB3aXRoIGVuY3J5cHRpb24gYWxnb3JpdGhtOkFFQURfQUVTXzI1Nl9DQkNfSE1BQ19TSEEyNTYgYW5kIGtleSBsZW5ndGg6JHt0aGlzLmtleVNpemVJbkJpdHN9YDtcbiAgICAgICAgY29uc3QgaXZLZXlTYWx0ID0gYE1pY3Jvc29mdCBTUUwgU2VydmVyIGNlbGwgSVYga2V5IHdpdGggZW5jcnlwdGlvbiBhbGdvcml0aG06QUVBRF9BRVNfMjU2X0NCQ19ITUFDX1NIQTI1NiBhbmQga2V5IGxlbmd0aDoke3RoaXMua2V5U2l6ZUluQml0c31gO1xuICAgICAgICB0aGlzLmVuY3J5cHRpb25LZXlCdWZmZXIgPSB0aGlzLmdldEhtYWNXaXRoU2hhMjU2KGVuY3J5cHRpb25LZXlTYWx0LCB0aGlzLnJvb3RLZXlCdWZmZXIpO1xuICAgICAgICB0aGlzLm1hY0tleUJ1ZmZlciA9IHRoaXMuZ2V0SG1hY1dpdGhTaGEyNTYobWFjS2V5U2FsdCwgdGhpcy5yb290S2V5QnVmZmVyKTtcbiAgICAgICAgdGhpcy5pdktleUJ1ZmZlciA9IHRoaXMuZ2V0SG1hY1dpdGhTaGEyNTYoaXZLZXlTYWx0LCB0aGlzLnJvb3RLZXlCdWZmZXIpO1xuICAgIH1cbiAgICBnZXRIbWFjV2l0aFNoYTI1NihwbGFpblRleHQsIGtleSkge1xuICAgICAgICBjb25zdCBobWFjID0gY3JlYXRlSG1hYyhcInNoYTI1NlwiLCBrZXkpO1xuICAgICAgICBobWFjLnVwZGF0ZShCdWZmZXIuZnJvbShwbGFpblRleHQsIFwidXRmMTZsZVwiKSk7XG4gICAgICAgIHJldHVybiBobWFjLmRpZ2VzdCgpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURhdGFFbmNyeXB0aW9uS2V5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/DataEncryptionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/ProtectedDataEncryptionKey.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/ProtectedDataEncryptionKey.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtectedDataEncryptionKey: () => (/* binding */ ProtectedDataEncryptionKey)\n/* harmony export */ });\n/* harmony import */ var _DataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataEncryptionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/DataEncryptionKey.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A wrapper class around `DataEncryptionKey` that stores it in a protected form.\n * The `ProtectedDataEncryptionKey` class extends `DataEncryptionKey` and holds both the raw key and its encrypted form.\n * It also includes information about the `KeyEncryptionKey` used to encrypt the data encryption key.\n * @hidden\n */\nclass ProtectedDataEncryptionKey extends _DataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_0__.DataEncryptionKey {\n    keyEncryptionKey;\n    encryptedValue;\n    constructor(name, keyEncryptionKey, rawKey, encryptedKey) {\n        super(rawKey, name);\n        this.name = name;\n        this.keyEncryptionKey = keyEncryptionKey;\n        this.encryptedValue = encryptedKey;\n    }\n}\n//# sourceMappingURL=ProtectedDataEncryptionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXkvUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlDQUF5QyxvRUFBaUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vRW5jcnlwdGlvbktleS9Qcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleS5qcz81NGJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgRGF0YUVuY3J5cHRpb25LZXkgfSBmcm9tIFwiLi9EYXRhRW5jcnlwdGlvbktleS5qc1wiO1xuLyoqXG4gKiBBIHdyYXBwZXIgY2xhc3MgYXJvdW5kIGBEYXRhRW5jcnlwdGlvbktleWAgdGhhdCBzdG9yZXMgaXQgaW4gYSBwcm90ZWN0ZWQgZm9ybS5cbiAqIFRoZSBgUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXlgIGNsYXNzIGV4dGVuZHMgYERhdGFFbmNyeXB0aW9uS2V5YCBhbmQgaG9sZHMgYm90aCB0aGUgcmF3IGtleSBhbmQgaXRzIGVuY3J5cHRlZCBmb3JtLlxuICogSXQgYWxzbyBpbmNsdWRlcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgYEtleUVuY3J5cHRpb25LZXlgIHVzZWQgdG8gZW5jcnlwdCB0aGUgZGF0YSBlbmNyeXB0aW9uIGtleS5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5IGV4dGVuZHMgRGF0YUVuY3J5cHRpb25LZXkge1xuICAgIGtleUVuY3J5cHRpb25LZXk7XG4gICAgZW5jcnlwdGVkVmFsdWU7XG4gICAgY29uc3RydWN0b3IobmFtZSwga2V5RW5jcnlwdGlvbktleSwgcmF3S2V5LCBlbmNyeXB0ZWRLZXkpIHtcbiAgICAgICAgc3VwZXIocmF3S2V5LCBuYW1lKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5rZXlFbmNyeXB0aW9uS2V5ID0ga2V5RW5jcnlwdGlvbktleTtcbiAgICAgICAgdGhpcy5lbmNyeXB0ZWRWYWx1ZSA9IGVuY3J5cHRlZEtleTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/ProtectedDataEncryptionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataEncryptionKey: () => (/* reexport safe */ _DataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_0__.DataEncryptionKey),\n/* harmony export */   ProtectedDataEncryptionKey: () => (/* reexport safe */ _ProtectedDataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_1__.ProtectedDataEncryptionKey)\n/* harmony export */ });\n/* harmony import */ var _DataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataEncryptionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/DataEncryptionKey.js\");\n/* harmony import */ var _ProtectedDataEncryptionKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ProtectedDataEncryptionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/ProtectedDataEncryptionKey.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25LZXkvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDMkQ7QUFDa0I7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vRW5jcnlwdGlvbktleS9pbmRleC5qcz82ZDk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgRGF0YUVuY3J5cHRpb25LZXkgfSBmcm9tIFwiLi9EYXRhRW5jcnlwdGlvbktleS5qc1wiO1xuZXhwb3J0IHsgUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXkgfSBmcm9tIFwiLi9Qcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionManager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionManager.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionManager: () => (/* binding */ EncryptionManager)\n/* harmony export */ });\n/* harmony import */ var _Cache_ProtectedDataEncryptionKeyCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Cache/ProtectedDataEncryptionKeyCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ProtectedDataEncryptionKeyCache.js\");\n/* harmony import */ var _Cache_KeyEncryptionKeyCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cache/KeyEncryptionKeyCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/KeyEncryptionKeyCache.js\");\n/* harmony import */ var _Cache_EncryptionSettingsCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Cache/EncryptionSettingsCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/EncryptionSettingsCache.js\");\n/* harmony import */ var _Cache_ClientEncryptionKeyPropertiesCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Cache/ClientEncryptionKeyPropertiesCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Cache/ClientEncryptionKeyPropertiesCache.js\");\n/* harmony import */ var _EncryptionKeyStoreProvider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EncryptionKeyStoreProvider.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyStoreProvider.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n/**\n * Cache manager for encryption related caches.\n * @hidden\n */\nclass EncryptionManager {\n    cacheTimeToLive;\n    encryptionKeyStoreProvider;\n    protectedDataEncryptionKeyCache;\n    keyEncryptionKeyCache;\n    encryptionSettingsCache;\n    clientEncryptionKeyPropertiesCache;\n    constructor(encryptionKeyResolver, cacheTimeToLive) {\n        this.cacheTimeToLive =\n            cacheTimeToLive !== undefined\n                ? cacheTimeToLive\n                : _common_constants_js__WEBPACK_IMPORTED_MODULE_5__.Constants.DefaultEncryptionCacheTimeToLiveInSeconds;\n        const cacheTtlInMs = this.getCacheTTlInMs();\n        this.encryptionKeyStoreProvider = new _EncryptionKeyStoreProvider_js__WEBPACK_IMPORTED_MODULE_4__.EncryptionKeyStoreProvider(encryptionKeyResolver, cacheTtlInMs);\n        this.protectedDataEncryptionKeyCache = new _Cache_ProtectedDataEncryptionKeyCache_js__WEBPACK_IMPORTED_MODULE_0__.ProtectedDataEncryptionKeyCache(cacheTtlInMs);\n        this.keyEncryptionKeyCache = new _Cache_KeyEncryptionKeyCache_js__WEBPACK_IMPORTED_MODULE_1__.KeyEncryptionKeyCache();\n        this.encryptionSettingsCache = new _Cache_EncryptionSettingsCache_js__WEBPACK_IMPORTED_MODULE_2__.EncryptionSettingsCache();\n        this.clientEncryptionKeyPropertiesCache = new _Cache_ClientEncryptionKeyPropertiesCache_js__WEBPACK_IMPORTED_MODULE_3__.ClientEncryptionKeyPropertiesCache();\n    }\n    /**\n     * Converts the EncryptionTimeToLive instance to a number (milliseconds).\n     */\n    getCacheTTlInMs() {\n        const millisecondsPerSecond = 1000;\n        return Number(this.cacheTimeToLive * millisecondsPerSecond);\n    }\n}\n//# sourceMappingURL=EncryptionManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25NYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzZGO0FBQ3BCO0FBQ0k7QUFDc0I7QUFDdEI7QUFDMUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFTO0FBQzNCO0FBQ0EsOENBQThDLHNGQUEwQjtBQUN4RSxtREFBbUQsc0dBQStCO0FBQ2xGLHlDQUF5QyxrRkFBcUI7QUFDOUQsMkNBQTJDLHNGQUF1QjtBQUNsRSxzREFBc0QsNEdBQWtDO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25NYW5hZ2VyLmpzPzg0YmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBQcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleUNhY2hlIH0gZnJvbSBcIi4vQ2FjaGUvUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXlDYWNoZS5qc1wiO1xuaW1wb3J0IHsgS2V5RW5jcnlwdGlvbktleUNhY2hlIH0gZnJvbSBcIi4vQ2FjaGUvS2V5RW5jcnlwdGlvbktleUNhY2hlLmpzXCI7XG5pbXBvcnQgeyBFbmNyeXB0aW9uU2V0dGluZ3NDYWNoZSB9IGZyb20gXCIuL0NhY2hlL0VuY3J5cHRpb25TZXR0aW5nc0NhY2hlLmpzXCI7XG5pbXBvcnQgeyBDbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllc0NhY2hlIH0gZnJvbSBcIi4vQ2FjaGUvQ2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXNDYWNoZS5qc1wiO1xuaW1wb3J0IHsgRW5jcnlwdGlvbktleVN0b3JlUHJvdmlkZXIgfSBmcm9tIFwiLi9FbmNyeXB0aW9uS2V5U3RvcmVQcm92aWRlci5qc1wiO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSBcIi4uL2NvbW1vbi9jb25zdGFudHMuanNcIjtcbi8qKlxuICogQ2FjaGUgbWFuYWdlciBmb3IgZW5jcnlwdGlvbiByZWxhdGVkIGNhY2hlcy5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIEVuY3J5cHRpb25NYW5hZ2VyIHtcbiAgICBjYWNoZVRpbWVUb0xpdmU7XG4gICAgZW5jcnlwdGlvbktleVN0b3JlUHJvdmlkZXI7XG4gICAgcHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXlDYWNoZTtcbiAgICBrZXlFbmNyeXB0aW9uS2V5Q2FjaGU7XG4gICAgZW5jcnlwdGlvblNldHRpbmdzQ2FjaGU7XG4gICAgY2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXNDYWNoZTtcbiAgICBjb25zdHJ1Y3RvcihlbmNyeXB0aW9uS2V5UmVzb2x2ZXIsIGNhY2hlVGltZVRvTGl2ZSkge1xuICAgICAgICB0aGlzLmNhY2hlVGltZVRvTGl2ZSA9XG4gICAgICAgICAgICBjYWNoZVRpbWVUb0xpdmUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgID8gY2FjaGVUaW1lVG9MaXZlXG4gICAgICAgICAgICAgICAgOiBDb25zdGFudHMuRGVmYXVsdEVuY3J5cHRpb25DYWNoZVRpbWVUb0xpdmVJblNlY29uZHM7XG4gICAgICAgIGNvbnN0IGNhY2hlVHRsSW5NcyA9IHRoaXMuZ2V0Q2FjaGVUVGxJbk1zKCk7XG4gICAgICAgIHRoaXMuZW5jcnlwdGlvbktleVN0b3JlUHJvdmlkZXIgPSBuZXcgRW5jcnlwdGlvbktleVN0b3JlUHJvdmlkZXIoZW5jcnlwdGlvbktleVJlc29sdmVyLCBjYWNoZVR0bEluTXMpO1xuICAgICAgICB0aGlzLnByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5Q2FjaGUgPSBuZXcgUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXlDYWNoZShjYWNoZVR0bEluTXMpO1xuICAgICAgICB0aGlzLmtleUVuY3J5cHRpb25LZXlDYWNoZSA9IG5ldyBLZXlFbmNyeXB0aW9uS2V5Q2FjaGUoKTtcbiAgICAgICAgdGhpcy5lbmNyeXB0aW9uU2V0dGluZ3NDYWNoZSA9IG5ldyBFbmNyeXB0aW9uU2V0dGluZ3NDYWNoZSgpO1xuICAgICAgICB0aGlzLmNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzQ2FjaGUgPSBuZXcgQ2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXNDYWNoZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyB0aGUgRW5jcnlwdGlvblRpbWVUb0xpdmUgaW5zdGFuY2UgdG8gYSBudW1iZXIgKG1pbGxpc2Vjb25kcykuXG4gICAgICovXG4gICAgZ2V0Q2FjaGVUVGxJbk1zKCkge1xuICAgICAgICBjb25zdCBtaWxsaXNlY29uZHNQZXJTZWNvbmQgPSAxMDAwO1xuICAgICAgICByZXR1cm4gTnVtYmVyKHRoaXMuY2FjaGVUaW1lVG9MaXZlICogbWlsbGlzZWNvbmRzUGVyU2Vjb25kKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbmNyeXB0aW9uTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionProcessor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionProcessor.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionProcessor: () => (/* binding */ EncryptionProcessor)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass EncryptionProcessor {\n    containerId;\n    containerRid;\n    database;\n    clientContext;\n    encryptionManager;\n    constructor(containerId, containerRid, database, clientContext, encryptionManager) {\n        this.containerId = containerId;\n        this.containerRid = containerRid;\n        this.database = database;\n        this.clientContext = clientContext;\n        this.encryptionManager = encryptionManager;\n    }\n    async encrypt(body) {\n        if (!body) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Input body is null or undefined.\");\n        }\n        let propertiesEncryptedCount = 0;\n        const encryptionSettings = await this.getEncryptionSetting();\n        if (!encryptionSettings)\n            return { body, propertiesEncryptedCount };\n        for (const pathToEncrypt of encryptionSettings.pathsToEncrypt) {\n            const propertyName = pathToEncrypt.slice(1);\n            if (!Object.prototype.hasOwnProperty.call(body, propertyName)) {\n                continue;\n            }\n            const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(pathToEncrypt);\n            if (!settingForProperty) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Invalid Encryption Setting for the Property: \" + propertyName);\n            }\n            body[propertyName] = await this.encryptToken(body[propertyName], settingForProperty, propertyName === \"id\");\n            propertiesEncryptedCount++;\n        }\n        return { body, propertiesEncryptedCount };\n    }\n    async isPathEncrypted(path) {\n        path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.extractPath)(path);\n        const encryptionSettings = await this.getEncryptionSetting();\n        const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(path);\n        if (!settingForProperty)\n            return false;\n        return true;\n    }\n    async encryptProperty(path, value) {\n        path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.extractPath)(path);\n        const encryptionSettings = await this.getEncryptionSetting();\n        if (!encryptionSettings)\n            return value;\n        const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(path);\n        if (!settingForProperty) {\n            return value;\n        }\n        value = await this.encryptToken(value, settingForProperty, path === \"/id\");\n        return value;\n    }\n    async getEncryptedPartitionKeyValue(partitionKeyList) {\n        const encryptionSettings = await this.getEncryptionSetting();\n        let encryptedCount = 0;\n        if (!encryptionSettings)\n            return { partitionKeyList, encryptedCount };\n        const partitionKeyPaths = encryptionSettings.partitionKeyPaths;\n        for (let i = 0; i < partitionKeyPaths.length; i++) {\n            const partitionKeyPath = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.extractPath)(partitionKeyPaths[i]);\n            if (encryptionSettings.pathsToEncrypt.includes(partitionKeyPath)) {\n                const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(partitionKeyPath);\n                partitionKeyList[i] = await this.encryptToken(partitionKeyList[i], settingForProperty, partitionKeyPath === \"/id\");\n                encryptedCount++;\n            }\n        }\n        return { partitionKeyList, encryptedCount };\n    }\n    async getEncryptedUrl(id) {\n        const parts = id.split(\"/\");\n        const lastPart = parts[parts.length - 1];\n        const encryptedLastPart = await this.getEncryptedId(lastPart);\n        parts[parts.length - 1] = encryptedLastPart;\n        return parts.join(\"/\");\n    }\n    async getEncryptedId(id) {\n        const encryptionSettings = await this.getEncryptionSetting();\n        if (!encryptionSettings)\n            return id;\n        const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(\"/id\");\n        if (!settingForProperty)\n            return id;\n        id = await this.encryptToken(id, settingForProperty, true);\n        return id;\n    }\n    async encryptQueryParameter(path, value, isValueId, type) {\n        if (value === null) {\n            return value;\n        }\n        path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.extractPath)(path);\n        const encryptionSettings = await this.getEncryptionSetting();\n        if (!encryptionSettings)\n            return value;\n        const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(path);\n        if (!settingForProperty) {\n            return value;\n        }\n        return this.encryptToken(value, settingForProperty, isValueId, type);\n    }\n    async encryptToken(valueToEncrypt, propertySetting, isValueId, type) {\n        if (typeof valueToEncrypt === \"object\" && valueToEncrypt !== null) {\n            for (const key in valueToEncrypt) {\n                if (Object.prototype.hasOwnProperty.call(valueToEncrypt, key)) {\n                    valueToEncrypt[key] = await this.encryptToken(valueToEncrypt[key], propertySetting, isValueId, type);\n                }\n            }\n        }\n        else if (Array.isArray(type)) {\n            for (let i = 0; i < valueToEncrypt.length; i++) {\n                valueToEncrypt[i] = await this.encryptToken(valueToEncrypt[i], propertySetting, isValueId, type);\n            }\n        }\n        else {\n            valueToEncrypt = await this.serializeAndEncryptValue(valueToEncrypt, propertySetting, isValueId, type);\n        }\n        return valueToEncrypt;\n    }\n    async serializeAndEncryptValue(valueToEncrypt, propertySetting, isValueId, type) {\n        if (valueToEncrypt === null) {\n            return valueToEncrypt;\n        }\n        const [typeMarker, serializer] = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createSerializer)(valueToEncrypt, type);\n        const plainText = serializer.serialize(valueToEncrypt);\n        const encryptionAlgorithm = await this.buildEncryptionAlgorithm(propertySetting);\n        const cipherText = encryptionAlgorithm.encrypt(plainText);\n        if (isValueId) {\n            if (typeof valueToEncrypt !== \"string\") {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"The id should be of string type.\");\n            }\n        }\n        const cipherTextWithTypeMarker = Buffer.alloc(cipherText.length + 1);\n        cipherTextWithTypeMarker[0] = typeMarker;\n        cipherText.forEach((value, index) => {\n            cipherTextWithTypeMarker[index + 1] = value;\n        });\n        let encryptedValue = Buffer.from(cipherTextWithTypeMarker).toString(\"base64\");\n        if (isValueId) {\n            encryptedValue = encryptedValue.replace(/\\//g, \"_\").replace(/\\+/g, \"-\");\n        }\n        return encryptedValue;\n    }\n    async decrypt(body) {\n        let propertiesDecryptedCount = 0;\n        if (body == null) {\n            return { body, propertiesDecryptedCount };\n        }\n        const encryptionSettings = await this.getEncryptionSetting();\n        if (!encryptionSettings)\n            return { body, propertiesDecryptedCount };\n        for (const pathToEncrypt of encryptionSettings.pathsToEncrypt) {\n            const propertyName = pathToEncrypt.slice(1);\n            if (!Object.prototype.hasOwnProperty.call(body, propertyName)) {\n                continue;\n            }\n            const settingForProperty = encryptionSettings.getEncryptionSettingForProperty(pathToEncrypt);\n            if (settingForProperty == null) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Invalid Encryption Setting for the Path: \" + pathToEncrypt);\n            }\n            body[propertyName] = await this.decryptToken(body[propertyName], settingForProperty, propertyName === \"id\");\n            propertiesDecryptedCount++;\n        }\n        return { body, propertiesDecryptedCount };\n    }\n    async decryptToken(valueToDecrypt, propertySetting, isValueId) {\n        if (typeof valueToDecrypt === \"object\") {\n            for (const key in valueToDecrypt) {\n                if (Object.prototype.hasOwnProperty.call(valueToDecrypt, key)) {\n                    valueToDecrypt[key] = await this.decryptToken(valueToDecrypt[key], propertySetting, isValueId);\n                }\n            }\n        }\n        else if (Array.isArray(valueToDecrypt)) {\n            for (let i = 0; i < valueToDecrypt.length; i++) {\n                valueToDecrypt[i] = await this.decryptToken(valueToDecrypt[i], propertySetting, isValueId);\n            }\n        }\n        else {\n            valueToDecrypt = await this.deserializeAndDecryptValue(valueToDecrypt, propertySetting, isValueId);\n        }\n        return valueToDecrypt;\n    }\n    async deserializeAndDecryptValue(valueToDecrypt, propertySetting, isValueId) {\n        if (isValueId) {\n            valueToDecrypt = valueToDecrypt.replace(/_/g, \"/\").replace(/-/g, \"+\");\n        }\n        const cipherTextWithTypeMarker = Buffer.from(valueToDecrypt, \"base64\");\n        if (cipherTextWithTypeMarker === null) {\n            return null;\n        }\n        let cipherText = Buffer.alloc(cipherTextWithTypeMarker.length - 1);\n        cipherText = Buffer.from(cipherTextWithTypeMarker.slice(1));\n        const encryptionAlgorithm = await this.buildEncryptionAlgorithm(propertySetting);\n        const plainText = encryptionAlgorithm.decrypt(cipherText);\n        if (plainText === null) {\n            throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"returned null plain text\");\n        }\n        const serializer = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.createDeserializer)(cipherTextWithTypeMarker[0]);\n        return serializer.deserialize(plainText);\n    }\n    async getEncryptionSetting(forceRefresh) {\n        const key = this.database._rid + \"/\" + this.containerRid;\n        const encryptionSetting = this.encryptionManager.encryptionSettingsCache.get(key);\n        if (forceRefresh || !encryptionSetting) {\n            return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n                const path = `/dbs/${this.database.id}/colls/${this.containerId}`;\n                const id = `dbs/${this.database.id}/colls/${this.containerId}`;\n                const response = await this.clientContext.read({\n                    path,\n                    resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.container,\n                    resourceId: id,\n                    diagnosticNode,\n                });\n                if (!response || !response.result) {\n                    throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(\"Failed to fetch container definition\");\n                }\n                const containerRid = response.result._rid;\n                const clientEncryptionPolicy = response.result.clientEncryptionPolicy;\n                const partitionKeyPaths = response.result.partitionKey.paths;\n                const updatedEncryptionSetting = await this.encryptionManager.encryptionSettingsCache.create(key, containerRid, partitionKeyPaths, clientEncryptionPolicy);\n                return updatedEncryptionSetting;\n            }, this.clientContext);\n        }\n        return encryptionSetting;\n    }\n    async buildEncryptionAlgorithm(propertySetting) {\n        const key = `${this.database._rid}/${propertySetting.encryptionKeyId}`;\n        let clientEncryptionKeyProperties = this.encryptionManager.clientEncryptionKeyPropertiesCache.get(key);\n        if (!clientEncryptionKeyProperties) {\n            clientEncryptionKeyProperties = await this.fetchClientEncryptionKey(propertySetting.encryptionKeyId);\n        }\n        try {\n            // the buildEncryptionAlgorithm will build ProtectedDEK which calls unwrapKey  using the masterKey configured in\n            // KeyEncryptionKey(created before creating Protected DEK)\n            // we get wrapped key and key wrap metadata info from clientEncryptionKeyProperties.\n            return await propertySetting.buildEncryptionAlgorithm(clientEncryptionKeyProperties, this.encryptionManager);\n        }\n        catch (err) {\n            if (err.statusCode !== _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.Forbidden)\n                throw err;\n            // if access to key is revoked, and in case there's stale value in cache\n            clientEncryptionKeyProperties = await this.fetchClientEncryptionKey(propertySetting.encryptionKeyId);\n            try {\n                // This will succeed after if client has rewrapped CEK and gateway cache has updated value.\n                return await propertySetting.buildEncryptionAlgorithm(clientEncryptionKeyProperties, this.encryptionManager, true);\n            }\n            catch (retryErr) {\n                if (retryErr.statusCode !== _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.Forbidden)\n                    throw retryErr;\n                // in case there's stale value in gateway cache. get fresh value from backend\n                clientEncryptionKeyProperties = await this.fetchClientEncryptionKey(propertySetting.encryptionKeyId, clientEncryptionKeyProperties.etag);\n                return propertySetting.buildEncryptionAlgorithm(clientEncryptionKeyProperties, this.encryptionManager);\n            }\n        }\n    }\n    async fetchClientEncryptionKey(cekId, cekEtag) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withDiagnostics)(async (diagnosticNode) => {\n            const path = `/dbs/${this.database.id}/clientencryptionkeys/${cekId}`;\n            const id = `dbs/${this.database.id}/clientencryptionkeys/${cekId}`;\n            const options = {};\n            if (cekEtag) {\n                options.accessCondition = {\n                    type: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IfNoneMatch,\n                    condition: cekEtag,\n                };\n            }\n            options.databaseRid = this.database._rid;\n            const response = await this.clientContext.read({\n                path: path,\n                resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.clientencryptionkey,\n                resourceId: id,\n                options: options,\n                diagnosticNode,\n            });\n            if (!response) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`Failed to fetch client encryption key ${cekId}`);\n            }\n            if (response.code === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.NotModified) {\n                throw new _request_index_js__WEBPACK_IMPORTED_MODULE_1__.ErrorResponse(`The Client Encryption Key with key id: ${cekId} on database: ${this.database.id} needs to be rewrapped with a valid Key Encryption Key using rewrapClientEncryptionKey. The Key Encryption Key used to wrap the Client Encryption Key has been revoked`);\n            }\n            const clientEncryptionKeyProperties = {\n                id: response.result.id,\n                encryptionAlgorithm: response.result.encryptionAlgorithm,\n                wrappedDataEncryptionKey: new Uint8Array(Buffer.from(response.result.wrappedDataEncryptionKey, \"base64\")),\n                encryptionKeyWrapMetadata: response.result.keyWrapMetadata,\n                etag: response.result._etag,\n            };\n            const key = this.database._rid + \"/\" + cekId;\n            this.encryptionManager.clientEncryptionKeyPropertiesCache.set(key, clientEncryptionKeyProperties);\n            return clientEncryptionKeyProperties;\n        }, this.clientContext);\n    }\n}\n//# sourceMappingURL=EncryptionProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionProcessor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionQueryBuilder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionQueryBuilder.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionQueryBuilder: () => (/* binding */ EncryptionQueryBuilder)\n/* harmony export */ });\n/* harmony import */ var _enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums/TypeMarker.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/TypeMarker.js\");\n/* harmony import */ var _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CosmosEncryptedNumber.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/CosmosEncryptedNumber.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Represents a builder class for building encrypted parameters in parametrized query.\n */\nclass EncryptionQueryBuilder {\n    query;\n    parameters;\n    constructor(query) {\n        this.query = query;\n        this.parameters = [];\n    }\n    /**\n     * Adds parameter to query\n     */\n    addParameter(name, value, path) {\n        if (value === null) {\n            this.parameters.push({ name: name, value: null, path: path });\n            return;\n        }\n        switch (true) {\n            case typeof value === \"boolean\":\n                this.parameters.push({\n                    name,\n                    value,\n                    type: _enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_0__.TypeMarker.Boolean,\n                    path,\n                });\n                break;\n            case typeof value === \"string\":\n                this.parameters.push({\n                    name,\n                    value,\n                    type: _enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_0__.TypeMarker.String,\n                    path,\n                });\n                break;\n            case value instanceof Date: {\n                const date = value.toISOString();\n                this.parameters.push({\n                    name: name,\n                    value: date,\n                    type: _enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_0__.TypeMarker.String,\n                    path: path,\n                });\n                break;\n            }\n            case isCosmosEncryptedNumber(value): {\n                const num = value.value;\n                if (value.numberType === _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_1__.CosmosEncryptedNumberType.Integer) {\n                    this.parameters.push({\n                        name,\n                        value: num,\n                        type: _enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_0__.TypeMarker.Long,\n                        path,\n                    });\n                }\n                else if (value.numberType === _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_1__.CosmosEncryptedNumberType.Float) {\n                    this.parameters.push({\n                        name,\n                        value: num,\n                        type: _enums_TypeMarker_js__WEBPACK_IMPORTED_MODULE_0__.TypeMarker.Double,\n                        path,\n                    });\n                }\n                break;\n            }\n            case Array.isArray(value):\n                this.parameters.push({ name, value, path });\n                break;\n            case typeof value === \"object\":\n                this.parameters.push({ name, value, path });\n                break;\n            default:\n                throw new Error(`Unsupported parameter type for parameter \"${name}\": ${typeof value}`);\n        }\n    }\n    /** Adds unencrypted parameter to query */\n    addUnencryptedParameter(name, value, path) {\n        this.parameters.push({ name: name, value: value, path: path });\n    }\n    /*\n     * @internal\n     */\n    toEncryptionSqlQuerySpec() {\n        return {\n            query: this.query,\n            parameters: this.parameters,\n        };\n    }\n}\nfunction isCosmosEncryptedNumber(val) {\n    return (val !== null &&\n        typeof val === \"object\" &&\n        typeof val.value === \"number\" &&\n        typeof val.numberType === \"string\" &&\n        (val.numberType === _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_1__.CosmosEncryptedNumberType.Integer ||\n            val.numberType === _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_1__.CosmosEncryptedNumberType.Float));\n}\n//# sourceMappingURL=EncryptionQueryBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25RdWVyeUJ1aWxkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNtRDtBQUNvQjtBQUN2RTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMscUNBQXFDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDREQUFVO0FBQ3BDO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNERBQVU7QUFDcEM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDREQUFVO0FBQ3BDO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGdGQUF5QjtBQUNsRTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNERBQVU7QUFDeEM7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSw4Q0FBOEMsZ0ZBQXlCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw0REFBVTtBQUN4QztBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxtQkFBbUI7QUFDMUQ7QUFDQTtBQUNBLHVDQUF1QyxtQkFBbUI7QUFDMUQ7QUFDQTtBQUNBLDZFQUE2RSxLQUFLLEtBQUssYUFBYTtBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixzQ0FBc0M7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZ0ZBQXlCO0FBQ3JELCtCQUErQixnRkFBeUI7QUFDeEQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9FbmNyeXB0aW9uUXVlcnlCdWlsZGVyLmpzPzRjOGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBUeXBlTWFya2VyIH0gZnJvbSBcIi4vZW51bXMvVHlwZU1hcmtlci5qc1wiO1xuaW1wb3J0IHsgQ29zbW9zRW5jcnlwdGVkTnVtYmVyVHlwZSB9IGZyb20gXCIuL0Nvc21vc0VuY3J5cHRlZE51bWJlci5qc1wiO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEgYnVpbGRlciBjbGFzcyBmb3IgYnVpbGRpbmcgZW5jcnlwdGVkIHBhcmFtZXRlcnMgaW4gcGFyYW1ldHJpemVkIHF1ZXJ5LlxuICovXG5leHBvcnQgY2xhc3MgRW5jcnlwdGlvblF1ZXJ5QnVpbGRlciB7XG4gICAgcXVlcnk7XG4gICAgcGFyYW1ldGVycztcbiAgICBjb25zdHJ1Y3RvcihxdWVyeSkge1xuICAgICAgICB0aGlzLnF1ZXJ5ID0gcXVlcnk7XG4gICAgICAgIHRoaXMucGFyYW1ldGVycyA9IFtdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGRzIHBhcmFtZXRlciB0byBxdWVyeVxuICAgICAqL1xuICAgIGFkZFBhcmFtZXRlcihuYW1lLCB2YWx1ZSwgcGF0aCkge1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMucGFyYW1ldGVycy5wdXNoKHsgbmFtZTogbmFtZSwgdmFsdWU6IG51bGwsIHBhdGg6IHBhdGggfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoICh0cnVlKSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVvZiB2YWx1ZSA9PT0gXCJib29sZWFuXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbWV0ZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogVHlwZU1hcmtlci5Cb29sZWFuLFxuICAgICAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbWV0ZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogVHlwZU1hcmtlci5TdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIHZhbHVlIGluc3RhbmNlb2YgRGF0ZToge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSB2YWx1ZS50b0lTT1N0cmluZygpO1xuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1ldGVycy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGRhdGUsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFR5cGVNYXJrZXIuU3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSBpc0Nvc21vc0VuY3J5cHRlZE51bWJlcih2YWx1ZSk6IHtcbiAgICAgICAgICAgICAgICBjb25zdCBudW0gPSB2YWx1ZS52YWx1ZTtcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUubnVtYmVyVHlwZSA9PT0gQ29zbW9zRW5jcnlwdGVkTnVtYmVyVHlwZS5JbnRlZ2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW1ldGVycy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbnVtLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogVHlwZU1hcmtlci5Mb25nLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlLm51bWJlclR5cGUgPT09IENvc21vc0VuY3J5cHRlZE51bWJlclR5cGUuRmxvYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbWV0ZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBudW0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBUeXBlTWFya2VyLkRvdWJsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgQXJyYXkuaXNBcnJheSh2YWx1ZSk6XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbWV0ZXJzLnB1c2goeyBuYW1lLCB2YWx1ZSwgcGF0aCB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiOlxuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1ldGVycy5wdXNoKHsgbmFtZSwgdmFsdWUsIHBhdGggfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgcGFyYW1ldGVyIHR5cGUgZm9yIHBhcmFtZXRlciBcIiR7bmFtZX1cIjogJHt0eXBlb2YgdmFsdWV9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqIEFkZHMgdW5lbmNyeXB0ZWQgcGFyYW1ldGVyIHRvIHF1ZXJ5ICovXG4gICAgYWRkVW5lbmNyeXB0ZWRQYXJhbWV0ZXIobmFtZSwgdmFsdWUsIHBhdGgpIHtcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzLnB1c2goeyBuYW1lOiBuYW1lLCB2YWx1ZTogdmFsdWUsIHBhdGg6IHBhdGggfSk7XG4gICAgfVxuICAgIC8qXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgdG9FbmNyeXB0aW9uU3FsUXVlcnlTcGVjKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcXVlcnk6IHRoaXMucXVlcnksXG4gICAgICAgICAgICBwYXJhbWV0ZXJzOiB0aGlzLnBhcmFtZXRlcnMsXG4gICAgICAgIH07XG4gICAgfVxufVxuZnVuY3Rpb24gaXNDb3Ntb3NFbmNyeXB0ZWROdW1iZXIodmFsKSB7XG4gICAgcmV0dXJuICh2YWwgIT09IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIHZhbCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICB0eXBlb2YgdmFsLnZhbHVlID09PSBcIm51bWJlclwiICYmXG4gICAgICAgIHR5cGVvZiB2YWwubnVtYmVyVHlwZSA9PT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICAodmFsLm51bWJlclR5cGUgPT09IENvc21vc0VuY3J5cHRlZE51bWJlclR5cGUuSW50ZWdlciB8fFxuICAgICAgICAgICAgdmFsLm51bWJlclR5cGUgPT09IENvc21vc0VuY3J5cHRlZE51bWJlclR5cGUuRmxvYXQpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVuY3J5cHRpb25RdWVyeUJ1aWxkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionQueryBuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettingForProperty.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettingForProperty.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionSettingForProperty: () => (/* binding */ EncryptionSettingForProperty)\n/* harmony export */ });\n/* harmony import */ var _AeadAes256CbcHmacSha256Algorithm_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AeadAes256CbcHmacSha256Algorithm/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/AeadAes256CbcHmacSha256Algorithm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Represents the encryption setting for a specific property in an item.\n * @hidden\n */\nclass EncryptionSettingForProperty {\n    // client encryption key id.\n    encryptionKeyId;\n    // encryption type - Deterministic/Randomized.\n    encryptionType;\n    // encryption algorithm - AEAD_AES_256_CBC_HMAC_SHA256\n    encryptionAlgorithm;\n    constructor(clientEncryptionIncludedPath) {\n        this.encryptionKeyId = clientEncryptionIncludedPath.clientEncryptionKeyId;\n        this.encryptionType = clientEncryptionIncludedPath.encryptionType;\n        this.encryptionAlgorithm = clientEncryptionIncludedPath.encryptionAlgorithm;\n    }\n    async buildEncryptionAlgorithm(clientEncryptionKeyProperties, encryptionManager, forceRefresh) {\n        const protectedDataEncryptionKey = await this.buildProtectedDataEncryptionKey(clientEncryptionKeyProperties, encryptionManager, forceRefresh);\n        const encryptionAlgorithm = new _AeadAes256CbcHmacSha256Algorithm_index_js__WEBPACK_IMPORTED_MODULE_0__.AeadAes256CbcHmacSha256Algorithm(protectedDataEncryptionKey, this.encryptionType);\n        return encryptionAlgorithm;\n    }\n    async buildProtectedDataEncryptionKey(clientEncryptionKeyProperties, encryptionManager, forceRefresh) {\n        const keyEncryptionKey = encryptionManager.keyEncryptionKeyCache.getOrCreate(clientEncryptionKeyProperties.encryptionKeyWrapMetadata.name, clientEncryptionKeyProperties.encryptionKeyWrapMetadata.value, encryptionManager.encryptionKeyStoreProvider);\n        const protectedDataEncryptionKey = await encryptionManager.protectedDataEncryptionKeyCache.getOrCreate(this.encryptionKeyId, keyEncryptionKey, clientEncryptionKeyProperties.wrappedDataEncryptionKey, forceRefresh);\n        return protectedDataEncryptionKey;\n    }\n}\n//# sourceMappingURL=EncryptionSettingForProperty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25TZXR0aW5nRm9yUHJvcGVydHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQytGO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx3R0FBZ0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25TZXR0aW5nRm9yUHJvcGVydHkuanM/M2I2MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEFlYWRBZXMyNTZDYmNIbWFjU2hhMjU2QWxnb3JpdGhtIH0gZnJvbSBcIi4vQWVhZEFlczI1NkNiY0htYWNTaGEyNTZBbGdvcml0aG0vaW5kZXguanNcIjtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgZW5jcnlwdGlvbiBzZXR0aW5nIGZvciBhIHNwZWNpZmljIHByb3BlcnR5IGluIGFuIGl0ZW0uXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBjbGFzcyBFbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnR5IHtcbiAgICAvLyBjbGllbnQgZW5jcnlwdGlvbiBrZXkgaWQuXG4gICAgZW5jcnlwdGlvbktleUlkO1xuICAgIC8vIGVuY3J5cHRpb24gdHlwZSAtIERldGVybWluaXN0aWMvUmFuZG9taXplZC5cbiAgICBlbmNyeXB0aW9uVHlwZTtcbiAgICAvLyBlbmNyeXB0aW9uIGFsZ29yaXRobSAtIEFFQURfQUVTXzI1Nl9DQkNfSE1BQ19TSEEyNTZcbiAgICBlbmNyeXB0aW9uQWxnb3JpdGhtO1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudEVuY3J5cHRpb25JbmNsdWRlZFBhdGgpIHtcbiAgICAgICAgdGhpcy5lbmNyeXB0aW9uS2V5SWQgPSBjbGllbnRFbmNyeXB0aW9uSW5jbHVkZWRQYXRoLmNsaWVudEVuY3J5cHRpb25LZXlJZDtcbiAgICAgICAgdGhpcy5lbmNyeXB0aW9uVHlwZSA9IGNsaWVudEVuY3J5cHRpb25JbmNsdWRlZFBhdGguZW5jcnlwdGlvblR5cGU7XG4gICAgICAgIHRoaXMuZW5jcnlwdGlvbkFsZ29yaXRobSA9IGNsaWVudEVuY3J5cHRpb25JbmNsdWRlZFBhdGguZW5jcnlwdGlvbkFsZ29yaXRobTtcbiAgICB9XG4gICAgYXN5bmMgYnVpbGRFbmNyeXB0aW9uQWxnb3JpdGhtKGNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzLCBlbmNyeXB0aW9uTWFuYWdlciwgZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgIGNvbnN0IHByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5ID0gYXdhaXQgdGhpcy5idWlsZFByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5KGNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzLCBlbmNyeXB0aW9uTWFuYWdlciwgZm9yY2VSZWZyZXNoKTtcbiAgICAgICAgY29uc3QgZW5jcnlwdGlvbkFsZ29yaXRobSA9IG5ldyBBZWFkQWVzMjU2Q2JjSG1hY1NoYTI1NkFsZ29yaXRobShwcm90ZWN0ZWREYXRhRW5jcnlwdGlvbktleSwgdGhpcy5lbmNyeXB0aW9uVHlwZSk7XG4gICAgICAgIHJldHVybiBlbmNyeXB0aW9uQWxnb3JpdGhtO1xuICAgIH1cbiAgICBhc3luYyBidWlsZFByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5KGNsaWVudEVuY3J5cHRpb25LZXlQcm9wZXJ0aWVzLCBlbmNyeXB0aW9uTWFuYWdlciwgZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgIGNvbnN0IGtleUVuY3J5cHRpb25LZXkgPSBlbmNyeXB0aW9uTWFuYWdlci5rZXlFbmNyeXB0aW9uS2V5Q2FjaGUuZ2V0T3JDcmVhdGUoY2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXMuZW5jcnlwdGlvbktleVdyYXBNZXRhZGF0YS5uYW1lLCBjbGllbnRFbmNyeXB0aW9uS2V5UHJvcGVydGllcy5lbmNyeXB0aW9uS2V5V3JhcE1ldGFkYXRhLnZhbHVlLCBlbmNyeXB0aW9uTWFuYWdlci5lbmNyeXB0aW9uS2V5U3RvcmVQcm92aWRlcik7XG4gICAgICAgIGNvbnN0IHByb3RlY3RlZERhdGFFbmNyeXB0aW9uS2V5ID0gYXdhaXQgZW5jcnlwdGlvbk1hbmFnZXIucHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXlDYWNoZS5nZXRPckNyZWF0ZSh0aGlzLmVuY3J5cHRpb25LZXlJZCwga2V5RW5jcnlwdGlvbktleSwgY2xpZW50RW5jcnlwdGlvbktleVByb3BlcnRpZXMud3JhcHBlZERhdGFFbmNyeXB0aW9uS2V5LCBmb3JjZVJlZnJlc2gpO1xuICAgICAgICByZXR1cm4gcHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jcnlwdGlvblNldHRpbmdGb3JQcm9wZXJ0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettingForProperty.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettings.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettings.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionSettings: () => (/* binding */ EncryptionSettings)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * stores partitionKeyPaths, all the pathsToEncrypt, and encryption settings (cekId, encryption type, and algorithm) for each property.\n * see {@link EncryptionSettingForProperty}\n * @hidden\n */\nclass EncryptionSettings {\n    id; // databaseRid + '/' + containerRid\n    containerRid;\n    partitionKeyPaths;\n    pathsToEncrypt = [];\n    // key is property path\n    encryptionSettingForProperties = {};\n    // getContainerRid\n    constructor(id, containerRid, partitionKeyPaths) {\n        this.id = id;\n        this.containerRid = containerRid;\n        this.partitionKeyPaths = partitionKeyPaths;\n    }\n    setEncryptionSettingForProperty(key, encryptionSettingForProperty) {\n        this.encryptionSettingForProperties[key] = encryptionSettingForProperty;\n    }\n    getEncryptionSettingForProperty(propertyName) {\n        return this.encryptionSettingForProperties[propertyName];\n    }\n}\n//# sourceMappingURL=EncryptionSettings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25TZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNPO0FBQ1AsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0VuY3J5cHRpb25TZXR0aW5ncy5qcz81Njk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBzdG9yZXMgcGFydGl0aW9uS2V5UGF0aHMsIGFsbCB0aGUgcGF0aHNUb0VuY3J5cHQsIGFuZCBlbmNyeXB0aW9uIHNldHRpbmdzIChjZWtJZCwgZW5jcnlwdGlvbiB0eXBlLCBhbmQgYWxnb3JpdGhtKSBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqIHNlZSB7QGxpbmsgRW5jcnlwdGlvblNldHRpbmdGb3JQcm9wZXJ0eX1cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIEVuY3J5cHRpb25TZXR0aW5ncyB7XG4gICAgaWQ7IC8vIGRhdGFiYXNlUmlkICsgJy8nICsgY29udGFpbmVyUmlkXG4gICAgY29udGFpbmVyUmlkO1xuICAgIHBhcnRpdGlvbktleVBhdGhzO1xuICAgIHBhdGhzVG9FbmNyeXB0ID0gW107XG4gICAgLy8ga2V5IGlzIHByb3BlcnR5IHBhdGhcbiAgICBlbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnRpZXMgPSB7fTtcbiAgICAvLyBnZXRDb250YWluZXJSaWRcbiAgICBjb25zdHJ1Y3RvcihpZCwgY29udGFpbmVyUmlkLCBwYXJ0aXRpb25LZXlQYXRocykge1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY29udGFpbmVyUmlkID0gY29udGFpbmVyUmlkO1xuICAgICAgICB0aGlzLnBhcnRpdGlvbktleVBhdGhzID0gcGFydGl0aW9uS2V5UGF0aHM7XG4gICAgfVxuICAgIHNldEVuY3J5cHRpb25TZXR0aW5nRm9yUHJvcGVydHkoa2V5LCBlbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnR5KSB7XG4gICAgICAgIHRoaXMuZW5jcnlwdGlvblNldHRpbmdGb3JQcm9wZXJ0aWVzW2tleV0gPSBlbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnR5O1xuICAgIH1cbiAgICBnZXRFbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnR5KHByb3BlcnR5TmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnRpZXNbcHJvcGVydHlOYW1lXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbmNyeXB0aW9uU2V0dGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/KeyEncryptionKey.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/KeyEncryptionKey.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyEncryptionKey: () => (/* binding */ KeyEncryptionKey)\n/* harmony export */ });\n/* harmony import */ var _enums_KeyEncryptionAlgorithm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums/KeyEncryptionAlgorithm.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/KeyEncryptionAlgorithm.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A wrapper class containing the info about the key-protecting key stored in an external key provider\n * and provides interface to wrap and unwrap the key.\n */\nclass KeyEncryptionKey {\n    encryptionAlgorithm;\n    name;\n    path;\n    keyStoreProvider;\n    constructor(name, path, keyStoreProvider) {\n        this.name = name;\n        this.path = path;\n        this.keyStoreProvider = keyStoreProvider;\n        this.encryptionAlgorithm = _enums_KeyEncryptionAlgorithm_js__WEBPACK_IMPORTED_MODULE_0__.KeyEncryptionAlgorithm.RSA_OAEP;\n    }\n    async wrapEncryptionKey(plainTextEncryptionKey) {\n        return this.keyStoreProvider.wrapKey(this.path, this.encryptionAlgorithm, plainTextEncryptionKey);\n    }\n    async unwrapEncryptionKey(wrappedEncryptionKey) {\n        return this.keyStoreProvider.unwrapKey(this.path, this.encryptionAlgorithm, wrappedEncryptionKey);\n    }\n}\n//# sourceMappingURL=KeyEncryptionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL0tleUVuY3J5cHRpb25LZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzJFO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG9GQUFzQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vS2V5RW5jcnlwdGlvbktleS5qcz8yN2M3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgS2V5RW5jcnlwdGlvbkFsZ29yaXRobSB9IGZyb20gXCIuL2VudW1zL0tleUVuY3J5cHRpb25BbGdvcml0aG0uanNcIjtcbi8qKlxuICogQSB3cmFwcGVyIGNsYXNzIGNvbnRhaW5pbmcgdGhlIGluZm8gYWJvdXQgdGhlIGtleS1wcm90ZWN0aW5nIGtleSBzdG9yZWQgaW4gYW4gZXh0ZXJuYWwga2V5IHByb3ZpZGVyXG4gKiBhbmQgcHJvdmlkZXMgaW50ZXJmYWNlIHRvIHdyYXAgYW5kIHVud3JhcCB0aGUga2V5LlxuICovXG5leHBvcnQgY2xhc3MgS2V5RW5jcnlwdGlvbktleSB7XG4gICAgZW5jcnlwdGlvbkFsZ29yaXRobTtcbiAgICBuYW1lO1xuICAgIHBhdGg7XG4gICAga2V5U3RvcmVQcm92aWRlcjtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBwYXRoLCBrZXlTdG9yZVByb3ZpZGVyKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMucGF0aCA9IHBhdGg7XG4gICAgICAgIHRoaXMua2V5U3RvcmVQcm92aWRlciA9IGtleVN0b3JlUHJvdmlkZXI7XG4gICAgICAgIHRoaXMuZW5jcnlwdGlvbkFsZ29yaXRobSA9IEtleUVuY3J5cHRpb25BbGdvcml0aG0uUlNBX09BRVA7XG4gICAgfVxuICAgIGFzeW5jIHdyYXBFbmNyeXB0aW9uS2V5KHBsYWluVGV4dEVuY3J5cHRpb25LZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5U3RvcmVQcm92aWRlci53cmFwS2V5KHRoaXMucGF0aCwgdGhpcy5lbmNyeXB0aW9uQWxnb3JpdGhtLCBwbGFpblRleHRFbmNyeXB0aW9uS2V5KTtcbiAgICB9XG4gICAgYXN5bmMgdW53cmFwRW5jcnlwdGlvbktleSh3cmFwcGVkRW5jcnlwdGlvbktleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5rZXlTdG9yZVByb3ZpZGVyLnVud3JhcEtleSh0aGlzLnBhdGgsIHRoaXMuZW5jcnlwdGlvbkFsZ29yaXRobSwgd3JhcHBlZEVuY3J5cHRpb25LZXkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtleUVuY3J5cHRpb25LZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/KeyEncryptionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/BooleanSerializer.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/BooleanSerializer.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BooleanSerializer: () => (/* binding */ BooleanSerializer)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass BooleanSerializer {\n    serialize(value) {\n        const numValue = value ? 1 : 0;\n        const buffer = Buffer.alloc(8);\n        buffer.writeBigInt64LE(BigInt(numValue), 0);\n        return buffer;\n    }\n    deserialize(bytes) {\n        if (!bytes || bytes.length < 1) {\n            throw new Error(\"Invalid byte array for deserialization\");\n        }\n        return !!bytes[0];\n    }\n}\n//# sourceMappingURL=BooleanSerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL1NlcmlhbGl6ZXJzL0Jvb2xlYW5TZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL1NlcmlhbGl6ZXJzL0Jvb2xlYW5TZXJpYWxpemVyLmpzPzZhMTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY2xhc3MgQm9vbGVhblNlcmlhbGl6ZXIge1xuICAgIHNlcmlhbGl6ZSh2YWx1ZSkge1xuICAgICAgICBjb25zdCBudW1WYWx1ZSA9IHZhbHVlID8gMSA6IDA7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYyg4KTtcbiAgICAgICAgYnVmZmVyLndyaXRlQmlnSW50NjRMRShCaWdJbnQobnVtVmFsdWUpLCAwKTtcbiAgICAgICAgcmV0dXJuIGJ1ZmZlcjtcbiAgICB9XG4gICAgZGVzZXJpYWxpemUoYnl0ZXMpIHtcbiAgICAgICAgaWYgKCFieXRlcyB8fCBieXRlcy5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJ5dGUgYXJyYXkgZm9yIGRlc2VyaWFsaXphdGlvblwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gISFieXRlc1swXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cb29sZWFuU2VyaWFsaXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/BooleanSerializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/FloatSerializer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/FloatSerializer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FloatSerializer: () => (/* binding */ FloatSerializer)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass FloatSerializer {\n    deserialize(bytes) {\n        if (!bytes || bytes.length < 8) {\n            throw new Error(\"Invalid byte array for deserialization\");\n        }\n        const res = bytes.readDoubleLE(0);\n        return res;\n    }\n    serialize(value) {\n        if (!Number.isFinite(value)) {\n            throw new Error(\"Value is out of range\");\n        }\n        const buffer = Buffer.alloc(8);\n        buffer.writeDoubleLE(value, 0);\n        return buffer;\n    }\n}\n//# sourceMappingURL=FloatSerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL1NlcmlhbGl6ZXJzL0Zsb2F0U2VyaWFsaXplci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9TZXJpYWxpemVycy9GbG9hdFNlcmlhbGl6ZXIuanM/ZGM1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBjbGFzcyBGbG9hdFNlcmlhbGl6ZXIge1xuICAgIGRlc2VyaWFsaXplKGJ5dGVzKSB7XG4gICAgICAgIGlmICghYnl0ZXMgfHwgYnl0ZXMubGVuZ3RoIDwgOCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBieXRlIGFycmF5IGZvciBkZXNlcmlhbGl6YXRpb25cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzID0gYnl0ZXMucmVhZERvdWJsZUxFKDApO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBzZXJpYWxpemUodmFsdWUpIHtcbiAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodmFsdWUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJWYWx1ZSBpcyBvdXQgb2YgcmFuZ2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDgpO1xuICAgICAgICBidWZmZXIud3JpdGVEb3VibGVMRSh2YWx1ZSwgMCk7XG4gICAgICAgIHJldHVybiBidWZmZXI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmxvYXRTZXJpYWxpemVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/FloatSerializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/NumberSerializer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/NumberSerializer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NumberSerializer: () => (/* binding */ NumberSerializer)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass NumberSerializer {\n    deserialize(bytes) {\n        if (!bytes || bytes.length < 8) {\n            throw new Error(\"Invalid byte array for deserialization\");\n        }\n        const num = Number(bytes.readBigInt64LE(0));\n        return num;\n    }\n    serialize(value) {\n        const newValue = BigInt(value);\n        const buffer = Buffer.alloc(8);\n        buffer.writeBigInt64LE(newValue, 0);\n        return buffer;\n    }\n}\n//# sourceMappingURL=NumberSerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL1NlcmlhbGl6ZXJzL051bWJlclNlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9TZXJpYWxpemVycy9OdW1iZXJTZXJpYWxpemVyLmpzPzg5NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY2xhc3MgTnVtYmVyU2VyaWFsaXplciB7XG4gICAgZGVzZXJpYWxpemUoYnl0ZXMpIHtcbiAgICAgICAgaWYgKCFieXRlcyB8fCBieXRlcy5sZW5ndGggPCA4KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJ5dGUgYXJyYXkgZm9yIGRlc2VyaWFsaXphdGlvblwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBudW0gPSBOdW1iZXIoYnl0ZXMucmVhZEJpZ0ludDY0TEUoMCkpO1xuICAgICAgICByZXR1cm4gbnVtO1xuICAgIH1cbiAgICBzZXJpYWxpemUodmFsdWUpIHtcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBCaWdJbnQodmFsdWUpO1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoOCk7XG4gICAgICAgIGJ1ZmZlci53cml0ZUJpZ0ludDY0TEUobmV3VmFsdWUsIDApO1xuICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU51bWJlclNlcmlhbGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/NumberSerializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/StringSerializer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/StringSerializer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringSerializer: () => (/* binding */ StringSerializer)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass StringSerializer {\n    static characterEncoding = \"utf-8\";\n    deserialize(bytes) {\n        return bytes.toString(StringSerializer.characterEncoding);\n    }\n    serialize(value) {\n        return Buffer.from(value, StringSerializer.characterEncoding);\n    }\n}\n//# sourceMappingURL=StringSerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL1NlcmlhbGl6ZXJzL1N0cmluZ1NlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9TZXJpYWxpemVycy9TdHJpbmdTZXJpYWxpemVyLmpzPzRiZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY2xhc3MgU3RyaW5nU2VyaWFsaXplciB7XG4gICAgc3RhdGljIGNoYXJhY3RlckVuY29kaW5nID0gXCJ1dGYtOFwiO1xuICAgIGRlc2VyaWFsaXplKGJ5dGVzKSB7XG4gICAgICAgIHJldHVybiBieXRlcy50b1N0cmluZyhTdHJpbmdTZXJpYWxpemVyLmNoYXJhY3RlckVuY29kaW5nKTtcbiAgICB9XG4gICAgc2VyaWFsaXplKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSwgU3RyaW5nU2VyaWFsaXplci5jaGFyYWN0ZXJFbmNvZGluZyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RyaW5nU2VyaWFsaXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/StringSerializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BooleanSerializer: () => (/* reexport safe */ _BooleanSerializer_js__WEBPACK_IMPORTED_MODULE_0__.BooleanSerializer),\n/* harmony export */   FloatSerializer: () => (/* reexport safe */ _FloatSerializer_js__WEBPACK_IMPORTED_MODULE_2__.FloatSerializer),\n/* harmony export */   NumberSerializer: () => (/* reexport safe */ _NumberSerializer_js__WEBPACK_IMPORTED_MODULE_1__.NumberSerializer),\n/* harmony export */   StringSerializer: () => (/* reexport safe */ _StringSerializer_js__WEBPACK_IMPORTED_MODULE_3__.StringSerializer)\n/* harmony export */ });\n/* harmony import */ var _BooleanSerializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BooleanSerializer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/BooleanSerializer.js\");\n/* harmony import */ var _NumberSerializer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NumberSerializer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/NumberSerializer.js\");\n/* harmony import */ var _FloatSerializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FloatSerializer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/FloatSerializer.js\");\n/* harmony import */ var _StringSerializer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StringSerializer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/StringSerializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL1NlcmlhbGl6ZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUNGO0FBQ0Y7QUFDRTtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9TZXJpYWxpemVycy9pbmRleC5qcz9kYzA5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgQm9vbGVhblNlcmlhbGl6ZXIgfSBmcm9tIFwiLi9Cb29sZWFuU2VyaWFsaXplci5qc1wiO1xuZXhwb3J0IHsgTnVtYmVyU2VyaWFsaXplciB9IGZyb20gXCIuL051bWJlclNlcmlhbGl6ZXIuanNcIjtcbmV4cG9ydCB7IEZsb2F0U2VyaWFsaXplciB9IGZyb20gXCIuL0Zsb2F0U2VyaWFsaXplci5qc1wiO1xuZXhwb3J0IHsgU3RyaW5nU2VyaWFsaXplciB9IGZyb20gXCIuL1N0cmluZ1NlcmlhbGl6ZXIuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/Serializers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionAlgorithm.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionAlgorithm.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionAlgorithm: () => (/* binding */ EncryptionAlgorithm)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** Encryption Algorithms supported for data encryption */\nvar EncryptionAlgorithm;\n(function (EncryptionAlgorithm) {\n    /**  Represents the authenticated encryption algorithm with associated data as described in\n          http://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05. */\n    EncryptionAlgorithm[\"AEAD_AES_256_CBC_HMAC_SHA256\"] = \"AEAD_AES_256_CBC_HMAC_SHA256\";\n})(EncryptionAlgorithm || (EncryptionAlgorithm = {}));\n//# sourceMappingURL=EncryptionAlgorithm.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL0VuY3J5cHRpb25BbGdvcml0aG0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtEQUFrRDtBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9lbnVtcy9FbmNyeXB0aW9uQWxnb3JpdGhtLmpzP2U0OTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKiogRW5jcnlwdGlvbiBBbGdvcml0aG1zIHN1cHBvcnRlZCBmb3IgZGF0YSBlbmNyeXB0aW9uICovXG5leHBvcnQgdmFyIEVuY3J5cHRpb25BbGdvcml0aG07XG4oZnVuY3Rpb24gKEVuY3J5cHRpb25BbGdvcml0aG0pIHtcbiAgICAvKiogIFJlcHJlc2VudHMgdGhlIGF1dGhlbnRpY2F0ZWQgZW5jcnlwdGlvbiBhbGdvcml0aG0gd2l0aCBhc3NvY2lhdGVkIGRhdGEgYXMgZGVzY3JpYmVkIGluXG4gICAgICAgICAgaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvZHJhZnQtbWNncmV3LWFlYWQtYWVzLWNiYy1obWFjLXNoYTItMDUuICovXG4gICAgRW5jcnlwdGlvbkFsZ29yaXRobVtcIkFFQURfQUVTXzI1Nl9DQkNfSE1BQ19TSEEyNTZcIl0gPSBcIkFFQURfQUVTXzI1Nl9DQkNfSE1BQ19TSEEyNTZcIjtcbn0pKEVuY3J5cHRpb25BbGdvcml0aG0gfHwgKEVuY3J5cHRpb25BbGdvcml0aG0gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jcnlwdGlvbkFsZ29yaXRobS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionAlgorithm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionKeyResolverName.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionKeyResolverName.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionKeyResolverName: () => (/* binding */ EncryptionKeyResolverName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** Names of implementations of @see {@link EncryptionKeyResolver} */\nvar EncryptionKeyResolverName;\n(function (EncryptionKeyResolverName) {\n    /** Name of @see {@link AzureKeyVaultEncryptionKeyResolver} implementation for key encryption keys in Azure Key vault*/\n    EncryptionKeyResolverName[\"AzureKeyVault\"] = \"AZURE_KEY_VAULT\";\n})(EncryptionKeyResolverName || (EncryptionKeyResolverName = {}));\n//# sourceMappingURL=EncryptionKeyResolverName.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL0VuY3J5cHRpb25LZXlSZXNvbHZlck5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxzQ0FBc0MsNkJBQTZCO0FBQzVEO0FBQ1A7QUFDQSxzQkFBc0IsMENBQTBDO0FBQ2hFO0FBQ0EsQ0FBQyw4REFBOEQ7QUFDL0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vZW51bXMvRW5jcnlwdGlvbktleVJlc29sdmVyTmFtZS5qcz8xMDVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqIE5hbWVzIG9mIGltcGxlbWVudGF0aW9ucyBvZiBAc2VlIHtAbGluayBFbmNyeXB0aW9uS2V5UmVzb2x2ZXJ9ICovXG5leHBvcnQgdmFyIEVuY3J5cHRpb25LZXlSZXNvbHZlck5hbWU7XG4oZnVuY3Rpb24gKEVuY3J5cHRpb25LZXlSZXNvbHZlck5hbWUpIHtcbiAgICAvKiogTmFtZSBvZiBAc2VlIHtAbGluayBBenVyZUtleVZhdWx0RW5jcnlwdGlvbktleVJlc29sdmVyfSBpbXBsZW1lbnRhdGlvbiBmb3Iga2V5IGVuY3J5cHRpb24ga2V5cyBpbiBBenVyZSBLZXkgdmF1bHQqL1xuICAgIEVuY3J5cHRpb25LZXlSZXNvbHZlck5hbWVbXCJBenVyZUtleVZhdWx0XCJdID0gXCJBWlVSRV9LRVlfVkFVTFRcIjtcbn0pKEVuY3J5cHRpb25LZXlSZXNvbHZlck5hbWUgfHwgKEVuY3J5cHRpb25LZXlSZXNvbHZlck5hbWUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jcnlwdGlvbktleVJlc29sdmVyTmFtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionKeyResolverName.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionType.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionType.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionType: () => (/* binding */ EncryptionType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The type of encryption to be performed.\n */\nvar EncryptionType;\n(function (EncryptionType) {\n    /** Deterministic type will always produce same encrypted value for same plaintext. */\n    EncryptionType[\"DETERMINISTIC\"] = \"Deterministic\";\n    /** Randomized type will produce different encrypted value for same plaintext. */\n    EncryptionType[\"RANDOMIZED\"] = \"Randomized\";\n})(EncryptionType || (EncryptionType = {}));\n//# sourceMappingURL=EncryptionType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL0VuY3J5cHRpb25UeXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vZW51bXMvRW5jcnlwdGlvblR5cGUuanM/Y2U0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIHR5cGUgb2YgZW5jcnlwdGlvbiB0byBiZSBwZXJmb3JtZWQuXG4gKi9cbmV4cG9ydCB2YXIgRW5jcnlwdGlvblR5cGU7XG4oZnVuY3Rpb24gKEVuY3J5cHRpb25UeXBlKSB7XG4gICAgLyoqIERldGVybWluaXN0aWMgdHlwZSB3aWxsIGFsd2F5cyBwcm9kdWNlIHNhbWUgZW5jcnlwdGVkIHZhbHVlIGZvciBzYW1lIHBsYWludGV4dC4gKi9cbiAgICBFbmNyeXB0aW9uVHlwZVtcIkRFVEVSTUlOSVNUSUNcIl0gPSBcIkRldGVybWluaXN0aWNcIjtcbiAgICAvKiogUmFuZG9taXplZCB0eXBlIHdpbGwgcHJvZHVjZSBkaWZmZXJlbnQgZW5jcnlwdGVkIHZhbHVlIGZvciBzYW1lIHBsYWludGV4dC4gKi9cbiAgICBFbmNyeXB0aW9uVHlwZVtcIlJBTkRPTUlaRURcIl0gPSBcIlJhbmRvbWl6ZWRcIjtcbn0pKEVuY3J5cHRpb25UeXBlIHx8IChFbmNyeXB0aW9uVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbmNyeXB0aW9uVHlwZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/KeyEncryptionAlgorithm.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/enums/KeyEncryptionAlgorithm.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyEncryptionAlgorithm: () => (/* binding */ KeyEncryptionAlgorithm)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** The algorithms used to wrap/unwrap data encryption key with key encryption key.  */\nvar KeyEncryptionAlgorithm;\n(function (KeyEncryptionAlgorithm) {\n    /** name of supported algo */\n    KeyEncryptionAlgorithm[\"RSA_OAEP\"] = \"RSA-OAEP\";\n})(KeyEncryptionAlgorithm || (KeyEncryptionAlgorithm = {}));\n//# sourceMappingURL=KeyEncryptionAlgorithm.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL0tleUVuY3J5cHRpb25BbGdvcml0aG0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3REFBd0Q7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL2VuY3J5cHRpb24vZW51bXMvS2V5RW5jcnlwdGlvbkFsZ29yaXRobS5qcz8xN2MzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqIFRoZSBhbGdvcml0aG1zIHVzZWQgdG8gd3JhcC91bndyYXAgZGF0YSBlbmNyeXB0aW9uIGtleSB3aXRoIGtleSBlbmNyeXB0aW9uIGtleS4gICovXG5leHBvcnQgdmFyIEtleUVuY3J5cHRpb25BbGdvcml0aG07XG4oZnVuY3Rpb24gKEtleUVuY3J5cHRpb25BbGdvcml0aG0pIHtcbiAgICAvKiogbmFtZSBvZiBzdXBwb3J0ZWQgYWxnbyAqL1xuICAgIEtleUVuY3J5cHRpb25BbGdvcml0aG1bXCJSU0FfT0FFUFwiXSA9IFwiUlNBLU9BRVBcIjtcbn0pKEtleUVuY3J5cHRpb25BbGdvcml0aG0gfHwgKEtleUVuY3J5cHRpb25BbGdvcml0aG0gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9S2V5RW5jcnlwdGlvbkFsZ29yaXRobS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/KeyEncryptionAlgorithm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/TypeMarker.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/enums/TypeMarker.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeMarker: () => (/* binding */ TypeMarker)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar TypeMarker;\n(function (TypeMarker) {\n    TypeMarker[TypeMarker[\"Null\"] = 1] = \"Null\";\n    TypeMarker[TypeMarker[\"Boolean\"] = 2] = \"Boolean\";\n    TypeMarker[TypeMarker[\"Double\"] = 3] = \"Double\";\n    TypeMarker[TypeMarker[\"Long\"] = 4] = \"Long\";\n    TypeMarker[TypeMarker[\"String\"] = 5] = \"String\";\n})(TypeMarker || (TypeMarker = {}));\n//# sourceMappingURL=TypeMarker.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL1R5cGVNYXJrZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL1R5cGVNYXJrZXIuanM/N2ZhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB2YXIgVHlwZU1hcmtlcjtcbihmdW5jdGlvbiAoVHlwZU1hcmtlcikge1xuICAgIFR5cGVNYXJrZXJbVHlwZU1hcmtlcltcIk51bGxcIl0gPSAxXSA9IFwiTnVsbFwiO1xuICAgIFR5cGVNYXJrZXJbVHlwZU1hcmtlcltcIkJvb2xlYW5cIl0gPSAyXSA9IFwiQm9vbGVhblwiO1xuICAgIFR5cGVNYXJrZXJbVHlwZU1hcmtlcltcIkRvdWJsZVwiXSA9IDNdID0gXCJEb3VibGVcIjtcbiAgICBUeXBlTWFya2VyW1R5cGVNYXJrZXJbXCJMb25nXCJdID0gNF0gPSBcIkxvbmdcIjtcbiAgICBUeXBlTWFya2VyW1R5cGVNYXJrZXJbXCJTdHJpbmdcIl0gPSA1XSA9IFwiU3RyaW5nXCI7XG59KShUeXBlTWFya2VyIHx8IChUeXBlTWFya2VyID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVR5cGVNYXJrZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/TypeMarker.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionAlgorithm: () => (/* reexport safe */ _EncryptionAlgorithm_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionAlgorithm),\n/* harmony export */   EncryptionKeyResolverName: () => (/* reexport safe */ _EncryptionKeyResolverName_js__WEBPACK_IMPORTED_MODULE_2__.EncryptionKeyResolverName),\n/* harmony export */   EncryptionType: () => (/* reexport safe */ _EncryptionType_js__WEBPACK_IMPORTED_MODULE_0__.EncryptionType),\n/* harmony export */   KeyEncryptionAlgorithm: () => (/* reexport safe */ _KeyEncryptionAlgorithm_js__WEBPACK_IMPORTED_MODULE_3__.KeyEncryptionAlgorithm)\n/* harmony export */ });\n/* harmony import */ var _EncryptionType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EncryptionType.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionType.js\");\n/* harmony import */ var _EncryptionAlgorithm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EncryptionAlgorithm.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionAlgorithm.js\");\n/* harmony import */ var _EncryptionKeyResolverName_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EncryptionKeyResolverName.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/EncryptionKeyResolverName.js\");\n/* harmony import */ var _KeyEncryptionAlgorithm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./KeyEncryptionAlgorithm.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/KeyEncryptionAlgorithm.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2VudW1zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNVO0FBQ1k7QUFDTjtBQUNyRSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vZW5jcnlwdGlvbi9lbnVtcy9pbmRleC5qcz81ZGVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgRW5jcnlwdGlvblR5cGUgfSBmcm9tIFwiLi9FbmNyeXB0aW9uVHlwZS5qc1wiO1xuZXhwb3J0IHsgRW5jcnlwdGlvbkFsZ29yaXRobSB9IGZyb20gXCIuL0VuY3J5cHRpb25BbGdvcml0aG0uanNcIjtcbmV4cG9ydCB7IEVuY3J5cHRpb25LZXlSZXNvbHZlck5hbWUgfSBmcm9tIFwiLi9FbmNyeXB0aW9uS2V5UmVzb2x2ZXJOYW1lLmpzXCI7XG5leHBvcnQgeyBLZXlFbmNyeXB0aW9uQWxnb3JpdGhtIH0gZnJvbSBcIi4vS2V5RW5jcnlwdGlvbkFsZ29yaXRobS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/encryption/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureKeyVaultEncryptionKeyResolver: () => (/* reexport safe */ _EncryptionKeyResolver_index_js__WEBPACK_IMPORTED_MODULE_2__.AzureKeyVaultEncryptionKeyResolver),\n/* harmony export */   ClientEncryptionKeyResponse: () => (/* reexport safe */ _ClientEncryptionKey_index_js__WEBPACK_IMPORTED_MODULE_0__.ClientEncryptionKeyResponse),\n/* harmony export */   CosmosEncryptedNumberType: () => (/* reexport safe */ _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_10__.CosmosEncryptedNumberType),\n/* harmony export */   EncryptionAlgorithm: () => (/* reexport safe */ _enums_index_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionAlgorithm),\n/* harmony export */   EncryptionKeyResolverName: () => (/* reexport safe */ _enums_index_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionKeyResolverName),\n/* harmony export */   EncryptionKeyStoreProvider: () => (/* reexport safe */ _EncryptionKeyStoreProvider_js__WEBPACK_IMPORTED_MODULE_3__.EncryptionKeyStoreProvider),\n/* harmony export */   EncryptionProcessor: () => (/* reexport safe */ _EncryptionProcessor_js__WEBPACK_IMPORTED_MODULE_8__.EncryptionProcessor),\n/* harmony export */   EncryptionQueryBuilder: () => (/* reexport safe */ _EncryptionQueryBuilder_js__WEBPACK_IMPORTED_MODULE_9__.EncryptionQueryBuilder),\n/* harmony export */   EncryptionSettingForProperty: () => (/* reexport safe */ _EncryptionSettingForProperty_js__WEBPACK_IMPORTED_MODULE_6__.EncryptionSettingForProperty),\n/* harmony export */   EncryptionSettings: () => (/* reexport safe */ _EncryptionSettings_js__WEBPACK_IMPORTED_MODULE_4__.EncryptionSettings),\n/* harmony export */   EncryptionType: () => (/* reexport safe */ _enums_index_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionType),\n/* harmony export */   KeyEncryptionAlgorithm: () => (/* reexport safe */ _enums_index_js__WEBPACK_IMPORTED_MODULE_1__.KeyEncryptionAlgorithm),\n/* harmony export */   KeyEncryptionKey: () => (/* reexport safe */ _KeyEncryptionKey_js__WEBPACK_IMPORTED_MODULE_5__.KeyEncryptionKey),\n/* harmony export */   ProtectedDataEncryptionKey: () => (/* reexport safe */ _EncryptionKey_index_js__WEBPACK_IMPORTED_MODULE_7__.ProtectedDataEncryptionKey)\n/* harmony export */ });\n/* harmony import */ var _ClientEncryptionKey_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientEncryptionKey/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/index.js\");\n/* harmony import */ var _enums_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js\");\n/* harmony import */ var _EncryptionKeyResolver_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EncryptionKeyResolver/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/index.js\");\n/* harmony import */ var _EncryptionKeyStoreProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EncryptionKeyStoreProvider.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyStoreProvider.js\");\n/* harmony import */ var _EncryptionSettings_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EncryptionSettings.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettings.js\");\n/* harmony import */ var _KeyEncryptionKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./KeyEncryptionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/KeyEncryptionKey.js\");\n/* harmony import */ var _EncryptionSettingForProperty_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EncryptionSettingForProperty.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionSettingForProperty.js\");\n/* harmony import */ var _EncryptionKey_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EncryptionKey/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKey/index.js\");\n/* harmony import */ var _EncryptionProcessor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EncryptionProcessor.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionProcessor.js\");\n/* harmony import */ var _EncryptionQueryBuilder_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EncryptionQueryBuilder.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionQueryBuilder.js\");\n/* harmony import */ var _CosmosEncryptedNumber_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./CosmosEncryptedNumber.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/CosmosEncryptedNumber.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQytDO0FBQ2Q7QUFDZ0I7QUFDNEI7QUFDaEI7QUFDSjtBQUN3QjtBQUNYO0FBQ1A7QUFDTTtBQUNFO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9lbmNyeXB0aW9uL2luZGV4LmpzPzJkOTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgKiBmcm9tIFwiLi9DbGllbnRFbmNyeXB0aW9uS2V5L2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lbnVtcy9pbmRleC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRW5jcnlwdGlvbktleVJlc29sdmVyL2luZGV4LmpzXCI7XG5leHBvcnQgeyBFbmNyeXB0aW9uS2V5U3RvcmVQcm92aWRlciB9IGZyb20gXCIuL0VuY3J5cHRpb25LZXlTdG9yZVByb3ZpZGVyLmpzXCI7XG5leHBvcnQgeyBFbmNyeXB0aW9uU2V0dGluZ3MgfSBmcm9tIFwiLi9FbmNyeXB0aW9uU2V0dGluZ3MuanNcIjtcbmV4cG9ydCB7IEtleUVuY3J5cHRpb25LZXkgfSBmcm9tIFwiLi9LZXlFbmNyeXB0aW9uS2V5LmpzXCI7XG5leHBvcnQgeyBFbmNyeXB0aW9uU2V0dGluZ0ZvclByb3BlcnR5IH0gZnJvbSBcIi4vRW5jcnlwdGlvblNldHRpbmdGb3JQcm9wZXJ0eS5qc1wiO1xuZXhwb3J0IHsgUHJvdGVjdGVkRGF0YUVuY3J5cHRpb25LZXkgfSBmcm9tIFwiLi9FbmNyeXB0aW9uS2V5L2luZGV4LmpzXCI7XG5leHBvcnQgeyBFbmNyeXB0aW9uUHJvY2Vzc29yIH0gZnJvbSBcIi4vRW5jcnlwdGlvblByb2Nlc3Nvci5qc1wiO1xuZXhwb3J0IHsgRW5jcnlwdGlvblF1ZXJ5QnVpbGRlciB9IGZyb20gXCIuL0VuY3J5cHRpb25RdWVyeUJ1aWxkZXIuanNcIjtcbmV4cG9ydCB7IENvc21vc0VuY3J5cHRlZE51bWJlclR5cGUgfSBmcm9tIFwiLi9Db3Ntb3NFbmNyeXB0ZWROdW1iZXIuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractPartitionKeys: () => (/* binding */ extractPartitionKeys),\n/* harmony export */   setPartitionKeyIfUndefined: () => (/* binding */ setPartitionKeyIfUndefined),\n/* harmony export */   undefinedPartitionKey: () => (/* binding */ undefinedPartitionKey)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/partitionKeys.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/partitionKeys.js\");\n/* harmony import */ var _client_ClientUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client/ClientUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ClientUtils.js\");\n\n\n\n\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"extractPartitionKey\");\n/**\n * Function to extract PartitionKey based on {@link PartitionKeyDefinition}\n * from an object.\n * Retuns\n * 1. PartitionKeyInternal[] if extraction is successful.\n * 2. undefined if either {@link partitionKeyDefinition} is not well formed\n * or an unsupported partitionkey type is encountered.\n * @hidden\n */\nfunction extractPartitionKeys(document, partitionKeyDefinition) {\n    if (!partitionKeyDefinition ||\n        !partitionKeyDefinition.paths ||\n        partitionKeyDefinition.paths.length <= 0) {\n        logger.error(\"Unexpected Partition Key Definition Found.\");\n        return undefined;\n    }\n    if (partitionKeyDefinition.paths.length === 1 &&\n        partitionKeyDefinition.paths[0] === _common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_PARTITION_KEY_PATH) {\n        const defaultKey = extractPartitionKey(_common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_PARTITION_KEY_PATH, document);\n        if (defaultKey === undefined) {\n            if (partitionKeyDefinition.systemKey === true) {\n                return [];\n            }\n            logger.warning(\"Unsupported PartitionKey found.\");\n            return undefined;\n        }\n        else if (defaultKey === _documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NullPartitionKeyLiteral || defaultKey === _documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NonePartitionKeyLiteral) {\n            if (partitionKeyDefinition.systemKey === true) {\n                return [];\n            }\n        }\n        return [defaultKey];\n    }\n    if (partitionKeyDefinition.systemKey === true) {\n        return [];\n    }\n    const partitionKeys = [];\n    partitionKeyDefinition.paths.forEach((path) => {\n        const obj = extractPartitionKey(path, document);\n        if (obj === undefined) {\n            logger.warning(\"Unsupported PartitionKey found.\");\n            return undefined;\n        }\n        partitionKeys.push(obj);\n    });\n    return partitionKeys;\n}\nfunction extractPartitionKey(path, obj) {\n    const pathParts = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parsePath)(path);\n    for (const part of pathParts) {\n        if (typeof obj === \"object\" && obj !== null && part in obj) {\n            obj = obj[part];\n        }\n        else {\n            obj = undefined;\n            break;\n        }\n    }\n    if (typeof obj === \"string\" || typeof obj === \"number\" || typeof obj === \"boolean\") {\n        return obj;\n    }\n    else if (obj === _documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NullPartitionKeyLiteral) {\n        return _documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NullPartitionKeyLiteral;\n    }\n    else if (obj === undefined || JSON.stringify(obj) === JSON.stringify(_documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NonePartitionKeyLiteral)) {\n        return _documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NonePartitionKeyLiteral;\n    }\n    return undefined;\n}\n/**\n * @hidden\n */\nfunction undefinedPartitionKey(partitionKeyDefinition) {\n    if (partitionKeyDefinition?.systemKey) {\n        return [];\n    }\n    else {\n        return partitionKeyDefinition?.paths.map(() => _documents_index_js__WEBPACK_IMPORTED_MODULE_2__.NonePartitionKeyLiteral);\n    }\n}\n/**\n * @hidden\n */\nasync function setPartitionKeyIfUndefined(diagnosticNode, container, partitionKey) {\n    if (partitionKey === undefined) {\n        const partitionKeyDefinition = await (0,_client_ClientUtils_js__WEBPACK_IMPORTED_MODULE_4__.readPartitionKeyDefinition)(diagnosticNode, container);\n        partitionKey = undefinedPartitionKey(partitionKeyDefinition);\n    }\n    return (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_2__.convertToInternalPartitionKey)(partitionKey);\n}\n//# sourceMappingURL=extractPartitionKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9leHRyYWN0UGFydGl0aW9uS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0w7QUFDMEU7QUFDakQ7QUFDRjtBQUNyRSxlQUFlLGlFQUFrQjtBQUNqQztBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOEJBQThCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsZ0ZBQTBCO0FBQ3RFLCtDQUErQyxnRkFBMEI7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msd0VBQXVCLG1CQUFtQix3RUFBdUI7QUFDakc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHdFQUF1QjtBQUM1QyxlQUFlLHdFQUF1QjtBQUN0QztBQUNBLHlFQUF5RSx3RUFBdUI7QUFDaEcsZUFBZSx3RUFBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCx3RUFBdUI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw2Q0FBNkMsa0ZBQTBCO0FBQ3ZFO0FBQ0E7QUFDQSxXQUFXLGtGQUE2QjtBQUN4QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9leHRyYWN0UGFydGl0aW9uS2V5LmpzPzllMTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIkBhenVyZS9sb2dnZXJcIjtcbmltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gXCIuL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgY29udmVydFRvSW50ZXJuYWxQYXJ0aXRpb25LZXksIE5vbmVQYXJ0aXRpb25LZXlMaXRlcmFsLCBOdWxsUGFydGl0aW9uS2V5TGl0ZXJhbCwgfSBmcm9tIFwiLi9kb2N1bWVudHMvaW5kZXguanNcIjtcbmltcG9ydCB7IERFRkFVTFRfUEFSVElUSU9OX0tFWV9QQVRIIH0gZnJvbSBcIi4vY29tbW9uL3BhcnRpdGlvbktleXMuanNcIjtcbmltcG9ydCB7IHJlYWRQYXJ0aXRpb25LZXlEZWZpbml0aW9uIH0gZnJvbSBcIi4vY2xpZW50L0NsaWVudFV0aWxzLmpzXCI7XG5jb25zdCBsb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJleHRyYWN0UGFydGl0aW9uS2V5XCIpO1xuLyoqXG4gKiBGdW5jdGlvbiB0byBleHRyYWN0IFBhcnRpdGlvbktleSBiYXNlZCBvbiB7QGxpbmsgUGFydGl0aW9uS2V5RGVmaW5pdGlvbn1cbiAqIGZyb20gYW4gb2JqZWN0LlxuICogUmV0dW5zXG4gKiAxLiBQYXJ0aXRpb25LZXlJbnRlcm5hbFtdIGlmIGV4dHJhY3Rpb24gaXMgc3VjY2Vzc2Z1bC5cbiAqIDIuIHVuZGVmaW5lZCBpZiBlaXRoZXIge0BsaW5rIHBhcnRpdGlvbktleURlZmluaXRpb259IGlzIG5vdCB3ZWxsIGZvcm1lZFxuICogb3IgYW4gdW5zdXBwb3J0ZWQgcGFydGl0aW9ua2V5IHR5cGUgaXMgZW5jb3VudGVyZWQuXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0UGFydGl0aW9uS2V5cyhkb2N1bWVudCwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbikge1xuICAgIGlmICghcGFydGl0aW9uS2V5RGVmaW5pdGlvbiB8fFxuICAgICAgICAhcGFydGl0aW9uS2V5RGVmaW5pdGlvbi5wYXRocyB8fFxuICAgICAgICBwYXJ0aXRpb25LZXlEZWZpbml0aW9uLnBhdGhzLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihcIlVuZXhwZWN0ZWQgUGFydGl0aW9uIEtleSBEZWZpbml0aW9uIEZvdW5kLlwiKTtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHBhcnRpdGlvbktleURlZmluaXRpb24ucGF0aHMubGVuZ3RoID09PSAxICYmXG4gICAgICAgIHBhcnRpdGlvbktleURlZmluaXRpb24ucGF0aHNbMF0gPT09IERFRkFVTFRfUEFSVElUSU9OX0tFWV9QQVRIKSB7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRLZXkgPSBleHRyYWN0UGFydGl0aW9uS2V5KERFRkFVTFRfUEFSVElUSU9OX0tFWV9QQVRILCBkb2N1bWVudCk7XG4gICAgICAgIGlmIChkZWZhdWx0S2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChwYXJ0aXRpb25LZXlEZWZpbml0aW9uLnN5c3RlbUtleSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKFwiVW5zdXBwb3J0ZWQgUGFydGl0aW9uS2V5IGZvdW5kLlwiKTtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZGVmYXVsdEtleSA9PT0gTnVsbFBhcnRpdGlvbktleUxpdGVyYWwgfHwgZGVmYXVsdEtleSA9PT0gTm9uZVBhcnRpdGlvbktleUxpdGVyYWwpIHtcbiAgICAgICAgICAgIGlmIChwYXJ0aXRpb25LZXlEZWZpbml0aW9uLnN5c3RlbUtleSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW2RlZmF1bHRLZXldO1xuICAgIH1cbiAgICBpZiAocGFydGl0aW9uS2V5RGVmaW5pdGlvbi5zeXN0ZW1LZXkgPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBjb25zdCBwYXJ0aXRpb25LZXlzID0gW107XG4gICAgcGFydGl0aW9uS2V5RGVmaW5pdGlvbi5wYXRocy5mb3JFYWNoKChwYXRoKSA9PiB7XG4gICAgICAgIGNvbnN0IG9iaiA9IGV4dHJhY3RQYXJ0aXRpb25LZXkocGF0aCwgZG9jdW1lbnQpO1xuICAgICAgICBpZiAob2JqID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKFwiVW5zdXBwb3J0ZWQgUGFydGl0aW9uS2V5IGZvdW5kLlwiKTtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcGFydGl0aW9uS2V5cy5wdXNoKG9iaik7XG4gICAgfSk7XG4gICAgcmV0dXJuIHBhcnRpdGlvbktleXM7XG59XG5mdW5jdGlvbiBleHRyYWN0UGFydGl0aW9uS2V5KHBhdGgsIG9iaikge1xuICAgIGNvbnN0IHBhdGhQYXJ0cyA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBmb3IgKGNvbnN0IHBhcnQgb2YgcGF0aFBhcnRzKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiICYmIG9iaiAhPT0gbnVsbCAmJiBwYXJ0IGluIG9iaikge1xuICAgICAgICAgICAgb2JqID0gb2JqW3BhcnRdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb2JqID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHR5cGVvZiBvYmogPT09IFwic3RyaW5nXCIgfHwgdHlwZW9mIG9iaiA9PT0gXCJudW1iZXJcIiB8fCB0eXBlb2Ygb2JqID09PSBcImJvb2xlYW5cIikge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICBlbHNlIGlmIChvYmogPT09IE51bGxQYXJ0aXRpb25LZXlMaXRlcmFsKSB7XG4gICAgICAgIHJldHVybiBOdWxsUGFydGl0aW9uS2V5TGl0ZXJhbDtcbiAgICB9XG4gICAgZWxzZSBpZiAob2JqID09PSB1bmRlZmluZWQgfHwgSlNPTi5zdHJpbmdpZnkob2JqKSA9PT0gSlNPTi5zdHJpbmdpZnkoTm9uZVBhcnRpdGlvbktleUxpdGVyYWwpKSB7XG4gICAgICAgIHJldHVybiBOb25lUGFydGl0aW9uS2V5TGl0ZXJhbDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5kZWZpbmVkUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleURlZmluaXRpb24pIHtcbiAgICBpZiAocGFydGl0aW9uS2V5RGVmaW5pdGlvbj8uc3lzdGVtS2V5KSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBwYXJ0aXRpb25LZXlEZWZpbml0aW9uPy5wYXRocy5tYXAoKCkgPT4gTm9uZVBhcnRpdGlvbktleUxpdGVyYWwpO1xuICAgIH1cbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0UGFydGl0aW9uS2V5SWZVbmRlZmluZWQoZGlhZ25vc3RpY05vZGUsIGNvbnRhaW5lciwgcGFydGl0aW9uS2V5KSB7XG4gICAgaWYgKHBhcnRpdGlvbktleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IHBhcnRpdGlvbktleURlZmluaXRpb24gPSBhd2FpdCByZWFkUGFydGl0aW9uS2V5RGVmaW5pdGlvbihkaWFnbm9zdGljTm9kZSwgY29udGFpbmVyKTtcbiAgICAgICAgcGFydGl0aW9uS2V5ID0gdW5kZWZpbmVkUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleURlZmluaXRpb24pO1xuICAgIH1cbiAgICByZXR1cm4gY29udmVydFRvSW50ZXJuYWxQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dHJhY3RQYXJ0aXRpb25LZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/globalEndpointManager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/globalEndpointManager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalEndpointManager: () => (/* binding */ GlobalEndpointManager)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _utils_checkURL_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/checkURL.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n/**\n * @hidden\n * This internal class implements the logic for endpoint management for geo-replicated database accounts.\n */\nclass GlobalEndpointManager {\n    readDatabaseAccount;\n    /**\n     * The endpoint used to create the client instance.\n     */\n    defaultEndpoint;\n    /**\n     * Flag to enable/disable automatic redirecting of requests based on read/write operations.\n     */\n    enableEndpointDiscovery;\n    isRefreshing;\n    options;\n    /**\n     * List of azure regions to be used as preferred locations for read requests.\n     */\n    preferredLocations;\n    writeableLocations = [];\n    readableLocations = [];\n    unavailableReadableLocations = [];\n    unavailableWriteableLocations = [];\n    enableMultipleWriteLocations;\n    preferredLocationsCount;\n    /**\n     * @param options - The document client instance.\n     * @internal\n     */\n    constructor(options, readDatabaseAccount) {\n        this.readDatabaseAccount = readDatabaseAccount;\n        this.options = options;\n        this.defaultEndpoint = options.endpoint;\n        this.enableEndpointDiscovery = options.connectionPolicy.enableEndpointDiscovery;\n        this.isRefreshing = false;\n        this.preferredLocations = this.options.connectionPolicy.preferredLocations;\n        this.preferredLocationsCount = this.preferredLocations ? this.preferredLocations.length : 0;\n    }\n    /**\n     * Gets the current read endpoint from the endpoint cache.\n     */\n    async getReadEndpoint(diagnosticNode) {\n        return this.resolveServiceEndpoint(diagnosticNode, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Read);\n    }\n    /**\n     * Gets the current write endpoint from the endpoint cache.\n     */\n    async getWriteEndpoint(diagnosticNode) {\n        return this.resolveServiceEndpoint(diagnosticNode, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Replace);\n    }\n    async getReadEndpoints() {\n        return this.readableLocations.map((loc) => loc.databaseAccountEndpoint);\n    }\n    async getWriteEndpoints() {\n        return this.writeableLocations.map((loc) => loc.databaseAccountEndpoint);\n    }\n    /**\n     * Gets the read locations from the endpoint cache.\n     */\n    async getReadLocations() {\n        return this.readableLocations;\n    }\n    async markCurrentLocationUnavailableForRead(diagnosticNode, endpoint) {\n        await this.refreshEndpointList(diagnosticNode);\n        const location = this.readableLocations.find((loc) => loc.databaseAccountEndpoint === endpoint);\n        if (location) {\n            location.unavailable = true;\n            location.lastUnavailabilityTimestampInMs = Date.now();\n            this.unavailableReadableLocations.push(location);\n        }\n    }\n    async markCurrentLocationUnavailableForWrite(diagnosticNode, endpoint) {\n        await this.refreshEndpointList(diagnosticNode);\n        const location = this.writeableLocations.find((loc) => loc.databaseAccountEndpoint === endpoint);\n        if (location) {\n            location.unavailable = true;\n            location.lastUnavailabilityTimestampInMs = Date.now();\n            this.unavailableWriteableLocations.push(location);\n        }\n    }\n    canUseMultipleWriteLocations(resourceType, operationType) {\n        let canUse = this.options.connectionPolicy.useMultipleWriteLocations && this.enableMultipleWriteLocations;\n        if (resourceType) {\n            canUse =\n                canUse &&\n                    (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item ||\n                        (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc && operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Execute));\n        }\n        return canUse;\n    }\n    async resolveServiceEndpoint(diagnosticNode, resourceType, operationType, startServiceEndpointIndex = 0) {\n        // If endpoint discovery is disabled, always use the user provided endpoint\n        if (!this.options.connectionPolicy.enableEndpointDiscovery) {\n            diagnosticNode.addData({ readFromCache: true }, \"default_endpoint\");\n            diagnosticNode.recordEndpointResolution(this.defaultEndpoint);\n            return this.defaultEndpoint;\n        }\n        // If getting the database account, always use the user provided endpoint\n        if (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.none) {\n            diagnosticNode.addData({ readFromCache: true }, \"none_resource\");\n            diagnosticNode.recordEndpointResolution(this.defaultEndpoint);\n            return this.defaultEndpoint;\n        }\n        if (this.readableLocations.length === 0 || this.writeableLocations.length === 0) {\n            const resourceResponse = await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_3__.withMetadataDiagnostics)(async (metadataNode) => {\n                return this.readDatabaseAccount(metadataNode, {\n                    urlConnection: this.defaultEndpoint,\n                });\n            }, diagnosticNode, _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_2__.MetadataLookUpType.DatabaseAccountLookUp);\n            this.writeableLocations = resourceResponse.resource.writableLocations;\n            this.readableLocations = resourceResponse.resource.readableLocations;\n            this.enableMultipleWriteLocations = resourceResponse.resource.enableMultipleWritableLocations;\n        }\n        const locations = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(operationType)\n            ? this.readableLocations\n            : this.writeableLocations;\n        let location;\n        // If we have preferred locations, try each one in order and use the first available one\n        if (this.preferredLocations &&\n            this.preferredLocations.length > 0 &&\n            startServiceEndpointIndex < this.preferredLocations.length) {\n            for (let i = startServiceEndpointIndex; i < this.preferredLocations.length; i++) {\n                const preferredLocation = this.preferredLocations[i];\n                location = locations.find((loc) => loc.unavailable !== true &&\n                    (0,_utils_checkURL_js__WEBPACK_IMPORTED_MODULE_4__.normalizeEndpoint)(loc.name) === (0,_utils_checkURL_js__WEBPACK_IMPORTED_MODULE_4__.normalizeEndpoint)(preferredLocation));\n                if (location) {\n                    break;\n                }\n            }\n        }\n        // If no preferred locations or one did not match, just grab the first one that is available\n        if (!location) {\n            const startIndexValid = startServiceEndpointIndex >= 0 && startServiceEndpointIndex < locations.length;\n            const locationsToSearch = startIndexValid\n                ? locations.slice(startServiceEndpointIndex)\n                : locations;\n            location = locationsToSearch.find((loc) => {\n                return loc.unavailable !== true;\n            });\n        }\n        location = location ? location : { name: \"\", databaseAccountEndpoint: this.defaultEndpoint };\n        diagnosticNode.recordEndpointResolution(location.databaseAccountEndpoint);\n        return location.databaseAccountEndpoint;\n    }\n    /**\n     * Refreshes the endpoint list by clearning stale unavailability and then\n     *  retrieving the writable and readable locations from the geo-replicated database account\n     *  and then updating the locations cache.\n     *  We skip the refreshing if enableEndpointDiscovery is set to False\n     */\n    async refreshEndpointList(diagnosticNode) {\n        if (!this.isRefreshing && this.enableEndpointDiscovery) {\n            this.isRefreshing = true;\n            const databaseAccount = await this.getDatabaseAccountFromAnyEndpoint(diagnosticNode);\n            if (databaseAccount) {\n                this.refreshStaleUnavailableLocations();\n                this.refreshEndpoints(databaseAccount);\n            }\n            this.isRefreshing = false;\n        }\n    }\n    refreshEndpoints(databaseAccount) {\n        const oldWritableLocations = this.writeableLocations;\n        const oldReadableLocations = this.readableLocations;\n        function merge(loc, oldList) {\n            const prev = oldList.find((o) => o.name === loc.name);\n            if (prev) {\n                loc.unavailable = prev.unavailable;\n                loc.lastUnavailabilityTimestampInMs = prev.lastUnavailabilityTimestampInMs;\n            }\n            return loc;\n        }\n        this.writeableLocations = databaseAccount.writableLocations.map((loc) => merge({ ...loc }, oldWritableLocations));\n        this.readableLocations = databaseAccount.readableLocations.map((loc) => merge({ ...loc }, oldReadableLocations));\n    }\n    refreshStaleUnavailableLocations() {\n        const now = Date.now();\n        this.updateLocation(now, this.unavailableReadableLocations, this.readableLocations);\n        this.unavailableReadableLocations = this.cleanUnavailableLocationList(now, this.unavailableReadableLocations);\n        this.updateLocation(now, this.unavailableWriteableLocations, this.writeableLocations);\n        this.unavailableWriteableLocations = this.cleanUnavailableLocationList(now, this.unavailableWriteableLocations);\n    }\n    /**\n     * update the locationUnavailability to undefined if the location is available again\n     * @param now - current time\n     * @param unavailableLocations - list of unavailable locations\n     * @param allLocations - list of all locations\n     */\n    updateLocation(now, unavailableLocations, allLocations) {\n        for (const location of unavailableLocations) {\n            const unavailableLocation = allLocations.find((loc) => loc.name === location.name);\n            if (unavailableLocation &&\n                now - unavailableLocation.lastUnavailabilityTimestampInMs >\n                    _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.LocationUnavailableExpirationTimeInMs) {\n                unavailableLocation.unavailable = false;\n            }\n        }\n    }\n    cleanUnavailableLocationList(now, unavailableLocations) {\n        return unavailableLocations.filter((loc) => {\n            return (now - loc.lastUnavailabilityTimestampInMs < _common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.LocationUnavailableExpirationTimeInMs);\n        });\n    }\n    /**\n     * Gets the database account first by using the default endpoint, and if that doesn't returns\n     * use the endpoints for the preferred locations in the order they are specified to get\n     * the database account.\n     */\n    async getDatabaseAccountFromAnyEndpoint(diagnosticNode) {\n        try {\n            const options = { urlConnection: this.defaultEndpoint };\n            const { resource: databaseAccount } = await this.readDatabaseAccount(diagnosticNode, options);\n            return databaseAccount;\n            // If for any reason(non - globaldb related), we are not able to get the database\n            // account from the above call to readDatabaseAccount,\n            // we would try to get this information from any of the preferred locations that the user\n            // might have specified (by creating a locational endpoint)\n            // and keeping eating the exception until we get the database account and return None at the end,\n            // if we are not able to get that info from any endpoints\n        }\n        catch (err) {\n            // TODO: Tracing\n        }\n        if (this.preferredLocations) {\n            for (const location of this.preferredLocations) {\n                try {\n                    const locationalEndpoint = GlobalEndpointManager.getLocationalEndpoint(this.defaultEndpoint, location);\n                    const options = { urlConnection: locationalEndpoint };\n                    const { resource: databaseAccount } = await this.readDatabaseAccount(diagnosticNode, options);\n                    if (databaseAccount) {\n                        return databaseAccount;\n                    }\n                }\n                catch (err) {\n                    // TODO: Tracing\n                }\n            }\n        }\n    }\n    /**\n     * Gets the locational endpoint using the location name passed to it using the default endpoint.\n     *\n     * @param defaultEndpoint - The default endpoint to use for the endpoint.\n     * @param locationName    - The location name for the azure region like \"East US\".\n     */\n    static getLocationalEndpoint(defaultEndpoint, locationName) {\n        // For defaultEndpoint like 'https://contoso.documents.azure.com:443/' parse it to generate URL format\n        // This defaultEndpoint should be global endpoint(and cannot be a locational endpoint)\n        // and we agreed to document that\n        const endpointUrl = new URL(defaultEndpoint);\n        // hostname attribute in endpointUrl will return 'contoso.documents.azure.com'\n        if (endpointUrl.hostname) {\n            const hostnameParts = endpointUrl.hostname.toString().toLowerCase().split(\".\");\n            if (hostnameParts) {\n                // globalDatabaseAccountName will return 'contoso'\n                const globalDatabaseAccountName = hostnameParts[0];\n                // Prepare the locationalDatabaseAccountName as contoso-EastUS for location_name 'East US'\n                const locationalDatabaseAccountName = globalDatabaseAccountName + \"-\" + locationName.replace(\" \", \"\");\n                // Replace 'contoso' with 'contoso-EastUS' and\n                // return locationalEndpoint as https://contoso-EastUS.documents.azure.com:443/\n                const locationalEndpoint = defaultEndpoint\n                    .toLowerCase()\n                    .replace(globalDatabaseAccountName, locationalDatabaseAccountName);\n                return locationalEndpoint;\n            }\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=globalEndpointManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/globalEndpointManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/globalPartitionEndpointManager.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/globalPartitionEndpointManager.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalPartitionEndpointManager: () => (/* binding */ GlobalPartitionEndpointManager)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\");\n/* harmony import */ var _PartitionKeyRangeFailoverInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PartitionKeyRangeFailoverInfo.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/PartitionKeyRangeFailoverInfo.js\");\n/* harmony import */ var _utils_checkURL_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/checkURL.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n/* harmony import */ var _utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/typeChecks.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n/**\n * @hidden\n * This class is used to failover single partitions to different regions.\n */\nclass GlobalPartitionEndpointManager {\n    globalEndpointManager;\n    partitionKeyRangeToLocationForWrite;\n    partitionKeyRangeToLocationForReadAndWrite;\n    enablePartitionLevelFailover;\n    enablePartitionLevelCircuitBreaker;\n    preferredLocations;\n    preferredLocationsCount;\n    circuitBreakerFailbackBackgroundRefresher;\n    /**\n     * @internal\n     */\n    constructor(options, globalEndpointManager) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.partitionKeyRangeToLocationForWrite = new Map();\n        this.partitionKeyRangeToLocationForReadAndWrite = new Map();\n        this.enablePartitionLevelFailover = options.connectionPolicy.enablePartitionLevelFailover;\n        this.enablePartitionLevelCircuitBreaker =\n            options.connectionPolicy.enablePartitionLevelCircuitBreaker ||\n                options.connectionPolicy.enablePartitionLevelFailover;\n        this.preferredLocations = options.connectionPolicy.preferredLocations;\n        this.preferredLocationsCount = this.preferredLocations ? this.preferredLocations.length : 0;\n        if (this.enablePartitionLevelCircuitBreaker) {\n            this.initiateCircuitBreakerFailbackLoop();\n        }\n    }\n    /**\n     * Checks eligibility of the request for partition failover and\n     * tries to mark the endpoint unavailable for the partition key range. Future\n     * requests will be routed to the next location if available.\n     */\n    async tryPartitionLevelFailover(requestContext, diagnosticNode) {\n        if (!(await this.isRequestEligibleForPartitionFailover(requestContext, true))) {\n            return false;\n        }\n        const isRequestEligibleForPerPartitionAutomaticFailover = this.isRequestEligibleForPerPartitionAutomaticFailover(requestContext);\n        const isRequestEligibleForPartitionLevelCircuitBreaker = this.isRequestEligibleForPartitionLevelCircuitBreaker(requestContext);\n        if (isRequestEligibleForPerPartitionAutomaticFailover ||\n            (isRequestEligibleForPartitionLevelCircuitBreaker &&\n                (await this.incrementFailureCounterAndCheckFailover(requestContext, isRequestEligibleForPerPartitionAutomaticFailover, isRequestEligibleForPartitionLevelCircuitBreaker)))) {\n            return this.tryMarkEndpointUnavailableForPartitionKeyRange(requestContext, diagnosticNode, isRequestEligibleForPerPartitionAutomaticFailover, isRequestEligibleForPartitionLevelCircuitBreaker);\n        }\n        return false;\n    }\n    /**\n     * Updates the DocumentServiceRequest routing location to point\n     * new a location based if a partition level failover occurred.\n     */\n    async tryAddPartitionLevelLocationOverride(requestContext, diagnosticNode) {\n        if (!(await this.isRequestEligibleForPartitionFailover(requestContext, false))) {\n            return requestContext;\n        }\n        const partitionKeyRangeId = requestContext.partitionKeyRangeId;\n        if (this.isRequestEligibleForPerPartitionAutomaticFailover(requestContext)) {\n            if (this.partitionKeyRangeToLocationForWrite.has(partitionKeyRangeId)) {\n                const partitionFailOver = this.partitionKeyRangeToLocationForWrite.get(partitionKeyRangeId);\n                requestContext.endpoint = partitionFailOver.getCurrentEndPoint();\n                diagnosticNode.recordEndpointResolution(requestContext.endpoint);\n                return requestContext;\n            }\n        }\n        else if (this.isRequestEligibleForPartitionLevelCircuitBreaker(requestContext)) {\n            if (this.partitionKeyRangeToLocationForReadAndWrite.has(partitionKeyRangeId)) {\n                const partitionFailOver = this.partitionKeyRangeToLocationForReadAndWrite.get(partitionKeyRangeId);\n                const canCircuitBreakerTriggerPartitionFailOver = await partitionFailOver.canCircuitBreakerTriggerPartitionFailOver((0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(requestContext.operationType));\n                if (canCircuitBreakerTriggerPartitionFailOver) {\n                    requestContext.endpoint = partitionFailOver.getCurrentEndPoint();\n                    diagnosticNode.recordEndpointResolution(requestContext.endpoint);\n                    return requestContext;\n                }\n            }\n        }\n        return requestContext;\n    }\n    /**\n     * This method clears the background refresher for circuit breaker failback\n     * and stops the periodic checks for unhealthy endpoints.\n     */\n    dispose() {\n        if (this.circuitBreakerFailbackBackgroundRefresher) {\n            clearTimeout(this.circuitBreakerFailbackBackgroundRefresher);\n        }\n    }\n    async tryMarkEndpointUnavailableForPartitionKeyRange(requestContext, diagnosticNode, isRequestEligibleForPerPartitionAutomaticFailover, isRequestEligibleForPartitionLevelCircuitBreaker) {\n        const partitionKeyRangeId = requestContext.partitionKeyRangeId;\n        const failedEndPoint = requestContext.endpoint;\n        const readLocations = await this.globalEndpointManager.getReadLocations();\n        const readEndPoints = [];\n        if (isRequestEligibleForPerPartitionAutomaticFailover) {\n            // For any single master write accounts, the next locations to fail over will be the read regions configured at the account level.\n            for (const location of readLocations) {\n                readEndPoints.push(location.databaseAccountEndpoint);\n            }\n            return this.tryAddOrUpdatePartitionFailoverInfoAndMoveToNextLocation(partitionKeyRangeId, failedEndPoint, readEndPoints, this.partitionKeyRangeToLocationForWrite, diagnosticNode);\n        }\n        else if (isRequestEligibleForPartitionLevelCircuitBreaker) {\n            // For the read requests or multi-master write requests, the next locations to fail over will be the preferred locations\n            // configured at the account level plus any other read locations that are not already in the preferred locations.\n            if (this.preferredLocations && this.preferredLocations.length > 0) {\n                for (const preferredLocation of this.preferredLocations) {\n                    const location = readLocations.find((loc) => (0,_utils_checkURL_js__WEBPACK_IMPORTED_MODULE_3__.normalizeEndpoint)(loc.name) === (0,_utils_checkURL_js__WEBPACK_IMPORTED_MODULE_3__.normalizeEndpoint)(preferredLocation));\n                    if (location) {\n                        readEndPoints.push(location.databaseAccountEndpoint);\n                    }\n                }\n                // Add the rest of the locations not already added\n                for (const location of readLocations) {\n                    if (!readEndPoints.includes(location.databaseAccountEndpoint)) {\n                        readEndPoints.push(location.databaseAccountEndpoint);\n                    }\n                }\n            }\n            else {\n                for (const location of readLocations) {\n                    readEndPoints.push(location.databaseAccountEndpoint);\n                }\n            }\n            return this.tryAddOrUpdatePartitionFailoverInfoAndMoveToNextLocation(partitionKeyRangeId, failedEndPoint, readEndPoints, this.partitionKeyRangeToLocationForReadAndWrite, diagnosticNode);\n        }\n        return false;\n    }\n    /**\n     * Increments the failure counter for the specified partition and checks if the partition can fail over.\n     * This method is used to determine if a partition should be failed over based on the number of request failures.\n     */\n    async incrementFailureCounterAndCheckFailover(requestContext, isRequestEligibleForPerPartitionAutomaticFailover, isRequestEligibleForPartitionLevelCircuitBreaker) {\n        const partitionKeyRangeId = requestContext.partitionKeyRangeId;\n        const failedEndPoint = requestContext.endpoint;\n        let partitionKeyRangeFailoverInfo;\n        if (isRequestEligibleForPerPartitionAutomaticFailover) {\n            if (!this.partitionKeyRangeToLocationForWrite.has(partitionKeyRangeId)) {\n                // If the partition key range is not already in the map, add it\n                const failoverInfo = new _PartitionKeyRangeFailoverInfo_js__WEBPACK_IMPORTED_MODULE_2__.PartitionKeyRangeFailoverInfo(failedEndPoint);\n                this.partitionKeyRangeToLocationForWrite.set(partitionKeyRangeId, failoverInfo);\n            }\n            partitionKeyRangeFailoverInfo =\n                this.partitionKeyRangeToLocationForWrite.get(partitionKeyRangeId);\n        }\n        else if (isRequestEligibleForPartitionLevelCircuitBreaker) {\n            if (!this.partitionKeyRangeToLocationForReadAndWrite.has(partitionKeyRangeId)) {\n                // If the partition key range is not already in the map, add it\n                const failoverInfo = new _PartitionKeyRangeFailoverInfo_js__WEBPACK_IMPORTED_MODULE_2__.PartitionKeyRangeFailoverInfo(failedEndPoint);\n                this.partitionKeyRangeToLocationForReadAndWrite.set(partitionKeyRangeId, failoverInfo);\n            }\n            partitionKeyRangeFailoverInfo =\n                this.partitionKeyRangeToLocationForReadAndWrite.get(partitionKeyRangeId);\n        }\n        else {\n            return false;\n        }\n        (0,_utils_typeChecks_js__WEBPACK_IMPORTED_MODULE_5__.assertNotUndefined)(partitionKeyRangeFailoverInfo, \"partitionKeyRangeFailoverInfo should be set if failover flags are true.\");\n        const currentTimeInMilliseconds = Date.now();\n        await partitionKeyRangeFailoverInfo.incrementRequestFailureCounts((0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(requestContext.operationType), currentTimeInMilliseconds);\n        return partitionKeyRangeFailoverInfo.canCircuitBreakerTriggerPartitionFailOver((0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(requestContext.operationType));\n    }\n    /** Validates if the given request is eligible for partition failover. */\n    async isRequestEligibleForPartitionFailover(requestContext, shouldValidateFailedLocation) {\n        if (!requestContext ||\n            !requestContext.operationType ||\n            !requestContext.resourceType ||\n            !requestContext.partitionKeyRangeId) {\n            return false;\n        }\n        const canUsePartitionLevelFailoverLocations = await this.canUsePartitionLevelFailoverLocations(requestContext.operationType, requestContext.resourceType);\n        if (!canUsePartitionLevelFailoverLocations) {\n            return false;\n        }\n        if (shouldValidateFailedLocation && !requestContext.endpoint) {\n            return false;\n        }\n        return true;\n    }\n    /** Determines if partition level failover locations can be used for the given request. */\n    async canUsePartitionLevelFailoverLocations(operationType, resourceType) {\n        const readEndPoints = await this.globalEndpointManager.getReadEndpoints();\n        if (readEndPoints.length <= 1) {\n            return false;\n        }\n        if (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item ||\n            (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.sproc && operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Execute)) {\n            // Right now, for single-master only reads are supported for circuit breaker, and writes are supported for automatic.\n            // failover. For multi master, both reads and writes are supported. Hence return true for both the cases.\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Determines if a request is eligible for per-partition automatic failover.\n     * A request is eligible if it is a write request, partition level failover is enabled,\n     * and the global endpoint manager cannot use multiple write locations for the request.\n     */\n    isRequestEligibleForPerPartitionAutomaticFailover(requestContext) {\n        return (this.enablePartitionLevelFailover &&\n            !(0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(requestContext.operationType) &&\n            !this.globalEndpointManager.canUseMultipleWriteLocations(requestContext.resourceType, requestContext.operationType));\n    }\n    /**\n     * Determines if a request is eligible for partition-level circuit breaker.\n     * This method checks if partition-level circuit breaker is enabled, and if the request is a read-only request or\n     * the global endpoint manager can use multiple write locations for the request.\n     */\n    isRequestEligibleForPartitionLevelCircuitBreaker(requestContext) {\n        if (!this.enablePartitionLevelCircuitBreaker) {\n            return false;\n        }\n        if ((0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(requestContext.operationType)) {\n            return true;\n        }\n        return this.globalEndpointManager.canUseMultipleWriteLocations(requestContext.resourceType, requestContext.operationType);\n    }\n    /**\n     * Attempts to add or update the partition failover information and move to the next available location.\n     * This method checks if the current location for the partition key range has failed and updates the failover\n     * information to route the request to the next available location. If all locations have been tried, it removes\n     * the failover information for the partition key range. Return True if the failover information was successfully\n     * updated and the request was routed to a new location, otherwise false.\n     */\n    async tryAddOrUpdatePartitionFailoverInfoAndMoveToNextLocation(partitionKeyRangeId, failedEndPoint, nextEndPoints, partitionKeyRangeToLocation, diagnosticNode) {\n        if (!partitionKeyRangeToLocation.has(partitionKeyRangeId)) {\n            // If the partition key range is not already in the map, add it\n            const failoverInfo = new _PartitionKeyRangeFailoverInfo_js__WEBPACK_IMPORTED_MODULE_2__.PartitionKeyRangeFailoverInfo(failedEndPoint);\n            partitionKeyRangeToLocation.set(partitionKeyRangeId, failoverInfo);\n        }\n        const partitionFailOver = partitionKeyRangeToLocation.get(partitionKeyRangeId);\n        // Will return true if it was able to update to a new region\n        if (await partitionFailOver.tryMoveNextLocation(nextEndPoints, failedEndPoint, diagnosticNode, partitionKeyRangeId)) {\n            return true;\n        }\n        // All the locations have been tried. Remove the override information\n        partitionKeyRangeToLocation.delete(partitionKeyRangeId);\n        return false;\n    }\n    /**\n     * Initiates a background loop that periodically checks for unhealthy endpoints\n     * and attempts to open connections to them. If a connection is successfully\n     * established, it initiates a failback to the original location for the partition key range.\n     * This is useful for scenarios where a partition key range has been marked as unavailable\n     * due to a circuit breaker, and we want to periodically check if the original location\n     * has become healthy again.\n     * The loop runs at a defined interval specified by Constants.StalePartitionUnavailabilityRefreshIntervalInMs.\n     */\n    initiateCircuitBreakerFailbackLoop() {\n        this.circuitBreakerFailbackBackgroundRefresher = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_4__.startBackgroundTask)(async () => {\n            try {\n                await this.openConnectionToUnhealthyEndpointsWithFailback();\n            }\n            catch (err) {\n                console.error(\"Failed to open connection to unhealthy endpoints: \", err);\n            }\n        }, _index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.StalePartitionUnavailabilityRefreshIntervalInMs);\n    }\n    /**\n     * Attempts to open connections to unhealthy endpoints and initiates failback if the connections are successful.\n     * This method checks the partition key ranges that have failed locations and tries to re-establish connections\n     * to those locations. If a connection is successfully re-established, it initiates a failback to the original\n     * location for the partition key range.\n     */\n    async openConnectionToUnhealthyEndpointsWithFailback() {\n        for (const pkRange of this.partitionKeyRangeToLocationForReadAndWrite.keys()) {\n            const partitionFailover = this.partitionKeyRangeToLocationForReadAndWrite.get(pkRange);\n            if (!partitionFailover)\n                continue;\n            const { firstRequestFailureTime } = await partitionFailover.snapshotPartitionFailoverTimestamps();\n            const now = new Date();\n            if (now.getTime() - firstRequestFailureTime >\n                _index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.AllowedPartitionUnavailabilityDurationInMs) {\n                // Un-deterministically marking the original failed endpoint for the PkRange back to healthy.\n                // Initiate Failback to the original failed location.\n                this.partitionKeyRangeToLocationForReadAndWrite.delete(pkRange);\n            }\n        }\n    }\n}\n//# sourceMappingURL=globalPartitionEndpointManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/globalPartitionEndpointManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* reexport safe */ _azure_abort_controller__WEBPACK_IMPORTED_MODULE_24__.AbortError),\n/* harmony export */   AzureKeyVaultEncryptionKeyResolver: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.AzureKeyVaultEncryptionKeyResolver),\n/* harmony export */   BulkOperationType: () => (/* reexport safe */ _utils_batch_js__WEBPACK_IMPORTED_MODULE_3__.BulkOperationType),\n/* harmony export */   ChangeFeedIterator: () => (/* reexport safe */ _ChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_14__.ChangeFeedIterator),\n/* harmony export */   ChangeFeedIteratorResponse: () => (/* reexport safe */ _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__.ChangeFeedIteratorResponse),\n/* harmony export */   ChangeFeedMode: () => (/* reexport safe */ _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__.ChangeFeedMode),\n/* harmony export */   ChangeFeedPolicy: () => (/* reexport safe */ _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__.ChangeFeedPolicy),\n/* harmony export */   ChangeFeedResponse: () => (/* reexport safe */ _ChangeFeedResponse_js__WEBPACK_IMPORTED_MODULE_15__.ChangeFeedResponse),\n/* harmony export */   ChangeFeedRetentionTimeSpan: () => (/* reexport safe */ _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__.ChangeFeedRetentionTimeSpan),\n/* harmony export */   ChangeFeedStartFrom: () => (/* reexport safe */ _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__.ChangeFeedStartFrom),\n/* harmony export */   ClientContext: () => (/* reexport safe */ _ClientContext_js__WEBPACK_IMPORTED_MODULE_16__.ClientContext),\n/* harmony export */   ClientEncryptionKeyResponse: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.ClientEncryptionKeyResponse),\n/* harmony export */   ClientSideMetrics: () => (/* reexport safe */ _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__.ClientSideMetrics),\n/* harmony export */   Conflict: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Conflict),\n/* harmony export */   ConflictResolutionMode: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.ConflictResolutionMode),\n/* harmony export */   ConflictResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.ConflictResponse),\n/* harmony export */   Conflicts: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Conflicts),\n/* harmony export */   ConnectionMode: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.ConnectionMode),\n/* harmony export */   ConsistencyLevel: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.ConsistencyLevel),\n/* harmony export */   Constants: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants),\n/* harmony export */   Container: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Container),\n/* harmony export */   ContainerResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.ContainerResponse),\n/* harmony export */   Containers: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Containers),\n/* harmony export */   CosmosClient: () => (/* reexport safe */ _CosmosClient_js__WEBPACK_IMPORTED_MODULE_10__.CosmosClient),\n/* harmony export */   CosmosDbDiagnosticLevel: () => (/* reexport safe */ _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_19__.CosmosDbDiagnosticLevel),\n/* harmony export */   CosmosDiagnostics: () => (/* reexport safe */ _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_17__.CosmosDiagnostics),\n/* harmony export */   CosmosEncryptedNumberType: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.CosmosEncryptedNumberType),\n/* harmony export */   DEFAULT_PARTITION_KEY_PATH: () => (/* reexport safe */ _common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_PARTITION_KEY_PATH),\n/* harmony export */   DataType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.DataType),\n/* harmony export */   Database: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Database),\n/* harmony export */   DatabaseAccount: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.DatabaseAccount),\n/* harmony export */   DatabaseResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.DatabaseResponse),\n/* harmony export */   Databases: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Databases),\n/* harmony export */   DiagnosticNodeInternal: () => (/* reexport safe */ _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_7__.DiagnosticNodeInternal),\n/* harmony export */   DiagnosticNodeType: () => (/* reexport safe */ _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_7__.DiagnosticNodeType),\n/* harmony export */   EncryptionAlgorithm: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.EncryptionAlgorithm),\n/* harmony export */   EncryptionKeyResolverName: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.EncryptionKeyResolverName),\n/* harmony export */   EncryptionQueryBuilder: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.EncryptionQueryBuilder),\n/* harmony export */   EncryptionType: () => (/* reexport safe */ _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__.EncryptionType),\n/* harmony export */   ErrorResponse: () => (/* reexport safe */ _request_index_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse),\n/* harmony export */   FeedRange: () => (/* reexport safe */ _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__.FeedRange),\n/* harmony export */   FeedResponse: () => (/* reexport safe */ _request_index_js__WEBPACK_IMPORTED_MODULE_6__.FeedResponse),\n/* harmony export */   GeospatialType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.GeospatialType),\n/* harmony export */   GlobalEndpointManager: () => (/* reexport safe */ _globalEndpointManager_js__WEBPACK_IMPORTED_MODULE_20__.GlobalEndpointManager),\n/* harmony export */   HTTPMethod: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod),\n/* harmony export */   IndexKind: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.IndexKind),\n/* harmony export */   IndexingMode: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.IndexingMode),\n/* harmony export */   Item: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Item),\n/* harmony export */   ItemResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.ItemResponse),\n/* harmony export */   Items: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Items),\n/* harmony export */   KeyEncryptionAlgorithm: () => (/* reexport safe */ _encryption_enums_index_js__WEBPACK_IMPORTED_MODULE_25__.KeyEncryptionAlgorithm),\n/* harmony export */   MetadataLookUpType: () => (/* reexport safe */ _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_17__.MetadataLookUpType),\n/* harmony export */   Offer: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Offer),\n/* harmony export */   OfferResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.OfferResponse),\n/* harmony export */   Offers: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Offers),\n/* harmony export */   OperationType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_1__.OperationType),\n/* harmony export */   PartitionKeyBuilder: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.PartitionKeyBuilder),\n/* harmony export */   PartitionKeyDefinitionVersion: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.PartitionKeyDefinitionVersion),\n/* harmony export */   PartitionKeyKind: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.PartitionKeyKind),\n/* harmony export */   PatchOperationType: () => (/* reexport safe */ _utils_patch_js__WEBPACK_IMPORTED_MODULE_4__.PatchOperationType),\n/* harmony export */   Permission: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Permission),\n/* harmony export */   PermissionMode: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.PermissionMode),\n/* harmony export */   PermissionResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.PermissionResponse),\n/* harmony export */   Permissions: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Permissions),\n/* harmony export */   PluginOn: () => (/* reexport safe */ _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_13__.PluginOn),\n/* harmony export */   PriorityLevel: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.PriorityLevel),\n/* harmony export */   QueryIterator: () => (/* reexport safe */ _queryIterator_js__WEBPACK_IMPORTED_MODULE_8__.QueryIterator),\n/* harmony export */   QueryMetrics: () => (/* reexport safe */ _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__.QueryMetrics),\n/* harmony export */   QueryMetricsConstants: () => (/* reexport safe */ _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__.QueryMetricsConstants),\n/* harmony export */   QueryPreparationTimes: () => (/* reexport safe */ _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__.QueryPreparationTimes),\n/* harmony export */   ResourceResponse: () => (/* reexport safe */ _request_index_js__WEBPACK_IMPORTED_MODULE_6__.ResourceResponse),\n/* harmony export */   ResourceType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType),\n/* harmony export */   RestError: () => (/* reexport safe */ _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_23__.RestError),\n/* harmony export */   RuntimeExecutionTimes: () => (/* reexport safe */ _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__.RuntimeExecutionTimes),\n/* harmony export */   SasTokenPermissionKind: () => (/* reexport safe */ _common_constants_js__WEBPACK_IMPORTED_MODULE_21__.SasTokenPermissionKind),\n/* harmony export */   SasTokenProperties: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.SasTokenProperties),\n/* harmony export */   Scripts: () => (/* reexport safe */ _client_Script_Scripts_js__WEBPACK_IMPORTED_MODULE_12__.Scripts),\n/* harmony export */   SpatialType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.SpatialType),\n/* harmony export */   StatusCodes: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes),\n/* harmony export */   StoredProcedure: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.StoredProcedure),\n/* harmony export */   StoredProcedureResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.StoredProcedureResponse),\n/* harmony export */   StoredProcedures: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.StoredProcedures),\n/* harmony export */   TimeSpan: () => (/* reexport safe */ _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__.TimeSpan),\n/* harmony export */   TimeoutError: () => (/* reexport safe */ _request_index_js__WEBPACK_IMPORTED_MODULE_6__.TimeoutError),\n/* harmony export */   Trigger: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Trigger),\n/* harmony export */   TriggerOperation: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.TriggerOperation),\n/* harmony export */   TriggerResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.TriggerResponse),\n/* harmony export */   TriggerType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.TriggerType),\n/* harmony export */   Triggers: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Triggers),\n/* harmony export */   User: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.User),\n/* harmony export */   UserDefinedFunction: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.UserDefinedFunction),\n/* harmony export */   UserDefinedFunctionResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.UserDefinedFunctionResponse),\n/* harmony export */   UserDefinedFunctionType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.UserDefinedFunctionType),\n/* harmony export */   UserDefinedFunctions: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.UserDefinedFunctions),\n/* harmony export */   UserResponse: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.UserResponse),\n/* harmony export */   Users: () => (/* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_11__.Users),\n/* harmony export */   VectorEmbeddingDataType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.VectorEmbeddingDataType),\n/* harmony export */   VectorEmbeddingDistanceFunction: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.VectorEmbeddingDistanceFunction),\n/* harmony export */   VectorIndexType: () => (/* reexport safe */ _documents_index_js__WEBPACK_IMPORTED_MODULE_5__.VectorIndexType),\n/* harmony export */   createAuthorizationSasToken: () => (/* reexport safe */ _utils_SasToken_js__WEBPACK_IMPORTED_MODULE_22__.createAuthorizationSasToken),\n/* harmony export */   setAuthorizationTokenHeaderUsingMasterKey: () => (/* reexport safe */ _auth_js__WEBPACK_IMPORTED_MODULE_2__.setAuthorizationTokenHeaderUsingMasterKey)\n/* harmony export */ });\n/* harmony import */ var _common_partitionKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/partitionKeys.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/partitionKeys.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _auth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/auth.js\");\n/* harmony import */ var _utils_batch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n/* harmony import */ var _utils_patch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/patch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/patch.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _request_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./request/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _queryIterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./queryIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\");\n/* harmony import */ var _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./queryMetrics/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/index.js\");\n/* harmony import */ var _CosmosClient_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./CosmosClient.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosClient.js\");\n/* harmony import */ var _client_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./client/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/index.js\");\n/* harmony import */ var _client_Script_Scripts_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./client/Script/Scripts.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/Script/Scripts.js\");\n/* harmony import */ var _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./plugins/Plugin.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/plugins/Plugin.js\");\n/* harmony import */ var _ChangeFeedIterator_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ChangeFeedIterator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedIterator.js\");\n/* harmony import */ var _ChangeFeedResponse_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ChangeFeedResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/ChangeFeedResponse.js\");\n/* harmony import */ var _ClientContext_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ClientContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/ClientContext.js\");\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./client/ChangeFeed/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/index.js\");\n/* harmony import */ var _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./diagnostics/CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n/* harmony import */ var _globalEndpointManager_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./globalEndpointManager.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/globalEndpointManager.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _utils_SasToken_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./utils/SasToken.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/SasToken.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _encryption_enums_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./encryption/enums/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/enums/index.js\");\n/* harmony import */ var _encryption_ClientEncryptionKey_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./encryption/ClientEncryptionKey/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/ClientEncryptionKey/index.js\");\n/* harmony import */ var _encryption_EncryptionKeyResolver_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./encryption/EncryptionKeyResolver/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/EncryptionKeyResolver/index.js\");\n/* harmony import */ var _encryption_index_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./encryption/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/encryption/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUN1RTtBQUN2QjtBQUNzQjtBQUNoQjtBQUNDO0FBQzJVO0FBQzNTO0FBQ3BEO0FBQ21FO0FBQ25EO0FBQ1g7QUFDUztBQUNmO0FBQ21CO0FBQ047QUFDYztBQUNBO0FBQ1Y7QUFDNkI7QUFDMEY7QUFDdkY7QUFDaEI7QUFDSjtBQUNHO0FBQ1o7QUFDRDtBQUNUO0FBQ2M7QUFDRTtBQUNnSztBQUM1TiIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vaW5kZXguanM/MWQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IERFRkFVTFRfUEFSVElUSU9OX0tFWV9QQVRIIH0gZnJvbSBcIi4vY29tbW9uL3BhcnRpdGlvbktleXMuanNcIjtcbmV4cG9ydCB7IFN0YXR1c0NvZGVzIH0gZnJvbSBcIi4vY29tbW9uL2luZGV4LmpzXCI7XG5leHBvcnQgeyBzZXRBdXRob3JpemF0aW9uVG9rZW5IZWFkZXJVc2luZ01hc3RlcktleSB9IGZyb20gXCIuL2F1dGguanNcIjtcbmV4cG9ydCB7IEJ1bGtPcGVyYXRpb25UeXBlLCB9IGZyb20gXCIuL3V0aWxzL2JhdGNoLmpzXCI7XG5leHBvcnQgeyBQYXRjaE9wZXJhdGlvblR5cGUsIH0gZnJvbSBcIi4vdXRpbHMvcGF0Y2guanNcIjtcbmV4cG9ydCB7IENvbm5lY3Rpb25Nb2RlLCBDb25zaXN0ZW5jeUxldmVsLCBEYXRhYmFzZUFjY291bnQsIERhdGFUeXBlLCBJbmRleGluZ01vZGUsIFNwYXRpYWxUeXBlLCBHZW9zcGF0aWFsVHlwZSwgSW5kZXhLaW5kLCBQYXJ0aXRpb25LZXlLaW5kLCBQYXJ0aXRpb25LZXlEZWZpbml0aW9uVmVyc2lvbiwgUGFydGl0aW9uS2V5QnVpbGRlciwgUGVybWlzc2lvbk1vZGUsIFByaW9yaXR5TGV2ZWwsIFRyaWdnZXJPcGVyYXRpb24sIFRyaWdnZXJUeXBlLCBVc2VyRGVmaW5lZEZ1bmN0aW9uVHlwZSwgVmVjdG9yRW1iZWRkaW5nRGF0YVR5cGUsIFZlY3RvckVtYmVkZGluZ0Rpc3RhbmNlRnVuY3Rpb24sIFZlY3RvckluZGV4VHlwZSwgfSBmcm9tIFwiLi9kb2N1bWVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IENvbnN0YW50cywgT3BlcmF0aW9uVHlwZSwgUmVzb3VyY2VUeXBlLCBIVFRQTWV0aG9kIH0gZnJvbSBcIi4vY29tbW9uL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXF1ZXN0L2luZGV4LmpzXCI7XG5leHBvcnQgeyBEaWFnbm9zdGljTm9kZUludGVybmFsLCBEaWFnbm9zdGljTm9kZVR5cGUsIH0gZnJvbSBcIi4vZGlhZ25vc3RpY3MvRGlhZ25vc3RpY05vZGVJbnRlcm5hbC5qc1wiO1xuZXhwb3J0IHsgUXVlcnlJdGVyYXRvciB9IGZyb20gXCIuL3F1ZXJ5SXRlcmF0b3IuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3F1ZXJ5TWV0cmljcy9pbmRleC5qc1wiO1xuZXhwb3J0IHsgQ29zbW9zQ2xpZW50IH0gZnJvbSBcIi4vQ29zbW9zQ2xpZW50LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jbGllbnQvaW5kZXguanNcIjtcbmV4cG9ydCB7IFNjcmlwdHMgfSBmcm9tIFwiLi9jbGllbnQvU2NyaXB0L1NjcmlwdHMuanNcIjtcbmV4cG9ydCB7IFBsdWdpbk9uIH0gZnJvbSBcIi4vcGx1Z2lucy9QbHVnaW4uanNcIjtcbmV4cG9ydCB7IENoYW5nZUZlZWRJdGVyYXRvciB9IGZyb20gXCIuL0NoYW5nZUZlZWRJdGVyYXRvci5qc1wiO1xuZXhwb3J0IHsgQ2hhbmdlRmVlZFJlc3BvbnNlIH0gZnJvbSBcIi4vQ2hhbmdlRmVlZFJlc3BvbnNlLmpzXCI7XG5leHBvcnQgeyBDbGllbnRDb250ZXh0IH0gZnJvbSBcIi4vQ2xpZW50Q29udGV4dC5qc1wiO1xuZXhwb3J0IHsgQ29zbW9zRGlhZ25vc3RpY3MsIE1ldGFkYXRhTG9va1VwVHlwZSwgfSBmcm9tIFwiLi9Db3Ntb3NEaWFnbm9zdGljcy5qc1wiO1xuZXhwb3J0IHsgQ2hhbmdlRmVlZEl0ZXJhdG9yUmVzcG9uc2UsIENoYW5nZUZlZWRTdGFydEZyb20sIEZlZWRSYW5nZSwgQ2hhbmdlRmVlZE1vZGUsIENoYW5nZUZlZWRQb2xpY3ksIENoYW5nZUZlZWRSZXRlbnRpb25UaW1lU3BhbiwgfSBmcm9tIFwiLi9jbGllbnQvQ2hhbmdlRmVlZC9pbmRleC5qc1wiO1xuZXhwb3J0IHsgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwgfSBmcm9tIFwiLi9kaWFnbm9zdGljcy9Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5qc1wiO1xuZXhwb3J0IHsgR2xvYmFsRW5kcG9pbnRNYW5hZ2VyIH0gZnJvbSBcIi4vZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyLmpzXCI7XG5leHBvcnQgeyBTYXNUb2tlblBlcm1pc3Npb25LaW5kIH0gZnJvbSBcIi4vY29tbW9uL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQXV0aG9yaXphdGlvblNhc1Rva2VuIH0gZnJvbSBcIi4vdXRpbHMvU2FzVG9rZW4uanNcIjtcbmV4cG9ydCB7IFJlc3RFcnJvciB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5leHBvcnQgeyBBYm9ydEVycm9yIH0gZnJvbSBcIkBhenVyZS9hYm9ydC1jb250cm9sbGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lbmNyeXB0aW9uL2VudW1zL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lbmNyeXB0aW9uL0NsaWVudEVuY3J5cHRpb25LZXkvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VuY3J5cHRpb24vRW5jcnlwdGlvbktleVJlc29sdmVyL2luZGV4LmpzXCI7XG5leHBvcnQgeyBFbmNyeXB0aW9uUXVlcnlCdWlsZGVyLCBDbGllbnRFbmNyeXB0aW9uS2V5UmVzcG9uc2UsIEF6dXJlS2V5VmF1bHRFbmNyeXB0aW9uS2V5UmVzb2x2ZXIsIEVuY3J5cHRpb25UeXBlLCBFbmNyeXB0aW9uQWxnb3JpdGhtLCBFbmNyeXB0aW9uS2V5UmVzb2x2ZXJOYW1lLCBDb3Ntb3NFbmNyeXB0ZWROdW1iZXJUeXBlLCB9IGZyb20gXCIuL2VuY3J5cHRpb24vaW5kZXguanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/plugins/Plugin.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/plugins/Plugin.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PluginOn: () => (/* binding */ PluginOn),\n/* harmony export */   executePlugins: () => (/* binding */ executePlugins)\n/* harmony export */ });\n/**\n * Used to specify which type of events to execute this plug in on.\n *\n * @hidden\n */\nvar PluginOn;\n(function (PluginOn) {\n    /**\n     * Will be executed per network request\n     */\n    PluginOn[\"request\"] = \"request\";\n    /**\n     * Will be executed per API operation\n     */\n    PluginOn[\"operation\"] = \"operation\";\n})(PluginOn || (PluginOn = {}));\n/**\n * @internal\n */\nasync function executePlugins(diagnosticNode, requestContext, next, on) {\n    if (!requestContext.plugins) {\n        return next(requestContext, diagnosticNode, undefined);\n    }\n    let level = 0;\n    const _ = (inner) => {\n        if (++level >= inner.plugins.length) {\n            return next(requestContext, diagnosticNode, undefined);\n        }\n        else if (inner.plugins[level].on !== on) {\n            return _(requestContext);\n        }\n        else {\n            return inner.plugins[level].plugin(inner, diagnosticNode, _);\n        }\n    };\n    if (requestContext.plugins[level].on !== on) {\n        return _(requestContext);\n    }\n    else {\n        return requestContext.plugins[level].plugin(requestContext, diagnosticNode, _);\n    }\n}\n//# sourceMappingURL=Plugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9wbHVnaW5zL1BsdWdpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcGx1Z2lucy9QbHVnaW4uanM/YzMxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZWQgdG8gc3BlY2lmeSB3aGljaCB0eXBlIG9mIGV2ZW50cyB0byBleGVjdXRlIHRoaXMgcGx1ZyBpbiBvbi5cbiAqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCB2YXIgUGx1Z2luT247XG4oZnVuY3Rpb24gKFBsdWdpbk9uKSB7XG4gICAgLyoqXG4gICAgICogV2lsbCBiZSBleGVjdXRlZCBwZXIgbmV0d29yayByZXF1ZXN0XG4gICAgICovXG4gICAgUGx1Z2luT25bXCJyZXF1ZXN0XCJdID0gXCJyZXF1ZXN0XCI7XG4gICAgLyoqXG4gICAgICogV2lsbCBiZSBleGVjdXRlZCBwZXIgQVBJIG9wZXJhdGlvblxuICAgICAqL1xuICAgIFBsdWdpbk9uW1wib3BlcmF0aW9uXCJdID0gXCJvcGVyYXRpb25cIjtcbn0pKFBsdWdpbk9uIHx8IChQbHVnaW5PbiA9IHt9KSk7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVBsdWdpbnMoZGlhZ25vc3RpY05vZGUsIHJlcXVlc3RDb250ZXh0LCBuZXh0LCBvbikge1xuICAgIGlmICghcmVxdWVzdENvbnRleHQucGx1Z2lucykge1xuICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0Q29udGV4dCwgZGlhZ25vc3RpY05vZGUsIHVuZGVmaW5lZCk7XG4gICAgfVxuICAgIGxldCBsZXZlbCA9IDA7XG4gICAgY29uc3QgXyA9IChpbm5lcikgPT4ge1xuICAgICAgICBpZiAoKytsZXZlbCA+PSBpbm5lci5wbHVnaW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdENvbnRleHQsIGRpYWdub3N0aWNOb2RlLCB1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlubmVyLnBsdWdpbnNbbGV2ZWxdLm9uICE9PSBvbikge1xuICAgICAgICAgICAgcmV0dXJuIF8ocmVxdWVzdENvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGlubmVyLnBsdWdpbnNbbGV2ZWxdLnBsdWdpbihpbm5lciwgZGlhZ25vc3RpY05vZGUsIF8pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBpZiAocmVxdWVzdENvbnRleHQucGx1Z2luc1tsZXZlbF0ub24gIT09IG9uKSB7XG4gICAgICAgIHJldHVybiBfKHJlcXVlc3RDb250ZXh0KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0Q29udGV4dC5wbHVnaW5zW2xldmVsXS5wbHVnaW4ocmVxdWVzdENvbnRleHQsIGRpYWdub3N0aWNOb2RlLCBfKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QbHVnaW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/plugins/Plugin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/AverageAggregator.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/AverageAggregator.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AverageAggregator: () => (/* binding */ AverageAggregator)\n/* harmony export */ });\n/** @hidden */\nclass AverageAggregator {\n    sum;\n    count;\n    /**\n     * Add the provided item to aggregation result.\n     */\n    aggregate(other) {\n        if (other == null || other.sum == null) {\n            return;\n        }\n        if (this.sum == null) {\n            this.sum = 0.0;\n            this.count = 0;\n        }\n        this.sum += other.sum;\n        this.count += other.count;\n    }\n    /**\n     * Get the aggregation result.\n     */\n    getResult() {\n        if (this.sum == null || this.count <= 0) {\n            return undefined;\n        }\n        return this.sum / this.count;\n    }\n}\n//# sourceMappingURL=AverageAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvQXZlcmFnZUFnZ3JlZ2F0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9BdmVyYWdlQWdncmVnYXRvci5qcz9mYjkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgQXZlcmFnZUFnZ3JlZ2F0b3Ige1xuICAgIHN1bTtcbiAgICBjb3VudDtcbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIHByb3ZpZGVkIGl0ZW0gdG8gYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICBpZiAob3RoZXIgPT0gbnVsbCB8fCBvdGhlci5zdW0gPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnN1bSA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnN1bSA9IDAuMDtcbiAgICAgICAgICAgIHRoaXMuY291bnQgPSAwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3VtICs9IG90aGVyLnN1bTtcbiAgICAgICAgdGhpcy5jb3VudCArPSBvdGhlci5jb3VudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBhZ2dyZWdhdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICBpZiAodGhpcy5zdW0gPT0gbnVsbCB8fCB0aGlzLmNvdW50IDw9IDApIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc3VtIC8gdGhpcy5jb3VudDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdmVyYWdlQWdncmVnYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/AverageAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/CountAggregator.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/CountAggregator.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CountAggregator: () => (/* binding */ CountAggregator)\n/* harmony export */ });\n/** @hidden */\nclass CountAggregator {\n    value;\n    /**\n     * Represents an aggregator for COUNT operator.\n     * @hidden\n     */\n    constructor() {\n        this.value = 0;\n    }\n    /**\n     * Add the provided item to aggregation result.\n     */\n    aggregate(other) {\n        this.value += other;\n    }\n    /**\n     * Get the aggregation result.\n     */\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=CountAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvQ291bnRBZ2dyZWdhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9Db3VudEFnZ3JlZ2F0b3IuanM/NDJiOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIENvdW50QWdncmVnYXRvciB7XG4gICAgdmFsdWU7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhbiBhZ2dyZWdhdG9yIGZvciBDT1VOVCBvcGVyYXRvci5cbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIHByb3ZpZGVkIGl0ZW0gdG8gYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICB0aGlzLnZhbHVlICs9IG90aGVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBnZXRSZXN1bHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvdW50QWdncmVnYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/CountAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/GlobalStatisticsAggregator.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/GlobalStatisticsAggregator.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalStatisticsAggregator: () => (/* binding */ GlobalStatisticsAggregator)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass GlobalStatisticsAggregator {\n    globalStatistics;\n    constructor() {\n        this.globalStatistics = {\n            documentCount: 0,\n            fullTextStatistics: [],\n        };\n    }\n    aggregate(other) {\n        if (!other) {\n            return;\n        }\n        // Aggregate document count\n        this.globalStatistics.documentCount += other.documentCount;\n        // Ensure `fullTextStatistics` is initialized\n        if (!other.fullTextStatistics || other.fullTextStatistics.length === 0) {\n            return;\n        }\n        // Initialize `this.globalStatistics.fullTextStatistics` if it's empty\n        if (this.globalStatistics.fullTextStatistics.length === 0) {\n            this.globalStatistics.fullTextStatistics = other.fullTextStatistics.map((stat) => ({\n                totalWordCount: stat.totalWordCount,\n                hitCounts: [...stat.hitCounts],\n            }));\n        }\n        else {\n            // Loop through `other.fullTextStatistics` to add values to `this.globalStatistics.fullTextStatistics`\n            for (let i = 0; i < other.fullTextStatistics.length; i++) {\n                const otherStat = other.fullTextStatistics[i];\n                // Ensure the index `i` is initialized\n                if (!this.globalStatistics.fullTextStatistics[i]) {\n                    this.globalStatistics.fullTextStatistics[i] = {\n                        totalWordCount: 0,\n                        hitCounts: [],\n                    };\n                }\n                // Add totalWordCount\n                this.globalStatistics.fullTextStatistics[i].totalWordCount += otherStat.totalWordCount;\n                // Aggregate `hitCounts`\n                for (let j = 0; j < otherStat.hitCounts.length; j++) {\n                    // Initialize hit count if necessary\n                    if (this.globalStatistics.fullTextStatistics[i].hitCounts.length <= j) {\n                        this.globalStatistics.fullTextStatistics[i].hitCounts.push(0);\n                    }\n                    this.globalStatistics.fullTextStatistics[i].hitCounts[j] += otherStat.hitCounts[j];\n                }\n            }\n        }\n    }\n    getResult() {\n        return this.globalStatistics;\n    }\n}\n//# sourceMappingURL=GlobalStatisticsAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvR2xvYmFsU3RhdGlzdGljc0FnZ3JlZ2F0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixxQ0FBcUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxnQ0FBZ0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL0dsb2JhbFN0YXRpc3RpY3NBZ2dyZWdhdG9yLmpzPzM0OTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY2xhc3MgR2xvYmFsU3RhdGlzdGljc0FnZ3JlZ2F0b3Ige1xuICAgIGdsb2JhbFN0YXRpc3RpY3M7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZ2xvYmFsU3RhdGlzdGljcyA9IHtcbiAgICAgICAgICAgIGRvY3VtZW50Q291bnQ6IDAsXG4gICAgICAgICAgICBmdWxsVGV4dFN0YXRpc3RpY3M6IFtdLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBhZ2dyZWdhdGUob3RoZXIpIHtcbiAgICAgICAgaWYgKCFvdGhlcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFnZ3JlZ2F0ZSBkb2N1bWVudCBjb3VudFxuICAgICAgICB0aGlzLmdsb2JhbFN0YXRpc3RpY3MuZG9jdW1lbnRDb3VudCArPSBvdGhlci5kb2N1bWVudENvdW50O1xuICAgICAgICAvLyBFbnN1cmUgYGZ1bGxUZXh0U3RhdGlzdGljc2AgaXMgaW5pdGlhbGl6ZWRcbiAgICAgICAgaWYgKCFvdGhlci5mdWxsVGV4dFN0YXRpc3RpY3MgfHwgb3RoZXIuZnVsbFRleHRTdGF0aXN0aWNzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIEluaXRpYWxpemUgYHRoaXMuZ2xvYmFsU3RhdGlzdGljcy5mdWxsVGV4dFN0YXRpc3RpY3NgIGlmIGl0J3MgZW1wdHlcbiAgICAgICAgaWYgKHRoaXMuZ2xvYmFsU3RhdGlzdGljcy5mdWxsVGV4dFN0YXRpc3RpY3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmdsb2JhbFN0YXRpc3RpY3MuZnVsbFRleHRTdGF0aXN0aWNzID0gb3RoZXIuZnVsbFRleHRTdGF0aXN0aWNzLm1hcCgoc3RhdCkgPT4gKHtcbiAgICAgICAgICAgICAgICB0b3RhbFdvcmRDb3VudDogc3RhdC50b3RhbFdvcmRDb3VudCxcbiAgICAgICAgICAgICAgICBoaXRDb3VudHM6IFsuLi5zdGF0LmhpdENvdW50c10sXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBMb29wIHRocm91Z2ggYG90aGVyLmZ1bGxUZXh0U3RhdGlzdGljc2AgdG8gYWRkIHZhbHVlcyB0byBgdGhpcy5nbG9iYWxTdGF0aXN0aWNzLmZ1bGxUZXh0U3RhdGlzdGljc2BcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3RoZXIuZnVsbFRleHRTdGF0aXN0aWNzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb3RoZXJTdGF0ID0gb3RoZXIuZnVsbFRleHRTdGF0aXN0aWNzW2ldO1xuICAgICAgICAgICAgICAgIC8vIEVuc3VyZSB0aGUgaW5kZXggYGlgIGlzIGluaXRpYWxpemVkXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmdsb2JhbFN0YXRpc3RpY3MuZnVsbFRleHRTdGF0aXN0aWNzW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsU3RhdGlzdGljcy5mdWxsVGV4dFN0YXRpc3RpY3NbaV0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFdvcmRDb3VudDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpdENvdW50czogW10sXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEFkZCB0b3RhbFdvcmRDb3VudFxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsU3RhdGlzdGljcy5mdWxsVGV4dFN0YXRpc3RpY3NbaV0udG90YWxXb3JkQ291bnQgKz0gb3RoZXJTdGF0LnRvdGFsV29yZENvdW50O1xuICAgICAgICAgICAgICAgIC8vIEFnZ3JlZ2F0ZSBgaGl0Q291bnRzYFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgb3RoZXJTdGF0LmhpdENvdW50cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAvLyBJbml0aWFsaXplIGhpdCBjb3VudCBpZiBuZWNlc3NhcnlcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2xvYmFsU3RhdGlzdGljcy5mdWxsVGV4dFN0YXRpc3RpY3NbaV0uaGl0Q291bnRzLmxlbmd0aCA8PSBqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbFN0YXRpc3RpY3MuZnVsbFRleHRTdGF0aXN0aWNzW2ldLmhpdENvdW50cy5wdXNoKDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsU3RhdGlzdGljcy5mdWxsVGV4dFN0YXRpc3RpY3NbaV0uaGl0Q291bnRzW2pdICs9IG90aGVyU3RhdC5oaXRDb3VudHNbal07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGdldFJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2xvYmFsU3RhdGlzdGljcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1HbG9iYWxTdGF0aXN0aWNzQWdncmVnYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/GlobalStatisticsAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeListAggregator.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeListAggregator.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MakeListAggregator: () => (/* binding */ MakeListAggregator)\n/* harmony export */ });\n/** @hidden */\nclass MakeListAggregator {\n    value;\n    constructor() {\n        this.value = [];\n    }\n    aggregate(other) {\n        if (Array.isArray(other)) {\n            this.value.push(...other);\n        }\n    }\n    getResult() {\n        const result = [...this.value];\n        return result;\n    }\n}\n//# sourceMappingURL=MakeListAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvTWFrZUxpc3RBZ2dyZWdhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvTWFrZUxpc3RBZ2dyZWdhdG9yLmpzP2YyYzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBNYWtlTGlzdEFnZ3JlZ2F0b3Ige1xuICAgIHZhbHVlO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnZhbHVlID0gW107XG4gICAgfVxuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvdGhlcikpIHtcbiAgICAgICAgICAgIHRoaXMudmFsdWUucHVzaCguLi5vdGhlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbLi4udGhpcy52YWx1ZV07XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWFrZUxpc3RBZ2dyZWdhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeListAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeSetAggregator.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeSetAggregator.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MakeSetAggregator: () => (/* binding */ MakeSetAggregator)\n/* harmony export */ });\n/** @hidden */\n/**\n * Represents an aggregator that collects unique values into a set.\n */\nclass MakeSetAggregator {\n    value;\n    constructor() {\n        this.value = new Set();\n    }\n    /**\n     * Aggregates the values from another set into the current set.\n     * @param other - The set to aggregate.\n     */\n    aggregate(other) {\n        other.forEach((item) => {\n            this.value.add(item);\n        });\n    }\n    /**\n     * Gets the result of the MakeSetAggregator.\n     * @returns A Set containing the unique values collected by the aggregator.\n     */\n    getResult() {\n        return Array.from(this.value);\n    }\n}\n//# sourceMappingURL=MakeSetAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvTWFrZVNldEFnZ3JlZ2F0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvTWFrZVNldEFnZ3JlZ2F0b3IuanM/ZjljYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGhpZGRlbiAqL1xuLyoqXG4gKiBSZXByZXNlbnRzIGFuIGFnZ3JlZ2F0b3IgdGhhdCBjb2xsZWN0cyB1bmlxdWUgdmFsdWVzIGludG8gYSBzZXQuXG4gKi9cbmV4cG9ydCBjbGFzcyBNYWtlU2V0QWdncmVnYXRvciB7XG4gICAgdmFsdWU7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSBuZXcgU2V0KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFnZ3JlZ2F0ZXMgdGhlIHZhbHVlcyBmcm9tIGFub3RoZXIgc2V0IGludG8gdGhlIGN1cnJlbnQgc2V0LlxuICAgICAqIEBwYXJhbSBvdGhlciAtIFRoZSBzZXQgdG8gYWdncmVnYXRlLlxuICAgICAqL1xuICAgIGFnZ3JlZ2F0ZShvdGhlcikge1xuICAgICAgICBvdGhlci5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnZhbHVlLmFkZChpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHJlc3VsdCBvZiB0aGUgTWFrZVNldEFnZ3JlZ2F0b3IuXG4gICAgICogQHJldHVybnMgQSBTZXQgY29udGFpbmluZyB0aGUgdW5pcXVlIHZhbHVlcyBjb2xsZWN0ZWQgYnkgdGhlIGFnZ3JlZ2F0b3IuXG4gICAgICovXG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLnZhbHVlKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYWtlU2V0QWdncmVnYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeSetAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MaxAggregator.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MaxAggregator.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaxAggregator: () => (/* binding */ MaxAggregator)\n/* harmony export */ });\n/* harmony import */ var _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../orderByDocumentProducerComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** @hidden */\nclass MaxAggregator {\n    value;\n    comparer;\n    /**\n     * Represents an aggregator for MAX operator.\n     * @hidden\n     */\n    constructor() {\n        this.value = undefined;\n        this.comparer = new _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_0__.OrderByDocumentProducerComparator([\"Ascending\"]);\n    }\n    /**\n     * Add the provided item to aggregation result.\n     */\n    aggregate(other) {\n        if (this.value === undefined) {\n            this.value = other.max;\n        }\n        else if (this.comparer.compareValue(other.max, typeof other.max, this.value, typeof this.value) > 0) {\n            this.value = other.max;\n        }\n    }\n    /**\n     * Get the aggregation result.\n     */\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=MaxAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvTWF4QWdncmVnYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDNEY7QUFDNUY7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0dBQWlDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9NYXhBZ2dyZWdhdG9yLmpzPzRjODMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBPcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IgfSBmcm9tIFwiLi4vb3JkZXJCeURvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIE1heEFnZ3JlZ2F0b3Ige1xuICAgIHZhbHVlO1xuICAgIGNvbXBhcmVyO1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgYW4gYWdncmVnYXRvciBmb3IgTUFYIG9wZXJhdG9yLlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5jb21wYXJlciA9IG5ldyBPcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IoW1wiQXNjZW5kaW5nXCJdKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBwcm92aWRlZCBpdGVtIHRvIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBhZ2dyZWdhdGUob3RoZXIpIHtcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IG90aGVyLm1heDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLmNvbXBhcmVyLmNvbXBhcmVWYWx1ZShvdGhlci5tYXgsIHR5cGVvZiBvdGhlci5tYXgsIHRoaXMudmFsdWUsIHR5cGVvZiB0aGlzLnZhbHVlKSA+IDApIHtcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBvdGhlci5tYXg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBhZ2dyZWdhdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYXhBZ2dyZWdhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MaxAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MinAggregator.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MinAggregator.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MinAggregator: () => (/* binding */ MinAggregator)\n/* harmony export */ });\n/* harmony import */ var _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../orderByDocumentProducerComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** @hidden */\nclass MinAggregator {\n    value;\n    comparer;\n    /**\n     * Represents an aggregator for MIN operator.\n     * @hidden\n     */\n    constructor() {\n        this.value = undefined;\n        this.comparer = new _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_0__.OrderByDocumentProducerComparator([\"Ascending\"]);\n    }\n    /**\n     * Add the provided item to aggregation result.\n     */\n    aggregate(other) {\n        if (this.value === undefined) {\n            // || typeof this.value === \"object\"\n            this.value = other.min;\n        }\n        else {\n            const otherType = other.min === null ? \"NoValue\" : typeof other.min; // || typeof other === \"object\"\n            const thisType = this.value === null ? \"NoValue\" : typeof this.value;\n            if (this.comparer.compareValue(other.min, otherType, this.value, thisType) < 0) {\n                this.value = other.min;\n            }\n        }\n    }\n    /**\n     * Get the aggregation result.\n     */\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=MinAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvTWluQWdncmVnYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDNEY7QUFDNUY7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0dBQWlDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9NaW5BZ2dyZWdhdG9yLmpzP2VlMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBPcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IgfSBmcm9tIFwiLi4vb3JkZXJCeURvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIE1pbkFnZ3JlZ2F0b3Ige1xuICAgIHZhbHVlO1xuICAgIGNvbXBhcmVyO1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgYW4gYWdncmVnYXRvciBmb3IgTUlOIG9wZXJhdG9yLlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5jb21wYXJlciA9IG5ldyBPcmRlckJ5RG9jdW1lbnRQcm9kdWNlckNvbXBhcmF0b3IoW1wiQXNjZW5kaW5nXCJdKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBwcm92aWRlZCBpdGVtIHRvIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBhZ2dyZWdhdGUob3RoZXIpIHtcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gfHwgdHlwZW9mIHRoaXMudmFsdWUgPT09IFwib2JqZWN0XCJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBvdGhlci5taW47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBvdGhlclR5cGUgPSBvdGhlci5taW4gPT09IG51bGwgPyBcIk5vVmFsdWVcIiA6IHR5cGVvZiBvdGhlci5taW47IC8vIHx8IHR5cGVvZiBvdGhlciA9PT0gXCJvYmplY3RcIlxuICAgICAgICAgICAgY29uc3QgdGhpc1R5cGUgPSB0aGlzLnZhbHVlID09PSBudWxsID8gXCJOb1ZhbHVlXCIgOiB0eXBlb2YgdGhpcy52YWx1ZTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbXBhcmVyLmNvbXBhcmVWYWx1ZShvdGhlci5taW4sIG90aGVyVHlwZSwgdGhpcy52YWx1ZSwgdGhpc1R5cGUpIDwgMCkge1xuICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBvdGhlci5taW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBhZ2dyZWdhdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0UmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NaW5BZ2dyZWdhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MinAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/StaticValueAggregator.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/StaticValueAggregator.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StaticValueAggregator: () => (/* binding */ StaticValueAggregator)\n/* harmony export */ });\n/** @hidden */\nclass StaticValueAggregator {\n    value;\n    aggregate(other) {\n        if (this.value === undefined) {\n            this.value = other;\n        }\n    }\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=StaticValueAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvU3RhdGljVmFsdWVBZ2dyZWdhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlFeGVjdXRpb25Db250ZXh0L0FnZ3JlZ2F0b3JzL1N0YXRpY1ZhbHVlQWdncmVnYXRvci5qcz8zYmI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgU3RhdGljVmFsdWVBZ2dyZWdhdG9yIHtcbiAgICB2YWx1ZTtcbiAgICBhZ2dyZWdhdGUob3RoZXIpIHtcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IG90aGVyO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhdGljVmFsdWVBZ2dyZWdhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/StaticValueAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/SumAggregator.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/SumAggregator.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SumAggregator: () => (/* binding */ SumAggregator)\n/* harmony export */ });\n/** @hidden */\nclass SumAggregator {\n    sum;\n    /**\n     * Add the provided item to aggregation result.\n     */\n    aggregate(other) {\n        if (other === undefined) {\n            return;\n        }\n        if (this.sum === undefined) {\n            this.sum = other;\n        }\n        else {\n            this.sum += other;\n        }\n    }\n    /**\n     * Get the aggregation result.\n     */\n    getResult() {\n        return this.sum;\n    }\n}\n//# sourceMappingURL=SumAggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvU3VtQWdncmVnYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9BZ2dyZWdhdG9ycy9TdW1BZ2dyZWdhdG9yLmpzPzg4OWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBTdW1BZ2dyZWdhdG9yIHtcbiAgICBzdW07XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBwcm92aWRlZCBpdGVtIHRvIGFnZ3JlZ2F0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBhZ2dyZWdhdGUob3RoZXIpIHtcbiAgICAgICAgaWYgKG90aGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zdW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zdW0gPSBvdGhlcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3VtICs9IG90aGVyO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgYWdncmVnYXRpb24gcmVzdWx0LlxuICAgICAqL1xuICAgIGdldFJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3VtO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1bUFnZ3JlZ2F0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/SumAggregator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AverageAggregator: () => (/* reexport safe */ _AverageAggregator_js__WEBPACK_IMPORTED_MODULE_0__.AverageAggregator),\n/* harmony export */   CountAggregator: () => (/* reexport safe */ _CountAggregator_js__WEBPACK_IMPORTED_MODULE_1__.CountAggregator),\n/* harmony export */   MaxAggregator: () => (/* reexport safe */ _MaxAggregator_js__WEBPACK_IMPORTED_MODULE_2__.MaxAggregator),\n/* harmony export */   MinAggregator: () => (/* reexport safe */ _MinAggregator_js__WEBPACK_IMPORTED_MODULE_3__.MinAggregator),\n/* harmony export */   SumAggregator: () => (/* reexport safe */ _SumAggregator_js__WEBPACK_IMPORTED_MODULE_4__.SumAggregator),\n/* harmony export */   createAggregator: () => (/* binding */ createAggregator)\n/* harmony export */ });\n/* harmony import */ var _AverageAggregator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AverageAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/AverageAggregator.js\");\n/* harmony import */ var _CountAggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CountAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/CountAggregator.js\");\n/* harmony import */ var _MaxAggregator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MaxAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MaxAggregator.js\");\n/* harmony import */ var _MinAggregator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MinAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MinAggregator.js\");\n/* harmony import */ var _SumAggregator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SumAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/SumAggregator.js\");\n/* harmony import */ var _StaticValueAggregator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StaticValueAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/StaticValueAggregator.js\");\n/* harmony import */ var _MakeListAggregator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MakeListAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeListAggregator.js\");\n/* harmony import */ var _MakeSetAggregator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./MakeSetAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/MakeSetAggregator.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\nfunction createAggregator(aggregateType) {\n    switch (aggregateType) {\n        case \"Average\":\n            return new _AverageAggregator_js__WEBPACK_IMPORTED_MODULE_0__.AverageAggregator();\n        case \"Count\":\n        case \"CountIf\":\n            return new _CountAggregator_js__WEBPACK_IMPORTED_MODULE_1__.CountAggregator();\n        case \"Max\":\n            return new _MaxAggregator_js__WEBPACK_IMPORTED_MODULE_2__.MaxAggregator();\n        case \"Min\":\n            return new _MinAggregator_js__WEBPACK_IMPORTED_MODULE_3__.MinAggregator();\n        case \"Sum\":\n            return new _SumAggregator_js__WEBPACK_IMPORTED_MODULE_4__.SumAggregator();\n        case \"MakeList\":\n            return new _MakeListAggregator_js__WEBPACK_IMPORTED_MODULE_6__.MakeListAggregator();\n        case \"MakeSet\":\n            return new _MakeSetAggregator_js__WEBPACK_IMPORTED_MODULE_7__.MakeSetAggregator();\n        default:\n            return new _StaticValueAggregator_js__WEBPACK_IMPORTED_MODULE_5__.StaticValueAggregator();\n    }\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzJEO0FBQ0o7QUFDSjtBQUNBO0FBQ0E7QUFDZ0I7QUFDTjtBQUNGO0FBQ3BEO0FBQ1A7QUFDQTtBQUNBLHVCQUF1QixvRUFBaUI7QUFDeEM7QUFDQTtBQUNBLHVCQUF1QixnRUFBZTtBQUN0QztBQUNBLHVCQUF1Qiw0REFBYTtBQUNwQztBQUNBLHVCQUF1Qiw0REFBYTtBQUNwQztBQUNBLHVCQUF1Qiw0REFBYTtBQUNwQztBQUNBLHVCQUF1QixzRUFBa0I7QUFDekM7QUFDQSx1QkFBdUIsb0VBQWlCO0FBQ3hDO0FBQ0EsdUJBQXVCLDRFQUFxQjtBQUM1QztBQUNBO0FBQzJGO0FBQzNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvQWdncmVnYXRvcnMvaW5kZXguanM/NGI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEF2ZXJhZ2VBZ2dyZWdhdG9yIH0gZnJvbSBcIi4vQXZlcmFnZUFnZ3JlZ2F0b3IuanNcIjtcbmltcG9ydCB7IENvdW50QWdncmVnYXRvciB9IGZyb20gXCIuL0NvdW50QWdncmVnYXRvci5qc1wiO1xuaW1wb3J0IHsgTWF4QWdncmVnYXRvciB9IGZyb20gXCIuL01heEFnZ3JlZ2F0b3IuanNcIjtcbmltcG9ydCB7IE1pbkFnZ3JlZ2F0b3IgfSBmcm9tIFwiLi9NaW5BZ2dyZWdhdG9yLmpzXCI7XG5pbXBvcnQgeyBTdW1BZ2dyZWdhdG9yIH0gZnJvbSBcIi4vU3VtQWdncmVnYXRvci5qc1wiO1xuaW1wb3J0IHsgU3RhdGljVmFsdWVBZ2dyZWdhdG9yIH0gZnJvbSBcIi4vU3RhdGljVmFsdWVBZ2dyZWdhdG9yLmpzXCI7XG5pbXBvcnQgeyBNYWtlTGlzdEFnZ3JlZ2F0b3IgfSBmcm9tIFwiLi9NYWtlTGlzdEFnZ3JlZ2F0b3IuanNcIjtcbmltcG9ydCB7IE1ha2VTZXRBZ2dyZWdhdG9yIH0gZnJvbSBcIi4vTWFrZVNldEFnZ3JlZ2F0b3IuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBZ2dyZWdhdG9yKGFnZ3JlZ2F0ZVR5cGUpIHtcbiAgICBzd2l0Y2ggKGFnZ3JlZ2F0ZVR5cGUpIHtcbiAgICAgICAgY2FzZSBcIkF2ZXJhZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXZlcmFnZUFnZ3JlZ2F0b3IoKTtcbiAgICAgICAgY2FzZSBcIkNvdW50XCI6XG4gICAgICAgIGNhc2UgXCJDb3VudElmXCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IENvdW50QWdncmVnYXRvcigpO1xuICAgICAgICBjYXNlIFwiTWF4XCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1heEFnZ3JlZ2F0b3IoKTtcbiAgICAgICAgY2FzZSBcIk1pblwiOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBNaW5BZ2dyZWdhdG9yKCk7XG4gICAgICAgIGNhc2UgXCJTdW1cIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3VtQWdncmVnYXRvcigpO1xuICAgICAgICBjYXNlIFwiTWFrZUxpc3RcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgTWFrZUxpc3RBZ2dyZWdhdG9yKCk7XG4gICAgICAgIGNhc2UgXCJNYWtlU2V0XCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1ha2VTZXRBZ2dyZWdhdG9yKCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbmV3IFN0YXRpY1ZhbHVlQWdncmVnYXRvcigpO1xuICAgIH1cbn1cbmV4cG9ydCB7IEF2ZXJhZ2VBZ2dyZWdhdG9yLCBDb3VudEFnZ3JlZ2F0b3IsIE1heEFnZ3JlZ2F0b3IsIE1pbkFnZ3JlZ2F0b3IsIFN1bUFnZ3JlZ2F0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByEndpointComponent.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByEndpointComponent.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupByEndpointComponent: () => (/* binding */ GroupByEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/hashObject.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js\");\n/* harmony import */ var _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Aggregators/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/index.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emptyGroup.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/emptyGroup.js\");\n\n\n\n\n/** @hidden */\nclass GroupByEndpointComponent {\n    executionContext;\n    queryInfo;\n    constructor(executionContext, queryInfo) {\n        this.executionContext = executionContext;\n        this.queryInfo = queryInfo;\n    }\n    groupings = new Map();\n    aggregateResultArray = [];\n    completed = false;\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        if (this.completed) {\n            return {\n                result: undefined,\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)(),\n            };\n        }\n        const aggregateHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)();\n        const response = await this.executionContext.fetchMore(diagnosticNode);\n        (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.mergeHeaders)(aggregateHeaders, response.headers);\n        if (response === undefined || response.result === undefined) {\n            // If there are any groupings, consolidate and return them\n            if (this.groupings.size > 0) {\n                return this.consolidateGroupResults(aggregateHeaders);\n            }\n            return { result: undefined, headers: aggregateHeaders };\n        }\n        for (const item of response.result) {\n            // If it exists, process it via aggregators\n            if (item) {\n                const group = item.groupByItems ? await (0,_utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__.hashObject)(item.groupByItems) : _emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__.emptyGroup;\n                const aggregators = this.groupings.get(group);\n                const payload = item.payload;\n                if (aggregators) {\n                    // Iterator over all results in the payload\n                    for (const key of Object.keys(payload)) {\n                        // in case the value of a group is null make sure we create a dummy payload with item2==null\n                        const effectiveGroupByValue = payload[key]\n                            ? payload[key]\n                            : new Map().set(\"item2\", null);\n                        const aggregateResult = (0,_emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__.extractAggregateResult)(effectiveGroupByValue);\n                        aggregators.get(key).aggregate(aggregateResult);\n                    }\n                }\n                else {\n                    // This is the first time we have seen a grouping. Setup the initial result without aggregate values\n                    const grouping = new Map();\n                    this.groupings.set(group, grouping);\n                    // Iterator over all results in the payload\n                    for (const key of Object.keys(payload)) {\n                        const aggregateType = this.queryInfo.groupByAliasToAggregateType[key];\n                        // Create a new aggregator for this specific aggregate field\n                        const aggregator = (0,_Aggregators_index_js__WEBPACK_IMPORTED_MODULE_1__.createAggregator)(aggregateType);\n                        grouping.set(key, aggregator);\n                        if (aggregateType) {\n                            const aggregateResult = (0,_emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__.extractAggregateResult)(payload[key]);\n                            aggregator.aggregate(aggregateResult);\n                        }\n                        else {\n                            aggregator.aggregate(payload[key]);\n                        }\n                    }\n                }\n            }\n        }\n        if (this.executionContext.hasMoreResults()) {\n            return {\n                result: [],\n                headers: aggregateHeaders,\n            };\n        }\n        else {\n            return this.consolidateGroupResults(aggregateHeaders);\n        }\n    }\n    consolidateGroupResults(aggregateHeaders) {\n        for (const grouping of this.groupings.values()) {\n            const groupResult = {};\n            for (const [aggregateKey, aggregator] of grouping.entries()) {\n                groupResult[aggregateKey] = aggregator.getResult();\n            }\n            this.aggregateResultArray.push(groupResult);\n        }\n        this.completed = true;\n        return { result: this.aggregateResultArray, headers: aggregateHeaders };\n    }\n}\n//# sourceMappingURL=GroupByEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvR3JvdXBCeUVuZHBvaW50Q29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVEO0FBQ0k7QUFDUTtBQUNFO0FBQ3JFO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpRUFBZ0I7QUFDekM7QUFDQTtBQUNBLGlDQUFpQyxpRUFBZ0I7QUFDakQ7QUFDQSxRQUFRLDZEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsZ0VBQVUsc0JBQXNCLHNEQUFVO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxzRUFBc0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyx1RUFBZ0I7QUFDM0Q7QUFDQTtBQUNBLG9EQUFvRCxzRUFBc0I7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvR3JvdXBCeUVuZHBvaW50Q29tcG9uZW50LmpzP2I3YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaE9iamVjdCB9IGZyb20gXCIuLi8uLi91dGlscy9oYXNoT2JqZWN0LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVBZ2dyZWdhdG9yIH0gZnJvbSBcIi4uL0FnZ3JlZ2F0b3JzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXRJbml0aWFsSGVhZGVyLCBtZXJnZUhlYWRlcnMgfSBmcm9tIFwiLi4vaGVhZGVyVXRpbHMuanNcIjtcbmltcG9ydCB7IGVtcHR5R3JvdXAsIGV4dHJhY3RBZ2dyZWdhdGVSZXN1bHQgfSBmcm9tIFwiLi9lbXB0eUdyb3VwLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIEdyb3VwQnlFbmRwb2ludENvbXBvbmVudCB7XG4gICAgZXhlY3V0aW9uQ29udGV4dDtcbiAgICBxdWVyeUluZm87XG4gICAgY29uc3RydWN0b3IoZXhlY3V0aW9uQ29udGV4dCwgcXVlcnlJbmZvKSB7XG4gICAgICAgIHRoaXMuZXhlY3V0aW9uQ29udGV4dCA9IGV4ZWN1dGlvbkNvbnRleHQ7XG4gICAgICAgIHRoaXMucXVlcnlJbmZvID0gcXVlcnlJbmZvO1xuICAgIH1cbiAgICBncm91cGluZ3MgPSBuZXcgTWFwKCk7XG4gICAgYWdncmVnYXRlUmVzdWx0QXJyYXkgPSBbXTtcbiAgICBjb21wbGV0ZWQgPSBmYWxzZTtcbiAgICBoYXNNb3JlUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0aW9uQ29udGV4dC5oYXNNb3JlUmVzdWx0cygpO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgaWYgKHRoaXMuY29tcGxldGVkKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJlc3VsdDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IGdldEluaXRpYWxIZWFkZXIoKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWdncmVnYXRlSGVhZGVycyA9IGdldEluaXRpYWxIZWFkZXIoKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmV4ZWN1dGlvbkNvbnRleHQuZmV0Y2hNb3JlKGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgbWVyZ2VIZWFkZXJzKGFnZ3JlZ2F0ZUhlYWRlcnMsIHJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgICBpZiAocmVzcG9uc2UgPT09IHVuZGVmaW5lZCB8fCByZXNwb25zZS5yZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gSWYgdGhlcmUgYXJlIGFueSBncm91cGluZ3MsIGNvbnNvbGlkYXRlIGFuZCByZXR1cm4gdGhlbVxuICAgICAgICAgICAgaWYgKHRoaXMuZ3JvdXBpbmdzLnNpemUgPiAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uc29saWRhdGVHcm91cFJlc3VsdHMoYWdncmVnYXRlSGVhZGVycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IHVuZGVmaW5lZCwgaGVhZGVyczogYWdncmVnYXRlSGVhZGVycyB9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiByZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgIC8vIElmIGl0IGV4aXN0cywgcHJvY2VzcyBpdCB2aWEgYWdncmVnYXRvcnNcbiAgICAgICAgICAgIGlmIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZ3JvdXAgPSBpdGVtLmdyb3VwQnlJdGVtcyA/IGF3YWl0IGhhc2hPYmplY3QoaXRlbS5ncm91cEJ5SXRlbXMpIDogZW1wdHlHcm91cDtcbiAgICAgICAgICAgICAgICBjb25zdCBhZ2dyZWdhdG9ycyA9IHRoaXMuZ3JvdXBpbmdzLmdldChncm91cCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcGF5bG9hZCA9IGl0ZW0ucGF5bG9hZDtcbiAgICAgICAgICAgICAgICBpZiAoYWdncmVnYXRvcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSXRlcmF0b3Igb3ZlciBhbGwgcmVzdWx0cyBpbiB0aGUgcGF5bG9hZFxuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhwYXlsb2FkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaW4gY2FzZSB0aGUgdmFsdWUgb2YgYSBncm91cCBpcyBudWxsIG1ha2Ugc3VyZSB3ZSBjcmVhdGUgYSBkdW1teSBwYXlsb2FkIHdpdGggaXRlbTI9PW51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVmZmVjdGl2ZUdyb3VwQnlWYWx1ZSA9IHBheWxvYWRba2V5XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gcGF5bG9hZFtrZXldXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBuZXcgTWFwKCkuc2V0KFwiaXRlbTJcIiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhZ2dyZWdhdGVSZXN1bHQgPSBleHRyYWN0QWdncmVnYXRlUmVzdWx0KGVmZmVjdGl2ZUdyb3VwQnlWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZ2dyZWdhdG9ycy5nZXQoa2V5KS5hZ2dyZWdhdGUoYWdncmVnYXRlUmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhpcyBpcyB0aGUgZmlyc3QgdGltZSB3ZSBoYXZlIHNlZW4gYSBncm91cGluZy4gU2V0dXAgdGhlIGluaXRpYWwgcmVzdWx0IHdpdGhvdXQgYWdncmVnYXRlIHZhbHVlc1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBncm91cGluZyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ncm91cGluZ3Muc2V0KGdyb3VwLCBncm91cGluZyk7XG4gICAgICAgICAgICAgICAgICAgIC8vIEl0ZXJhdG9yIG92ZXIgYWxsIHJlc3VsdHMgaW4gdGhlIHBheWxvYWRcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMocGF5bG9hZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFnZ3JlZ2F0ZVR5cGUgPSB0aGlzLnF1ZXJ5SW5mby5ncm91cEJ5QWxpYXNUb0FnZ3JlZ2F0ZVR5cGVba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBhZ2dyZWdhdG9yIGZvciB0aGlzIHNwZWNpZmljIGFnZ3JlZ2F0ZSBmaWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWdncmVnYXRvciA9IGNyZWF0ZUFnZ3JlZ2F0b3IoYWdncmVnYXRlVHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cGluZy5zZXQoa2V5LCBhZ2dyZWdhdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhZ2dyZWdhdGVUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWdncmVnYXRlUmVzdWx0ID0gZXh0cmFjdEFnZ3JlZ2F0ZVJlc3VsdChwYXlsb2FkW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFnZ3JlZ2F0b3IuYWdncmVnYXRlKGFnZ3JlZ2F0ZVJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZ2dyZWdhdG9yLmFnZ3JlZ2F0ZShwYXlsb2FkW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmV4ZWN1dGlvbkNvbnRleHQuaGFzTW9yZVJlc3VsdHMoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByZXN1bHQ6IFtdLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IGFnZ3JlZ2F0ZUhlYWRlcnMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uc29saWRhdGVHcm91cFJlc3VsdHMoYWdncmVnYXRlSGVhZGVycyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc29saWRhdGVHcm91cFJlc3VsdHMoYWdncmVnYXRlSGVhZGVycykge1xuICAgICAgICBmb3IgKGNvbnN0IGdyb3VwaW5nIG9mIHRoaXMuZ3JvdXBpbmdzLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBjb25zdCBncm91cFJlc3VsdCA9IHt9O1xuICAgICAgICAgICAgZm9yIChjb25zdCBbYWdncmVnYXRlS2V5LCBhZ2dyZWdhdG9yXSBvZiBncm91cGluZy5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgICAgICBncm91cFJlc3VsdFthZ2dyZWdhdGVLZXldID0gYWdncmVnYXRvci5nZXRSZXN1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYWdncmVnYXRlUmVzdWx0QXJyYXkucHVzaChncm91cFJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgICByZXR1cm4geyByZXN1bHQ6IHRoaXMuYWdncmVnYXRlUmVzdWx0QXJyYXksIGhlYWRlcnM6IGFnZ3JlZ2F0ZUhlYWRlcnMgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Hcm91cEJ5RW5kcG9pbnRDb21wb25lbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByValueEndpointComponent.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByValueEndpointComponent.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupByValueEndpointComponent: () => (/* binding */ GroupByValueEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/hashObject.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js\");\n/* harmony import */ var _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Aggregators/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/index.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emptyGroup.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/emptyGroup.js\");\n\n\n\n\n/** @hidden */\nclass GroupByValueEndpointComponent {\n    executionContext;\n    queryInfo;\n    aggregators = new Map();\n    aggregateResultArray = [];\n    aggregateType;\n    completed = false;\n    constructor(executionContext, queryInfo) {\n        this.executionContext = executionContext;\n        this.queryInfo = queryInfo;\n        // VALUE queries will only every have a single grouping\n        this.aggregateType = this.queryInfo.aggregates[0];\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        if (this.completed) {\n            return {\n                result: undefined,\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)(),\n            };\n        }\n        const aggregateHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)();\n        const response = await this.executionContext.fetchMore(diagnosticNode);\n        (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.mergeHeaders)(aggregateHeaders, response.headers);\n        if (response === undefined || response.result === undefined) {\n            if (this.aggregators.size > 0) {\n                return this.generateAggregateResponse(aggregateHeaders);\n            }\n            return { result: undefined, headers: aggregateHeaders };\n        }\n        for (const item of response.result) {\n            if (item) {\n                let grouping = _emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__.emptyGroup;\n                let payload = item;\n                if (item.groupByItems) {\n                    // If the query contains a GROUP BY clause, it will have a payload property and groupByItems\n                    payload = item.payload;\n                    grouping = await (0,_utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__.hashObject)(item.groupByItems);\n                }\n                const aggregator = this.aggregators.get(grouping);\n                if (!aggregator) {\n                    // This is the first time we have seen a grouping so create a new aggregator\n                    this.aggregators.set(grouping, (0,_Aggregators_index_js__WEBPACK_IMPORTED_MODULE_1__.createAggregator)(this.aggregateType));\n                }\n                if (this.aggregateType) {\n                    const aggregateResult = (0,_emptyGroup_js__WEBPACK_IMPORTED_MODULE_3__.extractAggregateResult)(payload[0]);\n                    // if aggregate result is null, we need to short circuit aggregation and return undefined\n                    if (aggregateResult === null) {\n                        this.completed = true;\n                    }\n                    this.aggregators.get(grouping).aggregate(aggregateResult);\n                }\n                else {\n                    // Queries with no aggregates pass the payload directly to the aggregator\n                    // Example: SELECT VALUE c.team FROM c GROUP BY c.team\n                    this.aggregators.get(grouping).aggregate(payload);\n                }\n            }\n        }\n        // We bail early since we got an undefined result back `[{}]`\n        if (this.completed) {\n            return {\n                result: undefined,\n                headers: aggregateHeaders,\n            };\n        }\n        if (this.executionContext.hasMoreResults()) {\n            return { result: [], headers: aggregateHeaders };\n        }\n        else {\n            // If no results are left in the underlying execution context, convert our aggregate results to an array\n            return this.generateAggregateResponse(aggregateHeaders);\n        }\n    }\n    generateAggregateResponse(aggregateHeaders) {\n        for (const aggregator of this.aggregators.values()) {\n            const result = aggregator.getResult();\n            if (result !== undefined) {\n                this.aggregateResultArray.push(result);\n            }\n        }\n        this.completed = true;\n        return {\n            result: this.aggregateResultArray,\n            headers: aggregateHeaders,\n        };\n    }\n}\n//# sourceMappingURL=GroupByValueEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvR3JvdXBCeVZhbHVlRW5kcG9pbnRDb21wb25lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUQ7QUFDSTtBQUNRO0FBQ0U7QUFDckU7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlFQUFnQjtBQUN6QztBQUNBO0FBQ0EsaUNBQWlDLGlFQUFnQjtBQUNqRDtBQUNBLFFBQVEsNkRBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNEQUFVO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGdFQUFVO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHVFQUFnQjtBQUNuRTtBQUNBO0FBQ0EsNENBQTRDLHNFQUFzQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9Hcm91cEJ5VmFsdWVFbmRwb2ludENvbXBvbmVudC5qcz83Mjc2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc2hPYmplY3QgfSBmcm9tIFwiLi4vLi4vdXRpbHMvaGFzaE9iamVjdC5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlQWdncmVnYXRvciB9IGZyb20gXCIuLi9BZ2dyZWdhdG9ycy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0SW5pdGlhbEhlYWRlciwgbWVyZ2VIZWFkZXJzIH0gZnJvbSBcIi4uL2hlYWRlclV0aWxzLmpzXCI7XG5pbXBvcnQgeyBlbXB0eUdyb3VwLCBleHRyYWN0QWdncmVnYXRlUmVzdWx0IH0gZnJvbSBcIi4vZW1wdHlHcm91cC5qc1wiO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBHcm91cEJ5VmFsdWVFbmRwb2ludENvbXBvbmVudCB7XG4gICAgZXhlY3V0aW9uQ29udGV4dDtcbiAgICBxdWVyeUluZm87XG4gICAgYWdncmVnYXRvcnMgPSBuZXcgTWFwKCk7XG4gICAgYWdncmVnYXRlUmVzdWx0QXJyYXkgPSBbXTtcbiAgICBhZ2dyZWdhdGVUeXBlO1xuICAgIGNvbXBsZXRlZCA9IGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKGV4ZWN1dGlvbkNvbnRleHQsIHF1ZXJ5SW5mbykge1xuICAgICAgICB0aGlzLmV4ZWN1dGlvbkNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0O1xuICAgICAgICB0aGlzLnF1ZXJ5SW5mbyA9IHF1ZXJ5SW5mbztcbiAgICAgICAgLy8gVkFMVUUgcXVlcmllcyB3aWxsIG9ubHkgZXZlcnkgaGF2ZSBhIHNpbmdsZSBncm91cGluZ1xuICAgICAgICB0aGlzLmFnZ3JlZ2F0ZVR5cGUgPSB0aGlzLnF1ZXJ5SW5mby5hZ2dyZWdhdGVzWzBdO1xuICAgIH1cbiAgICBoYXNNb3JlUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0aW9uQ29udGV4dC5oYXNNb3JlUmVzdWx0cygpO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgaWYgKHRoaXMuY29tcGxldGVkKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJlc3VsdDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IGdldEluaXRpYWxIZWFkZXIoKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWdncmVnYXRlSGVhZGVycyA9IGdldEluaXRpYWxIZWFkZXIoKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmV4ZWN1dGlvbkNvbnRleHQuZmV0Y2hNb3JlKGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgbWVyZ2VIZWFkZXJzKGFnZ3JlZ2F0ZUhlYWRlcnMsIHJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgICBpZiAocmVzcG9uc2UgPT09IHVuZGVmaW5lZCB8fCByZXNwb25zZS5yZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYWdncmVnYXRvcnMuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZW5lcmF0ZUFnZ3JlZ2F0ZVJlc3BvbnNlKGFnZ3JlZ2F0ZUhlYWRlcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB1bmRlZmluZWQsIGhlYWRlcnM6IGFnZ3JlZ2F0ZUhlYWRlcnMgfTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgcmVzcG9uc2UucmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgICAgIGxldCBncm91cGluZyA9IGVtcHR5R3JvdXA7XG4gICAgICAgICAgICAgICAgbGV0IHBheWxvYWQgPSBpdGVtO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLmdyb3VwQnlJdGVtcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgcXVlcnkgY29udGFpbnMgYSBHUk9VUCBCWSBjbGF1c2UsIGl0IHdpbGwgaGF2ZSBhIHBheWxvYWQgcHJvcGVydHkgYW5kIGdyb3VwQnlJdGVtc1xuICAgICAgICAgICAgICAgICAgICBwYXlsb2FkID0gaXRlbS5wYXlsb2FkO1xuICAgICAgICAgICAgICAgICAgICBncm91cGluZyA9IGF3YWl0IGhhc2hPYmplY3QoaXRlbS5ncm91cEJ5SXRlbXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBhZ2dyZWdhdG9yID0gdGhpcy5hZ2dyZWdhdG9ycy5nZXQoZ3JvdXBpbmcpO1xuICAgICAgICAgICAgICAgIGlmICghYWdncmVnYXRvcikge1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGlzIHRoZSBmaXJzdCB0aW1lIHdlIGhhdmUgc2VlbiBhIGdyb3VwaW5nIHNvIGNyZWF0ZSBhIG5ldyBhZ2dyZWdhdG9yXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWdncmVnYXRvcnMuc2V0KGdyb3VwaW5nLCBjcmVhdGVBZ2dyZWdhdG9yKHRoaXMuYWdncmVnYXRlVHlwZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hZ2dyZWdhdGVUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFnZ3JlZ2F0ZVJlc3VsdCA9IGV4dHJhY3RBZ2dyZWdhdGVSZXN1bHQocGF5bG9hZFswXSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIGFnZ3JlZ2F0ZSByZXN1bHQgaXMgbnVsbCwgd2UgbmVlZCB0byBzaG9ydCBjaXJjdWl0IGFnZ3JlZ2F0aW9uIGFuZCByZXR1cm4gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIGlmIChhZ2dyZWdhdGVSZXN1bHQgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFnZ3JlZ2F0b3JzLmdldChncm91cGluZykuYWdncmVnYXRlKGFnZ3JlZ2F0ZVJlc3VsdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBRdWVyaWVzIHdpdGggbm8gYWdncmVnYXRlcyBwYXNzIHRoZSBwYXlsb2FkIGRpcmVjdGx5IHRvIHRoZSBhZ2dyZWdhdG9yXG4gICAgICAgICAgICAgICAgICAgIC8vIEV4YW1wbGU6IFNFTEVDVCBWQUxVRSBjLnRlYW0gRlJPTSBjIEdST1VQIEJZIGMudGVhbVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFnZ3JlZ2F0b3JzLmdldChncm91cGluZykuYWdncmVnYXRlKHBheWxvYWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBXZSBiYWlsIGVhcmx5IHNpbmNlIHdlIGdvdCBhbiB1bmRlZmluZWQgcmVzdWx0IGJhY2sgYFt7fV1gXG4gICAgICAgIGlmICh0aGlzLmNvbXBsZXRlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByZXN1bHQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiBhZ2dyZWdhdGVIZWFkZXJzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5leGVjdXRpb25Db250ZXh0Lmhhc01vcmVSZXN1bHRzKCkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogW10sIGhlYWRlcnM6IGFnZ3JlZ2F0ZUhlYWRlcnMgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIElmIG5vIHJlc3VsdHMgYXJlIGxlZnQgaW4gdGhlIHVuZGVybHlpbmcgZXhlY3V0aW9uIGNvbnRleHQsIGNvbnZlcnQgb3VyIGFnZ3JlZ2F0ZSByZXN1bHRzIHRvIGFuIGFycmF5XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZW5lcmF0ZUFnZ3JlZ2F0ZVJlc3BvbnNlKGFnZ3JlZ2F0ZUhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdlbmVyYXRlQWdncmVnYXRlUmVzcG9uc2UoYWdncmVnYXRlSGVhZGVycykge1xuICAgICAgICBmb3IgKGNvbnN0IGFnZ3JlZ2F0b3Igb2YgdGhpcy5hZ2dyZWdhdG9ycy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYWdncmVnYXRvci5nZXRSZXN1bHQoKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdncmVnYXRlUmVzdWx0QXJyYXkucHVzaChyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlc3VsdDogdGhpcy5hZ2dyZWdhdGVSZXN1bHRBcnJheSxcbiAgICAgICAgICAgIGhlYWRlcnM6IGFnZ3JlZ2F0ZUhlYWRlcnMsXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3JvdXBCeVZhbHVlRW5kcG9pbnRDb21wb25lbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByValueEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByDistinctEndpointComponent.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByDistinctEndpointComponent.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NonStreamingOrderByDistinctEndpointComponent: () => (/* binding */ NonStreamingOrderByDistinctEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _utils_hashObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hashObject.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js\");\n/* harmony import */ var _utils_fixedSizePriorityQueue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/fixedSizePriorityQueue.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/fixedSizePriorityQueue.js\");\n/* harmony import */ var _utils_nonStreamingOrderByMap_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/nonStreamingOrderByMap.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/nonStreamingOrderByMap.js\");\n/* harmony import */ var _orderByComparator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../orderByComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByComparator.js\");\n\n\n\n\n\n/**\n * @hidden\n * Represents an endpoint in handling an non-streaming order by distinct query.\n */\nclass NonStreamingOrderByDistinctEndpointComponent {\n    executionContext;\n    queryInfo;\n    priorityQueueBufferSize;\n    emitRawOrderByPayload;\n    /**\n     * A Map that holds the distinct values of the items before storing in priority queue.\n     */\n    aggregateMap;\n    /**\n     * A priority queue to compute the final sorted results.\n     */\n    nonStreamingOrderByPQ;\n    /**\n     * Array to store the final sorted results.\n     */\n    finalResultArray;\n    sortOrders;\n    /**\n     * Flag to determine if all results are fetched from backend and results can be returned.\n     */\n    isCompleted = false;\n    constructor(executionContext, queryInfo, priorityQueueBufferSize, emitRawOrderByPayload = false) {\n        this.executionContext = executionContext;\n        this.queryInfo = queryInfo;\n        this.priorityQueueBufferSize = priorityQueueBufferSize;\n        this.emitRawOrderByPayload = emitRawOrderByPayload;\n        this.sortOrders = this.queryInfo.orderBy;\n        const comparator = new _orderByComparator_js__WEBPACK_IMPORTED_MODULE_4__.OrderByComparator(this.sortOrders);\n        this.aggregateMap = new _utils_nonStreamingOrderByMap_js__WEBPACK_IMPORTED_MODULE_3__.NonStreamingOrderByMap((a, b) => {\n            return comparator.compareItems(a, b);\n        });\n        this.nonStreamingOrderByPQ = new _utils_fixedSizePriorityQueue_js__WEBPACK_IMPORTED_MODULE_2__.FixedSizePriorityQueue((a, b) => {\n            return comparator.compareItems(b, a);\n        }, this.priorityQueueBufferSize);\n    }\n    /**\n     * Build final sorted result array from which responses will be served.\n     */\n    async buildFinalResultArray() {\n        // Fetch all distinct values from the map and store in priority queue.\n        const allValues = this.aggregateMap.getAllValuesAndReset();\n        for (const value of allValues) {\n            this.nonStreamingOrderByPQ.enqueue(value);\n        }\n        // Compute the final result array size based on offset and limit.\n        const offSet = this.queryInfo.offset ? this.queryInfo.offset : 0;\n        const queueSize = this.nonStreamingOrderByPQ.size();\n        const finalArraySize = queueSize - offSet;\n        if (finalArraySize <= 0) {\n            this.finalResultArray = [];\n        }\n        else {\n            this.finalResultArray = new Array(finalArraySize);\n            // Only keep the final result array size number of items in the final result array and discard the rest.\n            for (let count = finalArraySize - 1; count >= 0; count--) {\n                if (this.emitRawOrderByPayload) {\n                    this.finalResultArray[count] = this.nonStreamingOrderByPQ.dequeue();\n                }\n                else {\n                    this.finalResultArray[count] = this.nonStreamingOrderByPQ.dequeue()?.payload;\n                }\n            }\n        }\n    }\n    hasMoreResults() {\n        if (this.priorityQueueBufferSize === 0)\n            return false;\n        return this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        if (this.isCompleted) {\n            return {\n                result: undefined,\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.getInitialHeader)(),\n            };\n        }\n        let resHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.getInitialHeader)();\n        // if size is 0, just return undefined to signal to more results. Valid if query is TOP 0 or LIMIT 0\n        if (this.priorityQueueBufferSize <= 0) {\n            return {\n                result: undefined,\n                headers: resHeaders,\n            };\n        }\n        // If there are more results in backend, keep filling map.\n        if (this.executionContext.hasMoreResults()) {\n            // Grab the next result\n            const response = await this.executionContext.fetchMore(diagnosticNode);\n            if (response === undefined || response.result === undefined) {\n                this.isCompleted = true;\n                if (this.aggregateMap.size() > 0) {\n                    await this.buildFinalResultArray();\n                    return {\n                        result: this.finalResultArray,\n                        headers: response.headers,\n                    };\n                }\n                return { result: undefined, headers: response.headers };\n            }\n            resHeaders = response.headers;\n            for (const item of response.result) {\n                if (item) {\n                    const key = await (0,_utils_hashObject_js__WEBPACK_IMPORTED_MODULE_1__.hashObject)(item?.payload);\n                    this.aggregateMap.set(key, item);\n                }\n            }\n            // return [] to signal that there are more results to fetch.\n            if (this.executionContext.hasMoreResults()) {\n                return {\n                    result: [],\n                    headers: resHeaders,\n                };\n            }\n        }\n        // If all results are fetched from backend, prepare final results\n        if (!this.executionContext.hasMoreResults() && !this.isCompleted) {\n            this.isCompleted = true;\n            await this.buildFinalResultArray();\n            return {\n                result: this.finalResultArray,\n                headers: resHeaders,\n            };\n        }\n        // Signal that there are no more results.\n        return {\n            result: undefined,\n            headers: resHeaders,\n        };\n    }\n}\n//# sourceMappingURL=NonStreamingOrderByDistinctEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByDistinctEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByEndpointComponent.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByEndpointComponent.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NonStreamingOrderByEndpointComponent: () => (/* binding */ NonStreamingOrderByEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _orderByComparator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../orderByComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByComparator.js\");\n/* harmony import */ var _utils_fixedSizePriorityQueue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/fixedSizePriorityQueue.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/fixedSizePriorityQueue.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n\n\n\n/**\n * @hidden\n * Represents an endpoint in handling an non-streaming order by query.\n */\nclass NonStreamingOrderByEndpointComponent {\n    executionContext;\n    sortOrders;\n    priorityQueueBufferSize;\n    offset;\n    emitRawOrderByPayload;\n    /**\n     * A priority queue to store the final sorted results.\n     */\n    nonStreamingOrderByPQ;\n    /**\n     * Flag to determine if all results are fetched from backend and results can be returned from priority queue.\n     */\n    isCompleted = false;\n    /**\n     * Represents an endpoint in handling an non-streaming order by query. For each processed orderby\n     * result it returns 'payload' item of the result\n     *\n     * @param executionContext - Underlying Execution Context\n     * @hidden\n     */\n    constructor(executionContext, sortOrders, priorityQueueBufferSize, offset = 0, emitRawOrderByPayload = false) {\n        this.executionContext = executionContext;\n        this.sortOrders = sortOrders;\n        this.priorityQueueBufferSize = priorityQueueBufferSize;\n        this.offset = offset;\n        this.emitRawOrderByPayload = emitRawOrderByPayload;\n        const comparator = new _orderByComparator_js__WEBPACK_IMPORTED_MODULE_0__.OrderByComparator(this.sortOrders);\n        this.nonStreamingOrderByPQ = new _utils_fixedSizePriorityQueue_js__WEBPACK_IMPORTED_MODULE_1__.FixedSizePriorityQueue((a, b) => {\n            return comparator.compareItems(b, a);\n        }, this.priorityQueueBufferSize);\n    }\n    /**\n     * Determine if there are still remaining resources to processs.\n     * @returns true if there is other elements to process in the NonStreamingOrderByEndpointComponent.\n     */\n    hasMoreResults() {\n        return this.priorityQueueBufferSize > 0 && this.executionContext.hasMoreResults();\n    }\n    /**\n     * Fetches the next batch of the result from the target container.\n     * @param diagnosticNode - The diagnostic information for the request.\n     */\n    async fetchMore(diagnosticNode) {\n        if (this.isCompleted) {\n            return {\n                result: undefined,\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)(),\n            };\n        }\n        let resHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)();\n        // if size is 0, just return undefined to signal to more results. Valid if query is TOP 0 or LIMIT 0\n        if (this.priorityQueueBufferSize <= 0) {\n            return {\n                result: undefined,\n                headers: resHeaders,\n            };\n        }\n        // If there are more results in backend, keep filling pq.\n        if (this.executionContext.hasMoreResults()) {\n            const response = await this.executionContext.fetchMore(diagnosticNode);\n            resHeaders = response.headers;\n            if (response === undefined || response.result === undefined) {\n                this.isCompleted = true;\n                if (!this.nonStreamingOrderByPQ.isEmpty()) {\n                    return this.buildFinalResultArray(resHeaders);\n                }\n                return { result: undefined, headers: resHeaders };\n            }\n            for (const item of response.result) {\n                if (item !== undefined) {\n                    this.nonStreamingOrderByPQ.enqueue(item);\n                }\n            }\n        }\n        // If the backend has more results to fetch, return [] to signal that there are more results to fetch.\n        if (this.executionContext.hasMoreResults()) {\n            return {\n                result: [],\n                headers: resHeaders,\n            };\n        }\n        // If all results are fetched from backend, prepare final results\n        if (!this.executionContext.hasMoreResults() && !this.isCompleted) {\n            this.isCompleted = true;\n            return this.buildFinalResultArray(resHeaders);\n        }\n        // If pq is empty, return undefined to signal that there are no more results.\n        return {\n            result: undefined,\n            headers: resHeaders,\n        };\n    }\n    async buildFinalResultArray(resHeaders) {\n        // Set isCompleted to true.\n        this.isCompleted = true;\n        // Reverse the priority queue to get the results in the correct order\n        this.nonStreamingOrderByPQ = this.nonStreamingOrderByPQ.reverse();\n        // For offset limit case we set the size of priority queue to offset + limit\n        // and we drain offset number of items from the priority queue\n        while (this.offset < this.priorityQueueBufferSize &&\n            this.offset > 0 &&\n            !this.nonStreamingOrderByPQ.isEmpty()) {\n            this.nonStreamingOrderByPQ.dequeue();\n            this.offset--;\n        }\n        // If pq is not empty, return the result from pq.\n        if (!this.nonStreamingOrderByPQ.isEmpty()) {\n            const buffer = [];\n            if (this.emitRawOrderByPayload) {\n                while (!this.nonStreamingOrderByPQ.isEmpty()) {\n                    buffer.push(this.nonStreamingOrderByPQ.dequeue());\n                }\n            }\n            else {\n                while (!this.nonStreamingOrderByPQ.isEmpty()) {\n                    buffer.push(this.nonStreamingOrderByPQ.dequeue()?.payload);\n                }\n            }\n            return {\n                result: buffer,\n                headers: resHeaders,\n            };\n        }\n    }\n}\n//# sourceMappingURL=NonStreamingOrderByEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OffsetLimitEndpointComponent.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OffsetLimitEndpointComponent.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OffsetLimitEndpointComponent: () => (/* binding */ OffsetLimitEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n\n/** @hidden */\nclass OffsetLimitEndpointComponent {\n    executionContext;\n    offset;\n    limit;\n    constructor(executionContext, offset, limit) {\n        this.executionContext = executionContext;\n        this.offset = offset;\n        this.limit = limit;\n    }\n    hasMoreResults() {\n        return (this.offset > 0 || this.limit > 0) && this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        const aggregateHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.getInitialHeader)();\n        const buffer = [];\n        const response = await this.executionContext.fetchMore(diagnosticNode);\n        (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.mergeHeaders)(aggregateHeaders, response.headers);\n        if (response === undefined || response.result === undefined) {\n            return { result: undefined, headers: response.headers };\n        }\n        for (const item of response.result) {\n            if (this.offset > 0) {\n                this.offset--;\n            }\n            else if (this.limit > 0) {\n                buffer.push(item);\n                this.limit--;\n            }\n        }\n        return { result: buffer, headers: aggregateHeaders };\n    }\n}\n//# sourceMappingURL=OffsetLimitEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvT2Zmc2V0TGltaXRFbmRwb2ludENvbXBvbmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRTtBQUNuRTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGlFQUFnQjtBQUNqRDtBQUNBO0FBQ0EsUUFBUSw2REFBWTtBQUNwQjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9PZmZzZXRMaW1pdEVuZHBvaW50Q29tcG9uZW50LmpzP2RjMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0SW5pdGlhbEhlYWRlciwgbWVyZ2VIZWFkZXJzIH0gZnJvbSBcIi4uL2hlYWRlclV0aWxzLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIE9mZnNldExpbWl0RW5kcG9pbnRDb21wb25lbnQge1xuICAgIGV4ZWN1dGlvbkNvbnRleHQ7XG4gICAgb2Zmc2V0O1xuICAgIGxpbWl0O1xuICAgIGNvbnN0cnVjdG9yKGV4ZWN1dGlvbkNvbnRleHQsIG9mZnNldCwgbGltaXQpIHtcbiAgICAgICAgdGhpcy5leGVjdXRpb25Db250ZXh0ID0gZXhlY3V0aW9uQ29udGV4dDtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgICAgIHRoaXMubGltaXQgPSBsaW1pdDtcbiAgICB9XG4gICAgaGFzTW9yZVJlc3VsdHMoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5vZmZzZXQgPiAwIHx8IHRoaXMubGltaXQgPiAwKSAmJiB0aGlzLmV4ZWN1dGlvbkNvbnRleHQuaGFzTW9yZVJlc3VsdHMoKTtcbiAgICB9XG4gICAgYXN5bmMgZmV0Y2hNb3JlKGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IGFnZ3JlZ2F0ZUhlYWRlcnMgPSBnZXRJbml0aWFsSGVhZGVyKCk7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IFtdO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuZXhlY3V0aW9uQ29udGV4dC5mZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICBtZXJnZUhlYWRlcnMoYWdncmVnYXRlSGVhZGVycywgcmVzcG9uc2UuaGVhZGVycyk7XG4gICAgICAgIGlmIChyZXNwb25zZSA9PT0gdW5kZWZpbmVkIHx8IHJlc3BvbnNlLnJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IHVuZGVmaW5lZCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyB9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiByZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9mZnNldCA+IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9mZnNldC0tO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5saW1pdCA+IDApIHtcbiAgICAgICAgICAgICAgICBidWZmZXIucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB0aGlzLmxpbWl0LS07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiBidWZmZXIsIGhlYWRlcnM6IGFnZ3JlZ2F0ZUhlYWRlcnMgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PZmZzZXRMaW1pdEVuZHBvaW50Q29tcG9uZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OffsetLimitEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderByEndpointComponent: () => (/* binding */ OrderByEndpointComponent)\n/* harmony export */ });\n/** @hidden */\nclass OrderByEndpointComponent {\n    executionContext;\n    emitRawOrderByPayload;\n    /**\n     * Represents an endpoint in handling an order by query. For each processed orderby\n     * result it returns 'payload' item of the result\n     *\n     * @param executionContext - Underlying Execution Context\n     * @hidden\n     */\n    constructor(executionContext, emitRawOrderByPayload = false) {\n        this.executionContext = executionContext;\n        this.emitRawOrderByPayload = emitRawOrderByPayload;\n    }\n    /**\n     * Determine if there are still remaining resources to processs.\n     * @returns true if there is other elements to process in the OrderByEndpointComponent.\n     */\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        const buffer = [];\n        const response = await this.executionContext.fetchMore(diagnosticNode);\n        if (response === undefined || response.result === undefined) {\n            return { result: undefined, headers: response.headers };\n        }\n        for (const item of response.result) {\n            if (this.emitRawOrderByPayload) {\n                buffer.push(item);\n            }\n            else {\n                buffer.push(item.payload);\n            }\n        }\n        return { result: buffer, headers: response.headers };\n    }\n}\n//# sourceMappingURL=OrderByEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvT3JkZXJCeUVuZHBvaW50Q29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9PcmRlckJ5RW5kcG9pbnRDb21wb25lbnQuanM/MTkwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIE9yZGVyQnlFbmRwb2ludENvbXBvbmVudCB7XG4gICAgZXhlY3V0aW9uQ29udGV4dDtcbiAgICBlbWl0UmF3T3JkZXJCeVBheWxvYWQ7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhbiBlbmRwb2ludCBpbiBoYW5kbGluZyBhbiBvcmRlciBieSBxdWVyeS4gRm9yIGVhY2ggcHJvY2Vzc2VkIG9yZGVyYnlcbiAgICAgKiByZXN1bHQgaXQgcmV0dXJucyAncGF5bG9hZCcgaXRlbSBvZiB0aGUgcmVzdWx0XG4gICAgICpcbiAgICAgKiBAcGFyYW0gZXhlY3V0aW9uQ29udGV4dCAtIFVuZGVybHlpbmcgRXhlY3V0aW9uIENvbnRleHRcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXhlY3V0aW9uQ29udGV4dCwgZW1pdFJhd09yZGVyQnlQYXlsb2FkID0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5leGVjdXRpb25Db250ZXh0ID0gZXhlY3V0aW9uQ29udGV4dDtcbiAgICAgICAgdGhpcy5lbWl0UmF3T3JkZXJCeVBheWxvYWQgPSBlbWl0UmF3T3JkZXJCeVBheWxvYWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZSBpZiB0aGVyZSBhcmUgc3RpbGwgcmVtYWluaW5nIHJlc291cmNlcyB0byBwcm9jZXNzcy5cbiAgICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZXJlIGlzIG90aGVyIGVsZW1lbnRzIHRvIHByb2Nlc3MgaW4gdGhlIE9yZGVyQnlFbmRwb2ludENvbXBvbmVudC5cbiAgICAgKi9cbiAgICBoYXNNb3JlUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0aW9uQ29udGV4dC5oYXNNb3JlUmVzdWx0cygpO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gW107XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5leGVjdXRpb25Db250ZXh0LmZldGNoTW9yZShkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIGlmIChyZXNwb25zZSA9PT0gdW5kZWZpbmVkIHx8IHJlc3BvbnNlLnJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IHVuZGVmaW5lZCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyB9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiByZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmVtaXRSYXdPcmRlckJ5UGF5bG9hZCkge1xuICAgICAgICAgICAgICAgIGJ1ZmZlci5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYnVmZmVyLnB1c2goaXRlbS5wYXlsb2FkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyByZXN1bHQ6IGJ1ZmZlciwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9yZGVyQnlFbmRwb2ludENvbXBvbmVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderedDistinctEndpointComponent.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderedDistinctEndpointComponent.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderedDistinctEndpointComponent: () => (/* binding */ OrderedDistinctEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/hashObject.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js\");\n\n/** @hidden */\nclass OrderedDistinctEndpointComponent {\n    executionContext;\n    hashedLastResult;\n    constructor(executionContext) {\n        this.executionContext = executionContext;\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        const buffer = [];\n        const response = await this.executionContext.fetchMore(diagnosticNode);\n        if (response === undefined || response.result === undefined) {\n            return { result: undefined, headers: response.headers };\n        }\n        for (const item of response.result) {\n            if (item) {\n                const hashedResult = await (0,_utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__.hashObject)(item);\n                if (hashedResult !== this.hashedLastResult) {\n                    buffer.push(item);\n                    this.hashedLastResult = hashedResult;\n                }\n            }\n        }\n        return { result: buffer, headers: response.headers };\n    }\n}\n//# sourceMappingURL=OrderedDistinctEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvT3JkZXJlZERpc3RpbmN0RW5kcG9pbnRDb21wb25lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7QUFDdkQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsZ0VBQVU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlFeGVjdXRpb25Db250ZXh0L0VuZHBvaW50Q29tcG9uZW50L09yZGVyZWREaXN0aW5jdEVuZHBvaW50Q29tcG9uZW50LmpzPzc1NWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaE9iamVjdCB9IGZyb20gXCIuLi8uLi91dGlscy9oYXNoT2JqZWN0LmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIE9yZGVyZWREaXN0aW5jdEVuZHBvaW50Q29tcG9uZW50IHtcbiAgICBleGVjdXRpb25Db250ZXh0O1xuICAgIGhhc2hlZExhc3RSZXN1bHQ7XG4gICAgY29uc3RydWN0b3IoZXhlY3V0aW9uQ29udGV4dCkge1xuICAgICAgICB0aGlzLmV4ZWN1dGlvbkNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0O1xuICAgIH1cbiAgICBoYXNNb3JlUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0aW9uQ29udGV4dC5oYXNNb3JlUmVzdWx0cygpO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gW107XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5leGVjdXRpb25Db250ZXh0LmZldGNoTW9yZShkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIGlmIChyZXNwb25zZSA9PT0gdW5kZWZpbmVkIHx8IHJlc3BvbnNlLnJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IHVuZGVmaW5lZCwgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVycyB9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiByZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaGFzaGVkUmVzdWx0ID0gYXdhaXQgaGFzaE9iamVjdChpdGVtKTtcbiAgICAgICAgICAgICAgICBpZiAoaGFzaGVkUmVzdWx0ICE9PSB0aGlzLmhhc2hlZExhc3RSZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgYnVmZmVyLnB1c2goaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFzaGVkTGFzdFJlc3VsdCA9IGhhc2hlZFJlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiBidWZmZXIsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcmRlcmVkRGlzdGluY3RFbmRwb2ludENvbXBvbmVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderedDistinctEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/UnorderedDistinctEndpointComponent.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/UnorderedDistinctEndpointComponent.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnorderedDistinctEndpointComponent: () => (/* binding */ UnorderedDistinctEndpointComponent)\n/* harmony export */ });\n/* harmony import */ var _utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/hashObject.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js\");\n\n/** @hidden */\nclass UnorderedDistinctEndpointComponent {\n    executionContext;\n    hashedResults;\n    constructor(executionContext) {\n        this.executionContext = executionContext;\n        this.hashedResults = new Set();\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        const buffer = [];\n        const response = await this.executionContext.fetchMore(diagnosticNode);\n        if (response === undefined || response.result === undefined) {\n            return { result: undefined, headers: response.headers };\n        }\n        for (const item of response.result) {\n            if (item) {\n                const hashedResult = await (0,_utils_hashObject_js__WEBPACK_IMPORTED_MODULE_0__.hashObject)(item);\n                if (!this.hashedResults.has(hashedResult)) {\n                    buffer.push(item);\n                    this.hashedResults.add(hashedResult);\n                }\n            }\n        }\n        return { result: buffer, headers: response.headers };\n    }\n}\n//# sourceMappingURL=UnorderedDistinctEndpointComponent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvVW5vcmRlcmVkRGlzdGluY3RFbmRwb2ludENvbXBvbmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUN2RDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGdFQUFVO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9FbmRwb2ludENvbXBvbmVudC9Vbm9yZGVyZWREaXN0aW5jdEVuZHBvaW50Q29tcG9uZW50LmpzPzBhYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaE9iamVjdCB9IGZyb20gXCIuLi8uLi91dGlscy9oYXNoT2JqZWN0LmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIFVub3JkZXJlZERpc3RpbmN0RW5kcG9pbnRDb21wb25lbnQge1xuICAgIGV4ZWN1dGlvbkNvbnRleHQ7XG4gICAgaGFzaGVkUmVzdWx0cztcbiAgICBjb25zdHJ1Y3RvcihleGVjdXRpb25Db250ZXh0KSB7XG4gICAgICAgIHRoaXMuZXhlY3V0aW9uQ29udGV4dCA9IGV4ZWN1dGlvbkNvbnRleHQ7XG4gICAgICAgIHRoaXMuaGFzaGVkUmVzdWx0cyA9IG5ldyBTZXQoKTtcbiAgICB9XG4gICAgaGFzTW9yZVJlc3VsdHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGlvbkNvbnRleHQuaGFzTW9yZVJlc3VsdHMoKTtcbiAgICB9XG4gICAgYXN5bmMgZmV0Y2hNb3JlKGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IFtdO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuZXhlY3V0aW9uQ29udGV4dC5mZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICBpZiAocmVzcG9uc2UgPT09IHVuZGVmaW5lZCB8fCByZXNwb25zZS5yZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB1bmRlZmluZWQsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMgfTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgcmVzcG9uc2UucmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc2hlZFJlc3VsdCA9IGF3YWl0IGhhc2hPYmplY3QoaXRlbSk7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc2hlZFJlc3VsdHMuaGFzKGhhc2hlZFJlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgYnVmZmVyLnB1c2goaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFzaGVkUmVzdWx0cy5hZGQoaGFzaGVkUmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiBidWZmZXIsIGhlYWRlcnM6IHJlc3BvbnNlLmhlYWRlcnMgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Vbm9yZGVyZWREaXN0aW5jdEVuZHBvaW50Q29tcG9uZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/UnorderedDistinctEndpointComponent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/emptyGroup.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/emptyGroup.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emptyGroup: () => (/* binding */ emptyGroup),\n/* harmony export */   extractAggregateResult: () => (/* binding */ extractAggregateResult)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// All aggregates are effectively a group by operation\n// The empty group is used for aggregates without a GROUP BY clause\nconst emptyGroup = \"__empty__\";\n// Newer API versions rewrite the query to return `item2`. It fixes some legacy issues with the original `item` result\n// Aggregator code should use item2 when available\nconst extractAggregateResult = (payload) => Object.keys(payload).length > 0 ? (payload.item2 ? payload.item2 : payload.item) : null;\n//# sourceMappingURL=emptyGroup.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRW5kcG9pbnRDb21wb25lbnQvZW1wdHlHcm91cC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlFeGVjdXRpb25Db250ZXh0L0VuZHBvaW50Q29tcG9uZW50L2VtcHR5R3JvdXAuanM/ODYwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8vIEFsbCBhZ2dyZWdhdGVzIGFyZSBlZmZlY3RpdmVseSBhIGdyb3VwIGJ5IG9wZXJhdGlvblxuLy8gVGhlIGVtcHR5IGdyb3VwIGlzIHVzZWQgZm9yIGFnZ3JlZ2F0ZXMgd2l0aG91dCBhIEdST1VQIEJZIGNsYXVzZVxuZXhwb3J0IGNvbnN0IGVtcHR5R3JvdXAgPSBcIl9fZW1wdHlfX1wiO1xuLy8gTmV3ZXIgQVBJIHZlcnNpb25zIHJld3JpdGUgdGhlIHF1ZXJ5IHRvIHJldHVybiBgaXRlbTJgLiBJdCBmaXhlcyBzb21lIGxlZ2FjeSBpc3N1ZXMgd2l0aCB0aGUgb3JpZ2luYWwgYGl0ZW1gIHJlc3VsdFxuLy8gQWdncmVnYXRvciBjb2RlIHNob3VsZCB1c2UgaXRlbTIgd2hlbiBhdmFpbGFibGVcbmV4cG9ydCBjb25zdCBleHRyYWN0QWdncmVnYXRlUmVzdWx0ID0gKHBheWxvYWQpID0+IE9iamVjdC5rZXlzKHBheWxvYWQpLmxlbmd0aCA+IDAgPyAocGF5bG9hZC5pdGVtMiA/IHBheWxvYWQuaXRlbTIgOiBwYXlsb2FkLml0ZW0pIDogbnVsbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVtcHR5R3JvdXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/emptyGroup.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/ExecutionContext.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/ExecutionContext.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=ExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRXhlY3V0aW9uQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiO0FBQVU7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlFeGVjdXRpb25Db250ZXh0L0V4ZWN1dGlvbkNvbnRleHQuanM/NTA5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeGVjdXRpb25Db250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/ExecutionContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/FetchResult.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/FetchResult.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchResult: () => (/* binding */ FetchResult),\n/* harmony export */   FetchResultType: () => (/* binding */ FetchResultType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @hidden */\nvar FetchResultType;\n(function (FetchResultType) {\n    FetchResultType[FetchResultType[\"Done\"] = 0] = \"Done\";\n    FetchResultType[FetchResultType[\"Exception\"] = 1] = \"Exception\";\n    FetchResultType[FetchResultType[\"Result\"] = 2] = \"Result\";\n})(FetchResultType || (FetchResultType = {}));\n/** @hidden */\nclass FetchResult {\n    feedResponse;\n    headers;\n    fetchResultType;\n    error;\n    /**\n     * Wraps fetch results for the document producer.\n     * This allows the document producer to buffer exceptions so that actual results don't get flushed during splits.\n     *\n     * @param feedReponse - The response the document producer got back on a successful fetch\n     * @param error - The exception meant to be buffered on an unsuccessful fetch\n     * @hidden\n     */\n    constructor(feedResponse, error, headers) {\n        // TODO: feedResponse/error\n        if (feedResponse !== undefined) {\n            this.feedResponse = feedResponse;\n            this.headers = headers;\n            this.fetchResultType = FetchResultType.Result;\n        }\n        else {\n            this.error = error;\n            this.fetchResultType = FetchResultType.Exception;\n        }\n    }\n}\n//# sourceMappingURL=FetchResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvRmV0Y2hSZXN1bHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQ0FBMEM7QUFDM0M7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9GZXRjaFJlc3VsdC5qcz81ZDhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCB2YXIgRmV0Y2hSZXN1bHRUeXBlO1xuKGZ1bmN0aW9uIChGZXRjaFJlc3VsdFR5cGUpIHtcbiAgICBGZXRjaFJlc3VsdFR5cGVbRmV0Y2hSZXN1bHRUeXBlW1wiRG9uZVwiXSA9IDBdID0gXCJEb25lXCI7XG4gICAgRmV0Y2hSZXN1bHRUeXBlW0ZldGNoUmVzdWx0VHlwZVtcIkV4Y2VwdGlvblwiXSA9IDFdID0gXCJFeGNlcHRpb25cIjtcbiAgICBGZXRjaFJlc3VsdFR5cGVbRmV0Y2hSZXN1bHRUeXBlW1wiUmVzdWx0XCJdID0gMl0gPSBcIlJlc3VsdFwiO1xufSkoRmV0Y2hSZXN1bHRUeXBlIHx8IChGZXRjaFJlc3VsdFR5cGUgPSB7fSkpO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBGZXRjaFJlc3VsdCB7XG4gICAgZmVlZFJlc3BvbnNlO1xuICAgIGhlYWRlcnM7XG4gICAgZmV0Y2hSZXN1bHRUeXBlO1xuICAgIGVycm9yO1xuICAgIC8qKlxuICAgICAqIFdyYXBzIGZldGNoIHJlc3VsdHMgZm9yIHRoZSBkb2N1bWVudCBwcm9kdWNlci5cbiAgICAgKiBUaGlzIGFsbG93cyB0aGUgZG9jdW1lbnQgcHJvZHVjZXIgdG8gYnVmZmVyIGV4Y2VwdGlvbnMgc28gdGhhdCBhY3R1YWwgcmVzdWx0cyBkb24ndCBnZXQgZmx1c2hlZCBkdXJpbmcgc3BsaXRzLlxuICAgICAqXG4gICAgICogQHBhcmFtIGZlZWRSZXBvbnNlIC0gVGhlIHJlc3BvbnNlIHRoZSBkb2N1bWVudCBwcm9kdWNlciBnb3QgYmFjayBvbiBhIHN1Y2Nlc3NmdWwgZmV0Y2hcbiAgICAgKiBAcGFyYW0gZXJyb3IgLSBUaGUgZXhjZXB0aW9uIG1lYW50IHRvIGJlIGJ1ZmZlcmVkIG9uIGFuIHVuc3VjY2Vzc2Z1bCBmZXRjaFxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihmZWVkUmVzcG9uc2UsIGVycm9yLCBoZWFkZXJzKSB7XG4gICAgICAgIC8vIFRPRE86IGZlZWRSZXNwb25zZS9lcnJvclxuICAgICAgICBpZiAoZmVlZFJlc3BvbnNlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZmVlZFJlc3BvbnNlID0gZmVlZFJlc3BvbnNlO1xuICAgICAgICAgICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgICAgIHRoaXMuZmV0Y2hSZXN1bHRUeXBlID0gRmV0Y2hSZXN1bHRUeXBlLlJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgICAgICAgICAgIHRoaXMuZmV0Y2hSZXN1bHRUeXBlID0gRmV0Y2hSZXN1bHRUeXBlLkV4Y2VwdGlvbjtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZldGNoUmVzdWx0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/FetchResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/SqlQuerySpec.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/SqlQuerySpec.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=SqlQuerySpec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvU3FsUXVlcnlTcGVjLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvU3FsUXVlcnlTcGVjLmpzPzMyZTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3FsUXVlcnlTcGVjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/SqlQuerySpec.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/defaultQueryExecutionContext.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/defaultQueryExecutionContext.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultQueryExecutionContext: () => (/* binding */ DefaultQueryExecutionContext)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../queryMetrics/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/index.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../diagnostics/CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n\n\n\n\n\n\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"ClientContext\");\n/** @hidden */\nvar STATES;\n(function (STATES) {\n    STATES[\"start\"] = \"start\";\n    STATES[\"inProgress\"] = \"inProgress\";\n    STATES[\"ended\"] = \"ended\";\n})(STATES || (STATES = {}));\n/** @hidden */\nclass DefaultQueryExecutionContext {\n    static STATES = STATES;\n    resources; // TODO: any resources\n    currentIndex;\n    currentPartitionIndex;\n    fetchFunctions;\n    options; // TODO: any options\n    continuationToken; // TODO: any continuation\n    get continuation() {\n        return this.continuationToken;\n    }\n    state;\n    nextFetchFunction;\n    correlatedActivityId;\n    /**\n     * Provides the basic Query Execution Context.\n     * This wraps the internal logic query execution using provided fetch functions\n     *\n     * @param clientContext  - Is used to read the partitionKeyRanges for split proofing\n     * @param query          - A SQL query.\n     * @param options        - Represents the feed options.\n     * @param fetchFunctions - A function to retrieve each page of data.\n     *                          An array of functions may be used to query more than one partition.\n     * @hidden\n     */\n    constructor(options, fetchFunctions, correlatedActivityId) {\n        this.resources = [];\n        this.currentIndex = 0;\n        this.currentPartitionIndex = 0;\n        this.fetchFunctions = Array.isArray(fetchFunctions) ? fetchFunctions : [fetchFunctions];\n        this.options = options || {};\n        this.continuationToken = this.options.continuationToken || this.options.continuation || null;\n        this.state = DefaultQueryExecutionContext.STATES.start;\n        this.correlatedActivityId = correlatedActivityId;\n    }\n    /**\n     * Execute a provided callback on the next element in the execution context.\n     */\n    async nextItem(diagnosticNode) {\n        ++this.currentIndex;\n        const response = await this.current(diagnosticNode);\n        return response;\n    }\n    /**\n     * Retrieve the current element on the execution context.\n     */\n    async current(diagnosticNode) {\n        if (this.currentIndex < this.resources.length) {\n            return {\n                result: this.resources[this.currentIndex],\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n            };\n        }\n        if (this._canFetchMore()) {\n            const { result: resources, headers } = await this.fetchMore(diagnosticNode);\n            this.resources = resources;\n            if (this.resources.length === 0) {\n                if (!this.continuationToken && this.currentPartitionIndex >= this.fetchFunctions.length) {\n                    this.state = DefaultQueryExecutionContext.STATES.ended;\n                    return { result: undefined, headers };\n                }\n                else {\n                    return this.current(diagnosticNode);\n                }\n            }\n            return { result: this.resources[this.currentIndex], headers };\n        }\n        else {\n            this.state = DefaultQueryExecutionContext.STATES.ended;\n            return {\n                result: undefined,\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n            };\n        }\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on\n     * the value of the continuation token or the elements remaining on the current batch in the execution context.\n     *\n     * @returns true if there is other elements to process in the DefaultQueryExecutionContext.\n     */\n    hasMoreResults() {\n        return (this.state === DefaultQueryExecutionContext.STATES.start ||\n            this.continuationToken !== undefined ||\n            this.currentIndex < this.resources.length - 1 ||\n            this.currentPartitionIndex < this.fetchFunctions.length);\n    }\n    /**\n     * Fetches the next batch of the feed and pass them as an array to a callback\n     */\n    async fetchMore(diagnosticNode) {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.addDiagnosticChild)(async (childDiagnosticNode) => {\n            if (this.currentPartitionIndex >= this.fetchFunctions.length) {\n                return {\n                    headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n                    result: undefined,\n                };\n            }\n            // Keep to the original continuation and to restore the value after fetchFunction call\n            const originalContinuation = this.options.continuationToken || this.options.continuation;\n            this.options.continuationToken = this.continuationToken;\n            // Return undefined if there is no more results\n            if (this.currentPartitionIndex >= this.fetchFunctions.length) {\n                return {\n                    headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n                    result: undefined,\n                };\n            }\n            let resources;\n            let responseHeaders;\n            try {\n                let p;\n                if (this.nextFetchFunction !== undefined) {\n                    logger.verbose(\"using prefetch\");\n                    p = this.nextFetchFunction;\n                    this.nextFetchFunction = undefined;\n                }\n                else {\n                    logger.verbose(\"using fresh fetch\");\n                    p = this.fetchFunctions[this.currentPartitionIndex](childDiagnosticNode, this.options, this.correlatedActivityId);\n                }\n                const response = await p;\n                resources = response.result;\n                childDiagnosticNode.recordQueryResult(resources, _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_6__.CosmosDbDiagnosticLevel.debugUnsafe);\n                responseHeaders = response.headers;\n                this.continuationToken = responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Continuation];\n                if (!this.continuationToken) {\n                    ++this.currentPartitionIndex;\n                }\n                if (this.options && this.options.bufferItems === true) {\n                    const fetchFunction = this.fetchFunctions[this.currentPartitionIndex];\n                    this.nextFetchFunction = fetchFunction\n                        ? fetchFunction(childDiagnosticNode, {\n                            ...this.options,\n                            continuationToken: this.continuationToken,\n                        }, this.correlatedActivityId)\n                        : undefined;\n                }\n            }\n            catch (err) {\n                this.state = DefaultQueryExecutionContext.STATES.ended;\n                // return callback(err, undefined, responseHeaders);\n                // TODO: Error and data being returned is an antipattern, this might broken\n                throw err;\n            }\n            this.state = DefaultQueryExecutionContext.STATES.inProgress;\n            this.currentIndex = 0;\n            this.options.continuationToken = originalContinuation;\n            this.options.continuation = originalContinuation;\n            // deserializing query metrics so that we aren't working with delimited strings in the rest of the code base\n            if (_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.QueryMetrics in responseHeaders) {\n                const delimitedString = responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.QueryMetrics];\n                let queryMetrics = _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_2__.QueryMetrics.createFromDelimitedString(delimitedString);\n                // Add the request charge to the query metrics so that we can have per partition request charge.\n                if (_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.RequestCharge in responseHeaders) {\n                    const requestCharge = Number(responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.RequestCharge]) || 0;\n                    queryMetrics = new _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_2__.QueryMetrics(queryMetrics.retrievedDocumentCount, queryMetrics.retrievedDocumentSize, queryMetrics.outputDocumentCount, queryMetrics.outputDocumentSize, queryMetrics.indexHitDocumentCount, queryMetrics.totalQueryExecutionTime, queryMetrics.queryPreparationTimes, queryMetrics.indexLookupTime, queryMetrics.documentLoadTime, queryMetrics.vmExecutionTime, queryMetrics.runtimeExecutionTimes, queryMetrics.documentWriteTime, new _queryMetrics_index_js__WEBPACK_IMPORTED_MODULE_2__.ClientSideMetrics(requestCharge));\n                }\n                // Wraping query metrics in a object where the key is '0' just so single partition\n                // and partition queries have the same response schema\n                responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.QueryMetrics] = {};\n                responseHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.QueryMetrics][\"0\"] = queryMetrics;\n            }\n            return { result: resources, headers: responseHeaders };\n        }, diagnosticNode, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_4__.DiagnosticNodeType.DEFAULT_QUERY_NODE, {\n            queryMethodIdentifier: \"fetchMore\",\n        });\n    }\n    _canFetchMore() {\n        const res = this.state === DefaultQueryExecutionContext.STATES.start ||\n            (this.continuationToken && this.state === DefaultQueryExecutionContext.STATES.inProgress) ||\n            (this.currentPartitionIndex < this.fetchFunctions.length &&\n                this.state === DefaultQueryExecutionContext.STATES.inProgress);\n        return res;\n    }\n}\n//# sourceMappingURL=defaultQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/defaultQueryExecutionContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/documentProducer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/documentProducer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocumentProducer: () => (/* binding */ DocumentProducer)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _defaultQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/defaultQueryExecutionContext.js\");\n/* harmony import */ var _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FetchResult.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/FetchResult.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n\n\n\n\n/** @hidden */\nclass DocumentProducer {\n    clientContext;\n    collectionLink;\n    query;\n    targetPartitionKeyRange;\n    fetchResults;\n    allFetched;\n    err;\n    previousContinuationToken;\n    continuationToken;\n    generation = 0;\n    internalExecutionContext;\n    startEpk;\n    endEpk;\n    populateEpkRangeHeaders;\n    /**\n     * Provides the Target Partition Range Query Execution Context.\n     * @param clientContext  - The service endpoint to use to create the client.\n     * @param collectionLink - Represents collection link\n     * @param query          - A SQL query.\n     * @param targetPartitionKeyRange - Query Target Partition key Range\n     * @hidden\n     */\n    constructor(clientContext, collectionLink, query, targetPartitionKeyRange, options, correlatedActivityId, startEpk, endEpk, populateEpkRangeHeaders = false) {\n        this.clientContext = clientContext;\n        // TODO: any options\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.targetPartitionKeyRange = targetPartitionKeyRange;\n        this.fetchResults = [];\n        this.allFetched = false;\n        this.err = undefined;\n        this.previousContinuationToken = undefined;\n        this.continuationToken = undefined;\n        this.internalExecutionContext = new _defaultQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_1__.DefaultQueryExecutionContext(options, this.fetchFunction, correlatedActivityId);\n        this.startEpk = startEpk;\n        this.endEpk = endEpk;\n        this.populateEpkRangeHeaders = populateEpkRangeHeaders;\n    }\n    peekBufferedItems() {\n        const bufferedResults = [];\n        for (let i = 0, done = false; i < this.fetchResults.length && !done; i++) {\n            const fetchResult = this.fetchResults[i];\n            switch (fetchResult.fetchResultType) {\n                case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Done:\n                    done = true;\n                    break;\n                case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Exception:\n                    done = true;\n                    break;\n                case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Result:\n                    bufferedResults.push(fetchResult.feedResponse);\n                    break;\n            }\n        }\n        return bufferedResults;\n    }\n    fetchFunction = async (diagnosticNode, options, correlatedActivityId) => {\n        const path = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPathFromLink)(this.collectionLink, _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item);\n        diagnosticNode.addData({ partitionKeyRangeId: this.targetPartitionKeyRange.id });\n        const id = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.getIdFromLink)(this.collectionLink);\n        const startEpk = this.populateEpkRangeHeaders ? this.startEpk : undefined;\n        const endEpk = this.populateEpkRangeHeaders ? this.endEpk : undefined;\n        return this.clientContext.queryFeed({\n            path,\n            resourceType: _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.item,\n            resourceId: id,\n            resultFn: (result) => result.Documents,\n            query: this.query,\n            options,\n            diagnosticNode,\n            partitionKeyRangeId: this.targetPartitionKeyRange[\"id\"],\n            correlatedActivityId: correlatedActivityId,\n            startEpk: startEpk,\n            endEpk: endEpk,\n        });\n    };\n    hasMoreResults() {\n        return this.internalExecutionContext.hasMoreResults() || this.fetchResults.length !== 0;\n    }\n    gotSplit() {\n        if (this.fetchResults.length !== 0) {\n            const fetchResult = this.fetchResults[0];\n            if (fetchResult.fetchResultType === _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Exception) {\n                if (DocumentProducer._needPartitionKeyRangeCacheRefresh(fetchResult.error)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _updateStates(err, allFetched) {\n        if (err) {\n            this.err = err;\n            return;\n        }\n        if (allFetched) {\n            this.allFetched = true;\n        }\n        if (this.internalExecutionContext.continuationToken === this.continuationToken) {\n            // nothing changed\n            return;\n        }\n        this.previousContinuationToken = this.continuationToken;\n        this.continuationToken = this.internalExecutionContext.continuationToken;\n    }\n    static _needPartitionKeyRangeCacheRefresh(error) {\n        // TODO: error\n        return (error.code === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.Gone &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SubStatusCodes.PartitionKeyRangeGone);\n    }\n    /**\n     * Fetches and bufferes the next page of results in internal buffer\n     */\n    async bufferMore(diagnosticNode) {\n        if (this.err) {\n            throw this.err;\n        }\n        try {\n            const { result: resources, headers: headerResponse } = await this.internalExecutionContext.fetchMore(diagnosticNode);\n            ++this.generation;\n            this._updateStates(undefined, resources === undefined);\n            if (resources !== undefined) {\n                // add fetched header to the 1st element in the buffer\n                let addHeaderToFetchResult = true;\n                resources.forEach((element) => {\n                    this.fetchResults.push(new _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResult(element, undefined, addHeaderToFetchResult ? headerResponse : (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)()));\n                    addHeaderToFetchResult = false;\n                });\n            }\n            // need to modify the header response so that the query metrics are per partition\n            if (headerResponse != null && _common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics in headerResponse) {\n                // \"0\" is the default partition before one is actually assigned.\n                const queryMetrics = headerResponse[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics][\"0\"];\n                // Wraping query metrics in a object where the keys are the partition key range.\n                headerResponse[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics] = {};\n                headerResponse[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics][this.targetPartitionKeyRange.id] =\n                    queryMetrics;\n            }\n            return headerResponse;\n        }\n        catch (err) {\n            if (DocumentProducer._needPartitionKeyRangeCacheRefresh(err)) {\n                // Split just happend\n                // Buffer the error so the execution context can still get the feedResponses in the itemBuffer\n                const bufferedError = new _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResult(undefined, err);\n                this.fetchResults.push(bufferedError);\n                return err.headers;\n            }\n            else {\n                this._updateStates(err, err.resources === undefined);\n                throw err;\n            }\n        }\n    }\n    getTargetParitionKeyRange() {\n        return this.targetPartitionKeyRange;\n    }\n    /**\n     * Peak the next item in the buffer\n     */\n    peakNextItem() {\n        if (this.err) {\n            throw this.err;\n        }\n        if (this.allFetched || this.fetchResults.length === 0) {\n            return undefined;\n        }\n        const fetchResult = this.fetchResults[0];\n        switch (fetchResult.fetchResultType) {\n            case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Done:\n                return undefined;\n            case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Exception: // do not throw this error\n                return undefined;\n            case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Result:\n                return fetchResult.feedResponse;\n        }\n    }\n    /**\n     * Returns the first item in the buffered results if any, or [] otherwise.\n     */\n    async fetchNextItem() {\n        if (this.err) {\n            this._updateStates(this.err, undefined);\n            throw this.err;\n        }\n        if (this.allFetched) {\n            return { result: undefined, headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)() };\n        }\n        try {\n            const { result, headers } = this.current();\n            this._updateStates(undefined, result === undefined);\n            if (result === undefined || result.length === 0) {\n                return { result: undefined, headers };\n            }\n            return { result, headers }; //\n        }\n        catch (err) {\n            this._updateStates(err, err.item === undefined);\n            throw err;\n        }\n    }\n    /**\n     * Fetches all the buffered results\n     */\n    async fetchBufferedItems() {\n        if (this.err) {\n            this._updateStates(this.err, undefined);\n            throw this.err;\n        }\n        if (this.allFetched) {\n            return { result: undefined, headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)() };\n        }\n        const resources = [];\n        try {\n            while (this.fetchResults.length > 0) {\n                const { result } = this.current();\n                this._updateStates(undefined, result === undefined);\n                if (result === undefined) {\n                    return {\n                        result: resources.length > 0 ? resources : undefined,\n                        headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n                    };\n                }\n                else {\n                    resources.push(result);\n                }\n            }\n            return { result: resources, headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)() };\n        }\n        catch (err) {\n            this._updateStates(err, err.item === undefined);\n            throw err;\n        }\n    }\n    /**\n     * Retrieve the current element on the DocumentProducer.\n     */\n    current() {\n        // If something is buffered just give that\n        if (this.fetchResults.length > 0) {\n            const fetchResult = this.fetchResults.shift();\n            // Need to unwrap fetch results\n            switch (fetchResult.fetchResultType) {\n                case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Done:\n                    return {\n                        result: undefined,\n                        headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n                    };\n                case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Exception:\n                    fetchResult.error.headers = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)();\n                    throw fetchResult.error;\n                case _FetchResult_js__WEBPACK_IMPORTED_MODULE_2__.FetchResultType.Result:\n                    return {\n                        result: fetchResult.feedResponse,\n                        headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n                    };\n            }\n        }\n        // If there isn't anymore items left to fetch then let the user know.\n        if (this.allFetched) {\n            return {\n                result: undefined,\n                headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)(),\n            };\n        }\n        // If the internal buffer is empty, return empty result\n        return { result: [], headers: (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)() };\n    }\n}\n//# sourceMappingURL=documentProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/documentProducer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAndParseJSONString: () => (/* binding */ decodeAndParseJSONString),\n/* harmony export */   getInitialHeader: () => (/* binding */ getInitialHeader),\n/* harmony export */   getRequestChargeIfAny: () => (/* binding */ getRequestChargeIfAny),\n/* harmony export */   mergeHeaders: () => (/* binding */ mergeHeaders)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryMetrics_queryMetrics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../queryMetrics/queryMetrics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetrics.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/** @hidden */\n// TODO: docs\nfunction getRequestChargeIfAny(headers) {\n    if (typeof headers === \"number\") {\n        return headers;\n    }\n    else if (typeof headers === \"string\") {\n        return parseFloat(headers);\n    }\n    if (headers) {\n        const rc = headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge];\n        if (rc) {\n            return parseFloat(rc);\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * @hidden\n */\nfunction getInitialHeader() {\n    const headers = {};\n    headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge] = 0;\n    headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics] = {};\n    return headers;\n}\n/**\n * @hidden\n */\n// TODO: The name of this method isn't very accurate to what it does\nfunction mergeHeaders(headers, toBeMergedHeaders) {\n    if (headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge] === undefined) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge] = 0;\n    }\n    if (headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics] === undefined) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics] = _queryMetrics_queryMetrics_js__WEBPACK_IMPORTED_MODULE_1__.QueryMetrics.zero;\n    }\n    if (!toBeMergedHeaders) {\n        return;\n    }\n    headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge] += getRequestChargeIfAny(toBeMergedHeaders);\n    if (toBeMergedHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IsRUPerMinuteUsed]) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IsRUPerMinuteUsed] =\n            toBeMergedHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IsRUPerMinuteUsed];\n    }\n    if (_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics in toBeMergedHeaders) {\n        const headerQueryMetrics = headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics];\n        const toBeMergedHeaderQueryMetrics = toBeMergedHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics];\n        for (const partitionId in toBeMergedHeaderQueryMetrics) {\n            if (headerQueryMetrics[partitionId]) {\n                const combinedQueryMetrics = headerQueryMetrics[partitionId].add([\n                    toBeMergedHeaderQueryMetrics[partitionId],\n                ]);\n                headerQueryMetrics[partitionId] = combinedQueryMetrics;\n            }\n            else {\n                headerQueryMetrics[partitionId] = toBeMergedHeaderQueryMetrics[partitionId];\n            }\n        }\n    }\n    if (_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IndexUtilization in toBeMergedHeaders) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IndexUtilization] =\n            toBeMergedHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IndexUtilization];\n    }\n    if (_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId in toBeMergedHeaders) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId] =\n            toBeMergedHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId];\n    }\n}\n/** @hidden */\nfunction decodeAndParseJSONString(inputString) {\n    try {\n        if (!inputString || inputString === \"\") {\n            return \"{}\";\n        }\n        const decodedString = decodeURIComponent(inputString);\n        const parsedString = JSON.parse(decodedString);\n        const indexMetrics = JSON.stringify(parsedString);\n        return indexMetrics;\n    }\n    catch (e) {\n        console.error(\"Error parsing JSON file:\", e.message);\n    }\n}\n//# sourceMappingURL=headerUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvaGVhZGVyVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMrQztBQUNnQjtBQUMvRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1REFBUztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksdURBQVM7QUFDckIsWUFBWSx1REFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGdCQUFnQix1REFBUztBQUN6QixnQkFBZ0IsdURBQVM7QUFDekI7QUFDQSxnQkFBZ0IsdURBQVM7QUFDekIsZ0JBQWdCLHVEQUFTLDZCQUE2Qix1RUFBWTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksdURBQVM7QUFDckIsMEJBQTBCLHVEQUFTO0FBQ25DLGdCQUFnQix1REFBUztBQUN6Qiw4QkFBOEIsdURBQVM7QUFDdkM7QUFDQSxRQUFRLHVEQUFTO0FBQ2pCLDJDQUEyQyx1REFBUztBQUNwRCwrREFBK0QsdURBQVM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBUztBQUNqQixnQkFBZ0IsdURBQVM7QUFDekIsOEJBQThCLHVEQUFTO0FBQ3ZDO0FBQ0EsUUFBUSx1REFBUztBQUNqQixnQkFBZ0IsdURBQVM7QUFDekIsOEJBQThCLHVEQUFTO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvaGVhZGVyVXRpbHMuanM/ZDk1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gXCIuLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IFF1ZXJ5TWV0cmljcyB9IGZyb20gXCIuLi9xdWVyeU1ldHJpY3MvcXVlcnlNZXRyaWNzLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuLy8gVE9ETzogZG9jc1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJlcXVlc3RDaGFyZ2VJZkFueShoZWFkZXJzKSB7XG4gICAgaWYgKHR5cGVvZiBoZWFkZXJzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgaGVhZGVycyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChoZWFkZXJzKTtcbiAgICB9XG4gICAgaWYgKGhlYWRlcnMpIHtcbiAgICAgICAgY29uc3QgcmMgPSBoZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5SZXF1ZXN0Q2hhcmdlXTtcbiAgICAgICAgaWYgKHJjKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChyYyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbml0aWFsSGVhZGVyKCkge1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICBoZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5SZXF1ZXN0Q2hhcmdlXSA9IDA7XG4gICAgaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXSA9IHt9O1xuICAgIHJldHVybiBoZWFkZXJzO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbi8vIFRPRE86IFRoZSBuYW1lIG9mIHRoaXMgbWV0aG9kIGlzbid0IHZlcnkgYWNjdXJhdGUgdG8gd2hhdCBpdCBkb2VzXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VIZWFkZXJzKGhlYWRlcnMsIHRvQmVNZXJnZWRIZWFkZXJzKSB7XG4gICAgaWYgKGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlJlcXVlc3RDaGFyZ2VdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuUmVxdWVzdENoYXJnZV0gPSAwO1xuICAgIH1cbiAgICBpZiAoaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlF1ZXJ5TWV0cmljc10gPSBRdWVyeU1ldHJpY3MuemVybztcbiAgICB9XG4gICAgaWYgKCF0b0JlTWVyZ2VkSGVhZGVycykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlJlcXVlc3RDaGFyZ2VdICs9IGdldFJlcXVlc3RDaGFyZ2VJZkFueSh0b0JlTWVyZ2VkSGVhZGVycyk7XG4gICAgaWYgKHRvQmVNZXJnZWRIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Jc1JVUGVyTWludXRlVXNlZF0pIHtcbiAgICAgICAgaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuSXNSVVBlck1pbnV0ZVVzZWRdID1cbiAgICAgICAgICAgIHRvQmVNZXJnZWRIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Jc1JVUGVyTWludXRlVXNlZF07XG4gICAgfVxuICAgIGlmIChDb25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzIGluIHRvQmVNZXJnZWRIZWFkZXJzKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlclF1ZXJ5TWV0cmljcyA9IGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlF1ZXJ5TWV0cmljc107XG4gICAgICAgIGNvbnN0IHRvQmVNZXJnZWRIZWFkZXJRdWVyeU1ldHJpY3MgPSB0b0JlTWVyZ2VkSGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuUXVlcnlNZXRyaWNzXTtcbiAgICAgICAgZm9yIChjb25zdCBwYXJ0aXRpb25JZCBpbiB0b0JlTWVyZ2VkSGVhZGVyUXVlcnlNZXRyaWNzKSB7XG4gICAgICAgICAgICBpZiAoaGVhZGVyUXVlcnlNZXRyaWNzW3BhcnRpdGlvbklkXSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbWJpbmVkUXVlcnlNZXRyaWNzID0gaGVhZGVyUXVlcnlNZXRyaWNzW3BhcnRpdGlvbklkXS5hZGQoW1xuICAgICAgICAgICAgICAgICAgICB0b0JlTWVyZ2VkSGVhZGVyUXVlcnlNZXRyaWNzW3BhcnRpdGlvbklkXSxcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICBoZWFkZXJRdWVyeU1ldHJpY3NbcGFydGl0aW9uSWRdID0gY29tYmluZWRRdWVyeU1ldHJpY3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJRdWVyeU1ldHJpY3NbcGFydGl0aW9uSWRdID0gdG9CZU1lcmdlZEhlYWRlclF1ZXJ5TWV0cmljc1twYXJ0aXRpb25JZF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKENvbnN0YW50cy5IdHRwSGVhZGVycy5JbmRleFV0aWxpemF0aW9uIGluIHRvQmVNZXJnZWRIZWFkZXJzKSB7XG4gICAgICAgIGhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkluZGV4VXRpbGl6YXRpb25dID1cbiAgICAgICAgICAgIHRvQmVNZXJnZWRIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5JbmRleFV0aWxpemF0aW9uXTtcbiAgICB9XG4gICAgaWYgKENvbnN0YW50cy5IdHRwSGVhZGVycy5Db3JyZWxhdGVkQWN0aXZpdHlJZCBpbiB0b0JlTWVyZ2VkSGVhZGVycykge1xuICAgICAgICBoZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Db3JyZWxhdGVkQWN0aXZpdHlJZF0gPVxuICAgICAgICAgICAgdG9CZU1lcmdlZEhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkNvcnJlbGF0ZWRBY3Rpdml0eUlkXTtcbiAgICB9XG59XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFuZFBhcnNlSlNPTlN0cmluZyhpbnB1dFN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICghaW5wdXRTdHJpbmcgfHwgaW5wdXRTdHJpbmcgPT09IFwiXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBcInt9XCI7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVjb2RlZFN0cmluZyA9IGRlY29kZVVSSUNvbXBvbmVudChpbnB1dFN0cmluZyk7XG4gICAgICAgIGNvbnN0IHBhcnNlZFN0cmluZyA9IEpTT04ucGFyc2UoZGVjb2RlZFN0cmluZyk7XG4gICAgICAgIGNvbnN0IGluZGV4TWV0cmljcyA9IEpTT04uc3RyaW5naWZ5KHBhcnNlZFN0cmluZyk7XG4gICAgICAgIHJldHVybiBpbmRleE1ldHJpY3M7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBwYXJzaW5nIEpTT04gZmlsZTpcIiwgZS5tZXNzYWdlKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFkZXJVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/hybridQueryExecutionContext.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/hybridQueryExecutionContext.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HybridQueryExecutionContext: () => (/* binding */ HybridQueryExecutionContext),\n/* harmony export */   HybridQueryExecutionContextBaseStates: () => (/* binding */ HybridQueryExecutionContextBaseStates)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _request_hybridSearchQueryResult_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../request/hybridSearchQueryResult.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/hybridSearchQueryResult.js\");\n/* harmony import */ var _Aggregators_GlobalStatisticsAggregator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Aggregators/GlobalStatisticsAggregator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/GlobalStatisticsAggregator.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parallelQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContext.js\");\n/* harmony import */ var _pipelinedQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pipelinedQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/pipelinedQueryExecutionContext.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n/** @hidden */\nvar HybridQueryExecutionContextBaseStates;\n(function (HybridQueryExecutionContextBaseStates) {\n    HybridQueryExecutionContextBaseStates[\"uninitialized\"] = \"uninitialized\";\n    HybridQueryExecutionContextBaseStates[\"initialized\"] = \"initialized\";\n    HybridQueryExecutionContextBaseStates[\"draining\"] = \"draining\";\n    HybridQueryExecutionContextBaseStates[\"done\"] = \"done\";\n})(HybridQueryExecutionContextBaseStates || (HybridQueryExecutionContextBaseStates = {}));\nclass HybridQueryExecutionContext {\n    clientContext;\n    collectionLink;\n    query;\n    options;\n    partitionedQueryExecutionInfo;\n    correlatedActivityId;\n    allPartitionsRanges;\n    globalStatisticsExecutionContext;\n    componentsExecutionContext = [];\n    pageSize;\n    state;\n    globalStatisticsAggregator;\n    emitRawOrderByPayload = true;\n    buffer = [];\n    DEFAULT_PAGE_SIZE = 10;\n    TOTAL_WORD_COUNT_PLACEHOLDER = \"documentdb-formattablehybridsearchquery-totalwordcount\";\n    HIT_COUNTS_ARRAY_PLACEHOLDER = \"documentdb-formattablehybridsearchquery-hitcountsarray\";\n    TOTAL_DOCUMENT_COUNT_PLACEHOLDER = \"documentdb-formattablehybridsearchquery-totaldocumentcount\";\n    RRF_CONSTANT = 60; // Constant for RRF score calculation\n    logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"HybridQueryExecutionContext\");\n    hybridSearchResult = [];\n    uniqueItems = new Map();\n    isSingleComponent = false;\n    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo, correlatedActivityId, allPartitionsRanges) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.correlatedActivityId = correlatedActivityId;\n        this.allPartitionsRanges = allPartitionsRanges;\n        this.state = HybridQueryExecutionContextBaseStates.uninitialized;\n        this.pageSize = this.options.maxItemCount;\n        if (this.pageSize === undefined) {\n            this.pageSize = this.DEFAULT_PAGE_SIZE;\n        }\n        if (partitionedQueryExecutionInfo.hybridSearchQueryInfo.requiresGlobalStatistics) {\n            const globalStaticsQueryOptions = { maxItemCount: this.pageSize };\n            this.globalStatisticsAggregator = new _Aggregators_GlobalStatisticsAggregator_js__WEBPACK_IMPORTED_MODULE_2__.GlobalStatisticsAggregator();\n            const globalStatisticsQuery = this.partitionedQueryExecutionInfo.hybridSearchQueryInfo.globalStatisticsQuery;\n            const globalStatisticsQueryExecutionInfo = {\n                partitionedQueryExecutionInfoVersion: 1,\n                queryInfo: {\n                    distinctType: \"None\",\n                    hasSelectValue: false,\n                    groupByAliasToAggregateType: {},\n                    rewrittenQuery: globalStatisticsQuery,\n                    hasNonStreamingOrderBy: false,\n                },\n                queryRanges: this.allPartitionsRanges,\n            };\n            this.globalStatisticsExecutionContext = new _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_4__.ParallelQueryExecutionContext(this.clientContext, this.collectionLink, globalStatisticsQuery, globalStaticsQueryOptions, globalStatisticsQueryExecutionInfo, this.correlatedActivityId);\n        }\n        else {\n            this.createComponentExecutionContexts();\n            this.state = HybridQueryExecutionContextBaseStates.initialized;\n        }\n    }\n    async nextItem(diagnosticNode) {\n        const nextItemRespHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)();\n        while ((this.state === HybridQueryExecutionContextBaseStates.uninitialized ||\n            this.state === HybridQueryExecutionContextBaseStates.initialized) &&\n            this.buffer.length === 0) {\n            await this.fetchMoreInternal(diagnosticNode, nextItemRespHeaders);\n        }\n        if (this.state === HybridQueryExecutionContextBaseStates.draining && this.buffer.length > 0) {\n            return this.drainOne(nextItemRespHeaders);\n        }\n        else {\n            return this.done(nextItemRespHeaders);\n        }\n    }\n    hasMoreResults() {\n        switch (this.state) {\n            case HybridQueryExecutionContextBaseStates.uninitialized:\n                return true;\n            case HybridQueryExecutionContextBaseStates.initialized:\n                return true;\n            case HybridQueryExecutionContextBaseStates.draining:\n                return this.buffer.length > 0;\n            case HybridQueryExecutionContextBaseStates.done:\n                return false;\n            default:\n                return false;\n        }\n    }\n    async fetchMore(diagnosticNode) {\n        const fetchMoreRespHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.getInitialHeader)();\n        return this.fetchMoreInternal(diagnosticNode, fetchMoreRespHeaders);\n    }\n    async fetchMoreInternal(diagnosticNode, headers) {\n        switch (this.state) {\n            case HybridQueryExecutionContextBaseStates.uninitialized:\n                await this.initialize(diagnosticNode, headers);\n                return {\n                    result: [],\n                    headers: headers,\n                };\n            case HybridQueryExecutionContextBaseStates.initialized:\n                await this.executeComponentQueries(diagnosticNode, headers);\n                return {\n                    result: [],\n                    headers: headers,\n                };\n            case HybridQueryExecutionContextBaseStates.draining:\n                return this.drain(headers);\n            case HybridQueryExecutionContextBaseStates.done:\n                return this.done(headers);\n            default:\n                throw new Error(`Invalid state: ${this.state}`);\n        }\n    }\n    async initialize(diagnosticNode, fetchMoreRespHeaders) {\n        try {\n            while (this.globalStatisticsExecutionContext.hasMoreResults()) {\n                const result = await this.globalStatisticsExecutionContext.fetchMore(diagnosticNode);\n                (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.mergeHeaders)(fetchMoreRespHeaders, result.headers);\n                if (result && result.result) {\n                    for (const item of result.result) {\n                        const globalStatistics = item;\n                        if (globalStatistics) {\n                            // iterate over the components update placeholders from globalStatistics\n                            this.globalStatisticsAggregator.aggregate(globalStatistics);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            this.state = HybridQueryExecutionContextBaseStates.done;\n            throw error;\n        }\n        // create component execution contexts for each component query\n        this.createComponentExecutionContexts();\n        this.state = HybridQueryExecutionContextBaseStates.initialized;\n    }\n    async executeComponentQueries(diagnosticNode, fetchMoreRespHeaders) {\n        if (this.isSingleComponent) {\n            await this.drainSingleComponent(diagnosticNode, fetchMoreRespHeaders);\n            return;\n        }\n        try {\n            if (this.options.enableQueryControl) {\n                // track componentExecutionContexts with remaining results and call them in LIFO order\n                if (this.componentsExecutionContext.length > 0) {\n                    const componentExecutionContext = this.componentsExecutionContext.pop();\n                    if (componentExecutionContext.hasMoreResults()) {\n                        const result = await componentExecutionContext.fetchMore(diagnosticNode);\n                        const response = result.result;\n                        (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.mergeHeaders)(fetchMoreRespHeaders, result.headers);\n                        if (response) {\n                            response.forEach((item) => {\n                                const hybridItem = _request_hybridSearchQueryResult_js__WEBPACK_IMPORTED_MODULE_1__.HybridSearchQueryResult.create(item);\n                                if (!this.uniqueItems.has(hybridItem.rid)) {\n                                    this.uniqueItems.set(hybridItem.rid, hybridItem);\n                                }\n                            });\n                        }\n                        if (componentExecutionContext.hasMoreResults()) {\n                            this.componentsExecutionContext.push(componentExecutionContext);\n                        }\n                    }\n                }\n                if (this.componentsExecutionContext.length === 0) {\n                    this.processUniqueItems();\n                }\n            }\n            else {\n                for (const componentExecutionContext of this.componentsExecutionContext) {\n                    while (componentExecutionContext.hasMoreResults()) {\n                        const result = await componentExecutionContext.fetchMore(diagnosticNode);\n                        const response = result.result;\n                        (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.mergeHeaders)(fetchMoreRespHeaders, result.headers);\n                        if (response) {\n                            response.forEach((item) => {\n                                const hybridItem = _request_hybridSearchQueryResult_js__WEBPACK_IMPORTED_MODULE_1__.HybridSearchQueryResult.create(item);\n                                if (!this.uniqueItems.has(hybridItem.rid)) {\n                                    this.uniqueItems.set(hybridItem.rid, hybridItem);\n                                }\n                            });\n                        }\n                    }\n                }\n                this.processUniqueItems();\n            }\n        }\n        catch (error) {\n            this.state = HybridQueryExecutionContextBaseStates.done;\n            throw error;\n        }\n    }\n    processUniqueItems() {\n        this.uniqueItems.forEach((item) => this.hybridSearchResult.push(item));\n        if (this.hybridSearchResult.length === 0 || this.hybridSearchResult.length === 1) {\n            // return the result as no or one element is present\n            this.hybridSearchResult.forEach((item) => this.buffer.push(item.data));\n            this.state = HybridQueryExecutionContextBaseStates.draining;\n            return;\n        }\n        // Initialize an array to hold ranks for each document\n        const componentWeights = this.extractComponentWeights();\n        const sortedHybridSearchResult = this.sortHybridSearchResultByRRFScore(this.hybridSearchResult, componentWeights);\n        // store the result to buffer\n        // add only data from the sortedHybridSearchResult in the buffer\n        sortedHybridSearchResult.forEach((item) => this.buffer.push(item.data));\n        this.applySkipAndTakeToBuffer();\n        this.state = HybridQueryExecutionContextBaseStates.draining;\n    }\n    applySkipAndTakeToBuffer() {\n        const { skip, take } = this.partitionedQueryExecutionInfo.hybridSearchQueryInfo;\n        if (skip) {\n            this.buffer = skip >= this.buffer.length ? [] : this.buffer.slice(skip);\n        }\n        if (take) {\n            this.buffer = take <= 0 ? [] : this.buffer.slice(0, take);\n        }\n    }\n    async drain(fetchMoreRespHeaders) {\n        try {\n            if (this.buffer.length === 0) {\n                this.state = HybridQueryExecutionContextBaseStates.done;\n                return this.done(fetchMoreRespHeaders);\n            }\n            const result = this.buffer.slice(0, this.pageSize);\n            this.buffer = this.buffer.slice(this.pageSize);\n            if (this.buffer.length === 0) {\n                this.state = HybridQueryExecutionContextBaseStates.done;\n            }\n            return {\n                result: result,\n                headers: fetchMoreRespHeaders,\n            };\n        }\n        catch (error) {\n            this.state = HybridQueryExecutionContextBaseStates.done;\n            throw error;\n        }\n    }\n    async drainOne(nextItemRespHeaders) {\n        try {\n            if (this.buffer.length === 0) {\n                this.state = HybridQueryExecutionContextBaseStates.done;\n                return this.done(nextItemRespHeaders);\n            }\n            const result = this.buffer.shift();\n            if (this.buffer.length === 0) {\n                this.state = HybridQueryExecutionContextBaseStates.done;\n            }\n            return {\n                result: result,\n                headers: nextItemRespHeaders,\n            };\n        }\n        catch (error) {\n            this.state = HybridQueryExecutionContextBaseStates.done;\n            throw error;\n        }\n    }\n    done(fetchMoreRespHeaders) {\n        return {\n            result: undefined,\n            headers: fetchMoreRespHeaders,\n        };\n    }\n    sortHybridSearchResultByRRFScore(hybridSearchResult, componentWeights) {\n        if (hybridSearchResult.length === 0) {\n            return [];\n        }\n        const ranksArray = hybridSearchResult.map((item) => ({\n            rid: item.rid,\n            ranks: new Array(item.componentScores.length).fill(0),\n        }));\n        // Compute ranks for each component score\n        for (let i = 0; i < hybridSearchResult[0].componentScores.length; i++) {\n            // Sort based on the i-th component score\n            hybridSearchResult.sort((a, b) => componentWeights[i].comparator(a.componentScores[i], b.componentScores[i]));\n            // Assign ranks\n            let rank = 1;\n            for (let j = 0; j < hybridSearchResult.length; j++) {\n                if (j > 0 &&\n                    hybridSearchResult[j].componentScores[i] !== hybridSearchResult[j - 1].componentScores[i]) {\n                    ++rank;\n                }\n                const rankIndex = ranksArray.findIndex((rankItem) => rankItem.rid === hybridSearchResult[j].rid);\n                ranksArray[rankIndex].ranks[i] = rank; // 1-based rank\n            }\n        }\n        // Compute RRF scores and sort based on them\n        const rrfScores = ranksArray.map((item) => ({\n            rid: item.rid,\n            rrfScore: this.computeRRFScore(item.ranks, this.RRF_CONSTANT, componentWeights),\n        }));\n        // Sort based on RRF scores\n        rrfScores.sort((a, b) => b.rrfScore - a.rrfScore);\n        // Map sorted RRF scores back to hybridSearchResult\n        const sortedHybridSearchResult = rrfScores.map((scoreItem) => hybridSearchResult.find((item) => item.rid === scoreItem.rid));\n        return sortedHybridSearchResult;\n    }\n    async drainSingleComponent(diagNode, fetchMoreRespHeaders) {\n        if (this.componentsExecutionContext && this.componentsExecutionContext.length !== 1) {\n            this.logger.error(\"drainSingleComponent called on multiple components\");\n            return;\n        }\n        try {\n            if (this.options.enableQueryControl) {\n                const componentExecutionContext = this.componentsExecutionContext[0];\n                if (componentExecutionContext.hasMoreResults()) {\n                    const result = await componentExecutionContext.fetchMore(diagNode);\n                    const response = result.result;\n                    (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.mergeHeaders)(fetchMoreRespHeaders, result.headers);\n                    if (response) {\n                        response.forEach((item) => {\n                            this.hybridSearchResult.push(_request_hybridSearchQueryResult_js__WEBPACK_IMPORTED_MODULE_1__.HybridSearchQueryResult.create(item));\n                        });\n                    }\n                }\n                if (!componentExecutionContext.hasMoreResults()) {\n                    this.state = HybridQueryExecutionContextBaseStates.draining;\n                    this.hybridSearchResult.forEach((item) => this.buffer.push(item.data));\n                    this.applySkipAndTakeToBuffer();\n                    this.state = HybridQueryExecutionContextBaseStates.draining;\n                }\n                return;\n            }\n            else {\n                const componentExecutionContext = this.componentsExecutionContext[0];\n                const hybridSearchResult = [];\n                // add check for enable query control\n                while (componentExecutionContext.hasMoreResults()) {\n                    const result = await componentExecutionContext.fetchMore(diagNode);\n                    const response = result.result;\n                    (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_3__.mergeHeaders)(fetchMoreRespHeaders, result.headers);\n                    if (response) {\n                        response.forEach((item) => {\n                            hybridSearchResult.push(_request_hybridSearchQueryResult_js__WEBPACK_IMPORTED_MODULE_1__.HybridSearchQueryResult.create(item));\n                        });\n                    }\n                }\n                hybridSearchResult.forEach((item) => this.buffer.push(item.data));\n                this.applySkipAndTakeToBuffer();\n                this.state = HybridQueryExecutionContextBaseStates.draining;\n            }\n        }\n        catch (error) {\n            this.state = HybridQueryExecutionContextBaseStates.done;\n            throw error;\n        }\n    }\n    createComponentExecutionContexts() {\n        // rewrite queries based on global statistics\n        let queryInfos = this.partitionedQueryExecutionInfo.hybridSearchQueryInfo.componentQueryInfos;\n        if (this.partitionedQueryExecutionInfo.hybridSearchQueryInfo.requiresGlobalStatistics) {\n            queryInfos = this.processComponentQueries(this.partitionedQueryExecutionInfo.hybridSearchQueryInfo.componentQueryInfos, this.globalStatisticsAggregator.getResult());\n        }\n        // create component execution contexts\n        for (const componentQueryInfo of queryInfos) {\n            const componentPartitionExecutionInfo = {\n                partitionedQueryExecutionInfoVersion: 1,\n                queryInfo: componentQueryInfo,\n                queryRanges: this.partitionedQueryExecutionInfo.queryRanges,\n            };\n            const rewrittenSqlQuerySpec = typeof this.query === \"string\"\n                ? componentQueryInfo.rewrittenQuery\n                : {\n                    query: componentQueryInfo.rewrittenQuery,\n                    parameters: this.query?.parameters ?? [],\n                };\n            const executionContext = new _pipelinedQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_5__.PipelinedQueryExecutionContext(this.clientContext, this.collectionLink, rewrittenSqlQuerySpec, this.options, componentPartitionExecutionInfo, this.correlatedActivityId, this.emitRawOrderByPayload);\n            this.componentsExecutionContext.push(executionContext);\n        }\n        this.isSingleComponent = this.componentsExecutionContext.length === 1;\n    }\n    processComponentQueries(componentQueryInfos, globalStats) {\n        return componentQueryInfos.map((queryInfo) => {\n            let rewrittenOrderByExpressions = queryInfo.orderByExpressions;\n            if (queryInfo.orderBy && queryInfo.orderBy.length > 0) {\n                if (!queryInfo.hasNonStreamingOrderBy) {\n                    throw new Error(\"The component query must have a non-streaming order by clause.\");\n                }\n                rewrittenOrderByExpressions = queryInfo.orderByExpressions.map((expr) => this.replacePlaceholdersWorkaroud(expr, globalStats, componentQueryInfos.length));\n            }\n            return {\n                ...queryInfo,\n                rewrittenQuery: this.replacePlaceholdersWorkaroud(queryInfo.rewrittenQuery, globalStats, componentQueryInfos.length),\n                orderByExpressions: rewrittenOrderByExpressions,\n            };\n        });\n    }\n    // This method is commented currently, but we will switch back to using this\n    // once the gateway has been redeployed with the fix for placeholder indexes\n    // private replacePlaceholders(query: string, globalStats: GlobalStatistics): string {\n    //   // Replace total document count\n    //   query = query.replace(\n    //     new RegExp(`{${this.TOTAL_DOCUMENT_COUNT_PLACEHOLDER}}`, \"g\"),\n    //     globalStats.documentCount.toString(),\n    //   );\n    //   // Replace total word counts and hit counts from fullTextStatistics\n    //   globalStats.fullTextStatistics.forEach((stats, index) => {\n    //     // Replace total word counts\n    //     query = query.replace(\n    //       new RegExp(`{${this.TOTAL_WORD_COUNT_PLACEHOLDER}-${index}}`, \"g\"),\n    //       stats.totalWordCount.toString(),\n    //     );\n    //     // Replace hit counts\n    //     query = query.replace(\n    //       new RegExp(`{${this.HIT_COUNTS_ARRAY_PLACEHOLDER}-${index}}`, \"g\"),\n    //       `[${stats.hitCounts.join(\",\")}]`,\n    //     );\n    //   });\n    //   return query;\n    // }\n    replacePlaceholdersWorkaroud(query, globalStats, componentCount) {\n        if (!globalStats ||\n            !globalStats.documentCount ||\n            !Array.isArray(globalStats.fullTextStatistics)) {\n            throw new Error(\"GlobalStats validation failed\");\n        }\n        // Replace total document count\n        query = query.replace(new RegExp(`{${this.TOTAL_DOCUMENT_COUNT_PLACEHOLDER}}`, \"g\"), globalStats.documentCount.toString());\n        let statisticsIndex = 0;\n        for (let i = 0; i < componentCount; i++) {\n            // Replace total word counts and hit counts from fullTextStatistics\n            const wordCountPlaceholder = `{${this.TOTAL_WORD_COUNT_PLACEHOLDER}-${i}}`;\n            const hitCountPlaceholder = `{${this.HIT_COUNTS_ARRAY_PLACEHOLDER}-${i}}`;\n            if (!query.includes(wordCountPlaceholder)) {\n                continue;\n            }\n            const stats = globalStats.fullTextStatistics[statisticsIndex];\n            // Replace total word counts\n            query = query.replace(new RegExp(wordCountPlaceholder, \"g\"), stats.totalWordCount.toString());\n            // Replace hit counts\n            query = query.replace(new RegExp(hitCountPlaceholder, \"g\"), `[${stats.hitCounts.join(\",\")}]`);\n            statisticsIndex++;\n        }\n        return query;\n    }\n    computeRRFScore = (ranks, k, componentWeights) => {\n        if (ranks.length !== componentWeights.length) {\n            throw new Error(\"Ranks and component weights length mismatch\");\n        }\n        let rrfScore = 0;\n        for (let i = 0; i < ranks.length; i++) {\n            const rank = ranks[i];\n            const weight = componentWeights[i].weight;\n            rrfScore += weight * (1 / (k + rank));\n        }\n        return rrfScore;\n    };\n    extractComponentWeights() {\n        const hybridSearchQueryInfo = this.partitionedQueryExecutionInfo.hybridSearchQueryInfo;\n        const useDefaultComponentWeight = !hybridSearchQueryInfo.componentWeights ||\n            hybridSearchQueryInfo.componentWeights.length === 0;\n        const result = [];\n        for (let index = 0; index < hybridSearchQueryInfo.componentQueryInfos.length; ++index) {\n            const queryInfo = hybridSearchQueryInfo.componentQueryInfos[index];\n            if (queryInfo.orderBy && queryInfo.orderBy.length > 0) {\n                if (!queryInfo.hasNonStreamingOrderBy) {\n                    throw new Error(\"The component query should have a non streaming order by\");\n                }\n                if (!queryInfo.orderByExpressions || queryInfo.orderByExpressions.length !== 1) {\n                    throw new Error(\"The component query should have exactly one order by expression\");\n                }\n            }\n            const componentWeight = useDefaultComponentWeight\n                ? 1\n                : hybridSearchQueryInfo.componentWeights[index];\n            const hasOrderBy = queryInfo.orderBy && queryInfo.orderBy.length > 0;\n            const sortOrder = hasOrderBy && queryInfo.orderBy[0].includes(\"Ascending\") ? 1 : -1;\n            result.push({\n                weight: componentWeight,\n                comparator: (x, y) => sortOrder * (x - y),\n            });\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=hybridQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/hybridQueryExecutionContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AverageAggregator: () => (/* reexport safe */ _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__.AverageAggregator),\n/* harmony export */   CountAggregator: () => (/* reexport safe */ _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__.CountAggregator),\n/* harmony export */   DefaultQueryExecutionContext: () => (/* reexport safe */ _defaultQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_2__.DefaultQueryExecutionContext),\n/* harmony export */   DocumentProducer: () => (/* reexport safe */ _documentProducer_js__WEBPACK_IMPORTED_MODULE_4__.DocumentProducer),\n/* harmony export */   FetchResult: () => (/* reexport safe */ _FetchResult_js__WEBPACK_IMPORTED_MODULE_5__.FetchResult),\n/* harmony export */   FetchResultType: () => (/* reexport safe */ _FetchResult_js__WEBPACK_IMPORTED_MODULE_5__.FetchResultType),\n/* harmony export */   MaxAggregator: () => (/* reexport safe */ _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__.MaxAggregator),\n/* harmony export */   MinAggregator: () => (/* reexport safe */ _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__.MinAggregator),\n/* harmony export */   OrderByComparator: () => (/* reexport safe */ _orderByComparator_js__WEBPACK_IMPORTED_MODULE_12__.OrderByComparator),\n/* harmony export */   OrderByDocumentProducerComparator: () => (/* reexport safe */ _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_6__.OrderByDocumentProducerComparator),\n/* harmony export */   OrderByQueryExecutionContext: () => (/* reexport safe */ _orderByQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_10__.OrderByQueryExecutionContext),\n/* harmony export */   ParallelQueryExecutionContext: () => (/* reexport safe */ _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_9__.ParallelQueryExecutionContext),\n/* harmony export */   ParallelQueryExecutionContextBase: () => (/* reexport safe */ _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_8__.ParallelQueryExecutionContextBase),\n/* harmony export */   ParallelQueryExecutionContextBaseStates: () => (/* reexport safe */ _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_8__.ParallelQueryExecutionContextBaseStates),\n/* harmony export */   PipelinedQueryExecutionContext: () => (/* reexport safe */ _pipelinedQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_11__.PipelinedQueryExecutionContext),\n/* harmony export */   SumAggregator: () => (/* reexport safe */ _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__.SumAggregator),\n/* harmony export */   createAggregator: () => (/* reexport safe */ _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__.createAggregator),\n/* harmony export */   decodeAndParseJSONString: () => (/* reexport safe */ _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.decodeAndParseJSONString),\n/* harmony export */   getInitialHeader: () => (/* reexport safe */ _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.getInitialHeader),\n/* harmony export */   getRequestChargeIfAny: () => (/* reexport safe */ _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRequestChargeIfAny),\n/* harmony export */   mergeHeaders: () => (/* reexport safe */ _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__.mergeHeaders)\n/* harmony export */ });\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _SqlQuerySpec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SqlQuerySpec.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/SqlQuerySpec.js\");\n/* harmony import */ var _defaultQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/defaultQueryExecutionContext.js\");\n/* harmony import */ var _Aggregators_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Aggregators/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/Aggregators/index.js\");\n/* harmony import */ var _documentProducer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./documentProducer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/documentProducer.js\");\n/* harmony import */ var _FetchResult_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FetchResult.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/FetchResult.js\");\n/* harmony import */ var _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./orderByDocumentProducerComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js\");\n/* harmony import */ var _ExecutionContext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/ExecutionContext.js\");\n/* harmony import */ var _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parallelQueryExecutionContextBase.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContextBase.js\");\n/* harmony import */ var _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parallelQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContext.js\");\n/* harmony import */ var _orderByQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./orderByQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByQueryExecutionContext.js\");\n/* harmony import */ var _pipelinedQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pipelinedQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/pipelinedQueryExecutionContext.js\");\n/* harmony import */ var _orderByComparator_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./orderByComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByComparator.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDaUM7QUFDQztBQUNnQjtBQUNYO0FBQ0Q7QUFDTDtBQUNzQjtBQUNqQjtBQUNpQjtBQUNKO0FBQ0Q7QUFDRTtBQUNiO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvaW5kZXguanM/MzQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCAqIGZyb20gXCIuL2hlYWRlclV0aWxzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9TcWxRdWVyeVNwZWMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RlZmF1bHRRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0FnZ3JlZ2F0b3JzL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kb2N1bWVudFByb2R1Y2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9GZXRjaFJlc3VsdC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vb3JkZXJCeURvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9FeGVjdXRpb25Db250ZXh0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9vcmRlckJ5UXVlcnlFeGVjdXRpb25Db250ZXh0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9waXBlbGluZWRRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL29yZGVyQnlDb21wYXJhdG9yLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByComparator.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByComparator.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderByComparator: () => (/* binding */ OrderByComparator)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n *  @hidden\n * ord is used to compare different types. Eg. in ascending order, for cross type comparison, boolean will come first, then number and, then string.\n * compFunc is used to compare the same type comparison.\n */\nconst TYPEORDCOMPARATOR = Object.freeze({\n    NoValue: {\n        ord: 0,\n    },\n    undefined: {\n        ord: 1,\n    },\n    boolean: {\n        ord: 2,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        },\n    },\n    number: {\n        ord: 4,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        },\n    },\n    string: {\n        ord: 5,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        },\n    },\n});\n/** @hidden */\nclass OrderByComparator {\n    sortOrder;\n    constructor(sortOrder) {\n        this.sortOrder = sortOrder;\n    }\n    compareItems(item1, item2) {\n        const orderByItemsRes1 = this.getOrderByItems(item1);\n        const orderByItemsRes2 = this.getOrderByItems(item2);\n        for (let i = 0; i < orderByItemsRes1.length; i++) {\n            // compares the orderby items one by one\n            const compRes = this.compareOrderByItem(orderByItemsRes1[i], orderByItemsRes2[i]);\n            if (compRes !== 0) {\n                if (this.sortOrder[i] === \"Descending\") {\n                    return compRes;\n                }\n                else if (this.sortOrder[i] === \"Ascending\") {\n                    return -compRes;\n                }\n            }\n        }\n    }\n    getOrderByItems(res) {\n        return res[\"orderByItems\"];\n    }\n    compareOrderByItem(orderByItem1, orderByItem2) {\n        const type1 = this.getType(orderByItem1);\n        const type2 = this.getType(orderByItem2);\n        return this.compareValue(orderByItem1[\"item\"], type1, orderByItem2[\"item\"], type2);\n    }\n    getType(orderByItem) {\n        // TODO: any item?\n        if (orderByItem === undefined || orderByItem.item === undefined) {\n            return \"NoValue\";\n        }\n        const type = typeof orderByItem.item;\n        if (TYPEORDCOMPARATOR[type] === undefined) {\n            throw new Error(`unrecognizable type ${type}`);\n        }\n        return type;\n    }\n    compareValue(item1, type1, item2, type2) {\n        // TODO: https://github.com/Azure/azure-sdk-for-js/issues/30122\n        // currently we do not support same type and cross type comparision for object and arrays.\n        if (type1 === \"object\" || type2 === \"object\") {\n            throw new Error(\"Tried to compare an object type\");\n        }\n        const type1Ord = TYPEORDCOMPARATOR[type1].ord;\n        const type2Ord = TYPEORDCOMPARATOR[type2].ord;\n        // Validate if the two item are of same type or not based on the type ordinal.\n        const typeCmp = type1Ord - type2Ord;\n        // if not same type, compare based on the type ordinal. Lower ordinal takes precedence over higher ordinal.\n        if (typeCmp !== 0) {\n            return typeCmp;\n        }\n        // both are of the same type\n        if (type1Ord === TYPEORDCOMPARATOR[\"undefined\"].ord ||\n            type1Ord === TYPEORDCOMPARATOR[\"NoValue\"].ord) {\n            // if both types are undefined or Null they are equal\n            return 0;\n        }\n        const compFunc = TYPEORDCOMPARATOR[type1].compFunc;\n        if (typeof compFunc === \"undefined\") {\n            throw new Error(\"Cannot find the comparison function\");\n        }\n        // same type and type is defined compare the items\n        return compFunc(item1, item2);\n    }\n}\n//# sourceMappingURL=orderByComparator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvb3JkZXJCeUNvbXBhcmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsQ0FBQztBQUNEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELEtBQUs7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlFeGVjdXRpb25Db250ZXh0L29yZGVyQnlDb21wYXJhdG9yLmpzPzZiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqICBAaGlkZGVuXG4gKiBvcmQgaXMgdXNlZCB0byBjb21wYXJlIGRpZmZlcmVudCB0eXBlcy4gRWcuIGluIGFzY2VuZGluZyBvcmRlciwgZm9yIGNyb3NzIHR5cGUgY29tcGFyaXNvbiwgYm9vbGVhbiB3aWxsIGNvbWUgZmlyc3QsIHRoZW4gbnVtYmVyIGFuZCwgdGhlbiBzdHJpbmcuXG4gKiBjb21wRnVuYyBpcyB1c2VkIHRvIGNvbXBhcmUgdGhlIHNhbWUgdHlwZSBjb21wYXJpc29uLlxuICovXG5jb25zdCBUWVBFT1JEQ09NUEFSQVRPUiA9IE9iamVjdC5mcmVlemUoe1xuICAgIE5vVmFsdWU6IHtcbiAgICAgICAgb3JkOiAwLFxuICAgIH0sXG4gICAgdW5kZWZpbmVkOiB7XG4gICAgICAgIG9yZDogMSxcbiAgICB9LFxuICAgIGJvb2xlYW46IHtcbiAgICAgICAgb3JkOiAyLFxuICAgICAgICBjb21wRnVuYzogKGEsIGIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBhID09PSBiID8gMCA6IGEgPiBiID8gMSA6IC0xO1xuICAgICAgICB9LFxuICAgIH0sXG4gICAgbnVtYmVyOiB7XG4gICAgICAgIG9yZDogNCxcbiAgICAgICAgY29tcEZ1bmM6IChhLCBiKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gYSA9PT0gYiA/IDAgOiBhID4gYiA/IDEgOiAtMTtcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgICBvcmQ6IDUsXG4gICAgICAgIGNvbXBGdW5jOiAoYSwgYikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGEgPT09IGIgPyAwIDogYSA+IGIgPyAxIDogLTE7XG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBPcmRlckJ5Q29tcGFyYXRvciB7XG4gICAgc29ydE9yZGVyO1xuICAgIGNvbnN0cnVjdG9yKHNvcnRPcmRlcikge1xuICAgICAgICB0aGlzLnNvcnRPcmRlciA9IHNvcnRPcmRlcjtcbiAgICB9XG4gICAgY29tcGFyZUl0ZW1zKGl0ZW0xLCBpdGVtMikge1xuICAgICAgICBjb25zdCBvcmRlckJ5SXRlbXNSZXMxID0gdGhpcy5nZXRPcmRlckJ5SXRlbXMoaXRlbTEpO1xuICAgICAgICBjb25zdCBvcmRlckJ5SXRlbXNSZXMyID0gdGhpcy5nZXRPcmRlckJ5SXRlbXMoaXRlbTIpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9yZGVyQnlJdGVtc1JlczEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIC8vIGNvbXBhcmVzIHRoZSBvcmRlcmJ5IGl0ZW1zIG9uZSBieSBvbmVcbiAgICAgICAgICAgIGNvbnN0IGNvbXBSZXMgPSB0aGlzLmNvbXBhcmVPcmRlckJ5SXRlbShvcmRlckJ5SXRlbXNSZXMxW2ldLCBvcmRlckJ5SXRlbXNSZXMyW2ldKTtcbiAgICAgICAgICAgIGlmIChjb21wUmVzICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc29ydE9yZGVyW2ldID09PSBcIkRlc2NlbmRpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tcFJlcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5zb3J0T3JkZXJbaV0gPT09IFwiQXNjZW5kaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC1jb21wUmVzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRPcmRlckJ5SXRlbXMocmVzKSB7XG4gICAgICAgIHJldHVybiByZXNbXCJvcmRlckJ5SXRlbXNcIl07XG4gICAgfVxuICAgIGNvbXBhcmVPcmRlckJ5SXRlbShvcmRlckJ5SXRlbTEsIG9yZGVyQnlJdGVtMikge1xuICAgICAgICBjb25zdCB0eXBlMSA9IHRoaXMuZ2V0VHlwZShvcmRlckJ5SXRlbTEpO1xuICAgICAgICBjb25zdCB0eXBlMiA9IHRoaXMuZ2V0VHlwZShvcmRlckJ5SXRlbTIpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVmFsdWUob3JkZXJCeUl0ZW0xW1wiaXRlbVwiXSwgdHlwZTEsIG9yZGVyQnlJdGVtMltcIml0ZW1cIl0sIHR5cGUyKTtcbiAgICB9XG4gICAgZ2V0VHlwZShvcmRlckJ5SXRlbSkge1xuICAgICAgICAvLyBUT0RPOiBhbnkgaXRlbT9cbiAgICAgICAgaWYgKG9yZGVyQnlJdGVtID09PSB1bmRlZmluZWQgfHwgb3JkZXJCeUl0ZW0uaXRlbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJOb1ZhbHVlXCI7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdHlwZSA9IHR5cGVvZiBvcmRlckJ5SXRlbS5pdGVtO1xuICAgICAgICBpZiAoVFlQRU9SRENPTVBBUkFUT1JbdHlwZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGB1bnJlY29nbml6YWJsZSB0eXBlICR7dHlwZX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHlwZTtcbiAgICB9XG4gICAgY29tcGFyZVZhbHVlKGl0ZW0xLCB0eXBlMSwgaXRlbTIsIHR5cGUyKSB7XG4gICAgICAgIC8vIFRPRE86IGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9henVyZS1zZGstZm9yLWpzL2lzc3Vlcy8zMDEyMlxuICAgICAgICAvLyBjdXJyZW50bHkgd2UgZG8gbm90IHN1cHBvcnQgc2FtZSB0eXBlIGFuZCBjcm9zcyB0eXBlIGNvbXBhcmlzaW9uIGZvciBvYmplY3QgYW5kIGFycmF5cy5cbiAgICAgICAgaWYgKHR5cGUxID09PSBcIm9iamVjdFwiIHx8IHR5cGUyID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUcmllZCB0byBjb21wYXJlIGFuIG9iamVjdCB0eXBlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHR5cGUxT3JkID0gVFlQRU9SRENPTVBBUkFUT1JbdHlwZTFdLm9yZDtcbiAgICAgICAgY29uc3QgdHlwZTJPcmQgPSBUWVBFT1JEQ09NUEFSQVRPUlt0eXBlMl0ub3JkO1xuICAgICAgICAvLyBWYWxpZGF0ZSBpZiB0aGUgdHdvIGl0ZW0gYXJlIG9mIHNhbWUgdHlwZSBvciBub3QgYmFzZWQgb24gdGhlIHR5cGUgb3JkaW5hbC5cbiAgICAgICAgY29uc3QgdHlwZUNtcCA9IHR5cGUxT3JkIC0gdHlwZTJPcmQ7XG4gICAgICAgIC8vIGlmIG5vdCBzYW1lIHR5cGUsIGNvbXBhcmUgYmFzZWQgb24gdGhlIHR5cGUgb3JkaW5hbC4gTG93ZXIgb3JkaW5hbCB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgaGlnaGVyIG9yZGluYWwuXG4gICAgICAgIGlmICh0eXBlQ21wICE9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdHlwZUNtcDtcbiAgICAgICAgfVxuICAgICAgICAvLyBib3RoIGFyZSBvZiB0aGUgc2FtZSB0eXBlXG4gICAgICAgIGlmICh0eXBlMU9yZCA9PT0gVFlQRU9SRENPTVBBUkFUT1JbXCJ1bmRlZmluZWRcIl0ub3JkIHx8XG4gICAgICAgICAgICB0eXBlMU9yZCA9PT0gVFlQRU9SRENPTVBBUkFUT1JbXCJOb1ZhbHVlXCJdLm9yZCkge1xuICAgICAgICAgICAgLy8gaWYgYm90aCB0eXBlcyBhcmUgdW5kZWZpbmVkIG9yIE51bGwgdGhleSBhcmUgZXF1YWxcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbXBGdW5jID0gVFlQRU9SRENPTVBBUkFUT1JbdHlwZTFdLmNvbXBGdW5jO1xuICAgICAgICBpZiAodHlwZW9mIGNvbXBGdW5jID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblwiKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBzYW1lIHR5cGUgYW5kIHR5cGUgaXMgZGVmaW5lZCBjb21wYXJlIHRoZSBpdGVtc1xuICAgICAgICByZXR1cm4gY29tcEZ1bmMoaXRlbTEsIGl0ZW0yKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcmRlckJ5Q29tcGFyYXRvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByComparator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderByDocumentProducerComparator: () => (/* binding */ OrderByDocumentProducerComparator)\n/* harmony export */ });\n// TODO: this smells funny\n/** @hidden */\nconst TYPEORDCOMPARATOR = Object.freeze({\n    NoValue: {\n        ord: 0,\n    },\n    undefined: {\n        ord: 1,\n    },\n    boolean: {\n        ord: 2,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        },\n    },\n    number: {\n        ord: 4,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        },\n    },\n    string: {\n        ord: 5,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        },\n    },\n});\n/** @hidden */\nclass OrderByDocumentProducerComparator {\n    sortOrder;\n    constructor(sortOrder) {\n        this.sortOrder = sortOrder;\n    } // TODO: This should be an enum\n    targetPartitionKeyRangeDocProdComparator(docProd1, docProd2) {\n        const a = docProd1.getTargetParitionKeyRange()[\"minInclusive\"];\n        const b = docProd2.getTargetParitionKeyRange()[\"minInclusive\"];\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    compare(docProd1, docProd2) {\n        // Need to check for split, since we don't want to dereference \"item\" of undefined / exception\n        if (docProd1.gotSplit()) {\n            return -1;\n        }\n        if (docProd2.gotSplit()) {\n            return 1;\n        }\n        const orderByItemsRes1 = this.getOrderByItems(docProd1.peekBufferedItems()[0]);\n        const orderByItemsRes2 = this.getOrderByItems(docProd2.peekBufferedItems()[0]);\n        // validate order by items and types\n        // TODO: once V1 order by on different types is fixed this need to change\n        this.validateOrderByItems(orderByItemsRes1, orderByItemsRes2);\n        // no async call in the for loop\n        for (let i = 0; i < orderByItemsRes1.length; i++) {\n            // compares the orderby items one by one\n            const compRes = this.compareOrderByItem(orderByItemsRes1[i], orderByItemsRes2[i]);\n            if (compRes !== 0) {\n                if (this.sortOrder[i] === \"Ascending\") {\n                    return compRes;\n                }\n                else if (this.sortOrder[i] === \"Descending\") {\n                    return -compRes;\n                }\n            }\n        }\n        return this.targetPartitionKeyRangeDocProdComparator(docProd1, docProd2);\n    }\n    // TODO: This smells funny\n    compareValue(item1, type1, item2, type2) {\n        if (type1 === \"object\" || type2 === \"object\") {\n            throw new Error(\"Tried to compare an object type\");\n        }\n        const type1Ord = TYPEORDCOMPARATOR[type1].ord;\n        const type2Ord = TYPEORDCOMPARATOR[type2].ord;\n        const typeCmp = type1Ord - type2Ord;\n        if (typeCmp !== 0) {\n            // if the types are different, use type ordinal\n            return typeCmp;\n        }\n        // both are of the same type\n        if (type1Ord === TYPEORDCOMPARATOR[\"undefined\"].ord ||\n            type1Ord === TYPEORDCOMPARATOR[\"NoValue\"].ord) {\n            // if both types are undefined or Null they are equal\n            return 0;\n        }\n        const compFunc = TYPEORDCOMPARATOR[type1].compFunc;\n        if (typeof compFunc === \"undefined\") {\n            throw new Error(\"Cannot find the comparison function\");\n        }\n        // same type and type is defined compare the items\n        return compFunc(item1, item2);\n    }\n    compareOrderByItem(orderByItem1, orderByItem2) {\n        const type1 = this.getType(orderByItem1);\n        const type2 = this.getType(orderByItem2);\n        return this.compareValue(orderByItem1[\"item\"], type1, orderByItem2[\"item\"], type2);\n    }\n    validateOrderByItems(res1, res2) {\n        if (res1.length !== res2.length) {\n            throw new Error(`Expected ${res1.length}, but got ${res2.length}.`);\n        }\n        if (res1.length !== this.sortOrder.length) {\n            throw new Error(\"orderByItems cannot have a different size than sort orders.\");\n        }\n        for (let i = 0; i < this.sortOrder.length; i++) {\n            const type1 = this.getType(res1[i]);\n            const type2 = this.getType(res2[i]);\n            if (type1 !== type2) {\n                throw new Error(`Expected ${type1}, but got ${type2}. Cannot execute cross partition order-by queries on mixed types. Consider filtering your query using IS_STRING or IS_NUMBER to get around this exception.`);\n            }\n        }\n    }\n    getType(orderByItem) {\n        // TODO: any item?\n        if (orderByItem === undefined || orderByItem.item === undefined) {\n            return \"NoValue\";\n        }\n        const type = typeof orderByItem.item;\n        if (TYPEORDCOMPARATOR[type] === undefined) {\n            throw new Error(`unrecognizable type ${type}`);\n        }\n        return type;\n    }\n    getOrderByItems(res) {\n        // TODO: any res?\n        return res[\"orderByItems\"];\n    }\n}\n//# sourceMappingURL=orderByDocumentProducerComparator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByQueryExecutionContext.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByQueryExecutionContext.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderByQueryExecutionContext: () => (/* binding */ OrderByQueryExecutionContext)\n/* harmony export */ });\n/* harmony import */ var _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./orderByDocumentProducerComparator.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByDocumentProducerComparator.js\");\n/* harmony import */ var _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parallelQueryExecutionContextBase.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContextBase.js\");\n\n\n/** @hidden */\nclass OrderByQueryExecutionContext extends _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_1__.ParallelQueryExecutionContextBase {\n    orderByComparator;\n    /**\n     * Provides the OrderByQueryExecutionContext.\n     * This class is capable of handling orderby queries and dervives from ParallelQueryExecutionContextBase.\n     *\n     * When handling a parallelized query, it instantiates one instance of\n     * DocumentProcuder per target partition key range and aggregates the result of each.\n     *\n     * @param clientContext - The service endpoint to use to create the client.\n     * @param collectionLink - The Collection Link\n     * @param options - Represents the feed options.\n     * @param partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @hidden\n     */\n    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo, correlatedActivityId) {\n        // Calling on base class constructor\n        super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo, correlatedActivityId);\n        this.orderByComparator = new _orderByDocumentProducerComparator_js__WEBPACK_IMPORTED_MODULE_0__.OrderByDocumentProducerComparator(this.sortOrders);\n    }\n    // Instance members are inherited\n    // Overriding documentProducerComparator for OrderByQueryExecutionContexts\n    /**\n     * Provides a Comparator for document producers which respects orderby sort order.\n     * @returns Comparator Function\n     * @hidden\n     */\n    documentProducerComparator(docProd1, docProd2) {\n        return this.orderByComparator.compare(docProd1, docProd2);\n    }\n    /**\n     * Fetches more results from the query execution context.\n     * @param diagnosticNode - Optional diagnostic node for tracing.\n     * @returns A promise that resolves to the fetched results.\n     * @hidden\n     */\n    async fetchMore(diagnosticNode) {\n        try {\n            await this.bufferDocumentProducers(diagnosticNode);\n            await this.fillBufferFromBufferQueue(true);\n            return this.drainBufferedItems();\n        }\n        catch (error) {\n            console.error(\"Error fetching more results:\", error);\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=orderByQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvb3JkZXJCeVF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkY7QUFDQTtBQUMzRjtBQUNPLDJDQUEyQyxvR0FBaUM7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxvR0FBaUM7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvb3JkZXJCeVF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5qcz80ZjhhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvciB9IGZyb20gXCIuL29yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvci5qc1wiO1xuaW1wb3J0IHsgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlIH0gZnJvbSBcIi4vcGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIE9yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQgZXh0ZW5kcyBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2Uge1xuICAgIG9yZGVyQnlDb21wYXJhdG9yO1xuICAgIC8qKlxuICAgICAqIFByb3ZpZGVzIHRoZSBPcmRlckJ5UXVlcnlFeGVjdXRpb25Db250ZXh0LlxuICAgICAqIFRoaXMgY2xhc3MgaXMgY2FwYWJsZSBvZiBoYW5kbGluZyBvcmRlcmJ5IHF1ZXJpZXMgYW5kIGRlcnZpdmVzIGZyb20gUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLlxuICAgICAqXG4gICAgICogV2hlbiBoYW5kbGluZyBhIHBhcmFsbGVsaXplZCBxdWVyeSwgaXQgaW5zdGFudGlhdGVzIG9uZSBpbnN0YW5jZSBvZlxuICAgICAqIERvY3VtZW50UHJvY3VkZXIgcGVyIHRhcmdldCBwYXJ0aXRpb24ga2V5IHJhbmdlIGFuZCBhZ2dyZWdhdGVzIHRoZSByZXN1bHQgb2YgZWFjaC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjbGllbnRDb250ZXh0IC0gVGhlIHNlcnZpY2UgZW5kcG9pbnQgdG8gdXNlIHRvIGNyZWF0ZSB0aGUgY2xpZW50LlxuICAgICAqIEBwYXJhbSBjb2xsZWN0aW9uTGluayAtIFRoZSBDb2xsZWN0aW9uIExpbmtcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFJlcHJlc2VudHMgdGhlIGZlZWQgb3B0aW9ucy5cbiAgICAgKiBAcGFyYW0gcGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8gLSBQYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mb1xuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnRDb250ZXh0LCBjb2xsZWN0aW9uTGluaywgcXVlcnksIG9wdGlvbnMsIHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvLCBjb3JyZWxhdGVkQWN0aXZpdHlJZCkge1xuICAgICAgICAvLyBDYWxsaW5nIG9uIGJhc2UgY2xhc3MgY29uc3RydWN0b3JcbiAgICAgICAgc3VwZXIoY2xpZW50Q29udGV4dCwgY29sbGVjdGlvbkxpbmssIHF1ZXJ5LCBvcHRpb25zLCBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbywgY29ycmVsYXRlZEFjdGl2aXR5SWQpO1xuICAgICAgICB0aGlzLm9yZGVyQnlDb21wYXJhdG9yID0gbmV3IE9yZGVyQnlEb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvcih0aGlzLnNvcnRPcmRlcnMpO1xuICAgIH1cbiAgICAvLyBJbnN0YW5jZSBtZW1iZXJzIGFyZSBpbmhlcml0ZWRcbiAgICAvLyBPdmVycmlkaW5nIGRvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yIGZvciBPcmRlckJ5UXVlcnlFeGVjdXRpb25Db250ZXh0c1xuICAgIC8qKlxuICAgICAqIFByb3ZpZGVzIGEgQ29tcGFyYXRvciBmb3IgZG9jdW1lbnQgcHJvZHVjZXJzIHdoaWNoIHJlc3BlY3RzIG9yZGVyYnkgc29ydCBvcmRlci5cbiAgICAgKiBAcmV0dXJucyBDb21wYXJhdG9yIEZ1bmN0aW9uXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGRvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yKGRvY1Byb2QxLCBkb2NQcm9kMikge1xuICAgICAgICByZXR1cm4gdGhpcy5vcmRlckJ5Q29tcGFyYXRvci5jb21wYXJlKGRvY1Byb2QxLCBkb2NQcm9kMik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZldGNoZXMgbW9yZSByZXN1bHRzIGZyb20gdGhlIHF1ZXJ5IGV4ZWN1dGlvbiBjb250ZXh0LlxuICAgICAqIEBwYXJhbSBkaWFnbm9zdGljTm9kZSAtIE9wdGlvbmFsIGRpYWdub3N0aWMgbm9kZSBmb3IgdHJhY2luZy5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgZmV0Y2hlZCByZXN1bHRzLlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhc3luYyBmZXRjaE1vcmUoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuYnVmZmVyRG9jdW1lbnRQcm9kdWNlcnMoZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5maWxsQnVmZmVyRnJvbUJ1ZmZlclF1ZXVlKHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZHJhaW5CdWZmZXJlZEl0ZW1zKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgbW9yZSByZXN1bHRzOlwiLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByQueryExecutionContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContext.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContext.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParallelQueryExecutionContext: () => (/* binding */ ParallelQueryExecutionContext)\n/* harmony export */ });\n/* harmony import */ var _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parallelQueryExecutionContextBase.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContextBase.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Provides the ParallelQueryExecutionContext.\n * This class is capable of handling parallelized queries and derives from ParallelQueryExecutionContextBase.\n * @hidden\n */\nclass ParallelQueryExecutionContext extends _parallelQueryExecutionContextBase_js__WEBPACK_IMPORTED_MODULE_0__.ParallelQueryExecutionContextBase {\n    // Instance members are inherited\n    // Overriding documentProducerComparator for ParallelQueryExecutionContexts\n    /**\n     * Provides a Comparator for document producers using the min value of the corresponding target partition.\n     * @returns Comparator Function\n     * @hidden\n     */\n    documentProducerComparator(docProd1, docProd2) {\n        return docProd1.generation - docProd2.generation;\n    }\n    /**\n     * Fetches more results from the query execution context.\n     * @param diagnosticNode - Optional diagnostic node for tracing.\n     * @returns A promise that resolves to the fetched results.\n     * @hidden\n     */\n    async fetchMore(diagnosticNode) {\n        try {\n            // Buffer document producers and fill buffer from the queue\n            await this.bufferDocumentProducers(diagnosticNode);\n            await this.fillBufferFromBufferQueue();\n            // Drain buffered items\n            return this.drainBufferedItems();\n        }\n        catch (error) {\n            // Handle any errors that occur during fetching\n            console.error(\"Error fetching more documents:\", error);\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=parallelQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvcGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzJGO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEMsb0dBQWlDO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9wYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5qcz82MDEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlIH0gZnJvbSBcIi4vcGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLmpzXCI7XG4vKipcbiAqIFByb3ZpZGVzIHRoZSBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dC5cbiAqIFRoaXMgY2xhc3MgaXMgY2FwYWJsZSBvZiBoYW5kbGluZyBwYXJhbGxlbGl6ZWQgcXVlcmllcyBhbmQgZGVyaXZlcyBmcm9tIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0IGV4dGVuZHMgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlIHtcbiAgICAvLyBJbnN0YW5jZSBtZW1iZXJzIGFyZSBpbmhlcml0ZWRcbiAgICAvLyBPdmVycmlkaW5nIGRvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yIGZvciBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dHNcbiAgICAvKipcbiAgICAgKiBQcm92aWRlcyBhIENvbXBhcmF0b3IgZm9yIGRvY3VtZW50IHByb2R1Y2VycyB1c2luZyB0aGUgbWluIHZhbHVlIG9mIHRoZSBjb3JyZXNwb25kaW5nIHRhcmdldCBwYXJ0aXRpb24uXG4gICAgICogQHJldHVybnMgQ29tcGFyYXRvciBGdW5jdGlvblxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBkb2N1bWVudFByb2R1Y2VyQ29tcGFyYXRvcihkb2NQcm9kMSwgZG9jUHJvZDIpIHtcbiAgICAgICAgcmV0dXJuIGRvY1Byb2QxLmdlbmVyYXRpb24gLSBkb2NQcm9kMi5nZW5lcmF0aW9uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGZXRjaGVzIG1vcmUgcmVzdWx0cyBmcm9tIHRoZSBxdWVyeSBleGVjdXRpb24gY29udGV4dC5cbiAgICAgKiBAcGFyYW0gZGlhZ25vc3RpY05vZGUgLSBPcHRpb25hbCBkaWFnbm9zdGljIG5vZGUgZm9yIHRyYWNpbmcuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGZldGNoZWQgcmVzdWx0cy5cbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgYXN5bmMgZmV0Y2hNb3JlKGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBCdWZmZXIgZG9jdW1lbnQgcHJvZHVjZXJzIGFuZCBmaWxsIGJ1ZmZlciBmcm9tIHRoZSBxdWV1ZVxuICAgICAgICAgICAgYXdhaXQgdGhpcy5idWZmZXJEb2N1bWVudFByb2R1Y2VycyhkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmZpbGxCdWZmZXJGcm9tQnVmZmVyUXVldWUoKTtcbiAgICAgICAgICAgIC8vIERyYWluIGJ1ZmZlcmVkIGl0ZW1zXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kcmFpbkJ1ZmZlcmVkSXRlbXMoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIEhhbmRsZSBhbnkgZXJyb3JzIHRoYXQgb2NjdXIgZHVyaW5nIGZldGNoaW5nXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgbW9yZSBkb2N1bWVudHM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContextBase.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContextBase.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParallelQueryExecutionContextBase: () => (/* binding */ ParallelQueryExecutionContextBase),\n/* harmony export */   ParallelQueryExecutionContextBaseStates: () => (/* binding */ ParallelQueryExecutionContextBaseStates)\n/* harmony export */ });\n/* harmony import */ var priorityqueuejs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! priorityqueuejs */ \"(rsc)/./node_modules/priorityqueuejs/index.js\");\n/* harmony import */ var semaphore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! semaphore */ \"(rsc)/./node_modules/semaphore/lib/semaphore.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _routing_QueryRange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../routing/QueryRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js\");\n/* harmony import */ var _routing_smartRoutingMapProvider_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../routing/smartRoutingMapProvider.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/smartRoutingMapProvider.js\");\n/* harmony import */ var _documentProducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./documentProducer.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/documentProducer.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n/** @hidden */\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_2__.createClientLogger)(\"parallelQueryExecutionContextBase\");\n/** @hidden */\nvar ParallelQueryExecutionContextBaseStates;\n(function (ParallelQueryExecutionContextBaseStates) {\n    ParallelQueryExecutionContextBaseStates[\"started\"] = \"started\";\n    ParallelQueryExecutionContextBaseStates[\"inProgress\"] = \"inProgress\";\n    ParallelQueryExecutionContextBaseStates[\"ended\"] = \"ended\";\n})(ParallelQueryExecutionContextBaseStates || (ParallelQueryExecutionContextBaseStates = {}));\n/** @hidden */\nclass ParallelQueryExecutionContextBase {\n    clientContext;\n    collectionLink;\n    query;\n    options;\n    partitionedQueryExecutionInfo;\n    correlatedActivityId;\n    err;\n    state;\n    static STATES = ParallelQueryExecutionContextBaseStates;\n    routingProvider;\n    sortOrders;\n    requestContinuation;\n    respHeaders;\n    unfilledDocumentProducersQueue;\n    bufferedDocumentProducersQueue;\n    // TODO: update type of buffer from any --> generic can be used here\n    buffer;\n    sem;\n    diagnosticNodeWrapper;\n    /**\n     * Provides the ParallelQueryExecutionContextBase.\n     * This is the base class that ParallelQueryExecutionContext and OrderByQueryExecutionContext will derive from.\n     *\n     * When handling a parallelized query, it instantiates one instance of\n     * DocumentProcuder per target partition key range and aggregates the result of each.\n     *\n     * @param clientContext - The service endpoint to use to create the client.\n     * @param collectionLink - The Collection Link\n     * @param options - Represents the feed options.\n     * @param partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @hidden\n     */\n    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo, correlatedActivityId) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.correlatedActivityId = correlatedActivityId;\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.correlatedActivityId = correlatedActivityId;\n        this.diagnosticNodeWrapper = {\n            consumed: false,\n            diagnosticNode: new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_8__.DiagnosticNodeInternal(clientContext.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_8__.DiagnosticNodeType.PARALLEL_QUERY_NODE, null),\n        };\n        this.diagnosticNodeWrapper.diagnosticNode.addData({ stateful: true });\n        this.err = undefined;\n        this.state = ParallelQueryExecutionContextBase.STATES.started;\n        this.routingProvider = new _routing_smartRoutingMapProvider_js__WEBPACK_IMPORTED_MODULE_5__.SmartRoutingMapProvider(this.clientContext);\n        this.sortOrders = this.partitionedQueryExecutionInfo.queryInfo.orderBy;\n        this.buffer = [];\n        this.requestContinuation = options ? options.continuationToken || options.continuation : null;\n        // response headers of undergoing operation\n        this.respHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_7__.getInitialHeader)();\n        // Make priority queue for documentProducers\n        this.unfilledDocumentProducersQueue = new priorityqueuejs__WEBPACK_IMPORTED_MODULE_0__((a, b) => a.generation - b.generation);\n        // The comparator is supplied by the derived class\n        this.bufferedDocumentProducersQueue = new priorityqueuejs__WEBPACK_IMPORTED_MODULE_0__((a, b) => this.documentProducerComparator(b, a));\n        // Creating the documentProducers\n        this.sem = semaphore__WEBPACK_IMPORTED_MODULE_1__(1);\n        const createDocumentProducersAndFillUpPriorityQueueFunc = async () => {\n            // ensure the lock is released after finishing up\n            try {\n                const targetPartitionRanges = await this._onTargetPartitionRanges();\n                const maxDegreeOfParallelism = options.maxDegreeOfParallelism === undefined || options.maxDegreeOfParallelism < 1\n                    ? targetPartitionRanges.length\n                    : Math.min(options.maxDegreeOfParallelism, targetPartitionRanges.length);\n                logger.info(\"Query starting against \" +\n                    targetPartitionRanges.length +\n                    \" ranges with parallelism of \" +\n                    maxDegreeOfParallelism);\n                let filteredPartitionKeyRanges = [];\n                // The document producers generated from filteredPartitionKeyRanges\n                const targetPartitionQueryExecutionContextList = [];\n                if (this.requestContinuation) {\n                    throw new Error(\"Continuation tokens are not yet supported for cross partition queries\");\n                }\n                else {\n                    filteredPartitionKeyRanges = targetPartitionRanges;\n                }\n                // Create one documentProducer for each partitionTargetRange\n                filteredPartitionKeyRanges.forEach((partitionTargetRange) => {\n                    // TODO: any partitionTargetRange\n                    // no async callback\n                    targetPartitionQueryExecutionContextList.push(this._createTargetPartitionQueryExecutionContext(partitionTargetRange, undefined));\n                });\n                // Fill up our priority queue with documentProducers\n                targetPartitionQueryExecutionContextList.forEach((documentProducer) => {\n                    // has async callback\n                    try {\n                        this.unfilledDocumentProducersQueue.enq(documentProducer);\n                    }\n                    catch (e) {\n                        this.err = e;\n                    }\n                });\n                this.sem.leave();\n            }\n            catch (err) {\n                this.err = err;\n                // release the lock\n                this.sem.leave();\n                return;\n            }\n        };\n        this.sem.take(createDocumentProducersAndFillUpPriorityQueueFunc);\n    }\n    _mergeWithActiveResponseHeaders(headers) {\n        (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_7__.mergeHeaders)(this.respHeaders, headers);\n    }\n    _getAndResetActiveResponseHeaders() {\n        const ret = this.respHeaders;\n        this.respHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_7__.getInitialHeader)();\n        return ret;\n    }\n    getDiagnosticNode() {\n        return this.diagnosticNodeWrapper.diagnosticNode;\n    }\n    async _onTargetPartitionRanges() {\n        // invokes the callback when the target partition ranges are ready\n        const parsedRanges = this.partitionedQueryExecutionInfo.queryRanges;\n        const queryRanges = parsedRanges.map((item) => _routing_QueryRange_js__WEBPACK_IMPORTED_MODULE_4__.QueryRange.parseFromDict(item));\n        return this.routingProvider.getOverlappingRanges(this.collectionLink, queryRanges, this.getDiagnosticNode());\n    }\n    /**\n     * Gets the replacement ranges for a partitionkeyrange that has been split\n     */\n    async _getReplacementPartitionKeyRanges(documentProducer, diagnosticNode) {\n        const partitionKeyRange = documentProducer.targetPartitionKeyRange;\n        // Download the new routing map\n        this.routingProvider = new _routing_smartRoutingMapProvider_js__WEBPACK_IMPORTED_MODULE_5__.SmartRoutingMapProvider(this.clientContext);\n        // Get the queryRange that relates to this partitionKeyRange\n        const queryRange = _routing_QueryRange_js__WEBPACK_IMPORTED_MODULE_4__.QueryRange.parsePartitionKeyRange(partitionKeyRange);\n        return this.routingProvider.getOverlappingRanges(this.collectionLink, [queryRange], diagnosticNode);\n    }\n    async _enqueueReplacementDocumentProducers(error, diagnosticNode, documentProducer) {\n        // Get the replacement ranges\n        const replacementPartitionKeyRanges = await this._getReplacementPartitionKeyRanges(documentProducer, diagnosticNode);\n        if (replacementPartitionKeyRanges.length === 0) {\n            throw error;\n        }\n        else if (replacementPartitionKeyRanges.length === 1) {\n            // Partition is gone due to Merge\n            // Create the replacement documentProducer with populateEpkRangeHeaders Flag set to true to set startEpk and endEpk headers\n            const replacementDocumentProducer = this._createTargetPartitionQueryExecutionContext(replacementPartitionKeyRanges[0], documentProducer.continuationToken, documentProducer.startEpk, documentProducer.endEpk, true);\n            this.unfilledDocumentProducersQueue.enq(replacementDocumentProducer);\n        }\n        else {\n            // Create the replacement documentProducers\n            const replacementDocumentProducers = [];\n            replacementPartitionKeyRanges.forEach((partitionKeyRange) => {\n                const queryRange = _routing_QueryRange_js__WEBPACK_IMPORTED_MODULE_4__.QueryRange.parsePartitionKeyRange(partitionKeyRange);\n                // Create replacment document producers with the parent's continuationToken\n                const replacementDocumentProducer = this._createTargetPartitionQueryExecutionContext(partitionKeyRange, documentProducer.continuationToken, queryRange.min, queryRange.max, false);\n                replacementDocumentProducers.push(replacementDocumentProducer);\n            });\n            // add document producers to the queue\n            replacementDocumentProducers.forEach((replacementDocumentProducer) => {\n                if (replacementDocumentProducer.hasMoreResults()) {\n                    this.unfilledDocumentProducersQueue.enq(replacementDocumentProducer);\n                }\n            });\n        }\n    }\n    static _needPartitionKeyRangeCacheRefresh(error) {\n        // TODO: any error\n        return (error.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.StatusCodes.Gone &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_3__.SubStatusCodes.PartitionKeyRangeGone);\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on the value of the continuation\n     * token or the elements remaining on the current batch in the QueryIterator.\n     * @returns true if there is other elements to process in the ParallelQueryExecutionContextBase.\n     */\n    hasMoreResults() {\n        return (!this.err &&\n            (this.buffer.length > 0 || this.state !== ParallelQueryExecutionContextBase.STATES.ended));\n    }\n    /**\n     * Creates target partition range Query Execution Context\n     */\n    _createTargetPartitionQueryExecutionContext(partitionKeyTargetRange, continuationToken, startEpk, endEpk, populateEpkRangeHeaders) {\n        let rewrittenQuery = this.partitionedQueryExecutionInfo.queryInfo.rewrittenQuery;\n        let sqlQuerySpec;\n        const query = this.query;\n        if (typeof query === \"string\") {\n            sqlQuerySpec = { query };\n        }\n        else {\n            sqlQuerySpec = query;\n        }\n        const formatPlaceHolder = \"{documentdb-formattableorderbyquery-filter}\";\n        if (rewrittenQuery) {\n            sqlQuerySpec = JSON.parse(JSON.stringify(sqlQuerySpec));\n            // We hardcode the formattable filter to true for now\n            rewrittenQuery = rewrittenQuery.replace(formatPlaceHolder, \"true\");\n            sqlQuerySpec[\"query\"] = rewrittenQuery;\n        }\n        const options = { ...this.options };\n        options.continuationToken = continuationToken;\n        return new _documentProducer_js__WEBPACK_IMPORTED_MODULE_6__.DocumentProducer(this.clientContext, this.collectionLink, sqlQuerySpec, partitionKeyTargetRange, options, this.correlatedActivityId, startEpk, endEpk, populateEpkRangeHeaders);\n    }\n    async drainBufferedItems() {\n        return new Promise((resolve, reject) => {\n            this.sem.take(() => {\n                if (this.err) {\n                    // if there is a prior error return error\n                    this.sem.leave();\n                    this.err.headers = this._getAndResetActiveResponseHeaders();\n                    reject(this.err);\n                    return;\n                }\n                // return undefined if there is no more results\n                if (this.buffer.length === 0) {\n                    this.sem.leave();\n                    return resolve({\n                        result: this.state === ParallelQueryExecutionContextBase.STATES.ended ? undefined : [],\n                        headers: this._getAndResetActiveResponseHeaders(),\n                    });\n                }\n                // draing the entire buffer object and return that in result of return object\n                const bufferedResults = this.buffer;\n                this.buffer = [];\n                // release the lock before returning\n                this.sem.leave();\n                // invoke the callback on the item\n                return resolve({\n                    result: bufferedResults,\n                    headers: this._getAndResetActiveResponseHeaders(),\n                });\n            });\n        });\n    }\n    /**\n     * Buffers document producers based on the maximum degree of parallelism.\n     * Moves document producers from the unfilled queue to the buffered queue.\n     * @param diagnosticNode - The diagnostic node for logging and tracing.\n     * @returns A promise that resolves when buffering is complete.\n     */\n    async bufferDocumentProducers(diagnosticNode) {\n        return new Promise((resolve, reject) => {\n            this.sem.take(async () => {\n                if (this.err) {\n                    this.sem.leave();\n                    reject(this.err);\n                    return;\n                }\n                this.updateStates(this.err);\n                if (this.state === ParallelQueryExecutionContextBase.STATES.ended) {\n                    this.sem.leave();\n                    resolve();\n                    return;\n                }\n                if (this.unfilledDocumentProducersQueue.size() === 0) {\n                    this.sem.leave();\n                    resolve();\n                    return;\n                }\n                try {\n                    const maxDegreeOfParallelism = this.options.maxDegreeOfParallelism === undefined ||\n                        this.options.maxDegreeOfParallelism < 1\n                        ? this.unfilledDocumentProducersQueue.size()\n                        : Math.min(this.options.maxDegreeOfParallelism, this.unfilledDocumentProducersQueue.size());\n                    const documentProducers = [];\n                    while (documentProducers.length < maxDegreeOfParallelism &&\n                        this.unfilledDocumentProducersQueue.size() > 0) {\n                        let documentProducer;\n                        try {\n                            documentProducer = this.unfilledDocumentProducersQueue.deq();\n                        }\n                        catch (e) {\n                            this.err = e;\n                            this.err.headers = this._getAndResetActiveResponseHeaders();\n                            reject(this.err);\n                            return;\n                        }\n                        documentProducers.push(documentProducer);\n                    }\n                    const bufferDocumentProducer = async (documentProducer) => {\n                        try {\n                            const headers = await documentProducer.bufferMore(diagnosticNode);\n                            this._mergeWithActiveResponseHeaders(headers);\n                            // if buffer of document producer is filled, add it to the buffered document producers queue\n                            const nextItem = documentProducer.peakNextItem();\n                            if (nextItem !== undefined) {\n                                this.bufferedDocumentProducersQueue.enq(documentProducer);\n                            }\n                            else if (documentProducer.hasMoreResults()) {\n                                this.unfilledDocumentProducersQueue.enq(documentProducer);\n                            }\n                        }\n                        catch (err) {\n                            if (ParallelQueryExecutionContextBase._needPartitionKeyRangeCacheRefresh(err)) {\n                                // We want the document producer enqueued\n                                // So that later parts of the code can repair the execution context\n                                // refresh the partition key ranges and ctreate new document producers and add it to the queue\n                                await this._enqueueReplacementDocumentProducers(err, diagnosticNode, documentProducer);\n                                resolve();\n                            }\n                            else {\n                                this.err = err;\n                                this.err.headers = this._getAndResetActiveResponseHeaders();\n                                reject(err);\n                            }\n                        }\n                    };\n                    try {\n                        await Promise.all(documentProducers.map((producer) => bufferDocumentProducer(producer)));\n                    }\n                    catch (err) {\n                        this.err = err;\n                        this.err.headers = this._getAndResetActiveResponseHeaders();\n                        reject(err);\n                        return;\n                    }\n                    resolve();\n                }\n                catch (err) {\n                    this.err = err;\n                    this.err.headers = this._getAndResetActiveResponseHeaders();\n                    reject(err);\n                }\n                finally {\n                    this.sem.leave();\n                }\n            });\n        });\n    }\n    /**\n     * Drains the buffer of filled document producers and appends their items to the main buffer.\n     * @param isOrderBy - Indicates if the query is an order by query.\n     * @returns A promise that resolves when the buffer is filled.\n     */\n    async fillBufferFromBufferQueue(isOrderBy = false) {\n        return new Promise((resolve, reject) => {\n            this.sem.take(async () => {\n                if (this.err) {\n                    // if there is a prior error return error\n                    this.sem.leave();\n                    this.err.headers = this._getAndResetActiveResponseHeaders();\n                    reject(this.err);\n                    return;\n                }\n                if (this.state === ParallelQueryExecutionContextBase.STATES.ended ||\n                    this.bufferedDocumentProducersQueue.size() === 0) {\n                    this.sem.leave();\n                    resolve();\n                    return;\n                }\n                try {\n                    if (isOrderBy) {\n                        while (this.unfilledDocumentProducersQueue.isEmpty() &&\n                            this.bufferedDocumentProducersQueue.size() > 0) {\n                            const documentProducer = this.bufferedDocumentProducersQueue.deq();\n                            const { result, headers } = await documentProducer.fetchNextItem();\n                            this._mergeWithActiveResponseHeaders(headers);\n                            if (result) {\n                                this.buffer.push(result);\n                            }\n                            if (documentProducer.peakNextItem() !== undefined) {\n                                this.bufferedDocumentProducersQueue.enq(documentProducer);\n                            }\n                            else if (documentProducer.hasMoreResults()) {\n                                this.unfilledDocumentProducersQueue.enq(documentProducer);\n                            }\n                            else {\n                                // no more results in document producer\n                            }\n                        }\n                    }\n                    else {\n                        while (this.bufferedDocumentProducersQueue.size() > 0) {\n                            const documentProducer = this.bufferedDocumentProducersQueue.deq();\n                            const { result, headers } = await documentProducer.fetchBufferedItems();\n                            this._mergeWithActiveResponseHeaders(headers);\n                            if (result) {\n                                this.buffer.push(...result);\n                            }\n                            if (documentProducer.hasMoreResults()) {\n                                this.unfilledDocumentProducersQueue.enq(documentProducer);\n                            }\n                        }\n                    }\n                    this.updateStates(this.err);\n                }\n                catch (err) {\n                    this.err = err;\n                    this.err.headers = this._getAndResetActiveResponseHeaders();\n                    reject(this.err);\n                    return;\n                }\n                finally {\n                    // release the lock before returning\n                    this.sem.leave();\n                }\n                resolve();\n                return;\n            });\n        });\n    }\n    updateStates(error) {\n        if (error) {\n            this.err = error;\n            this.state = ParallelQueryExecutionContextBase.STATES.ended;\n            return;\n        }\n        if (this.state === ParallelQueryExecutionContextBase.STATES.started) {\n            this.state = ParallelQueryExecutionContextBase.STATES.inProgress;\n        }\n        const hasNoActiveProducers = this.unfilledDocumentProducersQueue.size() === 0 &&\n            this.bufferedDocumentProducersQueue.size() === 0;\n        if (hasNoActiveProducers) {\n            this.state = ParallelQueryExecutionContextBase.STATES.ended;\n        }\n    }\n}\n//# sourceMappingURL=parallelQueryExecutionContextBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeUV4ZWN1dGlvbkNvbnRleHQvcGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM0QztBQUNWO0FBQ2lCO0FBQ29CO0FBQ2pCO0FBQzBCO0FBQ3ZCO0FBQ1M7QUFDcUM7QUFDdkc7QUFDQSxlQUFlLGlFQUFrQjtBQUNqQztBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBGQUEwRjtBQUMzRjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywwRkFBc0IsZ0NBQWdDLHNGQUFrQjtBQUN4RztBQUNBLDREQUE0RCxnQkFBZ0I7QUFDNUU7QUFDQTtBQUNBLG1DQUFtQyx3RkFBdUI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUVBQWdCO0FBQzNDO0FBQ0Esa0RBQWtELDRDQUFhO0FBQy9EO0FBQ0Esa0RBQWtELDRDQUFhO0FBQy9EO0FBQ0EsbUJBQW1CLHNDQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDZEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpRUFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCw4REFBVTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHdGQUF1QjtBQUMxRDtBQUNBLDJCQUEyQiw4REFBVTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsOERBQVU7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsK0RBQVc7QUFDMUM7QUFDQSxtQ0FBbUMsa0VBQWM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDBDQUEwQztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQSxtQkFBbUIsa0VBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxrQkFBa0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGtCQUFrQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9wYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2UuanM/YzVkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCBQcmlvcml0eVF1ZXVlIGZyb20gXCJwcmlvcml0eXF1ZXVlanNcIjtcbmltcG9ydCBzZW1hcGhvcmUgZnJvbSBcInNlbWFwaG9yZVwiO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIkBhenVyZS9sb2dnZXJcIjtcbmltcG9ydCB7IFN0YXR1c0NvZGVzLCBTdWJTdGF0dXNDb2RlcyB9IGZyb20gXCIuLi9jb21tb24vc3RhdHVzQ29kZXMuanNcIjtcbmltcG9ydCB7IFF1ZXJ5UmFuZ2UgfSBmcm9tIFwiLi4vcm91dGluZy9RdWVyeVJhbmdlLmpzXCI7XG5pbXBvcnQgeyBTbWFydFJvdXRpbmdNYXBQcm92aWRlciB9IGZyb20gXCIuLi9yb3V0aW5nL3NtYXJ0Um91dGluZ01hcFByb3ZpZGVyLmpzXCI7XG5pbXBvcnQgeyBEb2N1bWVudFByb2R1Y2VyIH0gZnJvbSBcIi4vZG9jdW1lbnRQcm9kdWNlci5qc1wiO1xuaW1wb3J0IHsgZ2V0SW5pdGlhbEhlYWRlciwgbWVyZ2VIZWFkZXJzIH0gZnJvbSBcIi4vaGVhZGVyVXRpbHMuanNcIjtcbmltcG9ydCB7IERpYWdub3N0aWNOb2RlSW50ZXJuYWwsIERpYWdub3N0aWNOb2RlVHlwZSwgfSBmcm9tIFwiLi4vZGlhZ25vc3RpY3MvRGlhZ25vc3RpY05vZGVJbnRlcm5hbC5qc1wiO1xuLyoqIEBoaWRkZW4gKi9cbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcInBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZVwiKTtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZVN0YXRlcztcbihmdW5jdGlvbiAoUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlU3RhdGVzKSB7XG4gICAgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlU3RhdGVzW1wic3RhcnRlZFwiXSA9IFwic3RhcnRlZFwiO1xuICAgIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZVN0YXRlc1tcImluUHJvZ3Jlc3NcIl0gPSBcImluUHJvZ3Jlc3NcIjtcbiAgICBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2VTdGF0ZXNbXCJlbmRlZFwiXSA9IFwiZW5kZWRcIjtcbn0pKFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZVN0YXRlcyB8fCAoUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlU3RhdGVzID0ge30pKTtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlIHtcbiAgICBjbGllbnRDb250ZXh0O1xuICAgIGNvbGxlY3Rpb25MaW5rO1xuICAgIHF1ZXJ5O1xuICAgIG9wdGlvbnM7XG4gICAgcGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm87XG4gICAgY29ycmVsYXRlZEFjdGl2aXR5SWQ7XG4gICAgZXJyO1xuICAgIHN0YXRlO1xuICAgIHN0YXRpYyBTVEFURVMgPSBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2VTdGF0ZXM7XG4gICAgcm91dGluZ1Byb3ZpZGVyO1xuICAgIHNvcnRPcmRlcnM7XG4gICAgcmVxdWVzdENvbnRpbnVhdGlvbjtcbiAgICByZXNwSGVhZGVycztcbiAgICB1bmZpbGxlZERvY3VtZW50UHJvZHVjZXJzUXVldWU7XG4gICAgYnVmZmVyZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlO1xuICAgIC8vIFRPRE86IHVwZGF0ZSB0eXBlIG9mIGJ1ZmZlciBmcm9tIGFueSAtLT4gZ2VuZXJpYyBjYW4gYmUgdXNlZCBoZXJlXG4gICAgYnVmZmVyO1xuICAgIHNlbTtcbiAgICBkaWFnbm9zdGljTm9kZVdyYXBwZXI7XG4gICAgLyoqXG4gICAgICogUHJvdmlkZXMgdGhlIFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5cbiAgICAgKiBUaGlzIGlzIHRoZSBiYXNlIGNsYXNzIHRoYXQgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHQgYW5kIE9yZGVyQnlRdWVyeUV4ZWN1dGlvbkNvbnRleHQgd2lsbCBkZXJpdmUgZnJvbS5cbiAgICAgKlxuICAgICAqIFdoZW4gaGFuZGxpbmcgYSBwYXJhbGxlbGl6ZWQgcXVlcnksIGl0IGluc3RhbnRpYXRlcyBvbmUgaW5zdGFuY2Ugb2ZcbiAgICAgKiBEb2N1bWVudFByb2N1ZGVyIHBlciB0YXJnZXQgcGFydGl0aW9uIGtleSByYW5nZSBhbmQgYWdncmVnYXRlcyB0aGUgcmVzdWx0IG9mIGVhY2guXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY2xpZW50Q29udGV4dCAtIFRoZSBzZXJ2aWNlIGVuZHBvaW50IHRvIHVzZSB0byBjcmVhdGUgdGhlIGNsaWVudC5cbiAgICAgKiBAcGFyYW0gY29sbGVjdGlvbkxpbmsgLSBUaGUgQ29sbGVjdGlvbiBMaW5rXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBSZXByZXNlbnRzIHRoZSBmZWVkIG9wdGlvbnMuXG4gICAgICogQHBhcmFtIHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvIC0gUGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm9cbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2xpZW50Q29udGV4dCwgY29sbGVjdGlvbkxpbmssIHF1ZXJ5LCBvcHRpb25zLCBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbywgY29ycmVsYXRlZEFjdGl2aXR5SWQpIHtcbiAgICAgICAgdGhpcy5jbGllbnRDb250ZXh0ID0gY2xpZW50Q29udGV4dDtcbiAgICAgICAgdGhpcy5jb2xsZWN0aW9uTGluayA9IGNvbGxlY3Rpb25MaW5rO1xuICAgICAgICB0aGlzLnF1ZXJ5ID0gcXVlcnk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMucGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8gPSBwYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbztcbiAgICAgICAgdGhpcy5jb3JyZWxhdGVkQWN0aXZpdHlJZCA9IGNvcnJlbGF0ZWRBY3Rpdml0eUlkO1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgICAgICB0aGlzLmNvbGxlY3Rpb25MaW5rID0gY29sbGVjdGlvbkxpbms7XG4gICAgICAgIHRoaXMucXVlcnkgPSBxdWVyeTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5wYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mbyA9IHBhcnRpdGlvbmVkUXVlcnlFeGVjdXRpb25JbmZvO1xuICAgICAgICB0aGlzLmNvcnJlbGF0ZWRBY3Rpdml0eUlkID0gY29ycmVsYXRlZEFjdGl2aXR5SWQ7XG4gICAgICAgIHRoaXMuZGlhZ25vc3RpY05vZGVXcmFwcGVyID0ge1xuICAgICAgICAgICAgY29uc3VtZWQ6IGZhbHNlLFxuICAgICAgICAgICAgZGlhZ25vc3RpY05vZGU6IG5ldyBEaWFnbm9zdGljTm9kZUludGVybmFsKGNsaWVudENvbnRleHQuZGlhZ25vc3RpY0xldmVsLCBEaWFnbm9zdGljTm9kZVR5cGUuUEFSQUxMRUxfUVVFUllfTk9ERSwgbnVsbCksXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZGlhZ25vc3RpY05vZGVXcmFwcGVyLmRpYWdub3N0aWNOb2RlLmFkZERhdGEoeyBzdGF0ZWZ1bDogdHJ1ZSB9KTtcbiAgICAgICAgdGhpcy5lcnIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2UuU1RBVEVTLnN0YXJ0ZWQ7XG4gICAgICAgIHRoaXMucm91dGluZ1Byb3ZpZGVyID0gbmV3IFNtYXJ0Um91dGluZ01hcFByb3ZpZGVyKHRoaXMuY2xpZW50Q29udGV4dCk7XG4gICAgICAgIHRoaXMuc29ydE9yZGVycyA9IHRoaXMucGFydGl0aW9uZWRRdWVyeUV4ZWN1dGlvbkluZm8ucXVlcnlJbmZvLm9yZGVyQnk7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gW107XG4gICAgICAgIHRoaXMucmVxdWVzdENvbnRpbnVhdGlvbiA9IG9wdGlvbnMgPyBvcHRpb25zLmNvbnRpbnVhdGlvblRva2VuIHx8IG9wdGlvbnMuY29udGludWF0aW9uIDogbnVsbDtcbiAgICAgICAgLy8gcmVzcG9uc2UgaGVhZGVycyBvZiB1bmRlcmdvaW5nIG9wZXJhdGlvblxuICAgICAgICB0aGlzLnJlc3BIZWFkZXJzID0gZ2V0SW5pdGlhbEhlYWRlcigpO1xuICAgICAgICAvLyBNYWtlIHByaW9yaXR5IHF1ZXVlIGZvciBkb2N1bWVudFByb2R1Y2Vyc1xuICAgICAgICB0aGlzLnVuZmlsbGVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZSA9IG5ldyBQcmlvcml0eVF1ZXVlKChhLCBiKSA9PiBhLmdlbmVyYXRpb24gLSBiLmdlbmVyYXRpb24pO1xuICAgICAgICAvLyBUaGUgY29tcGFyYXRvciBpcyBzdXBwbGllZCBieSB0aGUgZGVyaXZlZCBjbGFzc1xuICAgICAgICB0aGlzLmJ1ZmZlcmVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZSA9IG5ldyBQcmlvcml0eVF1ZXVlKChhLCBiKSA9PiB0aGlzLmRvY3VtZW50UHJvZHVjZXJDb21wYXJhdG9yKGIsIGEpKTtcbiAgICAgICAgLy8gQ3JlYXRpbmcgdGhlIGRvY3VtZW50UHJvZHVjZXJzXG4gICAgICAgIHRoaXMuc2VtID0gc2VtYXBob3JlKDEpO1xuICAgICAgICBjb25zdCBjcmVhdGVEb2N1bWVudFByb2R1Y2Vyc0FuZEZpbGxVcFByaW9yaXR5UXVldWVGdW5jID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgLy8gZW5zdXJlIHRoZSBsb2NrIGlzIHJlbGVhc2VkIGFmdGVyIGZpbmlzaGluZyB1cFxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXRQYXJ0aXRpb25SYW5nZXMgPSBhd2FpdCB0aGlzLl9vblRhcmdldFBhcnRpdGlvblJhbmdlcygpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1heERlZ3JlZU9mUGFyYWxsZWxpc20gPSBvcHRpb25zLm1heERlZ3JlZU9mUGFyYWxsZWxpc20gPT09IHVuZGVmaW5lZCB8fCBvcHRpb25zLm1heERlZ3JlZU9mUGFyYWxsZWxpc20gPCAxXG4gICAgICAgICAgICAgICAgICAgID8gdGFyZ2V0UGFydGl0aW9uUmFuZ2VzLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICA6IE1hdGgubWluKG9wdGlvbnMubWF4RGVncmVlT2ZQYXJhbGxlbGlzbSwgdGFyZ2V0UGFydGl0aW9uUmFuZ2VzLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oXCJRdWVyeSBzdGFydGluZyBhZ2FpbnN0IFwiICtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0UGFydGl0aW9uUmFuZ2VzLmxlbmd0aCArXG4gICAgICAgICAgICAgICAgICAgIFwiIHJhbmdlcyB3aXRoIHBhcmFsbGVsaXNtIG9mIFwiICtcbiAgICAgICAgICAgICAgICAgICAgbWF4RGVncmVlT2ZQYXJhbGxlbGlzbSk7XG4gICAgICAgICAgICAgICAgbGV0IGZpbHRlcmVkUGFydGl0aW9uS2V5UmFuZ2VzID0gW107XG4gICAgICAgICAgICAgICAgLy8gVGhlIGRvY3VtZW50IHByb2R1Y2VycyBnZW5lcmF0ZWQgZnJvbSBmaWx0ZXJlZFBhcnRpdGlvbktleVJhbmdlc1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldFBhcnRpdGlvblF1ZXJ5RXhlY3V0aW9uQ29udGV4dExpc3QgPSBbXTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZXF1ZXN0Q29udGludWF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbnRpbnVhdGlvbiB0b2tlbnMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkIGZvciBjcm9zcyBwYXJ0aXRpb24gcXVlcmllc1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkUGFydGl0aW9uS2V5UmFuZ2VzID0gdGFyZ2V0UGFydGl0aW9uUmFuZ2VzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgb25lIGRvY3VtZW50UHJvZHVjZXIgZm9yIGVhY2ggcGFydGl0aW9uVGFyZ2V0UmFuZ2VcbiAgICAgICAgICAgICAgICBmaWx0ZXJlZFBhcnRpdGlvbktleVJhbmdlcy5mb3JFYWNoKChwYXJ0aXRpb25UYXJnZXRSYW5nZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBhbnkgcGFydGl0aW9uVGFyZ2V0UmFuZ2VcbiAgICAgICAgICAgICAgICAgICAgLy8gbm8gYXN5bmMgY2FsbGJhY2tcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0UGFydGl0aW9uUXVlcnlFeGVjdXRpb25Db250ZXh0TGlzdC5wdXNoKHRoaXMuX2NyZWF0ZVRhcmdldFBhcnRpdGlvblF1ZXJ5RXhlY3V0aW9uQ29udGV4dChwYXJ0aXRpb25UYXJnZXRSYW5nZSwgdW5kZWZpbmVkKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgLy8gRmlsbCB1cCBvdXIgcHJpb3JpdHkgcXVldWUgd2l0aCBkb2N1bWVudFByb2R1Y2Vyc1xuICAgICAgICAgICAgICAgIHRhcmdldFBhcnRpdGlvblF1ZXJ5RXhlY3V0aW9uQ29udGV4dExpc3QuZm9yRWFjaCgoZG9jdW1lbnRQcm9kdWNlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyBoYXMgYXN5bmMgY2FsbGJhY2tcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLmVucShkb2N1bWVudFByb2R1Y2VyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnIgPSBlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZW0ubGVhdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVyciA9IGVycjtcbiAgICAgICAgICAgICAgICAvLyByZWxlYXNlIHRoZSBsb2NrXG4gICAgICAgICAgICAgICAgdGhpcy5zZW0ubGVhdmUoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2VtLnRha2UoY3JlYXRlRG9jdW1lbnRQcm9kdWNlcnNBbmRGaWxsVXBQcmlvcml0eVF1ZXVlRnVuYyk7XG4gICAgfVxuICAgIF9tZXJnZVdpdGhBY3RpdmVSZXNwb25zZUhlYWRlcnMoaGVhZGVycykge1xuICAgICAgICBtZXJnZUhlYWRlcnModGhpcy5yZXNwSGVhZGVycywgaGVhZGVycyk7XG4gICAgfVxuICAgIF9nZXRBbmRSZXNldEFjdGl2ZVJlc3BvbnNlSGVhZGVycygpIHtcbiAgICAgICAgY29uc3QgcmV0ID0gdGhpcy5yZXNwSGVhZGVycztcbiAgICAgICAgdGhpcy5yZXNwSGVhZGVycyA9IGdldEluaXRpYWxIZWFkZXIoKTtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG4gICAgZ2V0RGlhZ25vc3RpY05vZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRpYWdub3N0aWNOb2RlV3JhcHBlci5kaWFnbm9zdGljTm9kZTtcbiAgICB9XG4gICAgYXN5bmMgX29uVGFyZ2V0UGFydGl0aW9uUmFuZ2VzKCkge1xuICAgICAgICAvLyBpbnZva2VzIHRoZSBjYWxsYmFjayB3aGVuIHRoZSB0YXJnZXQgcGFydGl0aW9uIHJhbmdlcyBhcmUgcmVhZHlcbiAgICAgICAgY29uc3QgcGFyc2VkUmFuZ2VzID0gdGhpcy5wYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mby5xdWVyeVJhbmdlcztcbiAgICAgICAgY29uc3QgcXVlcnlSYW5nZXMgPSBwYXJzZWRSYW5nZXMubWFwKChpdGVtKSA9PiBRdWVyeVJhbmdlLnBhcnNlRnJvbURpY3QoaXRlbSkpO1xuICAgICAgICByZXR1cm4gdGhpcy5yb3V0aW5nUHJvdmlkZXIuZ2V0T3ZlcmxhcHBpbmdSYW5nZXModGhpcy5jb2xsZWN0aW9uTGluaywgcXVlcnlSYW5nZXMsIHRoaXMuZ2V0RGlhZ25vc3RpY05vZGUoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHJlcGxhY2VtZW50IHJhbmdlcyBmb3IgYSBwYXJ0aXRpb25rZXlyYW5nZSB0aGF0IGhhcyBiZWVuIHNwbGl0XG4gICAgICovXG4gICAgYXN5bmMgX2dldFJlcGxhY2VtZW50UGFydGl0aW9uS2V5UmFuZ2VzKGRvY3VtZW50UHJvZHVjZXIsIGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIGNvbnN0IHBhcnRpdGlvbktleVJhbmdlID0gZG9jdW1lbnRQcm9kdWNlci50YXJnZXRQYXJ0aXRpb25LZXlSYW5nZTtcbiAgICAgICAgLy8gRG93bmxvYWQgdGhlIG5ldyByb3V0aW5nIG1hcFxuICAgICAgICB0aGlzLnJvdXRpbmdQcm92aWRlciA9IG5ldyBTbWFydFJvdXRpbmdNYXBQcm92aWRlcih0aGlzLmNsaWVudENvbnRleHQpO1xuICAgICAgICAvLyBHZXQgdGhlIHF1ZXJ5UmFuZ2UgdGhhdCByZWxhdGVzIHRvIHRoaXMgcGFydGl0aW9uS2V5UmFuZ2VcbiAgICAgICAgY29uc3QgcXVlcnlSYW5nZSA9IFF1ZXJ5UmFuZ2UucGFyc2VQYXJ0aXRpb25LZXlSYW5nZShwYXJ0aXRpb25LZXlSYW5nZSk7XG4gICAgICAgIHJldHVybiB0aGlzLnJvdXRpbmdQcm92aWRlci5nZXRPdmVybGFwcGluZ1Jhbmdlcyh0aGlzLmNvbGxlY3Rpb25MaW5rLCBbcXVlcnlSYW5nZV0sIGRpYWdub3N0aWNOb2RlKTtcbiAgICB9XG4gICAgYXN5bmMgX2VucXVldWVSZXBsYWNlbWVudERvY3VtZW50UHJvZHVjZXJzKGVycm9yLCBkaWFnbm9zdGljTm9kZSwgZG9jdW1lbnRQcm9kdWNlcikge1xuICAgICAgICAvLyBHZXQgdGhlIHJlcGxhY2VtZW50IHJhbmdlc1xuICAgICAgICBjb25zdCByZXBsYWNlbWVudFBhcnRpdGlvbktleVJhbmdlcyA9IGF3YWl0IHRoaXMuX2dldFJlcGxhY2VtZW50UGFydGl0aW9uS2V5UmFuZ2VzKGRvY3VtZW50UHJvZHVjZXIsIGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgaWYgKHJlcGxhY2VtZW50UGFydGl0aW9uS2V5UmFuZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocmVwbGFjZW1lbnRQYXJ0aXRpb25LZXlSYW5nZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAvLyBQYXJ0aXRpb24gaXMgZ29uZSBkdWUgdG8gTWVyZ2VcbiAgICAgICAgICAgIC8vIENyZWF0ZSB0aGUgcmVwbGFjZW1lbnQgZG9jdW1lbnRQcm9kdWNlciB3aXRoIHBvcHVsYXRlRXBrUmFuZ2VIZWFkZXJzIEZsYWcgc2V0IHRvIHRydWUgdG8gc2V0IHN0YXJ0RXBrIGFuZCBlbmRFcGsgaGVhZGVyc1xuICAgICAgICAgICAgY29uc3QgcmVwbGFjZW1lbnREb2N1bWVudFByb2R1Y2VyID0gdGhpcy5fY3JlYXRlVGFyZ2V0UGFydGl0aW9uUXVlcnlFeGVjdXRpb25Db250ZXh0KHJlcGxhY2VtZW50UGFydGl0aW9uS2V5UmFuZ2VzWzBdLCBkb2N1bWVudFByb2R1Y2VyLmNvbnRpbnVhdGlvblRva2VuLCBkb2N1bWVudFByb2R1Y2VyLnN0YXJ0RXBrLCBkb2N1bWVudFByb2R1Y2VyLmVuZEVwaywgdHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLnVuZmlsbGVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZS5lbnEocmVwbGFjZW1lbnREb2N1bWVudFByb2R1Y2VyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIENyZWF0ZSB0aGUgcmVwbGFjZW1lbnQgZG9jdW1lbnRQcm9kdWNlcnNcbiAgICAgICAgICAgIGNvbnN0IHJlcGxhY2VtZW50RG9jdW1lbnRQcm9kdWNlcnMgPSBbXTtcbiAgICAgICAgICAgIHJlcGxhY2VtZW50UGFydGl0aW9uS2V5UmFuZ2VzLmZvckVhY2goKHBhcnRpdGlvbktleVJhbmdlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcXVlcnlSYW5nZSA9IFF1ZXJ5UmFuZ2UucGFyc2VQYXJ0aXRpb25LZXlSYW5nZShwYXJ0aXRpb25LZXlSYW5nZSk7XG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIHJlcGxhY21lbnQgZG9jdW1lbnQgcHJvZHVjZXJzIHdpdGggdGhlIHBhcmVudCdzIGNvbnRpbnVhdGlvblRva2VuXG4gICAgICAgICAgICAgICAgY29uc3QgcmVwbGFjZW1lbnREb2N1bWVudFByb2R1Y2VyID0gdGhpcy5fY3JlYXRlVGFyZ2V0UGFydGl0aW9uUXVlcnlFeGVjdXRpb25Db250ZXh0KHBhcnRpdGlvbktleVJhbmdlLCBkb2N1bWVudFByb2R1Y2VyLmNvbnRpbnVhdGlvblRva2VuLCBxdWVyeVJhbmdlLm1pbiwgcXVlcnlSYW5nZS5tYXgsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICByZXBsYWNlbWVudERvY3VtZW50UHJvZHVjZXJzLnB1c2gocmVwbGFjZW1lbnREb2N1bWVudFByb2R1Y2VyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gYWRkIGRvY3VtZW50IHByb2R1Y2VycyB0byB0aGUgcXVldWVcbiAgICAgICAgICAgIHJlcGxhY2VtZW50RG9jdW1lbnRQcm9kdWNlcnMuZm9yRWFjaCgocmVwbGFjZW1lbnREb2N1bWVudFByb2R1Y2VyKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcGxhY2VtZW50RG9jdW1lbnRQcm9kdWNlci5oYXNNb3JlUmVzdWx0cygpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLmVucShyZXBsYWNlbWVudERvY3VtZW50UHJvZHVjZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBfbmVlZFBhcnRpdGlvbktleVJhbmdlQ2FjaGVSZWZyZXNoKGVycm9yKSB7XG4gICAgICAgIC8vIFRPRE86IGFueSBlcnJvclxuICAgICAgICByZXR1cm4gKGVycm9yLmNvZGUgPT09IFN0YXR1c0NvZGVzLkdvbmUgJiZcbiAgICAgICAgICAgIFwic3Vic3RhdHVzXCIgaW4gZXJyb3IgJiZcbiAgICAgICAgICAgIGVycm9yW1wic3Vic3RhdHVzXCJdID09PSBTdWJTdGF0dXNDb2Rlcy5QYXJ0aXRpb25LZXlSYW5nZUdvbmUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmUgaWYgdGhlcmUgYXJlIHN0aWxsIHJlbWFpbmluZyByZXNvdXJjZXMgdG8gcHJvY2Vzc3MgYmFzZWQgb24gdGhlIHZhbHVlIG9mIHRoZSBjb250aW51YXRpb25cbiAgICAgKiB0b2tlbiBvciB0aGUgZWxlbWVudHMgcmVtYWluaW5nIG9uIHRoZSBjdXJyZW50IGJhdGNoIGluIHRoZSBRdWVyeUl0ZXJhdG9yLlxuICAgICAqIEByZXR1cm5zIHRydWUgaWYgdGhlcmUgaXMgb3RoZXIgZWxlbWVudHMgdG8gcHJvY2VzcyBpbiB0aGUgUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLlxuICAgICAqL1xuICAgIGhhc01vcmVSZXN1bHRzKCkge1xuICAgICAgICByZXR1cm4gKCF0aGlzLmVyciAmJlxuICAgICAgICAgICAgKHRoaXMuYnVmZmVyLmxlbmd0aCA+IDAgfHwgdGhpcy5zdGF0ZSAhPT0gUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLlNUQVRFUy5lbmRlZCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIHRhcmdldCBwYXJ0aXRpb24gcmFuZ2UgUXVlcnkgRXhlY3V0aW9uIENvbnRleHRcbiAgICAgKi9cbiAgICBfY3JlYXRlVGFyZ2V0UGFydGl0aW9uUXVlcnlFeGVjdXRpb25Db250ZXh0KHBhcnRpdGlvbktleVRhcmdldFJhbmdlLCBjb250aW51YXRpb25Ub2tlbiwgc3RhcnRFcGssIGVuZEVwaywgcG9wdWxhdGVFcGtSYW5nZUhlYWRlcnMpIHtcbiAgICAgICAgbGV0IHJld3JpdHRlblF1ZXJ5ID0gdGhpcy5wYXJ0aXRpb25lZFF1ZXJ5RXhlY3V0aW9uSW5mby5xdWVyeUluZm8ucmV3cml0dGVuUXVlcnk7XG4gICAgICAgIGxldCBzcWxRdWVyeVNwZWM7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy5xdWVyeTtcbiAgICAgICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgc3FsUXVlcnlTcGVjID0geyBxdWVyeSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3FsUXVlcnlTcGVjID0gcXVlcnk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZm9ybWF0UGxhY2VIb2xkZXIgPSBcIntkb2N1bWVudGRiLWZvcm1hdHRhYmxlb3JkZXJieXF1ZXJ5LWZpbHRlcn1cIjtcbiAgICAgICAgaWYgKHJld3JpdHRlblF1ZXJ5KSB7XG4gICAgICAgICAgICBzcWxRdWVyeVNwZWMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNxbFF1ZXJ5U3BlYykpO1xuICAgICAgICAgICAgLy8gV2UgaGFyZGNvZGUgdGhlIGZvcm1hdHRhYmxlIGZpbHRlciB0byB0cnVlIGZvciBub3dcbiAgICAgICAgICAgIHJld3JpdHRlblF1ZXJ5ID0gcmV3cml0dGVuUXVlcnkucmVwbGFjZShmb3JtYXRQbGFjZUhvbGRlciwgXCJ0cnVlXCIpO1xuICAgICAgICAgICAgc3FsUXVlcnlTcGVjW1wicXVlcnlcIl0gPSByZXdyaXR0ZW5RdWVyeTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcHRpb25zID0geyAuLi50aGlzLm9wdGlvbnMgfTtcbiAgICAgICAgb3B0aW9ucy5jb250aW51YXRpb25Ub2tlbiA9IGNvbnRpbnVhdGlvblRva2VuO1xuICAgICAgICByZXR1cm4gbmV3IERvY3VtZW50UHJvZHVjZXIodGhpcy5jbGllbnRDb250ZXh0LCB0aGlzLmNvbGxlY3Rpb25MaW5rLCBzcWxRdWVyeVNwZWMsIHBhcnRpdGlvbktleVRhcmdldFJhbmdlLCBvcHRpb25zLCB0aGlzLmNvcnJlbGF0ZWRBY3Rpdml0eUlkLCBzdGFydEVwaywgZW5kRXBrLCBwb3B1bGF0ZUVwa1JhbmdlSGVhZGVycyk7XG4gICAgfVxuICAgIGFzeW5jIGRyYWluQnVmZmVyZWRJdGVtcygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2VtLnRha2UoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmVycikge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGVyZSBpcyBhIHByaW9yIGVycm9yIHJldHVybiBlcnJvclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbS5sZWF2ZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVyci5oZWFkZXJzID0gdGhpcy5fZ2V0QW5kUmVzZXRBY3RpdmVSZXNwb25zZUhlYWRlcnMoKTtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHRoaXMuZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyByZXR1cm4gdW5kZWZpbmVkIGlmIHRoZXJlIGlzIG5vIG1vcmUgcmVzdWx0c1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmJ1ZmZlci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW0ubGVhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiB0aGlzLnN0YXRlID09PSBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2UuU1RBVEVTLmVuZGVkID8gdW5kZWZpbmVkIDogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9nZXRBbmRSZXNldEFjdGl2ZVJlc3BvbnNlSGVhZGVycygpLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gZHJhaW5nIHRoZSBlbnRpcmUgYnVmZmVyIG9iamVjdCBhbmQgcmV0dXJuIHRoYXQgaW4gcmVzdWx0IG9mIHJldHVybiBvYmplY3RcbiAgICAgICAgICAgICAgICBjb25zdCBidWZmZXJlZFJlc3VsdHMgPSB0aGlzLmJ1ZmZlcjtcbiAgICAgICAgICAgICAgICB0aGlzLmJ1ZmZlciA9IFtdO1xuICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGxvY2sgYmVmb3JlIHJldHVybmluZ1xuICAgICAgICAgICAgICAgIHRoaXMuc2VtLmxlYXZlKCk7XG4gICAgICAgICAgICAgICAgLy8gaW52b2tlIHRoZSBjYWxsYmFjayBvbiB0aGUgaXRlbVxuICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiBidWZmZXJlZFJlc3VsdHMsXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2dldEFuZFJlc2V0QWN0aXZlUmVzcG9uc2VIZWFkZXJzKCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEJ1ZmZlcnMgZG9jdW1lbnQgcHJvZHVjZXJzIGJhc2VkIG9uIHRoZSBtYXhpbXVtIGRlZ3JlZSBvZiBwYXJhbGxlbGlzbS5cbiAgICAgKiBNb3ZlcyBkb2N1bWVudCBwcm9kdWNlcnMgZnJvbSB0aGUgdW5maWxsZWQgcXVldWUgdG8gdGhlIGJ1ZmZlcmVkIHF1ZXVlLlxuICAgICAqIEBwYXJhbSBkaWFnbm9zdGljTm9kZSAtIFRoZSBkaWFnbm9zdGljIG5vZGUgZm9yIGxvZ2dpbmcgYW5kIHRyYWNpbmcuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBidWZmZXJpbmcgaXMgY29tcGxldGUuXG4gICAgICovXG4gICAgYXN5bmMgYnVmZmVyRG9jdW1lbnRQcm9kdWNlcnMoZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2VtLnRha2UoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmVycikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbS5sZWF2ZSgpO1xuICAgICAgICAgICAgICAgICAgICByZWplY3QodGhpcy5lcnIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3RhdGVzKHRoaXMuZXJyKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGF0ZSA9PT0gUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLlNUQVRFUy5lbmRlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbS5sZWF2ZSgpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLnNpemUoKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbS5sZWF2ZSgpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF4RGVncmVlT2ZQYXJhbGxlbGlzbSA9IHRoaXMub3B0aW9ucy5tYXhEZWdyZWVPZlBhcmFsbGVsaXNtID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5tYXhEZWdyZWVPZlBhcmFsbGVsaXNtIDwgMVxuICAgICAgICAgICAgICAgICAgICAgICAgPyB0aGlzLnVuZmlsbGVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZS5zaXplKClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogTWF0aC5taW4odGhpcy5vcHRpb25zLm1heERlZ3JlZU9mUGFyYWxsZWxpc20sIHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLnNpemUoKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50UHJvZHVjZXJzID0gW107XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChkb2N1bWVudFByb2R1Y2Vycy5sZW5ndGggPCBtYXhEZWdyZWVPZlBhcmFsbGVsaXNtICYmXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVuZmlsbGVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZS5zaXplKCkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZG9jdW1lbnRQcm9kdWNlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRQcm9kdWNlciA9IHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLmRlcSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVyciA9IGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnIuaGVhZGVycyA9IHRoaXMuX2dldEFuZFJlc2V0QWN0aXZlUmVzcG9uc2VIZWFkZXJzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHRoaXMuZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudFByb2R1Y2Vycy5wdXNoKGRvY3VtZW50UHJvZHVjZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJ1ZmZlckRvY3VtZW50UHJvZHVjZXIgPSBhc3luYyAoZG9jdW1lbnRQcm9kdWNlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gYXdhaXQgZG9jdW1lbnRQcm9kdWNlci5idWZmZXJNb3JlKGRpYWdub3N0aWNOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9tZXJnZVdpdGhBY3RpdmVSZXNwb25zZUhlYWRlcnMoaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgYnVmZmVyIG9mIGRvY3VtZW50IHByb2R1Y2VyIGlzIGZpbGxlZCwgYWRkIGl0IHRvIHRoZSBidWZmZXJlZCBkb2N1bWVudCBwcm9kdWNlcnMgcXVldWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXh0SXRlbSA9IGRvY3VtZW50UHJvZHVjZXIucGVha05leHRJdGVtKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRJdGVtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idWZmZXJlZERvY3VtZW50UHJvZHVjZXJzUXVldWUuZW5xKGRvY3VtZW50UHJvZHVjZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkb2N1bWVudFByb2R1Y2VyLmhhc01vcmVSZXN1bHRzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51bmZpbGxlZERvY3VtZW50UHJvZHVjZXJzUXVldWUuZW5xKGRvY3VtZW50UHJvZHVjZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoUGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLl9uZWVkUGFydGl0aW9uS2V5UmFuZ2VDYWNoZVJlZnJlc2goZXJyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBXZSB3YW50IHRoZSBkb2N1bWVudCBwcm9kdWNlciBlbnF1ZXVlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTbyB0aGF0IGxhdGVyIHBhcnRzIG9mIHRoZSBjb2RlIGNhbiByZXBhaXIgdGhlIGV4ZWN1dGlvbiBjb250ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJlZnJlc2ggdGhlIHBhcnRpdGlvbiBrZXkgcmFuZ2VzIGFuZCBjdHJlYXRlIG5ldyBkb2N1bWVudCBwcm9kdWNlcnMgYW5kIGFkZCBpdCB0byB0aGUgcXVldWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5fZW5xdWV1ZVJlcGxhY2VtZW50RG9jdW1lbnRQcm9kdWNlcnMoZXJyLCBkaWFnbm9zdGljTm9kZSwgZG9jdW1lbnRQcm9kdWNlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyID0gZXJyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVyci5oZWFkZXJzID0gdGhpcy5fZ2V0QW5kUmVzZXRBY3RpdmVSZXNwb25zZUhlYWRlcnMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoZG9jdW1lbnRQcm9kdWNlcnMubWFwKChwcm9kdWNlcikgPT4gYnVmZmVyRG9jdW1lbnRQcm9kdWNlcihwcm9kdWNlcikpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVyciA9IGVycjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyLmhlYWRlcnMgPSB0aGlzLl9nZXRBbmRSZXNldEFjdGl2ZVJlc3BvbnNlSGVhZGVycygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyID0gZXJyO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVyci5oZWFkZXJzID0gdGhpcy5fZ2V0QW5kUmVzZXRBY3RpdmVSZXNwb25zZUhlYWRlcnMoKTtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbS5sZWF2ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRHJhaW5zIHRoZSBidWZmZXIgb2YgZmlsbGVkIGRvY3VtZW50IHByb2R1Y2VycyBhbmQgYXBwZW5kcyB0aGVpciBpdGVtcyB0byB0aGUgbWFpbiBidWZmZXIuXG4gICAgICogQHBhcmFtIGlzT3JkZXJCeSAtIEluZGljYXRlcyBpZiB0aGUgcXVlcnkgaXMgYW4gb3JkZXIgYnkgcXVlcnkuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgYnVmZmVyIGlzIGZpbGxlZC5cbiAgICAgKi9cbiAgICBhc3luYyBmaWxsQnVmZmVyRnJvbUJ1ZmZlclF1ZXVlKGlzT3JkZXJCeSA9IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlbS50YWtlKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5lcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhlcmUgaXMgYSBwcmlvciBlcnJvciByZXR1cm4gZXJyb3JcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW0ubGVhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnIuaGVhZGVycyA9IHRoaXMuX2dldEFuZFJlc2V0QWN0aXZlUmVzcG9uc2VIZWFkZXJzKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdCh0aGlzLmVycik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc3RhdGUgPT09IFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5TVEFURVMuZW5kZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idWZmZXJlZERvY3VtZW50UHJvZHVjZXJzUXVldWUuc2l6ZSgpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VtLmxlYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNPcmRlckJ5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAodGhpcy51bmZpbGxlZERvY3VtZW50UHJvZHVjZXJzUXVldWUuaXNFbXB0eSgpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idWZmZXJlZERvY3VtZW50UHJvZHVjZXJzUXVldWUuc2l6ZSgpID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50UHJvZHVjZXIgPSB0aGlzLmJ1ZmZlcmVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZS5kZXEoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHJlc3VsdCwgaGVhZGVycyB9ID0gYXdhaXQgZG9jdW1lbnRQcm9kdWNlci5mZXRjaE5leHRJdGVtKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWVyZ2VXaXRoQWN0aXZlUmVzcG9uc2VIZWFkZXJzKGhlYWRlcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idWZmZXIucHVzaChyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9jdW1lbnRQcm9kdWNlci5wZWFrTmV4dEl0ZW0oKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVmZmVyZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLmVucShkb2N1bWVudFByb2R1Y2VyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnRQcm9kdWNlci5oYXNNb3JlUmVzdWx0cygpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLmVucShkb2N1bWVudFByb2R1Y2VyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vIG1vcmUgcmVzdWx0cyBpbiBkb2N1bWVudCBwcm9kdWNlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICh0aGlzLmJ1ZmZlcmVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZS5zaXplKCkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZG9jdW1lbnRQcm9kdWNlciA9IHRoaXMuYnVmZmVyZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLmRlcSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcmVzdWx0LCBoZWFkZXJzIH0gPSBhd2FpdCBkb2N1bWVudFByb2R1Y2VyLmZldGNoQnVmZmVyZWRJdGVtcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX21lcmdlV2l0aEFjdGl2ZVJlc3BvbnNlSGVhZGVycyhoZWFkZXJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVmZmVyLnB1c2goLi4ucmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50UHJvZHVjZXIuaGFzTW9yZVJlc3VsdHMoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVuZmlsbGVkRG9jdW1lbnRQcm9kdWNlcnNRdWV1ZS5lbnEoZG9jdW1lbnRQcm9kdWNlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3RhdGVzKHRoaXMuZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVyciA9IGVycjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnIuaGVhZGVycyA9IHRoaXMuX2dldEFuZFJlc2V0QWN0aXZlUmVzcG9uc2VIZWFkZXJzKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdCh0aGlzLmVycik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGxvY2sgYmVmb3JlIHJldHVybmluZ1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbS5sZWF2ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGVTdGF0ZXMoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICB0aGlzLmVyciA9IGVycm9yO1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5TVEFURVMuZW5kZWQ7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgPT09IFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5TVEFURVMuc3RhcnRlZCkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFBhcmFsbGVsUXVlcnlFeGVjdXRpb25Db250ZXh0QmFzZS5TVEFURVMuaW5Qcm9ncmVzcztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBoYXNOb0FjdGl2ZVByb2R1Y2VycyA9IHRoaXMudW5maWxsZWREb2N1bWVudFByb2R1Y2Vyc1F1ZXVlLnNpemUoKSA9PT0gMCAmJlxuICAgICAgICAgICAgdGhpcy5idWZmZXJlZERvY3VtZW50UHJvZHVjZXJzUXVldWUuc2l6ZSgpID09PSAwO1xuICAgICAgICBpZiAoaGFzTm9BY3RpdmVQcm9kdWNlcnMpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBQYXJhbGxlbFF1ZXJ5RXhlY3V0aW9uQ29udGV4dEJhc2UuU1RBVEVTLmVuZGVkO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYWxsZWxRdWVyeUV4ZWN1dGlvbkNvbnRleHRCYXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContextBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/pipelinedQueryExecutionContext.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/pipelinedQueryExecutionContext.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PipelinedQueryExecutionContext: () => (/* binding */ PipelinedQueryExecutionContext)\n/* harmony export */ });\n/* harmony import */ var _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../request/ErrorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\");\n/* harmony import */ var _EndpointComponent_OffsetLimitEndpointComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EndpointComponent/OffsetLimitEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OffsetLimitEndpointComponent.js\");\n/* harmony import */ var _EndpointComponent_OrderByEndpointComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EndpointComponent/OrderByEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js\");\n/* harmony import */ var _EndpointComponent_OrderedDistinctEndpointComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EndpointComponent/OrderedDistinctEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/OrderedDistinctEndpointComponent.js\");\n/* harmony import */ var _EndpointComponent_UnorderedDistinctEndpointComponent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EndpointComponent/UnorderedDistinctEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/UnorderedDistinctEndpointComponent.js\");\n/* harmony import */ var _EndpointComponent_GroupByEndpointComponent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EndpointComponent/GroupByEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByEndpointComponent.js\");\n/* harmony import */ var _headerUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n/* harmony import */ var _orderByQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./orderByQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/orderByQueryExecutionContext.js\");\n/* harmony import */ var _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parallelQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/parallelQueryExecutionContext.js\");\n/* harmony import */ var _EndpointComponent_GroupByValueEndpointComponent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EndpointComponent/GroupByValueEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/GroupByValueEndpointComponent.js\");\n/* harmony import */ var _EndpointComponent_NonStreamingOrderByDistinctEndpointComponent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EndpointComponent/NonStreamingOrderByDistinctEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByDistinctEndpointComponent.js\");\n/* harmony import */ var _EndpointComponent_NonStreamingOrderByEndpointComponent_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EndpointComponent/NonStreamingOrderByEndpointComponent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/EndpointComponent/NonStreamingOrderByEndpointComponent.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/** @hidden */\nclass PipelinedQueryExecutionContext {\n    clientContext;\n    collectionLink;\n    query;\n    options;\n    partitionedQueryExecutionInfo;\n    emitRawOrderByPayload;\n    fetchBuffer;\n    fetchMoreRespHeaders;\n    endpoint;\n    pageSize;\n    vectorSearchBufferSize = 0;\n    static DEFAULT_PAGE_SIZE = 10;\n    static DEFAULT_MAX_VECTOR_SEARCH_BUFFER_SIZE = 50000;\n    nonStreamingOrderBy = false;\n    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo, correlatedActivityId, emitRawOrderByPayload = false) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.emitRawOrderByPayload = emitRawOrderByPayload;\n        this.endpoint = null;\n        this.pageSize = options[\"maxItemCount\"];\n        if (this.pageSize === undefined) {\n            this.pageSize = PipelinedQueryExecutionContext.DEFAULT_PAGE_SIZE;\n        }\n        // Pick between Nonstreaming and streaming endpoints\n        this.nonStreamingOrderBy = partitionedQueryExecutionInfo.queryInfo.hasNonStreamingOrderBy;\n        // Pick between parallel vs order by execution context\n        const sortOrders = partitionedQueryExecutionInfo.queryInfo.orderBy;\n        // TODO: Currently we don't get any field from backend to determine streaming queries\n        if (this.nonStreamingOrderBy) {\n            if (!options.allowUnboundedNonStreamingQueries) {\n                this.checkQueryConstraints(partitionedQueryExecutionInfo.queryInfo);\n            }\n            this.vectorSearchBufferSize = this.calculateVectorSearchBufferSize(partitionedQueryExecutionInfo.queryInfo, options);\n            const maxBufferSize = options[\"vectorSearchBufferSize\"]\n                ? options[\"vectorSearchBufferSize\"]\n                : PipelinedQueryExecutionContext.DEFAULT_MAX_VECTOR_SEARCH_BUFFER_SIZE;\n            if (this.vectorSearchBufferSize > maxBufferSize) {\n                throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(`Executing a vector search query with TOP or OFFSET + LIMIT value ${this.vectorSearchBufferSize} larger than the vectorSearchBufferSize ${maxBufferSize} ` +\n                    `is not allowed`);\n            }\n            const distinctType = partitionedQueryExecutionInfo.queryInfo.distinctType;\n            const context = new _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_8__.ParallelQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo, correlatedActivityId);\n            if (distinctType === \"None\") {\n                this.endpoint = new _EndpointComponent_NonStreamingOrderByEndpointComponent_js__WEBPACK_IMPORTED_MODULE_11__.NonStreamingOrderByEndpointComponent(context, sortOrders, this.vectorSearchBufferSize, partitionedQueryExecutionInfo.queryInfo.offset, this.emitRawOrderByPayload);\n            }\n            else {\n                this.endpoint = new _EndpointComponent_NonStreamingOrderByDistinctEndpointComponent_js__WEBPACK_IMPORTED_MODULE_10__.NonStreamingOrderByDistinctEndpointComponent(context, partitionedQueryExecutionInfo.queryInfo, this.vectorSearchBufferSize, this.emitRawOrderByPayload);\n            }\n        }\n        else {\n            if (Array.isArray(sortOrders) && sortOrders.length > 0) {\n                // Need to wrap orderby execution context in endpoint component, since the data is nested as a \\\n                //      \"payload\" property.\n                this.endpoint = new _EndpointComponent_OrderByEndpointComponent_js__WEBPACK_IMPORTED_MODULE_2__.OrderByEndpointComponent(new _orderByQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_7__.OrderByQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo, correlatedActivityId), this.emitRawOrderByPayload);\n            }\n            else {\n                this.endpoint = new _parallelQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_8__.ParallelQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo, correlatedActivityId);\n            }\n            if (Object.keys(partitionedQueryExecutionInfo.queryInfo.groupByAliasToAggregateType).length >\n                0 ||\n                partitionedQueryExecutionInfo.queryInfo.aggregates.length > 0 ||\n                partitionedQueryExecutionInfo.queryInfo.groupByExpressions.length > 0) {\n                if (partitionedQueryExecutionInfo.queryInfo.hasSelectValue) {\n                    this.endpoint = new _EndpointComponent_GroupByValueEndpointComponent_js__WEBPACK_IMPORTED_MODULE_9__.GroupByValueEndpointComponent(this.endpoint, partitionedQueryExecutionInfo.queryInfo);\n                }\n                else {\n                    this.endpoint = new _EndpointComponent_GroupByEndpointComponent_js__WEBPACK_IMPORTED_MODULE_5__.GroupByEndpointComponent(this.endpoint, partitionedQueryExecutionInfo.queryInfo);\n                }\n            }\n            // If distinct then add that to the pipeline\n            const distinctType = partitionedQueryExecutionInfo.queryInfo.distinctType;\n            if (distinctType === \"Ordered\") {\n                this.endpoint = new _EndpointComponent_OrderedDistinctEndpointComponent_js__WEBPACK_IMPORTED_MODULE_3__.OrderedDistinctEndpointComponent(this.endpoint);\n            }\n            if (distinctType === \"Unordered\") {\n                this.endpoint = new _EndpointComponent_UnorderedDistinctEndpointComponent_js__WEBPACK_IMPORTED_MODULE_4__.UnorderedDistinctEndpointComponent(this.endpoint);\n            }\n            // If top then add that to the pipeline. TOP N is effectively OFFSET 0 LIMIT N\n            const top = partitionedQueryExecutionInfo.queryInfo.top;\n            if (typeof top === \"number\") {\n                this.endpoint = new _EndpointComponent_OffsetLimitEndpointComponent_js__WEBPACK_IMPORTED_MODULE_1__.OffsetLimitEndpointComponent(this.endpoint, 0, top);\n            }\n            // If offset+limit then add that to the pipeline\n            const limit = partitionedQueryExecutionInfo.queryInfo.limit;\n            const offset = partitionedQueryExecutionInfo.queryInfo.offset;\n            if (typeof limit === \"number\" && typeof offset === \"number\") {\n                this.endpoint = new _EndpointComponent_OffsetLimitEndpointComponent_js__WEBPACK_IMPORTED_MODULE_1__.OffsetLimitEndpointComponent(this.endpoint, offset, limit);\n            }\n        }\n        this.fetchBuffer = [];\n    }\n    hasMoreResults() {\n        return this.fetchBuffer.length !== 0 || this.endpoint.hasMoreResults();\n    }\n    async fetchMore(diagnosticNode) {\n        this.fetchMoreRespHeaders = (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_6__.getInitialHeader)();\n        return this._fetchMoreImplementation(diagnosticNode);\n    }\n    async _fetchMoreImplementation(diagnosticNode) {\n        try {\n            if (this.fetchBuffer.length >= this.pageSize) {\n                const temp = this.fetchBuffer.slice(0, this.pageSize);\n                this.fetchBuffer = this.fetchBuffer.slice(this.pageSize);\n                return { result: temp, headers: this.fetchMoreRespHeaders };\n            }\n            else {\n                const response = await this.endpoint.fetchMore(diagnosticNode);\n                (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_6__.mergeHeaders)(this.fetchMoreRespHeaders, response.headers);\n                if (response === undefined || response.result === undefined) {\n                    if (this.fetchBuffer.length > 0) {\n                        const temp = this.fetchBuffer;\n                        this.fetchBuffer = [];\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                    else {\n                        return { result: undefined, headers: this.fetchMoreRespHeaders };\n                    }\n                }\n                this.fetchBuffer.push(...response.result);\n                if (this.options.enableQueryControl) {\n                    if (this.fetchBuffer.length >= this.pageSize) {\n                        const temp = this.fetchBuffer.slice(0, this.pageSize);\n                        this.fetchBuffer = this.fetchBuffer.slice(this.pageSize);\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                    else {\n                        const temp = this.fetchBuffer;\n                        this.fetchBuffer = [];\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                }\n                // Recursively fetch more results to ensure the pageSize number of results are returned\n                // to maintain compatibility with the previous implementation\n                return this._fetchMoreImplementation(diagnosticNode);\n            }\n        }\n        catch (err) {\n            (0,_headerUtils_js__WEBPACK_IMPORTED_MODULE_6__.mergeHeaders)(this.fetchMoreRespHeaders, err.headers);\n            err.headers = this.fetchMoreRespHeaders;\n            if (err) {\n                throw err;\n            }\n        }\n    }\n    calculateVectorSearchBufferSize(queryInfo, options) {\n        if (queryInfo.top === 0 || queryInfo.limit === 0)\n            return 0;\n        return queryInfo.top\n            ? queryInfo.top\n            : queryInfo.limit\n                ? queryInfo.offset + queryInfo.limit\n                : options[\"vectorSearchBufferSize\"] && options[\"vectorSearchBufferSize\"] > 0\n                    ? options[\"vectorSearchBufferSize\"]\n                    : PipelinedQueryExecutionContext.DEFAULT_MAX_VECTOR_SEARCH_BUFFER_SIZE;\n    }\n    checkQueryConstraints(queryInfo) {\n        const hasTop = queryInfo.top || queryInfo.top === 0;\n        const hasLimit = queryInfo.limit || queryInfo.limit === 0;\n        if (!hasTop && !hasLimit) {\n            throw new _request_ErrorResponse_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse(\"Executing a non-streaming search query without TOP or LIMIT can consume a large number of RUs \" +\n                \"very fast and have long runtimes. Please ensure you are using one of the above two filters \" +\n                \"with your vector search query.\");\n        }\n        return;\n    }\n}\n//# sourceMappingURL=pipelinedQueryExecutionContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/pipelinedQueryExecutionContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryIterator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryIterator: () => (/* binding */ QueryIterator)\n/* harmony export */ });\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryExecutionContext/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/index.js\");\n/* harmony import */ var _request_FeedResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request/FeedResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/FeedResponse.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _queryExecutionContext_hybridQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./queryExecutionContext/hybridQueryExecutionContext.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/hybridQueryExecutionContext.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n/**\n * Represents a QueryIterator Object, an implementation of feed or query response that enables\n * traversal and iterating over the response\n * in the Azure Cosmos DB database service.\n */\nclass QueryIterator {\n    clientContext;\n    query;\n    options;\n    fetchFunctions;\n    resourceLink;\n    resourceType;\n    fetchAllTempResources; // TODO\n    fetchAllLastResHeaders;\n    queryExecutionContext;\n    queryPlanPromise;\n    isInitialized;\n    correlatedActivityId;\n    partitionKeyRangeCache;\n    /**\n     * @hidden\n     */\n    constructor(clientContext, query, options, fetchFunctions, resourceLink, resourceType) {\n        this.clientContext = clientContext;\n        this.query = query;\n        this.options = options;\n        this.fetchFunctions = fetchFunctions;\n        this.resourceLink = resourceLink;\n        this.resourceType = resourceType;\n        this.query = query;\n        this.fetchFunctions = fetchFunctions;\n        this.options = options || {};\n        this.resourceLink = resourceLink;\n        this.fetchAllLastResHeaders = (0,_queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)();\n        this.reset();\n        this.isInitialized = false;\n        this.partitionKeyRangeCache = this.clientContext.partitionKeyRangeCache;\n    }\n    /**\n     * Gets an async iterator that will yield results until completion.\n     *\n     * NOTE: AsyncIterators are a very new feature and you might need to\n     * use polyfils/etc. in order to use them in your code.\n     *\n     * If you're using TypeScript, you can use the following polyfill as long\n     * as you target ES6 or higher and are running on Node 6 or higher.\n     *\n     * ```ts snippet:ignore\n     * if (!Symbol || !Symbol.asyncIterator) {\n     *   (Symbol as any).asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n     * }\n     * ```\n     *\n     * @example Iterate over all databases\n     * ```ts snippet:QueryIteratorIterateDatabases\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * for await (const { resources: db } of client.databases.readAll().getAsyncIterator()) {\n     *   console.log(`Got ${db} from AsyncIterator`);\n     * }\n     * ```\n     */\n    async *getAsyncIterator() {\n        const diagnosticNode = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_0__.DiagnosticNodeInternal(this.clientContext.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_0__.DiagnosticNodeType.CLIENT_REQUEST_NODE, null);\n        yield* this.getAsyncIteratorInternal(diagnosticNode);\n    }\n    /**\n     * @internal\n     */\n    async *getAsyncIteratorInternal(diagnosticNode) {\n        this.reset();\n        this.queryPlanPromise = this.fetchQueryPlan(diagnosticNode);\n        while (this.queryExecutionContext.hasMoreResults()) {\n            let response;\n            try {\n                response = await this.queryExecutionContext.fetchMore(diagnosticNode);\n            }\n            catch (error) {\n                if (this.needsQueryPlan(error)) {\n                    await this.createExecutionContext(diagnosticNode);\n                    try {\n                        response = await this.queryExecutionContext.fetchMore(diagnosticNode);\n                    }\n                    catch (queryError) {\n                        this.handleSplitError(queryError);\n                    }\n                }\n                else {\n                    throw error;\n                }\n            }\n            const feedResponse = new _request_FeedResponse_js__WEBPACK_IMPORTED_MODULE_3__.FeedResponse(response.result, response.headers, this.queryExecutionContext.hasMoreResults(), diagnosticNode.toDiagnostic(this.clientContext.getClientConfig()));\n            diagnosticNode = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_0__.DiagnosticNodeInternal(this.clientContext.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_0__.DiagnosticNodeType.CLIENT_REQUEST_NODE, null);\n            if (response.result !== undefined) {\n                yield feedResponse;\n            }\n        }\n    }\n    /**\n     * Determine if there are still remaining resources to process based on the value of the continuation token or the\n     * elements remaining on the current batch in the QueryIterator.\n     * @returns true if there is other elements to process in the QueryIterator.\n     */\n    hasMoreResults() {\n        return this.queryExecutionContext.hasMoreResults();\n    }\n    /**\n     * Fetch all pages for the query and return a single FeedResponse.\n     * @example\n     * ```ts snippet:ReadmeSampleQueryDatabase\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const { resources } = await container.items\n     *   .query(\"SELECT * from c WHERE c.isCapitol = true\")\n     *   .fetchAll();\n     * ```\n     */\n    async fetchAll() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            return this.fetchAllInternal(diagnosticNode);\n        }, this.clientContext);\n    }\n    /**\n     * @hidden\n     */\n    async fetchAllInternal(diagnosticNode) {\n        this.reset();\n        let response;\n        try {\n            response = await this.toArrayImplementation(diagnosticNode);\n        }\n        catch (error) {\n            this.handleSplitError(error);\n        }\n        return response;\n    }\n    /**\n     * Retrieve the next batch from the feed.\n     *\n     * This may or may not fetch more pages from the backend depending on your settings\n     * and the type of query. Aggregate queries will generally fetch all backend pages\n     * before returning the first batch of responses.\n     *\n     * @example\n     * ```ts snippet:ReadmeSampleNonStreamableCrossPartitionQuery\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     *\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     *\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const querySpec = {\n     *   query: \"SELECT c.status, COUNT(c.id) AS count FROM c GROUP BY c.status\",\n     * };\n     * const queryOptions = {\n     *   maxItemCount: 10, // maximum number of items to return per page\n     *   enableCrossPartitionQuery: true,\n     * };\n     * const queryIterator = container.items.query(querySpec, queryOptions);\n     * while (queryIterator.hasMoreResults()) {\n     *   const { resources: result } = await queryIterator.fetchNext();\n     *   // process results\n     * }\n     * ```\n     */\n    async fetchNext() {\n        return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withDiagnostics)(async (diagnosticNode) => {\n            return this.fetchNextInternal(diagnosticNode);\n        }, this.clientContext);\n    }\n    /**\n     * @internal\n     */\n    async fetchNextInternal(diagnosticNode) {\n        this.queryPlanPromise = (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withMetadataDiagnostics)(async (metadataNode) => {\n            return this.fetchQueryPlan(metadataNode);\n        }, diagnosticNode, _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_5__.MetadataLookUpType.QueryPlanLookUp);\n        if (!this.isInitialized) {\n            await this.init(diagnosticNode);\n        }\n        let response;\n        try {\n            response = await this.queryExecutionContext.fetchMore(diagnosticNode);\n        }\n        catch (error) {\n            if (this.needsQueryPlan(error)) {\n                await this.createExecutionContext(diagnosticNode);\n                try {\n                    response = await this.queryExecutionContext.fetchMore(diagnosticNode);\n                }\n                catch (queryError) {\n                    this.handleSplitError(queryError);\n                }\n            }\n            else {\n                throw error;\n            }\n        }\n        return new _request_FeedResponse_js__WEBPACK_IMPORTED_MODULE_3__.FeedResponse(response.result, response.headers, this.queryExecutionContext.hasMoreResults(), (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n    }\n    /**\n     * Reset the QueryIterator to the beginning and clear all the resources inside it\n     * @example\n     * ```ts snippet:QueryIteratorReset\n     * import { CosmosClient } from \"@azure/cosmos\";\n     *\n     * const endpoint = \"https://your-account.documents.azure.com\";\n     * const key = \"<database account masterkey>\";\n     * const client = new CosmosClient({ endpoint, key });\n     * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n     * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n     *\n     * const querySpec = {\n     *   query: \"SELECT c.status, COUNT(c.id) AS count FROM c GROUP BY c.status\",\n     * };\n     * const queryIterator = container.items.query(querySpec);\n     * while (queryIterator.hasMoreResults()) {\n     *   const { resources: result } = await queryIterator.fetchNext();\n     *   // process results\n     * }\n     * queryIterator.reset();\n     * ```\n     *\n     */\n    reset() {\n        this.correlatedActivityId = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_6__.randomUUID)();\n        this.queryPlanPromise = undefined;\n        this.fetchAllLastResHeaders = (0,_queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__.getInitialHeader)();\n        this.fetchAllTempResources = [];\n        this.queryExecutionContext = new _queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__.DefaultQueryExecutionContext(this.options, this.fetchFunctions, this.correlatedActivityId);\n    }\n    async toArrayImplementation(diagnosticNode) {\n        this.queryPlanPromise = (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.withMetadataDiagnostics)(async (metadataNode) => {\n            return this.fetchQueryPlan(metadataNode);\n        }, diagnosticNode, _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_5__.MetadataLookUpType.QueryPlanLookUp);\n        // this.queryPlanPromise = this.fetchQueryPlan(diagnosticNode);\n        if (!this.isInitialized) {\n            await this.init(diagnosticNode);\n        }\n        while (this.queryExecutionContext.hasMoreResults()) {\n            let response;\n            try {\n                response = await this.queryExecutionContext.fetchMore(diagnosticNode);\n            }\n            catch (error) {\n                if (this.needsQueryPlan(error)) {\n                    await this.createExecutionContext(diagnosticNode);\n                    response = await this.queryExecutionContext.fetchMore(diagnosticNode);\n                }\n                else {\n                    throw error;\n                }\n            }\n            const { result, headers } = response;\n            // concatenate the results and fetch more\n            (0,_queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__.mergeHeaders)(this.fetchAllLastResHeaders, headers);\n            if (result) {\n                this.fetchAllTempResources.push(...result);\n            }\n        }\n        return new _request_FeedResponse_js__WEBPACK_IMPORTED_MODULE_3__.FeedResponse(this.fetchAllTempResources, this.fetchAllLastResHeaders, this.queryExecutionContext.hasMoreResults(), (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_4__.getEmptyCosmosDiagnostics)());\n    }\n    async createExecutionContext(diagnosticNode) {\n        const queryPlanResponse = await this.queryPlanPromise;\n        // We always coerce queryPlanPromise to resolved. So if it errored, we need to manually inspect the resolved value\n        if (queryPlanResponse instanceof Error) {\n            throw queryPlanResponse;\n        }\n        const queryPlan = queryPlanResponse.result;\n        if (queryPlan.hybridSearchQueryInfo && queryPlan.hybridSearchQueryInfo !== null) {\n            await this.createHybridQueryExecutionContext(queryPlan, diagnosticNode);\n        }\n        else {\n            await this.createPipelinedExecutionContext(queryPlan);\n        }\n    }\n    async createHybridQueryExecutionContext(queryPlan, diagnosticNode) {\n        const allPartitionKeyRanges = (await this.partitionKeyRangeCache.onCollectionRoutingMap(this.resourceLink, diagnosticNode)).getOrderedParitionKeyRanges();\n        // convert allPartitionKeyRanges to QueryRanges\n        const queryRanges = allPartitionKeyRanges.map((partitionKeyRange) => {\n            return {\n                min: partitionKeyRange.minInclusive,\n                max: partitionKeyRange.maxExclusive,\n                isMinInclusive: true,\n                isMaxInclusive: false,\n            };\n        });\n        this.queryExecutionContext = new _queryExecutionContext_hybridQueryExecutionContext_js__WEBPACK_IMPORTED_MODULE_7__.HybridQueryExecutionContext(this.clientContext, this.resourceLink, this.query, this.options, queryPlan, this.correlatedActivityId, queryRanges);\n    }\n    async createPipelinedExecutionContext(queryPlan) {\n        const queryInfo = queryPlan.queryInfo;\n        if (queryInfo.aggregates.length > 0 && queryInfo.hasSelectValue === false) {\n            throw new Error(\"Aggregate queries must use the VALUE keyword\");\n        }\n        this.queryExecutionContext = new _queryExecutionContext_index_js__WEBPACK_IMPORTED_MODULE_2__.PipelinedQueryExecutionContext(this.clientContext, this.resourceLink, this.query, this.options, queryPlan, this.correlatedActivityId);\n    }\n    async fetchQueryPlan(diagnosticNode) {\n        if (!this.queryPlanPromise && this.resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item) {\n            return this.clientContext\n                .getQueryPlan((0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getPathFromLink)(this.resourceLink) + \"/docs\", _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item, this.resourceLink, this.query, this.options, diagnosticNode, this.correlatedActivityId)\n                .catch((error) => error); // Without this catch, node reports an unhandled rejection. So we stash the promise as resolved even if it errored.\n        }\n        return this.queryPlanPromise;\n    }\n    needsQueryPlan(error) {\n        if (error.body?.additionalErrorInfo ||\n            error.message.includes(\"Cross partition query only supports\")) {\n            return error.code === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.BadRequest && this.resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item;\n        }\n        else {\n            throw error;\n        }\n    }\n    initPromise;\n    /**\n     * @internal\n     */\n    async init(diagnosticNode) {\n        if (this.isInitialized === true) {\n            return;\n        }\n        if (this.initPromise === undefined) {\n            this.initPromise = this._init(diagnosticNode);\n        }\n        return this.initPromise;\n    }\n    async _init(diagnosticNode) {\n        if (this.options.forceQueryPlan === true && this.resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item) {\n            await this.createExecutionContext(diagnosticNode);\n        }\n        this.isInitialized = true;\n    }\n    handleSplitError(err) {\n        if (err.code === 410) {\n            const error = new Error(\"Encountered partition split and could not recover. This request is retryable\");\n            error.code = 503;\n            error.originalError = err;\n            throw error;\n        }\n        else {\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=queryIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/clientSideMetrics.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/clientSideMetrics.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSideMetrics: () => (/* binding */ ClientSideMetrics)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass ClientSideMetrics {\n    requestCharge;\n    constructor(requestCharge) {\n        this.requestCharge = requestCharge;\n    }\n    /**\n     * Adds one or more ClientSideMetrics to a copy of this instance and returns the result.\n     */\n    add(...clientSideMetricsArray) {\n        let requestCharge = this.requestCharge;\n        for (const clientSideMetrics of clientSideMetricsArray) {\n            if (clientSideMetrics == null) {\n                throw new Error(\"clientSideMetrics has null or undefined item(s)\");\n            }\n            requestCharge += clientSideMetrics.requestCharge;\n        }\n        return new ClientSideMetrics(requestCharge);\n    }\n    static zero = new ClientSideMetrics(0);\n    static createFromArray(...clientSideMetricsArray) {\n        if (clientSideMetricsArray == null) {\n            throw new Error(\"clientSideMetricsArray is null or undefined item(s)\");\n        }\n        return this.zero.add(...clientSideMetricsArray);\n    }\n}\n//# sourceMappingURL=clientSideMetrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvY2xpZW50U2lkZU1ldHJpY3MuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5TWV0cmljcy9jbGllbnRTaWRlTWV0cmljcy5qcz9mZDMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IGNsYXNzIENsaWVudFNpZGVNZXRyaWNzIHtcbiAgICByZXF1ZXN0Q2hhcmdlO1xuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RDaGFyZ2UpIHtcbiAgICAgICAgdGhpcy5yZXF1ZXN0Q2hhcmdlID0gcmVxdWVzdENoYXJnZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBvbmUgb3IgbW9yZSBDbGllbnRTaWRlTWV0cmljcyB0byBhIGNvcHkgb2YgdGhpcyBpbnN0YW5jZSBhbmQgcmV0dXJucyB0aGUgcmVzdWx0LlxuICAgICAqL1xuICAgIGFkZCguLi5jbGllbnRTaWRlTWV0cmljc0FycmF5KSB7XG4gICAgICAgIGxldCByZXF1ZXN0Q2hhcmdlID0gdGhpcy5yZXF1ZXN0Q2hhcmdlO1xuICAgICAgICBmb3IgKGNvbnN0IGNsaWVudFNpZGVNZXRyaWNzIG9mIGNsaWVudFNpZGVNZXRyaWNzQXJyYXkpIHtcbiAgICAgICAgICAgIGlmIChjbGllbnRTaWRlTWV0cmljcyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2xpZW50U2lkZU1ldHJpY3MgaGFzIG51bGwgb3IgdW5kZWZpbmVkIGl0ZW0ocylcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXF1ZXN0Q2hhcmdlICs9IGNsaWVudFNpZGVNZXRyaWNzLnJlcXVlc3RDaGFyZ2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBDbGllbnRTaWRlTWV0cmljcyhyZXF1ZXN0Q2hhcmdlKTtcbiAgICB9XG4gICAgc3RhdGljIHplcm8gPSBuZXcgQ2xpZW50U2lkZU1ldHJpY3MoMCk7XG4gICAgc3RhdGljIGNyZWF0ZUZyb21BcnJheSguLi5jbGllbnRTaWRlTWV0cmljc0FycmF5KSB7XG4gICAgICAgIGlmIChjbGllbnRTaWRlTWV0cmljc0FycmF5ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImNsaWVudFNpZGVNZXRyaWNzQXJyYXkgaXMgbnVsbCBvciB1bmRlZmluZWQgaXRlbShzKVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy56ZXJvLmFkZCguLi5jbGllbnRTaWRlTWV0cmljc0FycmF5KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnRTaWRlTWV0cmljcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/clientSideMetrics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSideMetrics: () => (/* reexport safe */ _clientSideMetrics_js__WEBPACK_IMPORTED_MODULE_0__.ClientSideMetrics),\n/* harmony export */   QueryMetrics: () => (/* reexport safe */ _queryMetrics_js__WEBPACK_IMPORTED_MODULE_1__.QueryMetrics),\n/* harmony export */   QueryMetricsConstants: () => (/* reexport safe */ _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   QueryPreparationTimes: () => (/* reexport safe */ _queryPreparationTime_js__WEBPACK_IMPORTED_MODULE_3__.QueryPreparationTimes),\n/* harmony export */   RuntimeExecutionTimes: () => (/* reexport safe */ _runtimeExecutionTimes_js__WEBPACK_IMPORTED_MODULE_4__.RuntimeExecutionTimes),\n/* harmony export */   TimeSpan: () => (/* reexport safe */ _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan)\n/* harmony export */ });\n/* harmony import */ var _clientSideMetrics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clientSideMetrics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/clientSideMetrics.js\");\n/* harmony import */ var _queryMetrics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queryMetrics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetrics.js\");\n/* harmony import */ var _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryMetricsConstants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js\");\n/* harmony import */ var _queryPreparationTime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./queryPreparationTime.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryPreparationTime.js\");\n/* harmony import */ var _runtimeExecutionTimes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./runtimeExecutionTimes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/runtimeExecutionTimes.js\");\n/* harmony import */ var _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./timeSpan.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUNWO0FBQzZCO0FBQ1o7QUFDQztBQUMxQjtBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlNZXRyaWNzL2luZGV4LmpzPzMxZDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgeyBDbGllbnRTaWRlTWV0cmljcyB9IGZyb20gXCIuL2NsaWVudFNpZGVNZXRyaWNzLmpzXCI7XG5leHBvcnQgeyBRdWVyeU1ldHJpY3MgfSBmcm9tIFwiLi9xdWVyeU1ldHJpY3MuanNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUXVlcnlNZXRyaWNzQ29uc3RhbnRzIH0gZnJvbSBcIi4vcXVlcnlNZXRyaWNzQ29uc3RhbnRzLmpzXCI7XG5leHBvcnQgeyBRdWVyeVByZXBhcmF0aW9uVGltZXMgfSBmcm9tIFwiLi9xdWVyeVByZXBhcmF0aW9uVGltZS5qc1wiO1xuZXhwb3J0IHsgUnVudGltZUV4ZWN1dGlvblRpbWVzIH0gZnJvbSBcIi4vcnVudGltZUV4ZWN1dGlvblRpbWVzLmpzXCI7XG5leHBvcnQgeyBUaW1lU3BhbiB9IGZyb20gXCIuL3RpbWVTcGFuLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetrics.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetrics.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryMetrics: () => (/* binding */ QueryMetrics)\n/* harmony export */ });\n/* harmony import */ var _clientSideMetrics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clientSideMetrics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/clientSideMetrics.js\");\n/* harmony import */ var _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queryMetricsConstants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js\");\n/* harmony import */ var _queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryMetricsUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsUtils.js\");\n/* harmony import */ var _queryPreparationTime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./queryPreparationTime.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryPreparationTime.js\");\n/* harmony import */ var _runtimeExecutionTimes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./runtimeExecutionTimes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/runtimeExecutionTimes.js\");\n/* harmony import */ var _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./timeSpan.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\nclass QueryMetrics {\n    retrievedDocumentCount;\n    retrievedDocumentSize;\n    outputDocumentCount;\n    outputDocumentSize;\n    indexHitDocumentCount;\n    totalQueryExecutionTime;\n    queryPreparationTimes;\n    indexLookupTime;\n    documentLoadTime;\n    vmExecutionTime;\n    runtimeExecutionTimes;\n    documentWriteTime;\n    clientSideMetrics;\n    constructor(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitDocumentCount, totalQueryExecutionTime, queryPreparationTimes, indexLookupTime, documentLoadTime, vmExecutionTime, runtimeExecutionTimes, documentWriteTime, clientSideMetrics) {\n        this.retrievedDocumentCount = retrievedDocumentCount;\n        this.retrievedDocumentSize = retrievedDocumentSize;\n        this.outputDocumentCount = outputDocumentCount;\n        this.outputDocumentSize = outputDocumentSize;\n        this.indexHitDocumentCount = indexHitDocumentCount;\n        this.totalQueryExecutionTime = totalQueryExecutionTime;\n        this.queryPreparationTimes = queryPreparationTimes;\n        this.indexLookupTime = indexLookupTime;\n        this.documentLoadTime = documentLoadTime;\n        this.vmExecutionTime = vmExecutionTime;\n        this.runtimeExecutionTimes = runtimeExecutionTimes;\n        this.documentWriteTime = documentWriteTime;\n        this.clientSideMetrics = clientSideMetrics;\n    }\n    /**\n     * Gets the IndexHitRatio\n     * @hidden\n     */\n    get indexHitRatio() {\n        return this.retrievedDocumentCount === 0\n            ? 1\n            : this.indexHitDocumentCount / this.retrievedDocumentCount;\n    }\n    /**\n     * returns a new QueryMetrics instance that is the addition of this and the arguments.\n     */\n    add(queryMetricsArray) {\n        let retrievedDocumentCount = 0;\n        let retrievedDocumentSize = 0;\n        let outputDocumentCount = 0;\n        let outputDocumentSize = 0;\n        let indexHitDocumentCount = 0;\n        let totalQueryExecutionTime = _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero;\n        const queryPreparationTimesArray = [];\n        let indexLookupTime = _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero;\n        let documentLoadTime = _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero;\n        let vmExecutionTime = _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero;\n        const runtimeExecutionTimesArray = [];\n        let documentWriteTime = _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero;\n        const clientSideQueryMetricsArray = [];\n        queryMetricsArray.push(this);\n        for (const queryMetrics of queryMetricsArray) {\n            if (queryMetrics) {\n                retrievedDocumentCount += queryMetrics.retrievedDocumentCount;\n                retrievedDocumentSize += queryMetrics.retrievedDocumentSize;\n                outputDocumentCount += queryMetrics.outputDocumentCount;\n                outputDocumentSize += queryMetrics.outputDocumentSize;\n                indexHitDocumentCount += queryMetrics.indexHitDocumentCount;\n                totalQueryExecutionTime = totalQueryExecutionTime.add(queryMetrics.totalQueryExecutionTime);\n                queryPreparationTimesArray.push(queryMetrics.queryPreparationTimes);\n                indexLookupTime = indexLookupTime.add(queryMetrics.indexLookupTime);\n                documentLoadTime = documentLoadTime.add(queryMetrics.documentLoadTime);\n                vmExecutionTime = vmExecutionTime.add(queryMetrics.vmExecutionTime);\n                runtimeExecutionTimesArray.push(queryMetrics.runtimeExecutionTimes);\n                documentWriteTime = documentWriteTime.add(queryMetrics.documentWriteTime);\n                clientSideQueryMetricsArray.push(queryMetrics.clientSideMetrics);\n            }\n        }\n        return new QueryMetrics(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitDocumentCount, totalQueryExecutionTime, _queryPreparationTime_js__WEBPACK_IMPORTED_MODULE_3__.QueryPreparationTimes.createFromArray(queryPreparationTimesArray), indexLookupTime, documentLoadTime, vmExecutionTime, _runtimeExecutionTimes_js__WEBPACK_IMPORTED_MODULE_4__.RuntimeExecutionTimes.createFromArray(runtimeExecutionTimesArray), documentWriteTime, _clientSideMetrics_js__WEBPACK_IMPORTED_MODULE_0__.ClientSideMetrics.createFromArray(...clientSideQueryMetricsArray));\n    }\n    /**\n     * Output the QueryMetrics as a delimited string.\n     * @hidden\n     */\n    toDelimitedString() {\n        return (_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].RetrievedDocumentCount +\n            \"=\" +\n            this.retrievedDocumentCount +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].RetrievedDocumentSize +\n            \"=\" +\n            this.retrievedDocumentSize +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].OutputDocumentCount +\n            \"=\" +\n            this.outputDocumentCount +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].OutputDocumentSize +\n            \"=\" +\n            this.outputDocumentSize +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].IndexHitRatio +\n            \"=\" +\n            this.indexHitRatio +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].TotalQueryExecutionTimeInMs +\n            \"=\" +\n            this.totalQueryExecutionTime.totalMilliseconds() +\n            \";\" +\n            this.queryPreparationTimes.toDelimitedString() +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].IndexLookupTimeInMs +\n            \"=\" +\n            this.indexLookupTime.totalMilliseconds() +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DocumentLoadTimeInMs +\n            \"=\" +\n            this.documentLoadTime.totalMilliseconds() +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].VMExecutionTimeInMs +\n            \"=\" +\n            this.vmExecutionTime.totalMilliseconds() +\n            \";\" +\n            this.runtimeExecutionTimes.toDelimitedString() +\n            \";\" +\n            _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DocumentWriteTimeInMs +\n            \"=\" +\n            this.documentWriteTime.totalMilliseconds());\n    }\n    static zero = new QueryMetrics(0, 0, 0, 0, 0, _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero, _queryPreparationTime_js__WEBPACK_IMPORTED_MODULE_3__.QueryPreparationTimes.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero, _runtimeExecutionTimes_js__WEBPACK_IMPORTED_MODULE_4__.RuntimeExecutionTimes.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_5__.TimeSpan.zero, _clientSideMetrics_js__WEBPACK_IMPORTED_MODULE_0__.ClientSideMetrics.zero);\n    /**\n     * Returns a new instance of the QueryMetrics class that is the aggregation of an array of query metrics.\n     */\n    static createFromArray(queryMetricsArray) {\n        if (!queryMetricsArray) {\n            throw new Error(\"queryMetricsArray is null or undefined item(s)\");\n        }\n        return QueryMetrics.zero.add(queryMetricsArray);\n    }\n    /**\n     * Returns a new instance of the QueryMetrics class this is deserialized from a delimited string.\n     */\n    static createFromDelimitedString(delimitedString, clientSideMetrics) {\n        const metrics = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__.parseDelimitedString)(delimitedString);\n        const indexHitRatio = metrics[_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].IndexHitRatio] || 0;\n        const retrievedDocumentCount = metrics[_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].RetrievedDocumentCount] || 0;\n        const indexHitCount = indexHitRatio * retrievedDocumentCount;\n        const outputDocumentCount = metrics[_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].OutputDocumentCount] || 0;\n        const outputDocumentSize = metrics[_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].OutputDocumentSize] || 0;\n        const retrievedDocumentSize = metrics[_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].RetrievedDocumentSize] || 0;\n        const totalQueryExecutionTime = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].TotalQueryExecutionTimeInMs);\n        return new QueryMetrics(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitCount, totalQueryExecutionTime, _queryPreparationTime_js__WEBPACK_IMPORTED_MODULE_3__.QueryPreparationTimes.createFromDelimitedString(delimitedString), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].IndexLookupTimeInMs), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DocumentLoadTimeInMs), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].VMExecutionTimeInMs), _runtimeExecutionTimes_js__WEBPACK_IMPORTED_MODULE_4__.RuntimeExecutionTimes.createFromDelimitedString(delimitedString), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_2__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DocumentWriteTimeInMs), clientSideMetrics || _clientSideMetrics_js__WEBPACK_IMPORTED_MODULE_0__.ClientSideMetrics.zero);\n    }\n}\n//# sourceMappingURL=queryMetrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvcXVlcnlNZXRyaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzJEO0FBQ0k7QUFDb0I7QUFDakI7QUFDQztBQUMxQjtBQUNsQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGtEQUFRO0FBQzlDO0FBQ0EsOEJBQThCLGtEQUFRO0FBQ3RDLCtCQUErQixrREFBUTtBQUN2Qyw4QkFBOEIsa0RBQVE7QUFDdEM7QUFDQSxnQ0FBZ0Msa0RBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3S0FBd0ssMkVBQXFCLGtHQUFrRyw0RUFBcUIsaUVBQWlFLG9FQUFpQjtBQUN0WTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUVBQXFCO0FBQ3JDO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWSxpRUFBcUI7QUFDakM7QUFDQTtBQUNBLGNBQWM7QUFDZCxZQUFZLGlFQUFxQjtBQUNqQztBQUNBO0FBQ0EsY0FBYztBQUNkLFlBQVksaUVBQXFCO0FBQ2pDO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWSxpRUFBcUI7QUFDakM7QUFDQTtBQUNBLGNBQWM7QUFDZCxZQUFZLGlFQUFxQjtBQUNqQztBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0EsY0FBYztBQUNkLFlBQVksaUVBQXFCO0FBQ2pDO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWSxpRUFBcUI7QUFDakM7QUFDQTtBQUNBLGNBQWM7QUFDZCxZQUFZLGlFQUFxQjtBQUNqQztBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0EsY0FBYztBQUNkLFlBQVksaUVBQXFCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxrREFBUSxPQUFPLDJFQUFxQixPQUFPLGtEQUFRLE9BQU8sa0RBQVEsT0FBTyxrREFBUSxPQUFPLDRFQUFxQixPQUFPLGtEQUFRLE9BQU8sb0VBQWlCO0FBQ3RNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJFQUFvQjtBQUM1QyxzQ0FBc0MsaUVBQXFCO0FBQzNELCtDQUErQyxpRUFBcUI7QUFDcEU7QUFDQSw0Q0FBNEMsaUVBQXFCO0FBQ2pFLDJDQUEyQyxpRUFBcUI7QUFDaEUsOENBQThDLGlFQUFxQjtBQUNuRSx3Q0FBd0MsMEVBQW1CLFVBQVUsaUVBQXFCO0FBQzFGLGdLQUFnSywyRUFBcUIsNkNBQTZDLDBFQUFtQixVQUFVLGlFQUFxQix1QkFBdUIsMEVBQW1CLFVBQVUsaUVBQXFCLHdCQUF3QiwwRUFBbUIsVUFBVSxpRUFBcUIsdUJBQXVCLDRFQUFxQiw2Q0FBNkMsMEVBQW1CLFVBQVUsaUVBQXFCLDhDQUE4QyxvRUFBaUI7QUFDam5CO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlNZXRyaWNzL3F1ZXJ5TWV0cmljcy5qcz9hZjFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQ2xpZW50U2lkZU1ldHJpY3MgfSBmcm9tIFwiLi9jbGllbnRTaWRlTWV0cmljcy5qc1wiO1xuaW1wb3J0IFF1ZXJ5TWV0cmljc0NvbnN0YW50cyBmcm9tIFwiLi9xdWVyeU1ldHJpY3NDb25zdGFudHMuanNcIjtcbmltcG9ydCB7IHBhcnNlRGVsaW1pdGVkU3RyaW5nLCB0aW1lU3BhbkZyb21NZXRyaWNzIH0gZnJvbSBcIi4vcXVlcnlNZXRyaWNzVXRpbHMuanNcIjtcbmltcG9ydCB7IFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyB9IGZyb20gXCIuL3F1ZXJ5UHJlcGFyYXRpb25UaW1lLmpzXCI7XG5pbXBvcnQgeyBSdW50aW1lRXhlY3V0aW9uVGltZXMgfSBmcm9tIFwiLi9ydW50aW1lRXhlY3V0aW9uVGltZXMuanNcIjtcbmltcG9ydCB7IFRpbWVTcGFuIH0gZnJvbSBcIi4vdGltZVNwYW4uanNcIjtcbmV4cG9ydCBjbGFzcyBRdWVyeU1ldHJpY3Mge1xuICAgIHJldHJpZXZlZERvY3VtZW50Q291bnQ7XG4gICAgcmV0cmlldmVkRG9jdW1lbnRTaXplO1xuICAgIG91dHB1dERvY3VtZW50Q291bnQ7XG4gICAgb3V0cHV0RG9jdW1lbnRTaXplO1xuICAgIGluZGV4SGl0RG9jdW1lbnRDb3VudDtcbiAgICB0b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZTtcbiAgICBxdWVyeVByZXBhcmF0aW9uVGltZXM7XG4gICAgaW5kZXhMb29rdXBUaW1lO1xuICAgIGRvY3VtZW50TG9hZFRpbWU7XG4gICAgdm1FeGVjdXRpb25UaW1lO1xuICAgIHJ1bnRpbWVFeGVjdXRpb25UaW1lcztcbiAgICBkb2N1bWVudFdyaXRlVGltZTtcbiAgICBjbGllbnRTaWRlTWV0cmljcztcbiAgICBjb25zdHJ1Y3RvcihyZXRyaWV2ZWREb2N1bWVudENvdW50LCByZXRyaWV2ZWREb2N1bWVudFNpemUsIG91dHB1dERvY3VtZW50Q291bnQsIG91dHB1dERvY3VtZW50U2l6ZSwgaW5kZXhIaXREb2N1bWVudENvdW50LCB0b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZSwgcXVlcnlQcmVwYXJhdGlvblRpbWVzLCBpbmRleExvb2t1cFRpbWUsIGRvY3VtZW50TG9hZFRpbWUsIHZtRXhlY3V0aW9uVGltZSwgcnVudGltZUV4ZWN1dGlvblRpbWVzLCBkb2N1bWVudFdyaXRlVGltZSwgY2xpZW50U2lkZU1ldHJpY3MpIHtcbiAgICAgICAgdGhpcy5yZXRyaWV2ZWREb2N1bWVudENvdW50ID0gcmV0cmlldmVkRG9jdW1lbnRDb3VudDtcbiAgICAgICAgdGhpcy5yZXRyaWV2ZWREb2N1bWVudFNpemUgPSByZXRyaWV2ZWREb2N1bWVudFNpemU7XG4gICAgICAgIHRoaXMub3V0cHV0RG9jdW1lbnRDb3VudCA9IG91dHB1dERvY3VtZW50Q291bnQ7XG4gICAgICAgIHRoaXMub3V0cHV0RG9jdW1lbnRTaXplID0gb3V0cHV0RG9jdW1lbnRTaXplO1xuICAgICAgICB0aGlzLmluZGV4SGl0RG9jdW1lbnRDb3VudCA9IGluZGV4SGl0RG9jdW1lbnRDb3VudDtcbiAgICAgICAgdGhpcy50b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZSA9IHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lO1xuICAgICAgICB0aGlzLnF1ZXJ5UHJlcGFyYXRpb25UaW1lcyA9IHF1ZXJ5UHJlcGFyYXRpb25UaW1lcztcbiAgICAgICAgdGhpcy5pbmRleExvb2t1cFRpbWUgPSBpbmRleExvb2t1cFRpbWU7XG4gICAgICAgIHRoaXMuZG9jdW1lbnRMb2FkVGltZSA9IGRvY3VtZW50TG9hZFRpbWU7XG4gICAgICAgIHRoaXMudm1FeGVjdXRpb25UaW1lID0gdm1FeGVjdXRpb25UaW1lO1xuICAgICAgICB0aGlzLnJ1bnRpbWVFeGVjdXRpb25UaW1lcyA9IHJ1bnRpbWVFeGVjdXRpb25UaW1lcztcbiAgICAgICAgdGhpcy5kb2N1bWVudFdyaXRlVGltZSA9IGRvY3VtZW50V3JpdGVUaW1lO1xuICAgICAgICB0aGlzLmNsaWVudFNpZGVNZXRyaWNzID0gY2xpZW50U2lkZU1ldHJpY3M7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIEluZGV4SGl0UmF0aW9cbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGluZGV4SGl0UmF0aW8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJldHJpZXZlZERvY3VtZW50Q291bnQgPT09IDBcbiAgICAgICAgICAgID8gMVxuICAgICAgICAgICAgOiB0aGlzLmluZGV4SGl0RG9jdW1lbnRDb3VudCAvIHRoaXMucmV0cmlldmVkRG9jdW1lbnRDb3VudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcmV0dXJucyBhIG5ldyBRdWVyeU1ldHJpY3MgaW5zdGFuY2UgdGhhdCBpcyB0aGUgYWRkaXRpb24gb2YgdGhpcyBhbmQgdGhlIGFyZ3VtZW50cy5cbiAgICAgKi9cbiAgICBhZGQocXVlcnlNZXRyaWNzQXJyYXkpIHtcbiAgICAgICAgbGV0IHJldHJpZXZlZERvY3VtZW50Q291bnQgPSAwO1xuICAgICAgICBsZXQgcmV0cmlldmVkRG9jdW1lbnRTaXplID0gMDtcbiAgICAgICAgbGV0IG91dHB1dERvY3VtZW50Q291bnQgPSAwO1xuICAgICAgICBsZXQgb3V0cHV0RG9jdW1lbnRTaXplID0gMDtcbiAgICAgICAgbGV0IGluZGV4SGl0RG9jdW1lbnRDb3VudCA9IDA7XG4gICAgICAgIGxldCB0b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZSA9IFRpbWVTcGFuLnplcm87XG4gICAgICAgIGNvbnN0IHF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5ID0gW107XG4gICAgICAgIGxldCBpbmRleExvb2t1cFRpbWUgPSBUaW1lU3Bhbi56ZXJvO1xuICAgICAgICBsZXQgZG9jdW1lbnRMb2FkVGltZSA9IFRpbWVTcGFuLnplcm87XG4gICAgICAgIGxldCB2bUV4ZWN1dGlvblRpbWUgPSBUaW1lU3Bhbi56ZXJvO1xuICAgICAgICBjb25zdCBydW50aW1lRXhlY3V0aW9uVGltZXNBcnJheSA9IFtdO1xuICAgICAgICBsZXQgZG9jdW1lbnRXcml0ZVRpbWUgPSBUaW1lU3Bhbi56ZXJvO1xuICAgICAgICBjb25zdCBjbGllbnRTaWRlUXVlcnlNZXRyaWNzQXJyYXkgPSBbXTtcbiAgICAgICAgcXVlcnlNZXRyaWNzQXJyYXkucHVzaCh0aGlzKTtcbiAgICAgICAgZm9yIChjb25zdCBxdWVyeU1ldHJpY3Mgb2YgcXVlcnlNZXRyaWNzQXJyYXkpIHtcbiAgICAgICAgICAgIGlmIChxdWVyeU1ldHJpY3MpIHtcbiAgICAgICAgICAgICAgICByZXRyaWV2ZWREb2N1bWVudENvdW50ICs9IHF1ZXJ5TWV0cmljcy5yZXRyaWV2ZWREb2N1bWVudENvdW50O1xuICAgICAgICAgICAgICAgIHJldHJpZXZlZERvY3VtZW50U2l6ZSArPSBxdWVyeU1ldHJpY3MucmV0cmlldmVkRG9jdW1lbnRTaXplO1xuICAgICAgICAgICAgICAgIG91dHB1dERvY3VtZW50Q291bnQgKz0gcXVlcnlNZXRyaWNzLm91dHB1dERvY3VtZW50Q291bnQ7XG4gICAgICAgICAgICAgICAgb3V0cHV0RG9jdW1lbnRTaXplICs9IHF1ZXJ5TWV0cmljcy5vdXRwdXREb2N1bWVudFNpemU7XG4gICAgICAgICAgICAgICAgaW5kZXhIaXREb2N1bWVudENvdW50ICs9IHF1ZXJ5TWV0cmljcy5pbmRleEhpdERvY3VtZW50Q291bnQ7XG4gICAgICAgICAgICAgICAgdG90YWxRdWVyeUV4ZWN1dGlvblRpbWUgPSB0b3RhbFF1ZXJ5RXhlY3V0aW9uVGltZS5hZGQocXVlcnlNZXRyaWNzLnRvdGFsUXVlcnlFeGVjdXRpb25UaW1lKTtcbiAgICAgICAgICAgICAgICBxdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheS5wdXNoKHF1ZXJ5TWV0cmljcy5xdWVyeVByZXBhcmF0aW9uVGltZXMpO1xuICAgICAgICAgICAgICAgIGluZGV4TG9va3VwVGltZSA9IGluZGV4TG9va3VwVGltZS5hZGQocXVlcnlNZXRyaWNzLmluZGV4TG9va3VwVGltZSk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnRMb2FkVGltZSA9IGRvY3VtZW50TG9hZFRpbWUuYWRkKHF1ZXJ5TWV0cmljcy5kb2N1bWVudExvYWRUaW1lKTtcbiAgICAgICAgICAgICAgICB2bUV4ZWN1dGlvblRpbWUgPSB2bUV4ZWN1dGlvblRpbWUuYWRkKHF1ZXJ5TWV0cmljcy52bUV4ZWN1dGlvblRpbWUpO1xuICAgICAgICAgICAgICAgIHJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5LnB1c2gocXVlcnlNZXRyaWNzLnJ1bnRpbWVFeGVjdXRpb25UaW1lcyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnRXcml0ZVRpbWUgPSBkb2N1bWVudFdyaXRlVGltZS5hZGQocXVlcnlNZXRyaWNzLmRvY3VtZW50V3JpdGVUaW1lKTtcbiAgICAgICAgICAgICAgICBjbGllbnRTaWRlUXVlcnlNZXRyaWNzQXJyYXkucHVzaChxdWVyeU1ldHJpY3MuY2xpZW50U2lkZU1ldHJpY3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlNZXRyaWNzKHJldHJpZXZlZERvY3VtZW50Q291bnQsIHJldHJpZXZlZERvY3VtZW50U2l6ZSwgb3V0cHV0RG9jdW1lbnRDb3VudCwgb3V0cHV0RG9jdW1lbnRTaXplLCBpbmRleEhpdERvY3VtZW50Q291bnQsIHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lLCBRdWVyeVByZXBhcmF0aW9uVGltZXMuY3JlYXRlRnJvbUFycmF5KHF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5KSwgaW5kZXhMb29rdXBUaW1lLCBkb2N1bWVudExvYWRUaW1lLCB2bUV4ZWN1dGlvblRpbWUsIFJ1bnRpbWVFeGVjdXRpb25UaW1lcy5jcmVhdGVGcm9tQXJyYXkocnVudGltZUV4ZWN1dGlvblRpbWVzQXJyYXkpLCBkb2N1bWVudFdyaXRlVGltZSwgQ2xpZW50U2lkZU1ldHJpY3MuY3JlYXRlRnJvbUFycmF5KC4uLmNsaWVudFNpZGVRdWVyeU1ldHJpY3NBcnJheSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdXRwdXQgdGhlIFF1ZXJ5TWV0cmljcyBhcyBhIGRlbGltaXRlZCBzdHJpbmcuXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvRGVsaW1pdGVkU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gKFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5SZXRyaWV2ZWREb2N1bWVudENvdW50ICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMucmV0cmlldmVkRG9jdW1lbnRDb3VudCArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBRdWVyeU1ldHJpY3NDb25zdGFudHMuUmV0cmlldmVkRG9jdW1lbnRTaXplICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMucmV0cmlldmVkRG9jdW1lbnRTaXplICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5PdXRwdXREb2N1bWVudENvdW50ICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMub3V0cHV0RG9jdW1lbnRDb3VudCArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBRdWVyeU1ldHJpY3NDb25zdGFudHMuT3V0cHV0RG9jdW1lbnRTaXplICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMub3V0cHV0RG9jdW1lbnRTaXplICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5JbmRleEhpdFJhdGlvICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMuaW5kZXhIaXRSYXRpbyArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBRdWVyeU1ldHJpY3NDb25zdGFudHMuVG90YWxRdWVyeUV4ZWN1dGlvblRpbWVJbk1zICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMudG90YWxRdWVyeUV4ZWN1dGlvblRpbWUudG90YWxNaWxsaXNlY29uZHMoKSArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICB0aGlzLnF1ZXJ5UHJlcGFyYXRpb25UaW1lcy50b0RlbGltaXRlZFN0cmluZygpICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5JbmRleExvb2t1cFRpbWVJbk1zICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMuaW5kZXhMb29rdXBUaW1lLnRvdGFsTWlsbGlzZWNvbmRzKCkgK1xuICAgICAgICAgICAgXCI7XCIgK1xuICAgICAgICAgICAgUXVlcnlNZXRyaWNzQ29uc3RhbnRzLkRvY3VtZW50TG9hZFRpbWVJbk1zICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRMb2FkVGltZS50b3RhbE1pbGxpc2Vjb25kcygpICtcbiAgICAgICAgICAgIFwiO1wiICtcbiAgICAgICAgICAgIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5WTUV4ZWN1dGlvblRpbWVJbk1zICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMudm1FeGVjdXRpb25UaW1lLnRvdGFsTWlsbGlzZWNvbmRzKCkgK1xuICAgICAgICAgICAgXCI7XCIgK1xuICAgICAgICAgICAgdGhpcy5ydW50aW1lRXhlY3V0aW9uVGltZXMudG9EZWxpbWl0ZWRTdHJpbmcoKSArXG4gICAgICAgICAgICBcIjtcIiArXG4gICAgICAgICAgICBRdWVyeU1ldHJpY3NDb25zdGFudHMuRG9jdW1lbnRXcml0ZVRpbWVJbk1zICtcbiAgICAgICAgICAgIFwiPVwiICtcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRXcml0ZVRpbWUudG90YWxNaWxsaXNlY29uZHMoKSk7XG4gICAgfVxuICAgIHN0YXRpYyB6ZXJvID0gbmV3IFF1ZXJ5TWV0cmljcygwLCAwLCAwLCAwLCAwLCBUaW1lU3Bhbi56ZXJvLCBRdWVyeVByZXBhcmF0aW9uVGltZXMuemVybywgVGltZVNwYW4uemVybywgVGltZVNwYW4uemVybywgVGltZVNwYW4uemVybywgUnVudGltZUV4ZWN1dGlvblRpbWVzLnplcm8sIFRpbWVTcGFuLnplcm8sIENsaWVudFNpZGVNZXRyaWNzLnplcm8pO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIFF1ZXJ5TWV0cmljcyBjbGFzcyB0aGF0IGlzIHRoZSBhZ2dyZWdhdGlvbiBvZiBhbiBhcnJheSBvZiBxdWVyeSBtZXRyaWNzLlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVGcm9tQXJyYXkocXVlcnlNZXRyaWNzQXJyYXkpIHtcbiAgICAgICAgaWYgKCFxdWVyeU1ldHJpY3NBcnJheSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicXVlcnlNZXRyaWNzQXJyYXkgaXMgbnVsbCBvciB1bmRlZmluZWQgaXRlbShzKVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUXVlcnlNZXRyaWNzLnplcm8uYWRkKHF1ZXJ5TWV0cmljc0FycmF5KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgUXVlcnlNZXRyaWNzIGNsYXNzIHRoaXMgaXMgZGVzZXJpYWxpemVkIGZyb20gYSBkZWxpbWl0ZWQgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVGcm9tRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZywgY2xpZW50U2lkZU1ldHJpY3MpIHtcbiAgICAgICAgY29uc3QgbWV0cmljcyA9IHBhcnNlRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZyk7XG4gICAgICAgIGNvbnN0IGluZGV4SGl0UmF0aW8gPSBtZXRyaWNzW1F1ZXJ5TWV0cmljc0NvbnN0YW50cy5JbmRleEhpdFJhdGlvXSB8fCAwO1xuICAgICAgICBjb25zdCByZXRyaWV2ZWREb2N1bWVudENvdW50ID0gbWV0cmljc1tRdWVyeU1ldHJpY3NDb25zdGFudHMuUmV0cmlldmVkRG9jdW1lbnRDb3VudF0gfHwgMDtcbiAgICAgICAgY29uc3QgaW5kZXhIaXRDb3VudCA9IGluZGV4SGl0UmF0aW8gKiByZXRyaWV2ZWREb2N1bWVudENvdW50O1xuICAgICAgICBjb25zdCBvdXRwdXREb2N1bWVudENvdW50ID0gbWV0cmljc1tRdWVyeU1ldHJpY3NDb25zdGFudHMuT3V0cHV0RG9jdW1lbnRDb3VudF0gfHwgMDtcbiAgICAgICAgY29uc3Qgb3V0cHV0RG9jdW1lbnRTaXplID0gbWV0cmljc1tRdWVyeU1ldHJpY3NDb25zdGFudHMuT3V0cHV0RG9jdW1lbnRTaXplXSB8fCAwO1xuICAgICAgICBjb25zdCByZXRyaWV2ZWREb2N1bWVudFNpemUgPSBtZXRyaWNzW1F1ZXJ5TWV0cmljc0NvbnN0YW50cy5SZXRyaWV2ZWREb2N1bWVudFNpemVdIHx8IDA7XG4gICAgICAgIGNvbnN0IHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lID0gdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuVG90YWxRdWVyeUV4ZWN1dGlvblRpbWVJbk1zKTtcbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeU1ldHJpY3MocmV0cmlldmVkRG9jdW1lbnRDb3VudCwgcmV0cmlldmVkRG9jdW1lbnRTaXplLCBvdXRwdXREb2N1bWVudENvdW50LCBvdXRwdXREb2N1bWVudFNpemUsIGluZGV4SGl0Q291bnQsIHRvdGFsUXVlcnlFeGVjdXRpb25UaW1lLCBRdWVyeVByZXBhcmF0aW9uVGltZXMuY3JlYXRlRnJvbURlbGltaXRlZFN0cmluZyhkZWxpbWl0ZWRTdHJpbmcpLCB0aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5JbmRleExvb2t1cFRpbWVJbk1zKSwgdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuRG9jdW1lbnRMb2FkVGltZUluTXMpLCB0aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5WTUV4ZWN1dGlvblRpbWVJbk1zKSwgUnVudGltZUV4ZWN1dGlvblRpbWVzLmNyZWF0ZUZyb21EZWxpbWl0ZWRTdHJpbmcoZGVsaW1pdGVkU3RyaW5nKSwgdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuRG9jdW1lbnRXcml0ZVRpbWVJbk1zKSwgY2xpZW50U2lkZU1ldHJpY3MgfHwgQ2xpZW50U2lkZU1ldHJpY3MuemVybyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlNZXRyaWNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetrics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    // QueryMetrics\n    RetrievedDocumentCount: \"retrievedDocumentCount\",\n    RetrievedDocumentSize: \"retrievedDocumentSize\",\n    OutputDocumentCount: \"outputDocumentCount\",\n    OutputDocumentSize: \"outputDocumentSize\",\n    IndexHitRatio: \"indexUtilizationRatio\",\n    IndexHitDocumentCount: \"indexHitDocumentCount\",\n    TotalQueryExecutionTimeInMs: \"totalExecutionTimeInMs\",\n    // QueryPreparationTimes\n    QueryCompileTimeInMs: \"queryCompileTimeInMs\",\n    LogicalPlanBuildTimeInMs: \"queryLogicalPlanBuildTimeInMs\",\n    PhysicalPlanBuildTimeInMs: \"queryPhysicalPlanBuildTimeInMs\",\n    QueryOptimizationTimeInMs: \"queryOptimizationTimeInMs\",\n    // QueryTimes\n    IndexLookupTimeInMs: \"indexLookupTimeInMs\",\n    DocumentLoadTimeInMs: \"documentLoadTimeInMs\",\n    VMExecutionTimeInMs: \"VMExecutionTimeInMs\",\n    DocumentWriteTimeInMs: \"writeOutputTimeInMs\",\n    // RuntimeExecutionTimes\n    QueryEngineTimes: \"queryEngineTimes\",\n    SystemFunctionExecuteTimeInMs: \"systemFunctionExecuteTimeInMs\",\n    UserDefinedFunctionExecutionTimeInMs: \"userFunctionExecuteTimeInMs\",\n    // QueryMetrics Text\n    RetrievedDocumentCountText: \"Retrieved Document Count\",\n    RetrievedDocumentSizeText: \"Retrieved Document Size\",\n    OutputDocumentCountText: \"Output Document Count\",\n    OutputDocumentSizeText: \"Output Document Size\",\n    IndexUtilizationText: \"Index Utilization\",\n    TotalQueryExecutionTimeText: \"Total Query Execution Time\",\n    // QueryPreparationTimes Text\n    QueryPreparationTimesText: \"Query Preparation Times\",\n    QueryCompileTimeText: \"Query Compilation Time\",\n    LogicalPlanBuildTimeText: \"Logical Plan Build Time\",\n    PhysicalPlanBuildTimeText: \"Physical Plan Build Time\",\n    QueryOptimizationTimeText: \"Query Optimization Time\",\n    // QueryTimes Text\n    QueryEngineTimesText: \"Query Engine Times\",\n    IndexLookupTimeText: \"Index Lookup Time\",\n    DocumentLoadTimeText: \"Document Load Time\",\n    WriteOutputTimeText: \"Document Write Time\",\n    // RuntimeExecutionTimes Text\n    RuntimeExecutionTimesText: \"Runtime Execution Times\",\n    TotalExecutionTimeText: \"Query Engine Execution Time\",\n    SystemFunctionExecuteTimeText: \"System Function Execution Time\",\n    UserDefinedFunctionExecutionTimeText: \"User-defined Function Execution Time\",\n    // ClientSideQueryMetrics Text\n    ClientSideQueryMetricsText: \"Client Side Metrics\",\n    RetriesText: \"Retry Count\",\n    RequestChargeText: \"Request Charge\",\n    FetchExecutionRangesText: \"Partition Execution Timeline\",\n    SchedulingMetricsText: \"Scheduling Metrics\",\n});\n//# sourceMappingURL=queryMetricsConstants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvcXVlcnlNZXRyaWNzQ29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlNZXRyaWNzL3F1ZXJ5TWV0cmljc0NvbnN0YW50cy5qcz9mNTUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IGRlZmF1bHQge1xuICAgIC8vIFF1ZXJ5TWV0cmljc1xuICAgIFJldHJpZXZlZERvY3VtZW50Q291bnQ6IFwicmV0cmlldmVkRG9jdW1lbnRDb3VudFwiLFxuICAgIFJldHJpZXZlZERvY3VtZW50U2l6ZTogXCJyZXRyaWV2ZWREb2N1bWVudFNpemVcIixcbiAgICBPdXRwdXREb2N1bWVudENvdW50OiBcIm91dHB1dERvY3VtZW50Q291bnRcIixcbiAgICBPdXRwdXREb2N1bWVudFNpemU6IFwib3V0cHV0RG9jdW1lbnRTaXplXCIsXG4gICAgSW5kZXhIaXRSYXRpbzogXCJpbmRleFV0aWxpemF0aW9uUmF0aW9cIixcbiAgICBJbmRleEhpdERvY3VtZW50Q291bnQ6IFwiaW5kZXhIaXREb2N1bWVudENvdW50XCIsXG4gICAgVG90YWxRdWVyeUV4ZWN1dGlvblRpbWVJbk1zOiBcInRvdGFsRXhlY3V0aW9uVGltZUluTXNcIixcbiAgICAvLyBRdWVyeVByZXBhcmF0aW9uVGltZXNcbiAgICBRdWVyeUNvbXBpbGVUaW1lSW5NczogXCJxdWVyeUNvbXBpbGVUaW1lSW5Nc1wiLFxuICAgIExvZ2ljYWxQbGFuQnVpbGRUaW1lSW5NczogXCJxdWVyeUxvZ2ljYWxQbGFuQnVpbGRUaW1lSW5Nc1wiLFxuICAgIFBoeXNpY2FsUGxhbkJ1aWxkVGltZUluTXM6IFwicXVlcnlQaHlzaWNhbFBsYW5CdWlsZFRpbWVJbk1zXCIsXG4gICAgUXVlcnlPcHRpbWl6YXRpb25UaW1lSW5NczogXCJxdWVyeU9wdGltaXphdGlvblRpbWVJbk1zXCIsXG4gICAgLy8gUXVlcnlUaW1lc1xuICAgIEluZGV4TG9va3VwVGltZUluTXM6IFwiaW5kZXhMb29rdXBUaW1lSW5Nc1wiLFxuICAgIERvY3VtZW50TG9hZFRpbWVJbk1zOiBcImRvY3VtZW50TG9hZFRpbWVJbk1zXCIsXG4gICAgVk1FeGVjdXRpb25UaW1lSW5NczogXCJWTUV4ZWN1dGlvblRpbWVJbk1zXCIsXG4gICAgRG9jdW1lbnRXcml0ZVRpbWVJbk1zOiBcIndyaXRlT3V0cHV0VGltZUluTXNcIixcbiAgICAvLyBSdW50aW1lRXhlY3V0aW9uVGltZXNcbiAgICBRdWVyeUVuZ2luZVRpbWVzOiBcInF1ZXJ5RW5naW5lVGltZXNcIixcbiAgICBTeXN0ZW1GdW5jdGlvbkV4ZWN1dGVUaW1lSW5NczogXCJzeXN0ZW1GdW5jdGlvbkV4ZWN1dGVUaW1lSW5Nc1wiLFxuICAgIFVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lSW5NczogXCJ1c2VyRnVuY3Rpb25FeGVjdXRlVGltZUluTXNcIixcbiAgICAvLyBRdWVyeU1ldHJpY3MgVGV4dFxuICAgIFJldHJpZXZlZERvY3VtZW50Q291bnRUZXh0OiBcIlJldHJpZXZlZCBEb2N1bWVudCBDb3VudFwiLFxuICAgIFJldHJpZXZlZERvY3VtZW50U2l6ZVRleHQ6IFwiUmV0cmlldmVkIERvY3VtZW50IFNpemVcIixcbiAgICBPdXRwdXREb2N1bWVudENvdW50VGV4dDogXCJPdXRwdXQgRG9jdW1lbnQgQ291bnRcIixcbiAgICBPdXRwdXREb2N1bWVudFNpemVUZXh0OiBcIk91dHB1dCBEb2N1bWVudCBTaXplXCIsXG4gICAgSW5kZXhVdGlsaXphdGlvblRleHQ6IFwiSW5kZXggVXRpbGl6YXRpb25cIixcbiAgICBUb3RhbFF1ZXJ5RXhlY3V0aW9uVGltZVRleHQ6IFwiVG90YWwgUXVlcnkgRXhlY3V0aW9uIFRpbWVcIixcbiAgICAvLyBRdWVyeVByZXBhcmF0aW9uVGltZXMgVGV4dFxuICAgIFF1ZXJ5UHJlcGFyYXRpb25UaW1lc1RleHQ6IFwiUXVlcnkgUHJlcGFyYXRpb24gVGltZXNcIixcbiAgICBRdWVyeUNvbXBpbGVUaW1lVGV4dDogXCJRdWVyeSBDb21waWxhdGlvbiBUaW1lXCIsXG4gICAgTG9naWNhbFBsYW5CdWlsZFRpbWVUZXh0OiBcIkxvZ2ljYWwgUGxhbiBCdWlsZCBUaW1lXCIsXG4gICAgUGh5c2ljYWxQbGFuQnVpbGRUaW1lVGV4dDogXCJQaHlzaWNhbCBQbGFuIEJ1aWxkIFRpbWVcIixcbiAgICBRdWVyeU9wdGltaXphdGlvblRpbWVUZXh0OiBcIlF1ZXJ5IE9wdGltaXphdGlvbiBUaW1lXCIsXG4gICAgLy8gUXVlcnlUaW1lcyBUZXh0XG4gICAgUXVlcnlFbmdpbmVUaW1lc1RleHQ6IFwiUXVlcnkgRW5naW5lIFRpbWVzXCIsXG4gICAgSW5kZXhMb29rdXBUaW1lVGV4dDogXCJJbmRleCBMb29rdXAgVGltZVwiLFxuICAgIERvY3VtZW50TG9hZFRpbWVUZXh0OiBcIkRvY3VtZW50IExvYWQgVGltZVwiLFxuICAgIFdyaXRlT3V0cHV0VGltZVRleHQ6IFwiRG9jdW1lbnQgV3JpdGUgVGltZVwiLFxuICAgIC8vIFJ1bnRpbWVFeGVjdXRpb25UaW1lcyBUZXh0XG4gICAgUnVudGltZUV4ZWN1dGlvblRpbWVzVGV4dDogXCJSdW50aW1lIEV4ZWN1dGlvbiBUaW1lc1wiLFxuICAgIFRvdGFsRXhlY3V0aW9uVGltZVRleHQ6IFwiUXVlcnkgRW5naW5lIEV4ZWN1dGlvbiBUaW1lXCIsXG4gICAgU3lzdGVtRnVuY3Rpb25FeGVjdXRlVGltZVRleHQ6IFwiU3lzdGVtIEZ1bmN0aW9uIEV4ZWN1dGlvbiBUaW1lXCIsXG4gICAgVXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWVUZXh0OiBcIlVzZXItZGVmaW5lZCBGdW5jdGlvbiBFeGVjdXRpb24gVGltZVwiLFxuICAgIC8vIENsaWVudFNpZGVRdWVyeU1ldHJpY3MgVGV4dFxuICAgIENsaWVudFNpZGVRdWVyeU1ldHJpY3NUZXh0OiBcIkNsaWVudCBTaWRlIE1ldHJpY3NcIixcbiAgICBSZXRyaWVzVGV4dDogXCJSZXRyeSBDb3VudFwiLFxuICAgIFJlcXVlc3RDaGFyZ2VUZXh0OiBcIlJlcXVlc3QgQ2hhcmdlXCIsXG4gICAgRmV0Y2hFeGVjdXRpb25SYW5nZXNUZXh0OiBcIlBhcnRpdGlvbiBFeGVjdXRpb24gVGltZWxpbmVcIixcbiAgICBTY2hlZHVsaW5nTWV0cmljc1RleHQ6IFwiU2NoZWR1bGluZyBNZXRyaWNzXCIsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlNZXRyaWNzQ29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsUtils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsUtils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNumeric: () => (/* binding */ isNumeric),\n/* harmony export */   parseDelimitedString: () => (/* binding */ parseDelimitedString),\n/* harmony export */   timeSpanFromMetrics: () => (/* binding */ timeSpanFromMetrics)\n/* harmony export */ });\n/* harmony import */ var _timeSpan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeSpan.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @hidden\n */\nfunction parseDelimitedString(delimitedString) {\n    if (delimitedString == null) {\n        throw new Error(\"delimitedString is null or undefined\");\n    }\n    const metrics = {};\n    const headerAttributes = delimitedString.split(\";\");\n    for (const attribute of headerAttributes) {\n        const attributeKeyValue = attribute.split(\"=\");\n        if (attributeKeyValue.length !== 2) {\n            throw new Error(\"recieved a malformed delimited string\");\n        }\n        const attributeKey = attributeKeyValue[0];\n        const attributeValue = parseFloat(attributeKeyValue[1]);\n        metrics[attributeKey] = attributeValue;\n    }\n    return metrics;\n}\n/**\n * @hidden\n */\nfunction timeSpanFromMetrics(metrics /* TODO: any */, key) {\n    if (key in metrics) {\n        return _timeSpan_js__WEBPACK_IMPORTED_MODULE_0__.TimeSpan.fromMilliseconds(metrics[key]);\n    }\n    return _timeSpan_js__WEBPACK_IMPORTED_MODULE_0__.TimeSpan.zero;\n}\n/**\n * @hidden\n */\nfunction isNumeric(input) {\n    return !isNaN(parseFloat(input)) && isFinite(input);\n}\n//# sourceMappingURL=queryMetricsUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvcXVlcnlNZXRyaWNzVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDeUM7QUFDekM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGVBQWUsa0RBQVE7QUFDdkI7QUFDQSxXQUFXLGtEQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3F1ZXJ5TWV0cmljcy9xdWVyeU1ldHJpY3NVdGlscy5qcz9kODkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgVGltZVNwYW4gfSBmcm9tIFwiLi90aW1lU3Bhbi5qc1wiO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZURlbGltaXRlZFN0cmluZyhkZWxpbWl0ZWRTdHJpbmcpIHtcbiAgICBpZiAoZGVsaW1pdGVkU3RyaW5nID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZGVsaW1pdGVkU3RyaW5nIGlzIG51bGwgb3IgdW5kZWZpbmVkXCIpO1xuICAgIH1cbiAgICBjb25zdCBtZXRyaWNzID0ge307XG4gICAgY29uc3QgaGVhZGVyQXR0cmlidXRlcyA9IGRlbGltaXRlZFN0cmluZy5zcGxpdChcIjtcIik7XG4gICAgZm9yIChjb25zdCBhdHRyaWJ1dGUgb2YgaGVhZGVyQXR0cmlidXRlcykge1xuICAgICAgICBjb25zdCBhdHRyaWJ1dGVLZXlWYWx1ZSA9IGF0dHJpYnV0ZS5zcGxpdChcIj1cIik7XG4gICAgICAgIGlmIChhdHRyaWJ1dGVLZXlWYWx1ZS5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInJlY2lldmVkIGEgbWFsZm9ybWVkIGRlbGltaXRlZCBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYXR0cmlidXRlS2V5ID0gYXR0cmlidXRlS2V5VmFsdWVbMF07XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZVZhbHVlID0gcGFyc2VGbG9hdChhdHRyaWJ1dGVLZXlWYWx1ZVsxXSk7XG4gICAgICAgIG1ldHJpY3NbYXR0cmlidXRlS2V5XSA9IGF0dHJpYnV0ZVZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gbWV0cmljcztcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZnVuY3Rpb24gdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzIC8qIFRPRE86IGFueSAqLywga2V5KSB7XG4gICAgaWYgKGtleSBpbiBtZXRyaWNzKSB7XG4gICAgICAgIHJldHVybiBUaW1lU3Bhbi5mcm9tTWlsbGlzZWNvbmRzKG1ldHJpY3Nba2V5XSk7XG4gICAgfVxuICAgIHJldHVybiBUaW1lU3Bhbi56ZXJvO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc051bWVyaWMoaW5wdXQpIHtcbiAgICByZXR1cm4gIWlzTmFOKHBhcnNlRmxvYXQoaW5wdXQpKSAmJiBpc0Zpbml0ZShpbnB1dCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeU1ldHJpY3NVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryPreparationTime.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryPreparationTime.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryPreparationTimes: () => (/* binding */ QueryPreparationTimes)\n/* harmony export */ });\n/* harmony import */ var _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryMetricsConstants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js\");\n/* harmony import */ var _queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queryMetricsUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsUtils.js\");\n/* harmony import */ var _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeSpan.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass QueryPreparationTimes {\n    queryCompilationTime;\n    logicalPlanBuildTime;\n    physicalPlanBuildTime;\n    queryOptimizationTime;\n    constructor(queryCompilationTime, logicalPlanBuildTime, physicalPlanBuildTime, queryOptimizationTime) {\n        this.queryCompilationTime = queryCompilationTime;\n        this.logicalPlanBuildTime = logicalPlanBuildTime;\n        this.physicalPlanBuildTime = physicalPlanBuildTime;\n        this.queryOptimizationTime = queryOptimizationTime;\n    }\n    /**\n     * returns a new QueryPreparationTimes instance that is the addition of this and the arguments.\n     */\n    add(...queryPreparationTimesArray) {\n        let queryCompilationTime = this.queryCompilationTime;\n        let logicalPlanBuildTime = this.logicalPlanBuildTime;\n        let physicalPlanBuildTime = this.physicalPlanBuildTime;\n        let queryOptimizationTime = this.queryOptimizationTime;\n        for (const queryPreparationTimes of queryPreparationTimesArray) {\n            if (queryPreparationTimes == null) {\n                throw new Error(\"queryPreparationTimesArray has null or undefined item(s)\");\n            }\n            queryCompilationTime = queryCompilationTime.add(queryPreparationTimes.queryCompilationTime);\n            logicalPlanBuildTime = logicalPlanBuildTime.add(queryPreparationTimes.logicalPlanBuildTime);\n            physicalPlanBuildTime = physicalPlanBuildTime.add(queryPreparationTimes.physicalPlanBuildTime);\n            queryOptimizationTime = queryOptimizationTime.add(queryPreparationTimes.queryOptimizationTime);\n        }\n        return new QueryPreparationTimes(queryCompilationTime, logicalPlanBuildTime, physicalPlanBuildTime, queryOptimizationTime);\n    }\n    /**\n     * Output the QueryPreparationTimes as a delimited string.\n     */\n    toDelimitedString() {\n        return (`${_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].QueryCompileTimeInMs}=${this.queryCompilationTime.totalMilliseconds()};` +\n            `${_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LogicalPlanBuildTimeInMs}=${this.logicalPlanBuildTime.totalMilliseconds()};` +\n            `${_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].PhysicalPlanBuildTimeInMs}=${this.physicalPlanBuildTime.totalMilliseconds()};` +\n            `${_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].QueryOptimizationTimeInMs}=${this.queryOptimizationTime.totalMilliseconds()}`);\n    }\n    static zero = new QueryPreparationTimes(_timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero);\n    /**\n     * Returns a new instance of the QueryPreparationTimes class that is the\n     * aggregation of an array of QueryPreparationTimes.\n     */\n    static createFromArray(queryPreparationTimesArray) {\n        if (queryPreparationTimesArray == null) {\n            throw new Error(\"queryPreparationTimesArray is null or undefined item(s)\");\n        }\n        return QueryPreparationTimes.zero.add(...queryPreparationTimesArray);\n    }\n    /**\n     * Returns a new instance of the QueryPreparationTimes class this is deserialized from a delimited string.\n     */\n    static createFromDelimitedString(delimitedString) {\n        const metrics = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.parseDelimitedString)(delimitedString);\n        return new QueryPreparationTimes((0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].QueryCompileTimeInMs), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LogicalPlanBuildTimeInMs), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].PhysicalPlanBuildTimeInMs), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].QueryOptimizationTimeInMs));\n    }\n}\n//# sourceMappingURL=queryPreparationTime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvcXVlcnlQcmVwYXJhdGlvblRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDK0Q7QUFDb0I7QUFDMUM7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUVBQXFCLHNCQUFzQixHQUFHLCtDQUErQztBQUNoSCxlQUFlLGlFQUFxQiwwQkFBMEIsR0FBRywrQ0FBK0M7QUFDaEgsZUFBZSxpRUFBcUIsMkJBQTJCLEdBQUcsZ0RBQWdEO0FBQ2xILGVBQWUsaUVBQXFCLDJCQUEyQixHQUFHLCtDQUErQztBQUNqSDtBQUNBLDRDQUE0QyxrREFBUSxPQUFPLGtEQUFRLE9BQU8sa0RBQVEsT0FBTyxrREFBUTtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJFQUFvQjtBQUM1Qyx5Q0FBeUMsMEVBQW1CLFVBQVUsaUVBQXFCLHdCQUF3QiwwRUFBbUIsVUFBVSxpRUFBcUIsNEJBQTRCLDBFQUFtQixVQUFVLGlFQUFxQiw2QkFBNkIsMEVBQW1CLFVBQVUsaUVBQXFCO0FBQ2xVO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcXVlcnlNZXRyaWNzL3F1ZXJ5UHJlcGFyYXRpb25UaW1lLmpzPzgyZTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgUXVlcnlNZXRyaWNzQ29uc3RhbnRzIGZyb20gXCIuL3F1ZXJ5TWV0cmljc0NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IHsgcGFyc2VEZWxpbWl0ZWRTdHJpbmcsIHRpbWVTcGFuRnJvbU1ldHJpY3MgfSBmcm9tIFwiLi9xdWVyeU1ldHJpY3NVdGlscy5qc1wiO1xuaW1wb3J0IHsgVGltZVNwYW4gfSBmcm9tIFwiLi90aW1lU3Bhbi5qc1wiO1xuZXhwb3J0IGNsYXNzIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyB7XG4gICAgcXVlcnlDb21waWxhdGlvblRpbWU7XG4gICAgbG9naWNhbFBsYW5CdWlsZFRpbWU7XG4gICAgcGh5c2ljYWxQbGFuQnVpbGRUaW1lO1xuICAgIHF1ZXJ5T3B0aW1pemF0aW9uVGltZTtcbiAgICBjb25zdHJ1Y3RvcihxdWVyeUNvbXBpbGF0aW9uVGltZSwgbG9naWNhbFBsYW5CdWlsZFRpbWUsIHBoeXNpY2FsUGxhbkJ1aWxkVGltZSwgcXVlcnlPcHRpbWl6YXRpb25UaW1lKSB7XG4gICAgICAgIHRoaXMucXVlcnlDb21waWxhdGlvblRpbWUgPSBxdWVyeUNvbXBpbGF0aW9uVGltZTtcbiAgICAgICAgdGhpcy5sb2dpY2FsUGxhbkJ1aWxkVGltZSA9IGxvZ2ljYWxQbGFuQnVpbGRUaW1lO1xuICAgICAgICB0aGlzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZSA9IHBoeXNpY2FsUGxhbkJ1aWxkVGltZTtcbiAgICAgICAgdGhpcy5xdWVyeU9wdGltaXphdGlvblRpbWUgPSBxdWVyeU9wdGltaXphdGlvblRpbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJldHVybnMgYSBuZXcgUXVlcnlQcmVwYXJhdGlvblRpbWVzIGluc3RhbmNlIHRoYXQgaXMgdGhlIGFkZGl0aW9uIG9mIHRoaXMgYW5kIHRoZSBhcmd1bWVudHMuXG4gICAgICovXG4gICAgYWRkKC4uLnF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5KSB7XG4gICAgICAgIGxldCBxdWVyeUNvbXBpbGF0aW9uVGltZSA9IHRoaXMucXVlcnlDb21waWxhdGlvblRpbWU7XG4gICAgICAgIGxldCBsb2dpY2FsUGxhbkJ1aWxkVGltZSA9IHRoaXMubG9naWNhbFBsYW5CdWlsZFRpbWU7XG4gICAgICAgIGxldCBwaHlzaWNhbFBsYW5CdWlsZFRpbWUgPSB0aGlzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZTtcbiAgICAgICAgbGV0IHF1ZXJ5T3B0aW1pemF0aW9uVGltZSA9IHRoaXMucXVlcnlPcHRpbWl6YXRpb25UaW1lO1xuICAgICAgICBmb3IgKGNvbnN0IHF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBvZiBxdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheSkge1xuICAgICAgICAgICAgaWYgKHF1ZXJ5UHJlcGFyYXRpb25UaW1lcyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicXVlcnlQcmVwYXJhdGlvblRpbWVzQXJyYXkgaGFzIG51bGwgb3IgdW5kZWZpbmVkIGl0ZW0ocylcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxdWVyeUNvbXBpbGF0aW9uVGltZSA9IHF1ZXJ5Q29tcGlsYXRpb25UaW1lLmFkZChxdWVyeVByZXBhcmF0aW9uVGltZXMucXVlcnlDb21waWxhdGlvblRpbWUpO1xuICAgICAgICAgICAgbG9naWNhbFBsYW5CdWlsZFRpbWUgPSBsb2dpY2FsUGxhbkJ1aWxkVGltZS5hZGQocXVlcnlQcmVwYXJhdGlvblRpbWVzLmxvZ2ljYWxQbGFuQnVpbGRUaW1lKTtcbiAgICAgICAgICAgIHBoeXNpY2FsUGxhbkJ1aWxkVGltZSA9IHBoeXNpY2FsUGxhbkJ1aWxkVGltZS5hZGQocXVlcnlQcmVwYXJhdGlvblRpbWVzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZSk7XG4gICAgICAgICAgICBxdWVyeU9wdGltaXphdGlvblRpbWUgPSBxdWVyeU9wdGltaXphdGlvblRpbWUuYWRkKHF1ZXJ5UHJlcGFyYXRpb25UaW1lcy5xdWVyeU9wdGltaXphdGlvblRpbWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlQcmVwYXJhdGlvblRpbWVzKHF1ZXJ5Q29tcGlsYXRpb25UaW1lLCBsb2dpY2FsUGxhbkJ1aWxkVGltZSwgcGh5c2ljYWxQbGFuQnVpbGRUaW1lLCBxdWVyeU9wdGltaXphdGlvblRpbWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdXRwdXQgdGhlIFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyBhcyBhIGRlbGltaXRlZCBzdHJpbmcuXG4gICAgICovXG4gICAgdG9EZWxpbWl0ZWRTdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiAoYCR7UXVlcnlNZXRyaWNzQ29uc3RhbnRzLlF1ZXJ5Q29tcGlsZVRpbWVJbk1zfT0ke3RoaXMucXVlcnlDb21waWxhdGlvblRpbWUudG90YWxNaWxsaXNlY29uZHMoKX07YCArXG4gICAgICAgICAgICBgJHtRdWVyeU1ldHJpY3NDb25zdGFudHMuTG9naWNhbFBsYW5CdWlsZFRpbWVJbk1zfT0ke3RoaXMubG9naWNhbFBsYW5CdWlsZFRpbWUudG90YWxNaWxsaXNlY29uZHMoKX07YCArXG4gICAgICAgICAgICBgJHtRdWVyeU1ldHJpY3NDb25zdGFudHMuUGh5c2ljYWxQbGFuQnVpbGRUaW1lSW5Nc309JHt0aGlzLnBoeXNpY2FsUGxhbkJ1aWxkVGltZS50b3RhbE1pbGxpc2Vjb25kcygpfTtgICtcbiAgICAgICAgICAgIGAke1F1ZXJ5TWV0cmljc0NvbnN0YW50cy5RdWVyeU9wdGltaXphdGlvblRpbWVJbk1zfT0ke3RoaXMucXVlcnlPcHRpbWl6YXRpb25UaW1lLnRvdGFsTWlsbGlzZWNvbmRzKCl9YCk7XG4gICAgfVxuICAgIHN0YXRpYyB6ZXJvID0gbmV3IFF1ZXJ5UHJlcGFyYXRpb25UaW1lcyhUaW1lU3Bhbi56ZXJvLCBUaW1lU3Bhbi56ZXJvLCBUaW1lU3Bhbi56ZXJvLCBUaW1lU3Bhbi56ZXJvKTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBRdWVyeVByZXBhcmF0aW9uVGltZXMgY2xhc3MgdGhhdCBpcyB0aGVcbiAgICAgKiBhZ2dyZWdhdGlvbiBvZiBhbiBhcnJheSBvZiBRdWVyeVByZXBhcmF0aW9uVGltZXMuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUZyb21BcnJheShxdWVyeVByZXBhcmF0aW9uVGltZXNBcnJheSkge1xuICAgICAgICBpZiAocXVlcnlQcmVwYXJhdGlvblRpbWVzQXJyYXkgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicXVlcnlQcmVwYXJhdGlvblRpbWVzQXJyYXkgaXMgbnVsbCBvciB1bmRlZmluZWQgaXRlbShzKVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUXVlcnlQcmVwYXJhdGlvblRpbWVzLnplcm8uYWRkKC4uLnF1ZXJ5UHJlcGFyYXRpb25UaW1lc0FycmF5KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgUXVlcnlQcmVwYXJhdGlvblRpbWVzIGNsYXNzIHRoaXMgaXMgZGVzZXJpYWxpemVkIGZyb20gYSBkZWxpbWl0ZWQgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVGcm9tRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZykge1xuICAgICAgICBjb25zdCBtZXRyaWNzID0gcGFyc2VEZWxpbWl0ZWRTdHJpbmcoZGVsaW1pdGVkU3RyaW5nKTtcbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeVByZXBhcmF0aW9uVGltZXModGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuUXVlcnlDb21waWxlVGltZUluTXMpLCB0aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5Mb2dpY2FsUGxhbkJ1aWxkVGltZUluTXMpLCB0aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5QaHlzaWNhbFBsYW5CdWlsZFRpbWVJbk1zKSwgdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuUXVlcnlPcHRpbWl6YXRpb25UaW1lSW5NcykpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5UHJlcGFyYXRpb25UaW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryPreparationTime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/runtimeExecutionTimes.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/runtimeExecutionTimes.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RuntimeExecutionTimes: () => (/* binding */ RuntimeExecutionTimes)\n/* harmony export */ });\n/* harmony import */ var _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryMetricsConstants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsConstants.js\");\n/* harmony import */ var _queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queryMetricsUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/queryMetricsUtils.js\");\n/* harmony import */ var _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeSpan.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass RuntimeExecutionTimes {\n    queryEngineExecutionTime;\n    systemFunctionExecutionTime;\n    userDefinedFunctionExecutionTime;\n    constructor(queryEngineExecutionTime, systemFunctionExecutionTime, userDefinedFunctionExecutionTime) {\n        this.queryEngineExecutionTime = queryEngineExecutionTime;\n        this.systemFunctionExecutionTime = systemFunctionExecutionTime;\n        this.userDefinedFunctionExecutionTime = userDefinedFunctionExecutionTime;\n    }\n    /**\n     * returns a new RuntimeExecutionTimes instance that is the addition of this and the arguments.\n     */\n    add(...runtimeExecutionTimesArray) {\n        let queryEngineExecutionTime = this.queryEngineExecutionTime;\n        let systemFunctionExecutionTime = this.systemFunctionExecutionTime;\n        let userDefinedFunctionExecutionTime = this.userDefinedFunctionExecutionTime;\n        for (const runtimeExecutionTimes of runtimeExecutionTimesArray) {\n            if (runtimeExecutionTimes == null) {\n                throw new Error(\"runtimeExecutionTimes has null or undefined item(s)\");\n            }\n            queryEngineExecutionTime = queryEngineExecutionTime.add(runtimeExecutionTimes.queryEngineExecutionTime);\n            systemFunctionExecutionTime = systemFunctionExecutionTime.add(runtimeExecutionTimes.systemFunctionExecutionTime);\n            userDefinedFunctionExecutionTime = userDefinedFunctionExecutionTime.add(runtimeExecutionTimes.userDefinedFunctionExecutionTime);\n        }\n        return new RuntimeExecutionTimes(queryEngineExecutionTime, systemFunctionExecutionTime, userDefinedFunctionExecutionTime);\n    }\n    /**\n     * Output the RuntimeExecutionTimes as a delimited string.\n     */\n    toDelimitedString() {\n        return (`${_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SystemFunctionExecuteTimeInMs}=${this.systemFunctionExecutionTime.totalMilliseconds()};` +\n            `${_queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UserDefinedFunctionExecutionTimeInMs}=${this.userDefinedFunctionExecutionTime.totalMilliseconds()}`);\n    }\n    static zero = new RuntimeExecutionTimes(_timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero, _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero);\n    /**\n     * Returns a new instance of the RuntimeExecutionTimes class that is\n     *  the aggregation of an array of RuntimeExecutionTimes.\n     */\n    static createFromArray(runtimeExecutionTimesArray) {\n        if (runtimeExecutionTimesArray == null) {\n            throw new Error(\"runtimeExecutionTimesArray is null or undefined item(s)\");\n        }\n        return RuntimeExecutionTimes.zero.add(...runtimeExecutionTimesArray);\n    }\n    /**\n     * Returns a new instance of the RuntimeExecutionTimes class this is deserialized from a delimited string.\n     */\n    static createFromDelimitedString(delimitedString) {\n        const metrics = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.parseDelimitedString)(delimitedString);\n        const vmExecutionTime = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].VMExecutionTimeInMs);\n        const indexLookupTime = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].IndexLookupTimeInMs);\n        const documentLoadTime = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DocumentLoadTimeInMs);\n        const documentWriteTime = (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DocumentWriteTimeInMs);\n        let queryEngineExecutionTime = _timeSpan_js__WEBPACK_IMPORTED_MODULE_2__.TimeSpan.zero;\n        queryEngineExecutionTime = queryEngineExecutionTime.add(vmExecutionTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(indexLookupTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(documentLoadTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(documentWriteTime);\n        return new RuntimeExecutionTimes(queryEngineExecutionTime, (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SystemFunctionExecuteTimeInMs), (0,_queryMetricsUtils_js__WEBPACK_IMPORTED_MODULE_1__.timeSpanFromMetrics)(metrics, _queryMetricsConstants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].UserDefinedFunctionExecutionTimeInMs));\n    }\n}\n//# sourceMappingURL=runtimeExecutionTimes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvcnVudGltZUV4ZWN1dGlvblRpbWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQytEO0FBQ29CO0FBQzFDO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpRUFBcUIsK0JBQStCLEdBQUcsc0RBQXNEO0FBQ2hJLGVBQWUsaUVBQXFCLHNDQUFzQyxHQUFHLDBEQUEwRDtBQUN2STtBQUNBLDRDQUE0QyxrREFBUSxPQUFPLGtEQUFRLE9BQU8sa0RBQVE7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwyRUFBb0I7QUFDNUMsZ0NBQWdDLDBFQUFtQixVQUFVLGlFQUFxQjtBQUNsRixnQ0FBZ0MsMEVBQW1CLFVBQVUsaUVBQXFCO0FBQ2xGLGlDQUFpQywwRUFBbUIsVUFBVSxpRUFBcUI7QUFDbkYsa0NBQWtDLDBFQUFtQixVQUFVLGlFQUFxQjtBQUNwRix1Q0FBdUMsa0RBQVE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsMEVBQW1CLFVBQVUsaUVBQXFCLGlDQUFpQywwRUFBbUIsVUFBVSxpRUFBcUI7QUFDeE07QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9xdWVyeU1ldHJpY3MvcnVudGltZUV4ZWN1dGlvblRpbWVzLmpzPzhkNGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgUXVlcnlNZXRyaWNzQ29uc3RhbnRzIGZyb20gXCIuL3F1ZXJ5TWV0cmljc0NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IHsgcGFyc2VEZWxpbWl0ZWRTdHJpbmcsIHRpbWVTcGFuRnJvbU1ldHJpY3MgfSBmcm9tIFwiLi9xdWVyeU1ldHJpY3NVdGlscy5qc1wiO1xuaW1wb3J0IHsgVGltZVNwYW4gfSBmcm9tIFwiLi90aW1lU3Bhbi5qc1wiO1xuZXhwb3J0IGNsYXNzIFJ1bnRpbWVFeGVjdXRpb25UaW1lcyB7XG4gICAgcXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lO1xuICAgIHN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZTtcbiAgICB1c2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZTtcbiAgICBjb25zdHJ1Y3RvcihxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUsIHN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZSwgdXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUpIHtcbiAgICAgICAgdGhpcy5xdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWU7XG4gICAgICAgIHRoaXMuc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lO1xuICAgICAgICB0aGlzLnVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lID0gdXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJldHVybnMgYSBuZXcgUnVudGltZUV4ZWN1dGlvblRpbWVzIGluc3RhbmNlIHRoYXQgaXMgdGhlIGFkZGl0aW9uIG9mIHRoaXMgYW5kIHRoZSBhcmd1bWVudHMuXG4gICAgICovXG4gICAgYWRkKC4uLnJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5KSB7XG4gICAgICAgIGxldCBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSB0aGlzLnF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZTtcbiAgICAgICAgbGV0IHN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZSA9IHRoaXMuc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lO1xuICAgICAgICBsZXQgdXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUgPSB0aGlzLnVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lO1xuICAgICAgICBmb3IgKGNvbnN0IHJ1bnRpbWVFeGVjdXRpb25UaW1lcyBvZiBydW50aW1lRXhlY3V0aW9uVGltZXNBcnJheSkge1xuICAgICAgICAgICAgaWYgKHJ1bnRpbWVFeGVjdXRpb25UaW1lcyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicnVudGltZUV4ZWN1dGlvblRpbWVzIGhhcyBudWxsIG9yIHVuZGVmaW5lZCBpdGVtKHMpXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lID0gcXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lLmFkZChydW50aW1lRXhlY3V0aW9uVGltZXMucXVlcnlFbmdpbmVFeGVjdXRpb25UaW1lKTtcbiAgICAgICAgICAgIHN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZSA9IHN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZS5hZGQocnVudGltZUV4ZWN1dGlvblRpbWVzLnN5c3RlbUZ1bmN0aW9uRXhlY3V0aW9uVGltZSk7XG4gICAgICAgICAgICB1c2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZSA9IHVzZXJEZWZpbmVkRnVuY3Rpb25FeGVjdXRpb25UaW1lLmFkZChydW50aW1lRXhlY3V0aW9uVGltZXMudXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUnVudGltZUV4ZWN1dGlvblRpbWVzKHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSwgc3lzdGVtRnVuY3Rpb25FeGVjdXRpb25UaW1lLCB1c2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE91dHB1dCB0aGUgUnVudGltZUV4ZWN1dGlvblRpbWVzIGFzIGEgZGVsaW1pdGVkIHN0cmluZy5cbiAgICAgKi9cbiAgICB0b0RlbGltaXRlZFN0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIChgJHtRdWVyeU1ldHJpY3NDb25zdGFudHMuU3lzdGVtRnVuY3Rpb25FeGVjdXRlVGltZUluTXN9PSR7dGhpcy5zeXN0ZW1GdW5jdGlvbkV4ZWN1dGlvblRpbWUudG90YWxNaWxsaXNlY29uZHMoKX07YCArXG4gICAgICAgICAgICBgJHtRdWVyeU1ldHJpY3NDb25zdGFudHMuVXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWVJbk1zfT0ke3RoaXMudXNlckRlZmluZWRGdW5jdGlvbkV4ZWN1dGlvblRpbWUudG90YWxNaWxsaXNlY29uZHMoKX1gKTtcbiAgICB9XG4gICAgc3RhdGljIHplcm8gPSBuZXcgUnVudGltZUV4ZWN1dGlvblRpbWVzKFRpbWVTcGFuLnplcm8sIFRpbWVTcGFuLnplcm8sIFRpbWVTcGFuLnplcm8pO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIFJ1bnRpbWVFeGVjdXRpb25UaW1lcyBjbGFzcyB0aGF0IGlzXG4gICAgICogIHRoZSBhZ2dyZWdhdGlvbiBvZiBhbiBhcnJheSBvZiBSdW50aW1lRXhlY3V0aW9uVGltZXMuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUZyb21BcnJheShydW50aW1lRXhlY3V0aW9uVGltZXNBcnJheSkge1xuICAgICAgICBpZiAocnVudGltZUV4ZWN1dGlvblRpbWVzQXJyYXkgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicnVudGltZUV4ZWN1dGlvblRpbWVzQXJyYXkgaXMgbnVsbCBvciB1bmRlZmluZWQgaXRlbShzKVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUnVudGltZUV4ZWN1dGlvblRpbWVzLnplcm8uYWRkKC4uLnJ1bnRpbWVFeGVjdXRpb25UaW1lc0FycmF5KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgUnVudGltZUV4ZWN1dGlvblRpbWVzIGNsYXNzIHRoaXMgaXMgZGVzZXJpYWxpemVkIGZyb20gYSBkZWxpbWl0ZWQgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVGcm9tRGVsaW1pdGVkU3RyaW5nKGRlbGltaXRlZFN0cmluZykge1xuICAgICAgICBjb25zdCBtZXRyaWNzID0gcGFyc2VEZWxpbWl0ZWRTdHJpbmcoZGVsaW1pdGVkU3RyaW5nKTtcbiAgICAgICAgY29uc3Qgdm1FeGVjdXRpb25UaW1lID0gdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuVk1FeGVjdXRpb25UaW1lSW5Ncyk7XG4gICAgICAgIGNvbnN0IGluZGV4TG9va3VwVGltZSA9IHRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgUXVlcnlNZXRyaWNzQ29uc3RhbnRzLkluZGV4TG9va3VwVGltZUluTXMpO1xuICAgICAgICBjb25zdCBkb2N1bWVudExvYWRUaW1lID0gdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuRG9jdW1lbnRMb2FkVGltZUluTXMpO1xuICAgICAgICBjb25zdCBkb2N1bWVudFdyaXRlVGltZSA9IHRpbWVTcGFuRnJvbU1ldHJpY3MobWV0cmljcywgUXVlcnlNZXRyaWNzQ29uc3RhbnRzLkRvY3VtZW50V3JpdGVUaW1lSW5Ncyk7XG4gICAgICAgIGxldCBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBUaW1lU3Bhbi56ZXJvO1xuICAgICAgICBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUuYWRkKHZtRXhlY3V0aW9uVGltZSk7XG4gICAgICAgIHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSA9IHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZS5zdWJ0cmFjdChpbmRleExvb2t1cFRpbWUpO1xuICAgICAgICBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUgPSBxdWVyeUVuZ2luZUV4ZWN1dGlvblRpbWUuc3VidHJhY3QoZG9jdW1lbnRMb2FkVGltZSk7XG4gICAgICAgIHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSA9IHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZS5zdWJ0cmFjdChkb2N1bWVudFdyaXRlVGltZSk7XG4gICAgICAgIHJldHVybiBuZXcgUnVudGltZUV4ZWN1dGlvblRpbWVzKHF1ZXJ5RW5naW5lRXhlY3V0aW9uVGltZSwgdGltZVNwYW5Gcm9tTWV0cmljcyhtZXRyaWNzLCBRdWVyeU1ldHJpY3NDb25zdGFudHMuU3lzdGVtRnVuY3Rpb25FeGVjdXRlVGltZUluTXMpLCB0aW1lU3BhbkZyb21NZXRyaWNzKG1ldHJpY3MsIFF1ZXJ5TWV0cmljc0NvbnN0YW50cy5Vc2VyRGVmaW5lZEZ1bmN0aW9uRXhlY3V0aW9uVGltZUluTXMpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ydW50aW1lRXhlY3V0aW9uVGltZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/runtimeExecutionTimes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimeSpan: () => (/* binding */ TimeSpan)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// Ported this implementation to javascript:\n// https://referencesource.microsoft.com/#mscorlib/system/timespan.cs,83e476c1ae112117\n/** @hidden */\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst ticksPerMillisecond = 10000;\n/** @hidden */\nconst millisecondsPerTick = 1.0 / ticksPerMillisecond;\n/** @hidden */\nconst ticksPerSecond = ticksPerMillisecond * 1000; // 10,000,000\n/** @hidden */\nconst secondsPerTick = 1.0 / ticksPerSecond; // 0.0001\n/** @hidden */\nconst ticksPerMinute = ticksPerSecond * 60; // 600,000,000\n/** @hidden */\nconst minutesPerTick = 1.0 / ticksPerMinute; // 1.6666666666667e-9\n/** @hidden */\nconst ticksPerHour = ticksPerMinute * 60; // 36,000,000,000\n/** @hidden */\nconst hoursPerTick = 1.0 / ticksPerHour; // 2.77777777777777778e-11\n/** @hidden */\nconst ticksPerDay = ticksPerHour * 24; // 864,000,000,000\n/** @hidden */\nconst daysPerTick = 1.0 / ticksPerDay; // 1.1574074074074074074e-12\n/** @hidden */\nconst millisPerSecond = 1000;\n/** @hidden */\nconst millisPerMinute = millisPerSecond * 60; //     60,000\n/** @hidden */\nconst millisPerHour = millisPerMinute * 60; //  3,600,000\n/** @hidden */\nconst millisPerDay = millisPerHour * 24; // 86,400,000\n/** @hidden */\nconst maxMilliSeconds = Number.MAX_SAFE_INTEGER / ticksPerMillisecond;\n/** @hidden */\nconst minMilliSeconds = Number.MIN_SAFE_INTEGER / ticksPerMillisecond;\n/**\n * Represents a time interval.\n *\n * @param days                 - Number of days.\n * @param hours                - Number of hours.\n * @param minutes              - Number of minutes.\n * @param seconds              - Number of seconds.\n * @param milliseconds         - Number of milliseconds.\n * @hidden\n */\nclass TimeSpan {\n    _ticks;\n    constructor(days, hours, minutes, seconds, milliseconds) {\n        // Constructor\n        if (!Number.isInteger(days)) {\n            throw new Error(\"days is not an integer\");\n        }\n        if (!Number.isInteger(hours)) {\n            throw new Error(\"hours is not an integer\");\n        }\n        if (!Number.isInteger(minutes)) {\n            throw new Error(\"minutes is not an integer\");\n        }\n        if (!Number.isInteger(seconds)) {\n            throw new Error(\"seconds is not an integer\");\n        }\n        if (!Number.isInteger(milliseconds)) {\n            throw new Error(\"milliseconds is not an integer\");\n        }\n        const totalMilliSeconds = (days * 3600 * 24 + hours * 3600 + minutes * 60 + seconds) * 1000 + milliseconds;\n        if (totalMilliSeconds > maxMilliSeconds || totalMilliSeconds < minMilliSeconds) {\n            throw new Error(\"Total number of milliseconds was either too large or too small\");\n        }\n        this._ticks = totalMilliSeconds * ticksPerMillisecond;\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the sum of the specified TimeSpan object and this instance.\n     * @param ts - The time interval to add.\n     */\n    add(ts) {\n        if (TimeSpan.additionDoesOverflow(this._ticks, ts._ticks)) {\n            throw new Error(\"Adding the two timestamps causes an overflow.\");\n        }\n        const results = this._ticks + ts._ticks;\n        return TimeSpan.fromTicks(results);\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the difference of the specified TimeSpan object and this instance.\n     * @param ts - The time interval to subtract.\n     */\n    subtract(ts) {\n        if (TimeSpan.subtractionDoesUnderflow(this._ticks, ts._ticks)) {\n            throw new Error(\"Subtracting the two timestamps causes an underflow.\");\n        }\n        const results = this._ticks - ts._ticks;\n        return TimeSpan.fromTicks(results);\n    }\n    /**\n     * Compares this instance to a specified object and returns an integer that indicates whether this\n     * instance is shorter than, equal to, or longer than the specified object.\n     * @param value - The time interval to add.\n     */\n    compareTo(value) {\n        if (value == null) {\n            return 1;\n        }\n        if (!TimeSpan.isTimeSpan(value)) {\n            throw new Error(\"Argument must be a TimeSpan object\");\n        }\n        return TimeSpan.compare(this, value);\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the absolute value of the current TimeSpan object.\n     */\n    duration() {\n        return TimeSpan.fromTicks(this._ticks >= 0 ? this._ticks : -this._ticks);\n    }\n    /**\n     * Returns a value indicating whether this instance is equal to a specified object.\n     * @param value - The time interval to check for equality.\n     */\n    equals(value) {\n        if (TimeSpan.isTimeSpan(value)) {\n            return this._ticks === value._ticks;\n        }\n        return false;\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the negated value of this instance.\n     * @param value - The time interval to check for equality.\n     */\n    negate() {\n        return TimeSpan.fromTicks(-this._ticks);\n    }\n    days() {\n        return Math.floor(this._ticks / ticksPerDay);\n    }\n    hours() {\n        return Math.floor(this._ticks / ticksPerHour);\n    }\n    milliseconds() {\n        return Math.floor(this._ticks / ticksPerMillisecond);\n    }\n    seconds() {\n        return Math.floor(this._ticks / ticksPerSecond);\n    }\n    ticks() {\n        return this._ticks;\n    }\n    totalDays() {\n        return this._ticks * daysPerTick;\n    }\n    totalHours() {\n        return this._ticks * hoursPerTick;\n    }\n    totalMilliseconds() {\n        return this._ticks * millisecondsPerTick;\n    }\n    totalMinutes() {\n        return this._ticks * minutesPerTick;\n    }\n    totalSeconds() {\n        return this._ticks * secondsPerTick;\n    }\n    static fromTicks(value) {\n        const timeSpan = new TimeSpan(0, 0, 0, 0, 0);\n        timeSpan._ticks = value;\n        return timeSpan;\n    }\n    static zero = new TimeSpan(0, 0, 0, 0, 0);\n    static maxValue = TimeSpan.fromTicks(Number.MAX_SAFE_INTEGER);\n    static minValue = TimeSpan.fromTicks(Number.MIN_SAFE_INTEGER);\n    static isTimeSpan(timespan) {\n        return timespan._ticks;\n    }\n    static additionDoesOverflow(a, b) {\n        const c = a + b;\n        return a !== c - b || b !== c - a;\n    }\n    static subtractionDoesUnderflow(a, b) {\n        const c = a - b;\n        return a !== c + b || b !== a - c;\n    }\n    static compare(t1, t2) {\n        if (t1._ticks > t2._ticks) {\n            return 1;\n        }\n        if (t1._ticks < t2._ticks) {\n            return -1;\n        }\n        return 0;\n    }\n    static interval(value, scale) {\n        if (isNaN(value)) {\n            throw new Error(\"value must be a number\");\n        }\n        const milliseconds = value * scale;\n        if (milliseconds > maxMilliSeconds || milliseconds < minMilliSeconds) {\n            throw new Error(\"timespan too long\");\n        }\n        return TimeSpan.fromTicks(Math.floor(milliseconds * ticksPerMillisecond));\n    }\n    static fromMilliseconds(value) {\n        return TimeSpan.interval(value, 1);\n    }\n    static fromSeconds(value) {\n        return TimeSpan.interval(value, millisPerSecond);\n    }\n    static fromMinutes(value) {\n        return TimeSpan.interval(value, millisPerMinute);\n    }\n    static fromHours(value) {\n        return TimeSpan.interval(value, millisPerHour);\n    }\n    static fromDays(value) {\n        return TimeSpan.interval(value, millisPerDay);\n    }\n}\n//# sourceMappingURL=timeSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/queryMetrics/timeSpan.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorResponse: () => (/* binding */ ErrorResponse)\n/* harmony export */ });\n/**\n * Represents an error response returned in operations.\n */\nclass ErrorResponse extends Error {\n    /** status or error code returned */\n    code;\n    /** substatus code returned */\n    substatus;\n    /** body of the error response, typically including error details */\n    body;\n    /** HTTP headers */\n    headers;\n    /** unique identifier for the operation's activity */\n    activityId;\n    /** delay (in milliseconds) before retrying the operation. */\n    retryAfterInMs;\n    /** delay (in milliseconds) before retrying the operation. */\n    /** Note: Use retryAfterInMs instead */\n    retryAfterInMilliseconds;\n    /** Detailed diagnostic information associated with the error.*/\n    diagnostics;\n    /** The request charge of the operation, representing the resource cost incurred.*/\n    requestCharge;\n}\n//# sourceMappingURL=ErrorResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L0Vycm9yUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L0Vycm9yUmVzcG9uc2UuanM/N2JlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlcHJlc2VudHMgYW4gZXJyb3IgcmVzcG9uc2UgcmV0dXJuZWQgaW4gb3BlcmF0aW9ucy5cbiAqL1xuZXhwb3J0IGNsYXNzIEVycm9yUmVzcG9uc2UgZXh0ZW5kcyBFcnJvciB7XG4gICAgLyoqIHN0YXR1cyBvciBlcnJvciBjb2RlIHJldHVybmVkICovXG4gICAgY29kZTtcbiAgICAvKiogc3Vic3RhdHVzIGNvZGUgcmV0dXJuZWQgKi9cbiAgICBzdWJzdGF0dXM7XG4gICAgLyoqIGJvZHkgb2YgdGhlIGVycm9yIHJlc3BvbnNlLCB0eXBpY2FsbHkgaW5jbHVkaW5nIGVycm9yIGRldGFpbHMgKi9cbiAgICBib2R5O1xuICAgIC8qKiBIVFRQIGhlYWRlcnMgKi9cbiAgICBoZWFkZXJzO1xuICAgIC8qKiB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGlvbidzIGFjdGl2aXR5ICovXG4gICAgYWN0aXZpdHlJZDtcbiAgICAvKiogZGVsYXkgKGluIG1pbGxpc2Vjb25kcykgYmVmb3JlIHJldHJ5aW5nIHRoZSBvcGVyYXRpb24uICovXG4gICAgcmV0cnlBZnRlckluTXM7XG4gICAgLyoqIGRlbGF5IChpbiBtaWxsaXNlY29uZHMpIGJlZm9yZSByZXRyeWluZyB0aGUgb3BlcmF0aW9uLiAqL1xuICAgIC8qKiBOb3RlOiBVc2UgcmV0cnlBZnRlckluTXMgaW5zdGVhZCAqL1xuICAgIHJldHJ5QWZ0ZXJJbk1pbGxpc2Vjb25kcztcbiAgICAvKiogRGV0YWlsZWQgZGlhZ25vc3RpYyBpbmZvcm1hdGlvbiBhc3NvY2lhdGVkIHdpdGggdGhlIGVycm9yLiovXG4gICAgZGlhZ25vc3RpY3M7XG4gICAgLyoqIFRoZSByZXF1ZXN0IGNoYXJnZSBvZiB0aGUgb3BlcmF0aW9uLCByZXByZXNlbnRpbmcgdGhlIHJlc291cmNlIGNvc3QgaW5jdXJyZWQuKi9cbiAgICByZXF1ZXN0Q2hhcmdlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXJyb3JSZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/FeedResponse.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/FeedResponse.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FeedResponse: () => (/* binding */ FeedResponse)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _queryExecutionContext_headerUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../queryExecutionContext/headerUtils.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/queryExecutionContext/headerUtils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nclass FeedResponse {\n    resources;\n    headers;\n    hasMoreResults;\n    diagnostics;\n    constructor(resources, headers, hasMoreResults, diagnostics) {\n        this.resources = resources;\n        this.headers = headers;\n        this.hasMoreResults = hasMoreResults;\n        this.diagnostics = diagnostics;\n    }\n    get continuation() {\n        return this.continuationToken;\n    }\n    get continuationToken() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.Continuation];\n    }\n    get queryMetrics() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.QueryMetrics];\n    }\n    get requestCharge() {\n        return (0,_queryExecutionContext_headerUtils_js__WEBPACK_IMPORTED_MODULE_1__.getRequestChargeIfAny)(this.headers);\n    }\n    get activityId() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId];\n    }\n    get correlatedActivityId() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId];\n    }\n    get indexMetrics() {\n        return (0,_queryExecutionContext_headerUtils_js__WEBPACK_IMPORTED_MODULE_1__.decodeAndParseJSONString)(this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IndexUtilization]);\n    }\n}\n//# sourceMappingURL=FeedResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L0ZlZWRSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQytDO0FBQzREO0FBQ3BHO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1REFBUztBQUNyQztBQUNBO0FBQ0EsNEJBQTRCLHVEQUFTO0FBQ3JDO0FBQ0E7QUFDQSxlQUFlLDRGQUFxQjtBQUNwQztBQUNBO0FBQ0EsNEJBQTRCLHVEQUFTO0FBQ3JDO0FBQ0E7QUFDQSw0QkFBNEIsdURBQVM7QUFDckM7QUFDQTtBQUNBLGVBQWUsK0ZBQXdCLGNBQWMsdURBQVM7QUFDOUQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L0ZlZWRSZXNwb25zZS5qcz9jYTljIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZGVjb2RlQW5kUGFyc2VKU09OU3RyaW5nLCBnZXRSZXF1ZXN0Q2hhcmdlSWZBbnksIH0gZnJvbSBcIi4uL3F1ZXJ5RXhlY3V0aW9uQ29udGV4dC9oZWFkZXJVdGlscy5qc1wiO1xuZXhwb3J0IGNsYXNzIEZlZWRSZXNwb25zZSB7XG4gICAgcmVzb3VyY2VzO1xuICAgIGhlYWRlcnM7XG4gICAgaGFzTW9yZVJlc3VsdHM7XG4gICAgZGlhZ25vc3RpY3M7XG4gICAgY29uc3RydWN0b3IocmVzb3VyY2VzLCBoZWFkZXJzLCBoYXNNb3JlUmVzdWx0cywgZGlhZ25vc3RpY3MpIHtcbiAgICAgICAgdGhpcy5yZXNvdXJjZXMgPSByZXNvdXJjZXM7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuaGFzTW9yZVJlc3VsdHMgPSBoYXNNb3JlUmVzdWx0cztcbiAgICAgICAgdGhpcy5kaWFnbm9zdGljcyA9IGRpYWdub3N0aWNzO1xuICAgIH1cbiAgICBnZXQgY29udGludWF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250aW51YXRpb25Ub2tlbjtcbiAgICB9XG4gICAgZ2V0IGNvbnRpbnVhdGlvblRva2VuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Db250aW51YXRpb25dO1xuICAgIH1cbiAgICBnZXQgcXVlcnlNZXRyaWNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5RdWVyeU1ldHJpY3NdO1xuICAgIH1cbiAgICBnZXQgcmVxdWVzdENoYXJnZSgpIHtcbiAgICAgICAgcmV0dXJuIGdldFJlcXVlc3RDaGFyZ2VJZkFueSh0aGlzLmhlYWRlcnMpO1xuICAgIH1cbiAgICBnZXQgYWN0aXZpdHlJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuQWN0aXZpdHlJZF07XG4gICAgfVxuICAgIGdldCBjb3JyZWxhdGVkQWN0aXZpdHlJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuQ29ycmVsYXRlZEFjdGl2aXR5SWRdO1xuICAgIH1cbiAgICBnZXQgaW5kZXhNZXRyaWNzKCkge1xuICAgICAgICByZXR1cm4gZGVjb2RlQW5kUGFyc2VKU09OU3RyaW5nKHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuSW5kZXhVdGlsaXphdGlvbl0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZlZWRSZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/FeedResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/RequestHandler.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/RequestHandler.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestHandler: () => (/* binding */ RequestHandler)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../plugins/Plugin.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/plugins/Plugin.js\");\n/* harmony import */ var _retry_retryUtility_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../retry/retryUtility.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/retryUtility.js\");\n/* harmony import */ var _defaultAgent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaultAgent.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/defaultAgent.js\");\n/* harmony import */ var _ErrorResponse_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ErrorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./request.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/request.js\");\n/* harmony import */ var _TimeoutError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TimeoutError.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js\");\n/* harmony import */ var _utils_cachedClient_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/cachedClient.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/cachedClient.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_10__.createClientLogger)(\"RequestHandler\");\nasync function executeRequest(diagnosticNode, requestContext) {\n    return (0,_plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_3__.executePlugins)(diagnosticNode, requestContext, httpRequest, _plugins_Plugin_js__WEBPACK_IMPORTED_MODULE_3__.PluginOn.request);\n}\n/**\n * @hidden\n */\nasync function httpRequest(requestContext, diagnosticNode) {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    // Wrap users passed abort events and call our own internal abort()\n    const userSignal = requestContext.options && requestContext.options.abortSignal;\n    if (userSignal) {\n        if (userSignal.aborted) {\n            controller.abort();\n        }\n        else {\n            userSignal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n    }\n    let requestTimeout = requestContext.connectionPolicy.requestTimeout;\n    // If the request is a read request and partition level failover or circuit breaker is enabled,\n    // set a shorter timeout to allow for quicker failover in case of partition unavailability.\n    // This is to ensure that read requests can quickly failover to another partition if the current one is unavailable.\n    if ((requestContext.connectionPolicy.enablePartitionLevelFailover ||\n        requestContext.connectionPolicy.enablePartitionLevelCircuitBreaker) &&\n        requestContext.partitionKeyRangeId &&\n        requestContext.resourceType === _common_constants_js__WEBPACK_IMPORTED_MODULE_2__.ResourceType.item &&\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isReadRequest)(requestContext.operationType)) {\n        requestTimeout = Math.min(requestContext.connectionPolicy.requestTimeout, _common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.RequestTimeoutForReadsInMs);\n    }\n    const timeout = setTimeout(() => {\n        controller.abort();\n    }, requestTimeout);\n    let response;\n    if (requestContext.body) {\n        requestContext.body = (0,_request_js__WEBPACK_IMPORTED_MODULE_7__.bodyFromData)(requestContext.body);\n    }\n    const httpsClient = requestContext.httpClient ?? (0,_utils_cachedClient_js__WEBPACK_IMPORTED_MODULE_9__.getCachedDefaultHttpClient)();\n    const url = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.prepareURL)(requestContext.endpoint, requestContext.path);\n    const reqHeaders = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(requestContext.headers);\n    const pipelineRequest = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n        url,\n        headers: reqHeaders,\n        method: requestContext.method,\n        abortSignal: signal,\n        body: requestContext.body,\n    });\n    if (requestContext.requestAgent) {\n        pipelineRequest.agent = requestContext.requestAgent;\n    }\n    else {\n        const parsedUrl = new URL(url);\n        pipelineRequest.agent = parsedUrl.protocol === \"http:\" ? _defaultAgent_js__WEBPACK_IMPORTED_MODULE_5__.defaultHttpAgent : _defaultAgent_js__WEBPACK_IMPORTED_MODULE_5__.defaultHttpsAgent;\n        pipelineRequest.allowInsecureConnection = parsedUrl.protocol === \"http:\";\n    }\n    const startTimeUTCInMs = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_13__.getCurrentTimestampInMs)();\n    try {\n        if (requestContext.pipeline) {\n            response = await requestContext.pipeline.sendRequest(httpsClient, pipelineRequest);\n        }\n        else {\n            response = await httpsClient.sendRequest(pipelineRequest);\n        }\n    }\n    catch (error) {\n        if (error.name === \"AbortError\") {\n            // If the user passed signal caused the abort, cancel the timeout and rethrow the error\n            if (userSignal && userSignal.aborted === true) {\n                clearTimeout(timeout);\n                throw error;\n            }\n            throw new _TimeoutError_js__WEBPACK_IMPORTED_MODULE_8__.TimeoutError(`Timeout Error! Request took more than ${requestContext.connectionPolicy.requestTimeout} ms`);\n        }\n        throw error;\n    }\n    clearTimeout(timeout);\n    const result = response.status === 204 || response.status === 304 || response.bodyAsText === \"\"\n        ? null\n        : JSON.parse(response.bodyAsText);\n    const responseHeaders = response.headers.toJSON();\n    const substatus = responseHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.SubStatus]\n        ? parseInt(responseHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.SubStatus], 10)\n        : undefined;\n    diagnosticNode.recordSuccessfulNetworkCall(startTimeUTCInMs, requestContext, response, substatus, url);\n    if (response.status >= 400) {\n        const errorResponse = new _ErrorResponse_js__WEBPACK_IMPORTED_MODULE_6__.ErrorResponse(result.message);\n        logger.warning(response.status +\n            \" \" +\n            requestContext.endpoint +\n            \" \" +\n            requestContext.path +\n            \" \" +\n            result.message);\n        errorResponse.code = response.status;\n        errorResponse.body = result;\n        errorResponse.headers = responseHeaders;\n        if (_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.ActivityId in responseHeaders) {\n            errorResponse.activityId = responseHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.ActivityId];\n        }\n        if (_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.SubStatus in responseHeaders) {\n            errorResponse.substatus = substatus;\n        }\n        if (_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.RetryAfterInMs in responseHeaders) {\n            errorResponse.retryAfterInMs = parseInt(responseHeaders[_common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.RetryAfterInMs], 10);\n            Object.defineProperty(errorResponse, \"retryAfterInMilliseconds\", {\n                get: () => {\n                    return errorResponse.retryAfterInMs;\n                },\n            });\n        }\n        throw errorResponse;\n    }\n    return {\n        headers: responseHeaders,\n        result,\n        code: response.status,\n        substatus,\n    };\n}\n/**\n * @hidden\n */\nasync function request(requestContext, diagnosticNode) {\n    if (requestContext.body) {\n        requestContext.body = (0,_request_js__WEBPACK_IMPORTED_MODULE_7__.bodyFromData)(requestContext.body);\n        if (!requestContext.body) {\n            throw new Error(\"parameter data must be a javascript object, string, or Buffer\");\n        }\n    }\n    return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_12__.addDiagnosticChild)(async (childNode) => {\n        return _retry_retryUtility_js__WEBPACK_IMPORTED_MODULE_4__.execute({\n            diagnosticNode: childNode,\n            requestContext,\n            executeRequest,\n        });\n    }, diagnosticNode, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_11__.DiagnosticNodeType.REQUEST_ATTEMPTS);\n}\nconst RequestHandler = {\n    request,\n};\n//# sourceMappingURL=RequestHandler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L1JlcXVlc3RIYW5kbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDcUY7QUFDdEI7QUFDRTtBQUNEO0FBQ1A7QUFDZTtBQUNyQjtBQUNQO0FBQ0s7QUFDcUI7QUFDbkI7QUFDMkI7QUFDakI7QUFDRjtBQUMzRCxlQUFlLGtFQUFrQjtBQUNqQztBQUNBLFdBQVcsa0VBQWMsOENBQThDLHdEQUFRO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyw4REFBWTtBQUNwRCxRQUFRLCtEQUFhO0FBQ3JCLGtGQUFrRiwyREFBUztBQUMzRjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDhCQUE4Qix5REFBWTtBQUMxQztBQUNBLHFEQUFxRCxrRkFBMEI7QUFDL0UsZ0JBQWdCLDREQUFVO0FBQzFCLHVCQUF1Qiw0RUFBaUI7QUFDeEMsNEJBQTRCLGdGQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsOERBQWdCLEdBQUcsK0RBQWlCO0FBQ3JHO0FBQ0E7QUFDQSw2QkFBNkIsd0VBQXVCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBWSwwQ0FBMEMsZ0RBQWdEO0FBQzVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkRBQVM7QUFDL0MsbUNBQW1DLDJEQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw0REFBYTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQVM7QUFDckIsdURBQXVELDJEQUFTO0FBQ2hFO0FBQ0EsWUFBWSwyREFBUztBQUNyQjtBQUNBO0FBQ0EsWUFBWSwyREFBUztBQUNyQixvRUFBb0UsMkRBQVM7QUFDN0U7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseURBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDBFQUFrQjtBQUM3QixlQUFlLDJEQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSyxrQkFBa0IsdUZBQWtCO0FBQ3pDO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3JlcXVlc3QvUmVxdWVzdEhhbmRsZXIuanM/ZTA3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCwgY3JlYXRlSHR0cEhlYWRlcnMgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuaW1wb3J0IHsgaXNSZWFkUmVxdWVzdCwgcHJlcGFyZVVSTCB9IGZyb20gXCIuLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IENvbnN0YW50cywgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uL2NvbW1vbi9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IGV4ZWN1dGVQbHVnaW5zLCBQbHVnaW5PbiB9IGZyb20gXCIuLi9wbHVnaW5zL1BsdWdpbi5qc1wiO1xuaW1wb3J0ICogYXMgUmV0cnlVdGlsaXR5IGZyb20gXCIuLi9yZXRyeS9yZXRyeVV0aWxpdHkuanNcIjtcbmltcG9ydCB7IGRlZmF1bHRIdHRwQWdlbnQsIGRlZmF1bHRIdHRwc0FnZW50IH0gZnJvbSBcIi4vZGVmYXVsdEFnZW50LmpzXCI7XG5pbXBvcnQgeyBFcnJvclJlc3BvbnNlIH0gZnJvbSBcIi4vRXJyb3JSZXNwb25zZS5qc1wiO1xuaW1wb3J0IHsgYm9keUZyb21EYXRhIH0gZnJvbSBcIi4vcmVxdWVzdC5qc1wiO1xuaW1wb3J0IHsgVGltZW91dEVycm9yIH0gZnJvbSBcIi4vVGltZW91dEVycm9yLmpzXCI7XG5pbXBvcnQgeyBnZXRDYWNoZWREZWZhdWx0SHR0cENsaWVudCB9IGZyb20gXCIuLi91dGlscy9jYWNoZWRDbGllbnQuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG5pbXBvcnQgeyBEaWFnbm9zdGljTm9kZVR5cGUgfSBmcm9tIFwiLi4vZGlhZ25vc3RpY3MvRGlhZ25vc3RpY05vZGVJbnRlcm5hbC5qc1wiO1xuaW1wb3J0IHsgYWRkRGlhZ25vc3RpY0NoaWxkIH0gZnJvbSBcIi4uL3V0aWxzL2RpYWdub3N0aWNzLmpzXCI7XG5pbXBvcnQgeyBnZXRDdXJyZW50VGltZXN0YW1wSW5NcyB9IGZyb20gXCIuLi91dGlscy90aW1lLmpzXCI7XG5jb25zdCBsb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJSZXF1ZXN0SGFuZGxlclwiKTtcbmFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVSZXF1ZXN0KGRpYWdub3N0aWNOb2RlLCByZXF1ZXN0Q29udGV4dCkge1xuICAgIHJldHVybiBleGVjdXRlUGx1Z2lucyhkaWFnbm9zdGljTm9kZSwgcmVxdWVzdENvbnRleHQsIGh0dHBSZXF1ZXN0LCBQbHVnaW5Pbi5yZXF1ZXN0KTtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5hc3luYyBmdW5jdGlvbiBodHRwUmVxdWVzdChyZXF1ZXN0Q29udGV4dCwgZGlhZ25vc3RpY05vZGUpIHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGNvbnN0IHNpZ25hbCA9IGNvbnRyb2xsZXIuc2lnbmFsO1xuICAgIC8vIFdyYXAgdXNlcnMgcGFzc2VkIGFib3J0IGV2ZW50cyBhbmQgY2FsbCBvdXIgb3duIGludGVybmFsIGFib3J0KClcbiAgICBjb25zdCB1c2VyU2lnbmFsID0gcmVxdWVzdENvbnRleHQub3B0aW9ucyAmJiByZXF1ZXN0Q29udGV4dC5vcHRpb25zLmFib3J0U2lnbmFsO1xuICAgIGlmICh1c2VyU2lnbmFsKSB7XG4gICAgICAgIGlmICh1c2VyU2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVzZXJTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgcmVxdWVzdFRpbWVvdXQgPSByZXF1ZXN0Q29udGV4dC5jb25uZWN0aW9uUG9saWN5LnJlcXVlc3RUaW1lb3V0O1xuICAgIC8vIElmIHRoZSByZXF1ZXN0IGlzIGEgcmVhZCByZXF1ZXN0IGFuZCBwYXJ0aXRpb24gbGV2ZWwgZmFpbG92ZXIgb3IgY2lyY3VpdCBicmVha2VyIGlzIGVuYWJsZWQsXG4gICAgLy8gc2V0IGEgc2hvcnRlciB0aW1lb3V0IHRvIGFsbG93IGZvciBxdWlja2VyIGZhaWxvdmVyIGluIGNhc2Ugb2YgcGFydGl0aW9uIHVuYXZhaWxhYmlsaXR5LlxuICAgIC8vIFRoaXMgaXMgdG8gZW5zdXJlIHRoYXQgcmVhZCByZXF1ZXN0cyBjYW4gcXVpY2tseSBmYWlsb3ZlciB0byBhbm90aGVyIHBhcnRpdGlvbiBpZiB0aGUgY3VycmVudCBvbmUgaXMgdW5hdmFpbGFibGUuXG4gICAgaWYgKChyZXF1ZXN0Q29udGV4dC5jb25uZWN0aW9uUG9saWN5LmVuYWJsZVBhcnRpdGlvbkxldmVsRmFpbG92ZXIgfHxcbiAgICAgICAgcmVxdWVzdENvbnRleHQuY29ubmVjdGlvblBvbGljeS5lbmFibGVQYXJ0aXRpb25MZXZlbENpcmN1aXRCcmVha2VyKSAmJlxuICAgICAgICByZXF1ZXN0Q29udGV4dC5wYXJ0aXRpb25LZXlSYW5nZUlkICYmXG4gICAgICAgIHJlcXVlc3RDb250ZXh0LnJlc291cmNlVHlwZSA9PT0gUmVzb3VyY2VUeXBlLml0ZW0gJiZcbiAgICAgICAgaXNSZWFkUmVxdWVzdChyZXF1ZXN0Q29udGV4dC5vcGVyYXRpb25UeXBlKSkge1xuICAgICAgICByZXF1ZXN0VGltZW91dCA9IE1hdGgubWluKHJlcXVlc3RDb250ZXh0LmNvbm5lY3Rpb25Qb2xpY3kucmVxdWVzdFRpbWVvdXQsIENvbnN0YW50cy5SZXF1ZXN0VGltZW91dEZvclJlYWRzSW5Ncyk7XG4gICAgfVxuICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29udHJvbGxlci5hYm9ydCgpO1xuICAgIH0sIHJlcXVlc3RUaW1lb3V0KTtcbiAgICBsZXQgcmVzcG9uc2U7XG4gICAgaWYgKHJlcXVlc3RDb250ZXh0LmJvZHkpIHtcbiAgICAgICAgcmVxdWVzdENvbnRleHQuYm9keSA9IGJvZHlGcm9tRGF0YShyZXF1ZXN0Q29udGV4dC5ib2R5KTtcbiAgICB9XG4gICAgY29uc3QgaHR0cHNDbGllbnQgPSByZXF1ZXN0Q29udGV4dC5odHRwQ2xpZW50ID8/IGdldENhY2hlZERlZmF1bHRIdHRwQ2xpZW50KCk7XG4gICAgY29uc3QgdXJsID0gcHJlcGFyZVVSTChyZXF1ZXN0Q29udGV4dC5lbmRwb2ludCwgcmVxdWVzdENvbnRleHQucGF0aCk7XG4gICAgY29uc3QgcmVxSGVhZGVycyA9IGNyZWF0ZUh0dHBIZWFkZXJzKHJlcXVlc3RDb250ZXh0LmhlYWRlcnMpO1xuICAgIGNvbnN0IHBpcGVsaW5lUmVxdWVzdCA9IGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCh7XG4gICAgICAgIHVybCxcbiAgICAgICAgaGVhZGVyczogcmVxSGVhZGVycyxcbiAgICAgICAgbWV0aG9kOiByZXF1ZXN0Q29udGV4dC5tZXRob2QsXG4gICAgICAgIGFib3J0U2lnbmFsOiBzaWduYWwsXG4gICAgICAgIGJvZHk6IHJlcXVlc3RDb250ZXh0LmJvZHksXG4gICAgfSk7XG4gICAgaWYgKHJlcXVlc3RDb250ZXh0LnJlcXVlc3RBZ2VudCkge1xuICAgICAgICBwaXBlbGluZVJlcXVlc3QuYWdlbnQgPSByZXF1ZXN0Q29udGV4dC5yZXF1ZXN0QWdlbnQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBwYXJzZWRVcmwgPSBuZXcgVVJMKHVybCk7XG4gICAgICAgIHBpcGVsaW5lUmVxdWVzdC5hZ2VudCA9IHBhcnNlZFVybC5wcm90b2NvbCA9PT0gXCJodHRwOlwiID8gZGVmYXVsdEh0dHBBZ2VudCA6IGRlZmF1bHRIdHRwc0FnZW50O1xuICAgICAgICBwaXBlbGluZVJlcXVlc3QuYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24gPSBwYXJzZWRVcmwucHJvdG9jb2wgPT09IFwiaHR0cDpcIjtcbiAgICB9XG4gICAgY29uc3Qgc3RhcnRUaW1lVVRDSW5NcyA9IGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCk7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHJlcXVlc3RDb250ZXh0LnBpcGVsaW5lKSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3RDb250ZXh0LnBpcGVsaW5lLnNlbmRSZXF1ZXN0KGh0dHBzQ2xpZW50LCBwaXBlbGluZVJlcXVlc3QpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBodHRwc0NsaWVudC5zZW5kUmVxdWVzdChwaXBlbGluZVJlcXVlc3QpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IubmFtZSA9PT0gXCJBYm9ydEVycm9yXCIpIHtcbiAgICAgICAgICAgIC8vIElmIHRoZSB1c2VyIHBhc3NlZCBzaWduYWwgY2F1c2VkIHRoZSBhYm9ydCwgY2FuY2VsIHRoZSB0aW1lb3V0IGFuZCByZXRocm93IHRoZSBlcnJvclxuICAgICAgICAgICAgaWYgKHVzZXJTaWduYWwgJiYgdXNlclNpZ25hbC5hYm9ydGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IFRpbWVvdXRFcnJvcihgVGltZW91dCBFcnJvciEgUmVxdWVzdCB0b29rIG1vcmUgdGhhbiAke3JlcXVlc3RDb250ZXh0LmNvbm5lY3Rpb25Qb2xpY3kucmVxdWVzdFRpbWVvdXR9IG1zYCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICBjb25zdCByZXN1bHQgPSByZXNwb25zZS5zdGF0dXMgPT09IDIwNCB8fCByZXNwb25zZS5zdGF0dXMgPT09IDMwNCB8fCByZXNwb25zZS5ib2R5QXNUZXh0ID09PSBcIlwiXG4gICAgICAgID8gbnVsbFxuICAgICAgICA6IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keUFzVGV4dCk7XG4gICAgY29uc3QgcmVzcG9uc2VIZWFkZXJzID0gcmVzcG9uc2UuaGVhZGVycy50b0pTT04oKTtcbiAgICBjb25zdCBzdWJzdGF0dXMgPSByZXNwb25zZUhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlN1YlN0YXR1c11cbiAgICAgICAgPyBwYXJzZUludChyZXNwb25zZUhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlN1YlN0YXR1c10sIDEwKVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICBkaWFnbm9zdGljTm9kZS5yZWNvcmRTdWNjZXNzZnVsTmV0d29ya0NhbGwoc3RhcnRUaW1lVVRDSW5NcywgcmVxdWVzdENvbnRleHQsIHJlc3BvbnNlLCBzdWJzdGF0dXMsIHVybCk7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSA0MDApIHtcbiAgICAgICAgY29uc3QgZXJyb3JSZXNwb25zZSA9IG5ldyBFcnJvclJlc3BvbnNlKHJlc3VsdC5tZXNzYWdlKTtcbiAgICAgICAgbG9nZ2VyLndhcm5pbmcocmVzcG9uc2Uuc3RhdHVzICtcbiAgICAgICAgICAgIFwiIFwiICtcbiAgICAgICAgICAgIHJlcXVlc3RDb250ZXh0LmVuZHBvaW50ICtcbiAgICAgICAgICAgIFwiIFwiICtcbiAgICAgICAgICAgIHJlcXVlc3RDb250ZXh0LnBhdGggK1xuICAgICAgICAgICAgXCIgXCIgK1xuICAgICAgICAgICAgcmVzdWx0Lm1lc3NhZ2UpO1xuICAgICAgICBlcnJvclJlc3BvbnNlLmNvZGUgPSByZXNwb25zZS5zdGF0dXM7XG4gICAgICAgIGVycm9yUmVzcG9uc2UuYm9keSA9IHJlc3VsdDtcbiAgICAgICAgZXJyb3JSZXNwb25zZS5oZWFkZXJzID0gcmVzcG9uc2VIZWFkZXJzO1xuICAgICAgICBpZiAoQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkFjdGl2aXR5SWQgaW4gcmVzcG9uc2VIZWFkZXJzKSB7XG4gICAgICAgICAgICBlcnJvclJlc3BvbnNlLmFjdGl2aXR5SWQgPSByZXNwb25zZUhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkFjdGl2aXR5SWRdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChDb25zdGFudHMuSHR0cEhlYWRlcnMuU3ViU3RhdHVzIGluIHJlc3BvbnNlSGVhZGVycykge1xuICAgICAgICAgICAgZXJyb3JSZXNwb25zZS5zdWJzdGF0dXMgPSBzdWJzdGF0dXM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKENvbnN0YW50cy5IdHRwSGVhZGVycy5SZXRyeUFmdGVySW5NcyBpbiByZXNwb25zZUhlYWRlcnMpIHtcbiAgICAgICAgICAgIGVycm9yUmVzcG9uc2UucmV0cnlBZnRlckluTXMgPSBwYXJzZUludChyZXNwb25zZUhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlJldHJ5QWZ0ZXJJbk1zXSwgMTApO1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVycm9yUmVzcG9uc2UsIFwicmV0cnlBZnRlckluTWlsbGlzZWNvbmRzXCIsIHtcbiAgICAgICAgICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yUmVzcG9uc2UucmV0cnlBZnRlckluTXM7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGVycm9yUmVzcG9uc2U7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgcmVzdWx0LFxuICAgICAgICBjb2RlOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgIHN1YnN0YXR1cyxcbiAgICB9O1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHJlcXVlc3QocmVxdWVzdENvbnRleHQsIGRpYWdub3N0aWNOb2RlKSB7XG4gICAgaWYgKHJlcXVlc3RDb250ZXh0LmJvZHkpIHtcbiAgICAgICAgcmVxdWVzdENvbnRleHQuYm9keSA9IGJvZHlGcm9tRGF0YShyZXF1ZXN0Q29udGV4dC5ib2R5KTtcbiAgICAgICAgaWYgKCFyZXF1ZXN0Q29udGV4dC5ib2R5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwYXJhbWV0ZXIgZGF0YSBtdXN0IGJlIGEgamF2YXNjcmlwdCBvYmplY3QsIHN0cmluZywgb3IgQnVmZmVyXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhZGREaWFnbm9zdGljQ2hpbGQoYXN5bmMgKGNoaWxkTm9kZSkgPT4ge1xuICAgICAgICByZXR1cm4gUmV0cnlVdGlsaXR5LmV4ZWN1dGUoe1xuICAgICAgICAgICAgZGlhZ25vc3RpY05vZGU6IGNoaWxkTm9kZSxcbiAgICAgICAgICAgIHJlcXVlc3RDb250ZXh0LFxuICAgICAgICAgICAgZXhlY3V0ZVJlcXVlc3QsXG4gICAgICAgIH0pO1xuICAgIH0sIGRpYWdub3N0aWNOb2RlLCBEaWFnbm9zdGljTm9kZVR5cGUuUkVRVUVTVF9BVFRFTVBUUyk7XG59XG5leHBvcnQgY29uc3QgUmVxdWVzdEhhbmRsZXIgPSB7XG4gICAgcmVxdWVzdCxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXF1ZXN0SGFuZGxlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/RequestHandler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResourceResponse: () => (/* binding */ ResourceResponse)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n\nclass ResourceResponse {\n    resource;\n    headers;\n    statusCode;\n    diagnostics;\n    substatus;\n    constructor(resource, headers, statusCode, diagnostics, substatus) {\n        this.resource = resource;\n        this.headers = headers;\n        this.statusCode = statusCode;\n        this.diagnostics = diagnostics;\n        this.substatus = substatus;\n    }\n    get requestCharge() {\n        return Number(this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.RequestCharge]) || 0;\n    }\n    get activityId() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ActivityId];\n    }\n    get etag() {\n        return this.headers[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.ETag];\n    }\n}\n//# sourceMappingURL=ResourceResponse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L1Jlc291cmNlUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDeEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx1REFBUztBQUM1QztBQUNBO0FBQ0EsNEJBQTRCLHVEQUFTO0FBQ3JDO0FBQ0E7QUFDQSw0QkFBNEIsdURBQVM7QUFDckM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L1Jlc291cmNlUmVzcG9uc2UuanM/Yzg4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vY29tbW9uL2luZGV4LmpzXCI7XG5leHBvcnQgY2xhc3MgUmVzb3VyY2VSZXNwb25zZSB7XG4gICAgcmVzb3VyY2U7XG4gICAgaGVhZGVycztcbiAgICBzdGF0dXNDb2RlO1xuICAgIGRpYWdub3N0aWNzO1xuICAgIHN1YnN0YXR1cztcbiAgICBjb25zdHJ1Y3RvcihyZXNvdXJjZSwgaGVhZGVycywgc3RhdHVzQ29kZSwgZGlhZ25vc3RpY3MsIHN1YnN0YXR1cykge1xuICAgICAgICB0aGlzLnJlc291cmNlID0gcmVzb3VyY2U7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgICAgIHRoaXMuZGlhZ25vc3RpY3MgPSBkaWFnbm9zdGljcztcbiAgICAgICAgdGhpcy5zdWJzdGF0dXMgPSBzdWJzdGF0dXM7XG4gICAgfVxuICAgIGdldCByZXF1ZXN0Q2hhcmdlKCkge1xuICAgICAgICByZXR1cm4gTnVtYmVyKHRoaXMuaGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuUmVxdWVzdENoYXJnZV0pIHx8IDA7XG4gICAgfVxuICAgIGdldCBhY3Rpdml0eUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5BY3Rpdml0eUlkXTtcbiAgICB9XG4gICAgZ2V0IGV0YWcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhlYWRlcnNbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLkVUYWddO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlc291cmNlUmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimeoutError: () => (/* binding */ TimeoutError),\n/* harmony export */   TimeoutErrorCode: () => (/* binding */ TimeoutErrorCode)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @hidden\n */\nconst TimeoutErrorCode = \"TimeoutError\";\nclass TimeoutError extends Error {\n    code = TimeoutErrorCode;\n    constructor(message = \"Timeout Error\") {\n        super(message);\n        this.name = TimeoutErrorCode;\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L1RpbWVvdXRFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3JlcXVlc3QvVGltZW91dEVycm9yLmpzP2E0YzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNvbnN0IFRpbWVvdXRFcnJvckNvZGUgPSBcIlRpbWVvdXRFcnJvclwiO1xuZXhwb3J0IGNsYXNzIFRpbWVvdXRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb2RlID0gVGltZW91dEVycm9yQ29kZTtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gXCJUaW1lb3V0IEVycm9yXCIpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFRpbWVvdXRFcnJvckNvZGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGltZW91dEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/defaultAgent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/defaultAgent.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultHttpAgent: () => (/* binding */ defaultHttpAgent),\n/* harmony export */   defaultHttpsAgent: () => (/* binding */ defaultHttpsAgent)\n/* harmony export */ });\n/* harmony import */ var node_https__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:https */ \"node:https\");\n/* harmony import */ var node_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:http */ \"node:http\");\n\n\n/**\n * @internal\n */\nconst defaultHttpsAgent = new node_https__WEBPACK_IMPORTED_MODULE_0__.Agent({\n    keepAlive: true,\n    minVersion: \"TLSv1.2\",\n});\n/**\n * @internal\n */\nconst defaultHttpAgent = new node_http__WEBPACK_IMPORTED_MODULE_1__.Agent({\n    keepAlive: true,\n});\n//# sourceMappingURL=defaultAgent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2RlZmF1bHRBZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ0Y7QUFDN0I7QUFDQTtBQUNBO0FBQ08sOEJBQThCLDZDQUFXO0FBQ2hEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ08sNkJBQTZCLDRDQUFVO0FBQzlDO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2RlZmF1bHRBZ2VudC5qcz80ZDdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBodHRwcyBmcm9tIFwibm9kZTpodHRwc1wiO1xuaW1wb3J0IGh0dHAgZnJvbSBcIm5vZGU6aHR0cFwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRIdHRwc0FnZW50ID0gbmV3IGh0dHBzLkFnZW50KHtcbiAgICBrZWVwQWxpdmU6IHRydWUsXG4gICAgbWluVmVyc2lvbjogXCJUTFN2MS4yXCIsXG59KTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0SHR0cEFnZW50ID0gbmV3IGh0dHAuQWdlbnQoe1xuICAgIGtlZXBBbGl2ZTogdHJ1ZSxcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdEFnZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/defaultAgent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/globalStatistics.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/globalStatistics.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n//# sourceMappingURL=globalStatistics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2dsb2JhbFN0YXRpc3RpY3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2dsb2JhbFN0YXRpc3RpY3MuanM/ZWE1MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbFN0YXRpc3RpY3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/globalStatistics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/hybridSearchQueryResult.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/hybridSearchQueryResult.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HybridSearchQueryResult: () => (/* binding */ HybridSearchQueryResult)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst FieldNames = {\n    Rid: \"_rid\",\n    Payload: \"payload\",\n    ComponentScores: \"componentScores\",\n};\nclass HybridSearchQueryResult {\n    rid;\n    componentScores;\n    data;\n    score;\n    ranks;\n    constructor(rid, componentScores, data) {\n        this.rid = rid;\n        this.componentScores = componentScores;\n        this.data = data;\n    }\n    static create(document) {\n        const rid = document[FieldNames.Rid];\n        if (!rid) {\n            throw new Error(`${FieldNames.Rid} must exist.`);\n        }\n        const outerPayload = document[FieldNames.Payload];\n        let componentScores;\n        let data;\n        if (!outerPayload || typeof outerPayload !== \"object\") {\n            throw new Error(`${FieldNames.Payload} must exist.`);\n        }\n        const innerPayload = outerPayload[FieldNames.Payload];\n        if (innerPayload && typeof innerPayload === \"object\") {\n            // older format without query plan optimization\n            componentScores = outerPayload[FieldNames.ComponentScores];\n            data = innerPayload;\n        }\n        else {\n            // newer format with the optimization\n            componentScores = document[FieldNames.ComponentScores];\n            data = outerPayload;\n        }\n        if (!Array.isArray(componentScores)) {\n            throw new Error(`${FieldNames.ComponentScores} must exist.`);\n        }\n        return new HybridSearchQueryResult(rid, componentScores, data);\n    }\n}\n//# sourceMappingURL=hybridSearchQueryResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2h5YnJpZFNlYXJjaFF1ZXJ5UmVzdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsZ0JBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isb0JBQW9CO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDRCQUE0QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2h5YnJpZFNlYXJjaFF1ZXJ5UmVzdWx0LmpzPzc3MzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5jb25zdCBGaWVsZE5hbWVzID0ge1xuICAgIFJpZDogXCJfcmlkXCIsXG4gICAgUGF5bG9hZDogXCJwYXlsb2FkXCIsXG4gICAgQ29tcG9uZW50U2NvcmVzOiBcImNvbXBvbmVudFNjb3Jlc1wiLFxufTtcbmV4cG9ydCBjbGFzcyBIeWJyaWRTZWFyY2hRdWVyeVJlc3VsdCB7XG4gICAgcmlkO1xuICAgIGNvbXBvbmVudFNjb3JlcztcbiAgICBkYXRhO1xuICAgIHNjb3JlO1xuICAgIHJhbmtzO1xuICAgIGNvbnN0cnVjdG9yKHJpZCwgY29tcG9uZW50U2NvcmVzLCBkYXRhKSB7XG4gICAgICAgIHRoaXMucmlkID0gcmlkO1xuICAgICAgICB0aGlzLmNvbXBvbmVudFNjb3JlcyA9IGNvbXBvbmVudFNjb3JlcztcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZShkb2N1bWVudCkge1xuICAgICAgICBjb25zdCByaWQgPSBkb2N1bWVudFtGaWVsZE5hbWVzLlJpZF07XG4gICAgICAgIGlmICghcmlkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7RmllbGROYW1lcy5SaWR9IG11c3QgZXhpc3QuYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3V0ZXJQYXlsb2FkID0gZG9jdW1lbnRbRmllbGROYW1lcy5QYXlsb2FkXTtcbiAgICAgICAgbGV0IGNvbXBvbmVudFNjb3JlcztcbiAgICAgICAgbGV0IGRhdGE7XG4gICAgICAgIGlmICghb3V0ZXJQYXlsb2FkIHx8IHR5cGVvZiBvdXRlclBheWxvYWQgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtGaWVsZE5hbWVzLlBheWxvYWR9IG11c3QgZXhpc3QuYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW5uZXJQYXlsb2FkID0gb3V0ZXJQYXlsb2FkW0ZpZWxkTmFtZXMuUGF5bG9hZF07XG4gICAgICAgIGlmIChpbm5lclBheWxvYWQgJiYgdHlwZW9mIGlubmVyUGF5bG9hZCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgLy8gb2xkZXIgZm9ybWF0IHdpdGhvdXQgcXVlcnkgcGxhbiBvcHRpbWl6YXRpb25cbiAgICAgICAgICAgIGNvbXBvbmVudFNjb3JlcyA9IG91dGVyUGF5bG9hZFtGaWVsZE5hbWVzLkNvbXBvbmVudFNjb3Jlc107XG4gICAgICAgICAgICBkYXRhID0gaW5uZXJQYXlsb2FkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gbmV3ZXIgZm9ybWF0IHdpdGggdGhlIG9wdGltaXphdGlvblxuICAgICAgICAgICAgY29tcG9uZW50U2NvcmVzID0gZG9jdW1lbnRbRmllbGROYW1lcy5Db21wb25lbnRTY29yZXNdO1xuICAgICAgICAgICAgZGF0YSA9IG91dGVyUGF5bG9hZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY29tcG9uZW50U2NvcmVzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke0ZpZWxkTmFtZXMuQ29tcG9uZW50U2NvcmVzfSBtdXN0IGV4aXN0LmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgSHlicmlkU2VhcmNoUXVlcnlSZXN1bHQocmlkLCBjb21wb25lbnRTY29yZXMsIGRhdGEpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh5YnJpZFNlYXJjaFF1ZXJ5UmVzdWx0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/hybridSearchQueryResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorResponse: () => (/* reexport safe */ _ErrorResponse_js__WEBPACK_IMPORTED_MODULE_0__.ErrorResponse),\n/* harmony export */   FeedResponse: () => (/* reexport safe */ _FeedResponse_js__WEBPACK_IMPORTED_MODULE_2__.FeedResponse),\n/* harmony export */   ResourceResponse: () => (/* reexport safe */ _ResourceResponse_js__WEBPACK_IMPORTED_MODULE_1__.ResourceResponse),\n/* harmony export */   TimeoutError: () => (/* reexport safe */ _TimeoutError_js__WEBPACK_IMPORTED_MODULE_3__.TimeoutError)\n/* harmony export */ });\n/* harmony import */ var _ErrorResponse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ErrorResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ErrorResponse.js\");\n/* harmony import */ var _ResourceResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResourceResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/ResourceResponse.js\");\n/* harmony import */ var _FeedResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FeedResponse.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/FeedResponse.js\");\n/* harmony import */ var _TimeoutError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TimeoutError.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js\");\n/* harmony import */ var _globalStatistics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./globalStatistics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/globalStatistics.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXF1ZXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDSztBQUNSO0FBQ0E7QUFDWDtBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcmVxdWVzdC9pbmRleC5qcz8xYmNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgRXJyb3JSZXNwb25zZSwgfSBmcm9tIFwiLi9FcnJvclJlc3BvbnNlLmpzXCI7XG5leHBvcnQgeyBSZXNvdXJjZVJlc3BvbnNlIH0gZnJvbSBcIi4vUmVzb3VyY2VSZXNwb25zZS5qc1wiO1xuZXhwb3J0IHsgRmVlZFJlc3BvbnNlIH0gZnJvbSBcIi4vRmVlZFJlc3BvbnNlLmpzXCI7XG5leHBvcnQgeyBUaW1lb3V0RXJyb3IgfSBmcm9tIFwiLi9UaW1lb3V0RXJyb3IuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dsb2JhbFN0YXRpc3RpY3MuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/request/request.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/request/request.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bodyFromData: () => (/* binding */ bodyFromData),\n/* harmony export */   getHeaders: () => (/* binding */ getHeaders)\n/* harmony export */ });\n/* harmony import */ var _auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../auth.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/auth.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/index.js\");\n/* harmony import */ var _common_logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/logger.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/logger.js\");\n/* harmony import */ var _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../client/ChangeFeed/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/client/ChangeFeed/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n// ----------------------------------------------------------------------------\n// Utility methods\n//\n/** @hidden */\nfunction javaScriptFriendlyJSONStringify(s) {\n    // two line terminators (Line separator and Paragraph separator) are not needed to be escaped in JSON\n    // but are needed to be escaped in JavaScript.\n    return JSON.stringify(s)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\n/** @hidden */\nfunction bodyFromData(data) {\n    if (typeof data === \"object\") {\n        return javaScriptFriendlyJSONStringify(data);\n    }\n    return data;\n}\nconst JsonContentType = \"application/json\";\n/**\n * @hidden\n */\nasync function getHeaders({ clientOptions, defaultHeaders, verb, path, resourceId, resourceType, options = {}, operationType, partitionKeyRangeId, useMultipleWriteLocations, partitionKey, }) {\n    const headers = {\n        [_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ResponseContinuationTokenLimitInKB]: 1,\n        [_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.EnableCrossPartitionQuery]: true,\n        ...defaultHeaders,\n    };\n    // Adding SDKSupportedCapabilities header to hint that SDK supports partition merge\n    headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.SDKSupportedCapabilities] = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.SDKSupportedCapabilities.PartitionMerge;\n    if (useMultipleWriteLocations) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ALLOW_MULTIPLE_WRITES] = true;\n    }\n    if (options.continuationTokenLimitInKB) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ResponseContinuationTokenLimitInKB] =\n            options.continuationTokenLimitInKB;\n    }\n    if (options.continuationToken) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Continuation] = options.continuationToken;\n    }\n    else if (options.continuation) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Continuation] = options.continuation;\n    }\n    if (options.preTriggerInclude) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PreTriggerInclude] =\n            options.preTriggerInclude.constructor === Array\n                ? options.preTriggerInclude.join(\",\")\n                : options.preTriggerInclude;\n    }\n    if (options.postTriggerInclude) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PostTriggerInclude] =\n            options.postTriggerInclude.constructor === Array\n                ? options.postTriggerInclude.join(\",\")\n                : options.postTriggerInclude;\n    }\n    if (options.offerType) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.OfferType] = options.offerType;\n    }\n    if (options.offerThroughput) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.OfferThroughput] = options.offerThroughput;\n    }\n    if (options.maxItemCount) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PageSize] = options.maxItemCount;\n    }\n    if (options.accessCondition) {\n        if (options.accessCondition.type === \"IfMatch\") {\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfMatch] = options.accessCondition.condition;\n        }\n        else {\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IfNoneMatch] = options.accessCondition.condition;\n        }\n    }\n    if (options.useAllVersionsAndDeletesFeed) {\n        // headers required for reading feed in allVersionsAndDeletes mode\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.A_IM] = _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_4__.ChangeFeedMode.AllVersionsAndDeletes;\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ChangeFeedWireFormatVersion] =\n            _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.AllVersionsAndDeletesChangeFeedWireFormatVersion;\n    }\n    if (options.useIncrementalFeed || options.useLatestVersionFeed) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.A_IM] = _client_ChangeFeed_index_js__WEBPACK_IMPORTED_MODULE_4__.ChangeFeedMode.LatestVersion;\n    }\n    if (options.indexingDirective) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IndexingDirective] = options.indexingDirective;\n    }\n    if (options.consistencyLevel) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ConsistencyLevel] = options.consistencyLevel;\n    }\n    if (options.priorityLevel) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PriorityLevel] = options.priorityLevel;\n    }\n    if (options.throughputBucket) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ThroughputBucket] = options.throughputBucket;\n    }\n    if (options.maxIntegratedCacheStalenessInMs && resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item) {\n        if (typeof options.maxIntegratedCacheStalenessInMs === \"number\") {\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.DedicatedGatewayPerRequestCacheStaleness] =\n                options.maxIntegratedCacheStalenessInMs.toString();\n        }\n        else {\n            _common_logger_js__WEBPACK_IMPORTED_MODULE_3__.defaultLogger.error(`RangeError: maxIntegratedCacheStalenessInMs \"${options.maxIntegratedCacheStalenessInMs}\" is not a valid parameter.`);\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.DedicatedGatewayPerRequestCacheStaleness] = \"null\";\n        }\n    }\n    if (options.bypassIntegratedCache) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.DedicatedGatewayPerRequestBypassCache] =\n            options.bypassIntegratedCache.toString();\n    }\n    if (options.resourceTokenExpirySeconds) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ResourceTokenExpiry] = options.resourceTokenExpirySeconds;\n    }\n    if (options.sessionToken) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.SessionToken] = options.sessionToken;\n    }\n    if (options.enableScanInQuery) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.EnableScanInQuery] = options.enableScanInQuery;\n    }\n    if (options.populateQuotaInfo) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PopulateQuotaInfo] = options.populateQuotaInfo;\n    }\n    if (options.populateQueryMetrics) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PopulateQueryMetrics] = options.populateQueryMetrics;\n    }\n    if (options.maxDegreeOfParallelism !== undefined &&\n        options.maxDegreeOfParallelism !== 0 &&\n        options.maxDegreeOfParallelism !== 1) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ParallelizeCrossPartitionQuery] = true;\n    }\n    if (options.populateQuotaInfo) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PopulateQuotaInfo] = true;\n    }\n    if (partitionKey !== undefined && !headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PartitionKey]) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PartitionKey] = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.jsonStringifyAndEscapeNonASCII)(partitionKey);\n    }\n    else if (partitionKeyRangeId !== undefined) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PartitionKeyRangeID] = partitionKeyRangeId;\n    }\n    if (clientOptions.key || clientOptions.tokenProvider) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.XDate] = new Date().toUTCString();\n    }\n    if (verb === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.post || verb === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.put) {\n        if (!headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ContentType]) {\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.ContentType] = JsonContentType;\n        }\n    }\n    if (!headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Accept]) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Accept] = JsonContentType;\n    }\n    if (options.enableScriptLogging) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.EnableScriptLogging] = options.enableScriptLogging;\n    }\n    if (options.disableRUPerMinuteUsage) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.DisableRUPerMinuteUsage] = true;\n    }\n    if (options.populateIndexMetrics) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PopulateIndexMetrics] = options.populateIndexMetrics;\n    }\n    if (clientOptions.clientEncryptionOptions) {\n        headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IsClientEncryptedHeader] = true;\n        if (options.containerRid) {\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.IntendedCollectionHeader] = options.containerRid;\n        }\n    }\n    if (clientOptions.key ||\n        clientOptions.resourceTokens ||\n        clientOptions.tokenProvider ||\n        clientOptions.permissionFeed) {\n        await (0,_auth_js__WEBPACK_IMPORTED_MODULE_0__.setAuthorizationHeader)(clientOptions, verb, path, resourceId, resourceType, headers);\n    }\n    if (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.item &&\n        Object.prototype.hasOwnProperty.call(options, \"contentResponseOnWriteEnabled\") &&\n        !options.contentResponseOnWriteEnabled) {\n        if (operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Batch) {\n            headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Prefer] = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.PreferReturnMinimal;\n        }\n        else {\n            throw new _index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorResponse(\"Currently `contentResponseOnWriteEnabled` option is only supported for batch and bulk operations.\");\n        }\n    }\n    return headers;\n}\n//# sourceMappingURL=request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/request/request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/bulkExecutionRetryPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/bulkExecutionRetryPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BulkExecutionRetryPolicy: () => (/* binding */ BulkExecutionRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * This class implements the retry policy for bulk operations.\n * @hidden\n */\nclass BulkExecutionRetryPolicy {\n    retryAfterInMs;\n    retriesOn410;\n    MaxRetriesOn410 = 10;\n    SubstatusCodeBatchResponseSizeExceeded = 3402;\n    nextRetryPolicy;\n    constructor(nextRetryPolicy) {\n        this.nextRetryPolicy = nextRetryPolicy;\n        this.retriesOn410 = 0;\n    }\n    async shouldRetry(err, diagnosticNode) {\n        if (!err) {\n            return false;\n        }\n        if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.Gone) {\n            this.retriesOn410++;\n            if (this.retriesOn410 > this.MaxRetriesOn410) {\n                return false;\n            }\n            if (err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.PartitionKeyRangeGone ||\n                err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.CompletingSplit ||\n                err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.CompletingPartitionMigration) {\n                return true;\n            }\n            if (err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.SubStatusCodes.NameCacheIsStale) {\n                return true;\n            }\n        }\n        // API can return 413 which means the response is bigger than 4Mb.\n        // Operations that exceed the 4Mb limit are returned as 413/3402, while the operations within the 4Mb limit will be 200\n        // TODO: better way to handle this error\n        if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.RequestEntityTooLarge &&\n            err.substatus === this.SubstatusCodeBatchResponseSizeExceeded) {\n            return true;\n        }\n        // check for 429 error\n        let shouldRetryForThrottle = false;\n        if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.TooManyRequests) {\n            const retryResult = await this.nextRetryPolicy.shouldRetry(err, diagnosticNode);\n            shouldRetryForThrottle = Array.isArray(retryResult) ? retryResult[0] : retryResult;\n        }\n        if (shouldRetryForThrottle) {\n            await (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_0__.sleep)(this.nextRetryPolicy.retryAfterInMs);\n        }\n        return shouldRetryForThrottle;\n    }\n}\n//# sourceMappingURL=bulkExecutionRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9idWxrRXhlY3V0aW9uUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUM0QztBQUMyQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsK0RBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msa0VBQWM7QUFDaEQsa0NBQWtDLGtFQUFjO0FBQ2hELGtDQUFrQyxrRUFBYztBQUNoRDtBQUNBO0FBQ0Esa0NBQWtDLGtFQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwrREFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtEQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdEQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3JldHJ5L2J1bGtFeGVjdXRpb25SZXRyeVBvbGljeS5qcz8xNWNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgc2xlZXAgfSBmcm9tIFwiLi4vY29tbW9uL2hlbHBlci5qc1wiO1xuaW1wb3J0IHsgU3RhdHVzQ29kZXMsIFN1YlN0YXR1c0NvZGVzIH0gZnJvbSBcIi4uL2NvbW1vbi9zdGF0dXNDb2Rlcy5qc1wiO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgdGhlIHJldHJ5IHBvbGljeSBmb3IgYnVsayBvcGVyYXRpb25zLlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgQnVsa0V4ZWN1dGlvblJldHJ5UG9saWN5IHtcbiAgICByZXRyeUFmdGVySW5NcztcbiAgICByZXRyaWVzT240MTA7XG4gICAgTWF4UmV0cmllc09uNDEwID0gMTA7XG4gICAgU3Vic3RhdHVzQ29kZUJhdGNoUmVzcG9uc2VTaXplRXhjZWVkZWQgPSAzNDAyO1xuICAgIG5leHRSZXRyeVBvbGljeTtcbiAgICBjb25zdHJ1Y3RvcihuZXh0UmV0cnlQb2xpY3kpIHtcbiAgICAgICAgdGhpcy5uZXh0UmV0cnlQb2xpY3kgPSBuZXh0UmV0cnlQb2xpY3k7XG4gICAgICAgIHRoaXMucmV0cmllc09uNDEwID0gMDtcbiAgICB9XG4gICAgYXN5bmMgc2hvdWxkUmV0cnkoZXJyLCBkaWFnbm9zdGljTm9kZSkge1xuICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnIuY29kZSA9PT0gU3RhdHVzQ29kZXMuR29uZSkge1xuICAgICAgICAgICAgdGhpcy5yZXRyaWVzT240MTArKztcbiAgICAgICAgICAgIGlmICh0aGlzLnJldHJpZXNPbjQxMCA+IHRoaXMuTWF4UmV0cmllc09uNDEwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGVyci5zdWJzdGF0dXMgPT09IFN1YlN0YXR1c0NvZGVzLlBhcnRpdGlvbktleVJhbmdlR29uZSB8fFxuICAgICAgICAgICAgICAgIGVyci5zdWJzdGF0dXMgPT09IFN1YlN0YXR1c0NvZGVzLkNvbXBsZXRpbmdTcGxpdCB8fFxuICAgICAgICAgICAgICAgIGVyci5zdWJzdGF0dXMgPT09IFN1YlN0YXR1c0NvZGVzLkNvbXBsZXRpbmdQYXJ0aXRpb25NaWdyYXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlcnIuc3Vic3RhdHVzID09PSBTdWJTdGF0dXNDb2Rlcy5OYW1lQ2FjaGVJc1N0YWxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gQVBJIGNhbiByZXR1cm4gNDEzIHdoaWNoIG1lYW5zIHRoZSByZXNwb25zZSBpcyBiaWdnZXIgdGhhbiA0TWIuXG4gICAgICAgIC8vIE9wZXJhdGlvbnMgdGhhdCBleGNlZWQgdGhlIDRNYiBsaW1pdCBhcmUgcmV0dXJuZWQgYXMgNDEzLzM0MDIsIHdoaWxlIHRoZSBvcGVyYXRpb25zIHdpdGhpbiB0aGUgNE1iIGxpbWl0IHdpbGwgYmUgMjAwXG4gICAgICAgIC8vIFRPRE86IGJldHRlciB3YXkgdG8gaGFuZGxlIHRoaXMgZXJyb3JcbiAgICAgICAgaWYgKGVyci5jb2RlID09PSBTdGF0dXNDb2Rlcy5SZXF1ZXN0RW50aXR5VG9vTGFyZ2UgJiZcbiAgICAgICAgICAgIGVyci5zdWJzdGF0dXMgPT09IHRoaXMuU3Vic3RhdHVzQ29kZUJhdGNoUmVzcG9uc2VTaXplRXhjZWVkZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNoZWNrIGZvciA0MjkgZXJyb3JcbiAgICAgICAgbGV0IHNob3VsZFJldHJ5Rm9yVGhyb3R0bGUgPSBmYWxzZTtcbiAgICAgICAgaWYgKGVyci5jb2RlID09PSBTdGF0dXNDb2Rlcy5Ub29NYW55UmVxdWVzdHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJldHJ5UmVzdWx0ID0gYXdhaXQgdGhpcy5uZXh0UmV0cnlQb2xpY3kuc2hvdWxkUmV0cnkoZXJyLCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICBzaG91bGRSZXRyeUZvclRocm90dGxlID0gQXJyYXkuaXNBcnJheShyZXRyeVJlc3VsdCkgPyByZXRyeVJlc3VsdFswXSA6IHJldHJ5UmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChzaG91bGRSZXRyeUZvclRocm90dGxlKSB7XG4gICAgICAgICAgICBhd2FpdCBzbGVlcCh0aGlzLm5leHRSZXRyeVBvbGljeS5yZXRyeUFmdGVySW5Ncyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNob3VsZFJldHJ5Rm9yVGhyb3R0bGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnVsa0V4ZWN1dGlvblJldHJ5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/bulkExecutionRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/defaultRetryPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/defaultRetryPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultRetryPolicy: () => (/* binding */ DefaultRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _request_TimeoutError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../request/TimeoutError.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js\");\n\n\n/**\n * @hidden\n */\n// Windows Socket Error Codes\nconst WindowsInterruptedFunctionCall = 10004;\n/**\n * @hidden\n */\nconst WindowsFileHandleNotValid = 10009;\n/**\n * @hidden\n */\nconst WindowsPermissionDenied = 10013;\n/**\n * @hidden\n */\nconst WindowsBadAddress = 10014;\n/**\n * @hidden\n */\nconst WindowsInvalidArgumnet = 10022;\n/**\n * @hidden\n */\nconst WindowsResourceTemporarilyUnavailable = 10035;\n/**\n * @hidden\n */\nconst WindowsOperationNowInProgress = 10036;\n/**\n * @hidden\n */\nconst WindowsAddressAlreadyInUse = 10048;\n/**\n * @hidden\n */\nconst WindowsConnectionResetByPeer = 10054;\n/**\n * @hidden\n */\nconst WindowsCannotSendAfterSocketShutdown = 10058;\n/**\n * @hidden\n */\nconst WindowsConnectionTimedOut = 10060;\n/**\n * @hidden\n */\nconst WindowsConnectionRefused = 10061;\n/**\n * @hidden\n */\nconst WindowsNameTooLong = 10063;\n/**\n * @hidden\n */\nconst WindowsHostIsDown = 10064;\n/**\n * @hidden\n */\nconst WindowsNoRouteTohost = 10065;\n/**\n * @hidden\n */\n// Linux Error Codes\n/**\n * @hidden\n */\nconst LinuxConnectionReset = \"ECONNRESET\";\n// Node Error Codes\n/**\n * @hidden\n */\nconst BrokenPipe = \"EPIPE\";\n/**\n * @hidden\n */\nconst CONNECTION_ERROR_CODES = [\n    WindowsInterruptedFunctionCall,\n    WindowsFileHandleNotValid,\n    WindowsPermissionDenied,\n    WindowsBadAddress,\n    WindowsInvalidArgumnet,\n    WindowsResourceTemporarilyUnavailable,\n    WindowsOperationNowInProgress,\n    WindowsAddressAlreadyInUse,\n    WindowsConnectionResetByPeer,\n    WindowsCannotSendAfterSocketShutdown,\n    WindowsConnectionTimedOut,\n    WindowsConnectionRefused,\n    WindowsNameTooLong,\n    WindowsHostIsDown,\n    WindowsNoRouteTohost,\n    LinuxConnectionReset,\n    _request_TimeoutError_js__WEBPACK_IMPORTED_MODULE_1__.TimeoutErrorCode,\n    BrokenPipe,\n];\n/**\n * @hidden\n */\nfunction needsRetry(operationType, code) {\n    return ((operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Read || operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Query) &&\n        CONNECTION_ERROR_CODES.includes(code));\n}\n/**\n * This class implements the default connection retry policy for requests.\n * @hidden\n */\nclass DefaultRetryPolicy {\n    operationType;\n    maxTries = 10;\n    currentRetryAttemptCount = 0;\n    retryAfterInMs = 1000;\n    constructor(operationType) {\n        this.operationType = operationType;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param err - Error returned by the request.\n     */\n    async shouldRetry(err, diagnosticNode) {\n        if (err) {\n            if (this.currentRetryAttemptCount < this.maxTries &&\n                needsRetry(this.operationType, err.code)) {\n                diagnosticNode.addData({ successfulRetryPolicy: \"default\" });\n                this.currentRetryAttemptCount++;\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9kZWZhdWx0UmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ1c7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNFQUFnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMkRBQWEsMkJBQTJCLDJEQUFhO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGtDQUFrQztBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9kZWZhdWx0UmV0cnlQb2xpY3kuanM/ZjU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcGVyYXRpb25UeXBlIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgVGltZW91dEVycm9yQ29kZSB9IGZyb20gXCIuLi9yZXF1ZXN0L1RpbWVvdXRFcnJvci5qc1wiO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbi8vIFdpbmRvd3MgU29ja2V0IEVycm9yIENvZGVzXG5jb25zdCBXaW5kb3dzSW50ZXJydXB0ZWRGdW5jdGlvbkNhbGwgPSAxMDAwNDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzRmlsZUhhbmRsZU5vdFZhbGlkID0gMTAwMDk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgV2luZG93c1Blcm1pc3Npb25EZW5pZWQgPSAxMDAxMztcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzQmFkQWRkcmVzcyA9IDEwMDE0O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IFdpbmRvd3NJbnZhbGlkQXJndW1uZXQgPSAxMDAyMjtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzUmVzb3VyY2VUZW1wb3JhcmlseVVuYXZhaWxhYmxlID0gMTAwMzU7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgV2luZG93c09wZXJhdGlvbk5vd0luUHJvZ3Jlc3MgPSAxMDAzNjtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzQWRkcmVzc0FscmVhZHlJblVzZSA9IDEwMDQ4O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IFdpbmRvd3NDb25uZWN0aW9uUmVzZXRCeVBlZXIgPSAxMDA1NDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzQ2Fubm90U2VuZEFmdGVyU29ja2V0U2h1dGRvd24gPSAxMDA1ODtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzQ29ubmVjdGlvblRpbWVkT3V0ID0gMTAwNjA7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgV2luZG93c0Nvbm5lY3Rpb25SZWZ1c2VkID0gMTAwNjE7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgV2luZG93c05hbWVUb29Mb25nID0gMTAwNjM7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgV2luZG93c0hvc3RJc0Rvd24gPSAxMDA2NDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBXaW5kb3dzTm9Sb3V0ZVRvaG9zdCA9IDEwMDY1O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbi8vIExpbnV4IEVycm9yIENvZGVzXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgTGludXhDb25uZWN0aW9uUmVzZXQgPSBcIkVDT05OUkVTRVRcIjtcbi8vIE5vZGUgRXJyb3IgQ29kZXNcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBCcm9rZW5QaXBlID0gXCJFUElQRVwiO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IENPTk5FQ1RJT05fRVJST1JfQ09ERVMgPSBbXG4gICAgV2luZG93c0ludGVycnVwdGVkRnVuY3Rpb25DYWxsLFxuICAgIFdpbmRvd3NGaWxlSGFuZGxlTm90VmFsaWQsXG4gICAgV2luZG93c1Blcm1pc3Npb25EZW5pZWQsXG4gICAgV2luZG93c0JhZEFkZHJlc3MsXG4gICAgV2luZG93c0ludmFsaWRBcmd1bW5ldCxcbiAgICBXaW5kb3dzUmVzb3VyY2VUZW1wb3JhcmlseVVuYXZhaWxhYmxlLFxuICAgIFdpbmRvd3NPcGVyYXRpb25Ob3dJblByb2dyZXNzLFxuICAgIFdpbmRvd3NBZGRyZXNzQWxyZWFkeUluVXNlLFxuICAgIFdpbmRvd3NDb25uZWN0aW9uUmVzZXRCeVBlZXIsXG4gICAgV2luZG93c0Nhbm5vdFNlbmRBZnRlclNvY2tldFNodXRkb3duLFxuICAgIFdpbmRvd3NDb25uZWN0aW9uVGltZWRPdXQsXG4gICAgV2luZG93c0Nvbm5lY3Rpb25SZWZ1c2VkLFxuICAgIFdpbmRvd3NOYW1lVG9vTG9uZyxcbiAgICBXaW5kb3dzSG9zdElzRG93bixcbiAgICBXaW5kb3dzTm9Sb3V0ZVRvaG9zdCxcbiAgICBMaW51eENvbm5lY3Rpb25SZXNldCxcbiAgICBUaW1lb3V0RXJyb3JDb2RlLFxuICAgIEJyb2tlblBpcGUsXG5dO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIG5lZWRzUmV0cnkob3BlcmF0aW9uVHlwZSwgY29kZSkge1xuICAgIHJldHVybiAoKG9wZXJhdGlvblR5cGUgPT09IE9wZXJhdGlvblR5cGUuUmVhZCB8fCBvcGVyYXRpb25UeXBlID09PSBPcGVyYXRpb25UeXBlLlF1ZXJ5KSAmJlxuICAgICAgICBDT05ORUNUSU9OX0VSUk9SX0NPREVTLmluY2x1ZGVzKGNvZGUpKTtcbn1cbi8qKlxuICogVGhpcyBjbGFzcyBpbXBsZW1lbnRzIHRoZSBkZWZhdWx0IGNvbm5lY3Rpb24gcmV0cnkgcG9saWN5IGZvciByZXF1ZXN0cy5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIERlZmF1bHRSZXRyeVBvbGljeSB7XG4gICAgb3BlcmF0aW9uVHlwZTtcbiAgICBtYXhUcmllcyA9IDEwO1xuICAgIGN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA9IDA7XG4gICAgcmV0cnlBZnRlckluTXMgPSAxMDAwO1xuICAgIGNvbnN0cnVjdG9yKG9wZXJhdGlvblR5cGUpIHtcbiAgICAgICAgdGhpcy5vcGVyYXRpb25UeXBlID0gb3BlcmF0aW9uVHlwZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSByZXF1ZXN0IHNob3VsZCBiZSByZXRyaWVkIG9yIG5vdC5cbiAgICAgKiBAcGFyYW0gZXJyIC0gRXJyb3IgcmV0dXJuZWQgYnkgdGhlIHJlcXVlc3QuXG4gICAgICovXG4gICAgYXN5bmMgc2hvdWxkUmV0cnkoZXJyLCBkaWFnbm9zdGljTm9kZSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPCB0aGlzLm1heFRyaWVzICYmXG4gICAgICAgICAgICAgICAgbmVlZHNSZXRyeSh0aGlzLm9wZXJhdGlvblR5cGUsIGVyci5jb2RlKSkge1xuICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmFkZERhdGEoeyBzdWNjZXNzZnVsUmV0cnlQb2xpY3k6IFwiZGVmYXVsdFwiIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50Kys7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/defaultRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/endpointDiscoveryRetryPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/endpointDiscoveryRetryPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EndpointDiscoveryRetryPolicy: () => (/* binding */ EndpointDiscoveryRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _common_helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n\n\n/**\n * This class implements the retry policy for endpoint discovery.\n * @hidden\n */\nclass EndpointDiscoveryRetryPolicy {\n    globalEndpointManager;\n    resourceType;\n    operationType;\n    globalPartitionEndpointManager;\n    /** Current retry attempt count. */\n    currentRetryAttemptCount;\n    /** Retry interval in milliseconds. */\n    retryAfterInMs;\n    /** Max number of retry attempts to perform. */\n    maxTries;\n    static maxTries = 120; // TODO: Constant?\n    static retryAfterInMs = 1000;\n    /**\n     * @param globalEndpointManager - The GlobalEndpointManager instance.\n     */\n    constructor(globalEndpointManager, resourceType, operationType, globalPartitionEndpointManager) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.resourceType = resourceType;\n        this.operationType = operationType;\n        this.globalPartitionEndpointManager = globalPartitionEndpointManager;\n        this.maxTries = EndpointDiscoveryRetryPolicy.maxTries;\n        this.currentRetryAttemptCount = 0;\n        this.retryAfterInMs = EndpointDiscoveryRetryPolicy.retryAfterInMs;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param err - Error returned by the request.\n     */\n    async shouldRetry(err, diagnosticNode, retryContext, locationEndpoint, requestContext) {\n        if (!err) {\n            return false;\n        }\n        if (!retryContext || !locationEndpoint) {\n            return false;\n        }\n        if (!this.globalEndpointManager.enableEndpointDiscovery) {\n            return false;\n        }\n        if (this.globalPartitionEndpointManager) {\n            const didFailover = await this.globalPartitionEndpointManager.tryPartitionLevelFailover(requestContext, diagnosticNode);\n            if (didFailover) {\n                return true;\n            }\n        }\n        if (this.currentRetryAttemptCount >= this.maxTries) {\n            return false;\n        }\n        this.currentRetryAttemptCount++;\n        retryContext.retryCount = this.currentRetryAttemptCount;\n        retryContext.clearSessionTokenNotAvailable = false;\n        retryContext.retryRequestOnPreferredLocations = false;\n        diagnosticNode.addData({ successfulRetryPolicy: \"endpointDiscovery\" });\n        // check if this is a readDatabaseAccount call\n        // If yes, then simply return true (avoid recursive call triggered for readDatabaseAccount)\n        if (this.resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ResourceType.none && this.operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.OperationType.Read) {\n            return true;\n        }\n        if ((0,_common_helper_js__WEBPACK_IMPORTED_MODULE_1__.isReadRequest)(this.operationType)) {\n            await this.globalEndpointManager.markCurrentLocationUnavailableForRead(diagnosticNode, locationEndpoint);\n        }\n        else {\n            await this.globalEndpointManager.markCurrentLocationUnavailableForWrite(diagnosticNode, locationEndpoint);\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=endpointDiscoveryRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9lbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRTtBQUNiO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw0Q0FBNEM7QUFDN0U7QUFDQTtBQUNBLGtDQUFrQywwREFBWSxnQ0FBZ0MsMkRBQWE7QUFDM0Y7QUFDQTtBQUNBLFlBQVksZ0VBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9lbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5LmpzPzBjMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3BlcmF0aW9uVHlwZSwgUmVzb3VyY2VUeXBlIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgaXNSZWFkUmVxdWVzdCB9IGZyb20gXCIuLi9jb21tb24vaGVscGVyLmpzXCI7XG4vKipcbiAqIFRoaXMgY2xhc3MgaW1wbGVtZW50cyB0aGUgcmV0cnkgcG9saWN5IGZvciBlbmRwb2ludCBkaXNjb3ZlcnkuXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBjbGFzcyBFbmRwb2ludERpc2NvdmVyeVJldHJ5UG9saWN5IHtcbiAgICBnbG9iYWxFbmRwb2ludE1hbmFnZXI7XG4gICAgcmVzb3VyY2VUeXBlO1xuICAgIG9wZXJhdGlvblR5cGU7XG4gICAgZ2xvYmFsUGFydGl0aW9uRW5kcG9pbnRNYW5hZ2VyO1xuICAgIC8qKiBDdXJyZW50IHJldHJ5IGF0dGVtcHQgY291bnQuICovXG4gICAgY3VycmVudFJldHJ5QXR0ZW1wdENvdW50O1xuICAgIC8qKiBSZXRyeSBpbnRlcnZhbCBpbiBtaWxsaXNlY29uZHMuICovXG4gICAgcmV0cnlBZnRlckluTXM7XG4gICAgLyoqIE1heCBudW1iZXIgb2YgcmV0cnkgYXR0ZW1wdHMgdG8gcGVyZm9ybS4gKi9cbiAgICBtYXhUcmllcztcbiAgICBzdGF0aWMgbWF4VHJpZXMgPSAxMjA7IC8vIFRPRE86IENvbnN0YW50P1xuICAgIHN0YXRpYyByZXRyeUFmdGVySW5NcyA9IDEwMDA7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGdsb2JhbEVuZHBvaW50TWFuYWdlciAtIFRoZSBHbG9iYWxFbmRwb2ludE1hbmFnZXIgaW5zdGFuY2UuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyLCByZXNvdXJjZVR5cGUsIG9wZXJhdGlvblR5cGUsIGdsb2JhbFBhcnRpdGlvbkVuZHBvaW50TWFuYWdlcikge1xuICAgICAgICB0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlciA9IGdsb2JhbEVuZHBvaW50TWFuYWdlcjtcbiAgICAgICAgdGhpcy5yZXNvdXJjZVR5cGUgPSByZXNvdXJjZVR5cGU7XG4gICAgICAgIHRoaXMub3BlcmF0aW9uVHlwZSA9IG9wZXJhdGlvblR5cGU7XG4gICAgICAgIHRoaXMuZ2xvYmFsUGFydGl0aW9uRW5kcG9pbnRNYW5hZ2VyID0gZ2xvYmFsUGFydGl0aW9uRW5kcG9pbnRNYW5hZ2VyO1xuICAgICAgICB0aGlzLm1heFRyaWVzID0gRW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeS5tYXhUcmllcztcbiAgICAgICAgdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPSAwO1xuICAgICAgICB0aGlzLnJldHJ5QWZ0ZXJJbk1zID0gRW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeS5yZXRyeUFmdGVySW5NcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSByZXF1ZXN0IHNob3VsZCBiZSByZXRyaWVkIG9yIG5vdC5cbiAgICAgKiBAcGFyYW0gZXJyIC0gRXJyb3IgcmV0dXJuZWQgYnkgdGhlIHJlcXVlc3QuXG4gICAgICovXG4gICAgYXN5bmMgc2hvdWxkUmV0cnkoZXJyLCBkaWFnbm9zdGljTm9kZSwgcmV0cnlDb250ZXh0LCBsb2NhdGlvbkVuZHBvaW50LCByZXF1ZXN0Q29udGV4dCkge1xuICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcmV0cnlDb250ZXh0IHx8ICFsb2NhdGlvbkVuZHBvaW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlci5lbmFibGVFbmRwb2ludERpc2NvdmVyeSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmdsb2JhbFBhcnRpdGlvbkVuZHBvaW50TWFuYWdlcikge1xuICAgICAgICAgICAgY29uc3QgZGlkRmFpbG92ZXIgPSBhd2FpdCB0aGlzLmdsb2JhbFBhcnRpdGlvbkVuZHBvaW50TWFuYWdlci50cnlQYXJ0aXRpb25MZXZlbEZhaWxvdmVyKHJlcXVlc3RDb250ZXh0LCBkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgICAgICBpZiAoZGlkRmFpbG92ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPj0gdGhpcy5tYXhUcmllcykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50Kys7XG4gICAgICAgIHJldHJ5Q29udGV4dC5yZXRyeUNvdW50ID0gdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQ7XG4gICAgICAgIHJldHJ5Q29udGV4dC5jbGVhclNlc3Npb25Ub2tlbk5vdEF2YWlsYWJsZSA9IGZhbHNlO1xuICAgICAgICByZXRyeUNvbnRleHQucmV0cnlSZXF1ZXN0T25QcmVmZXJyZWRMb2NhdGlvbnMgPSBmYWxzZTtcbiAgICAgICAgZGlhZ25vc3RpY05vZGUuYWRkRGF0YSh7IHN1Y2Nlc3NmdWxSZXRyeVBvbGljeTogXCJlbmRwb2ludERpc2NvdmVyeVwiIH0pO1xuICAgICAgICAvLyBjaGVjayBpZiB0aGlzIGlzIGEgcmVhZERhdGFiYXNlQWNjb3VudCBjYWxsXG4gICAgICAgIC8vIElmIHllcywgdGhlbiBzaW1wbHkgcmV0dXJuIHRydWUgKGF2b2lkIHJlY3Vyc2l2ZSBjYWxsIHRyaWdnZXJlZCBmb3IgcmVhZERhdGFiYXNlQWNjb3VudClcbiAgICAgICAgaWYgKHRoaXMucmVzb3VyY2VUeXBlID09PSBSZXNvdXJjZVR5cGUubm9uZSAmJiB0aGlzLm9wZXJhdGlvblR5cGUgPT09IE9wZXJhdGlvblR5cGUuUmVhZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzUmVhZFJlcXVlc3QodGhpcy5vcGVyYXRpb25UeXBlKSkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5nbG9iYWxFbmRwb2ludE1hbmFnZXIubWFya0N1cnJlbnRMb2NhdGlvblVuYXZhaWxhYmxlRm9yUmVhZChkaWFnbm9zdGljTm9kZSwgbG9jYXRpb25FbmRwb2ludCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlci5tYXJrQ3VycmVudExvY2F0aW9uVW5hdmFpbGFibGVGb3JXcml0ZShkaWFnbm9zdGljTm9kZSwgbG9jYXRpb25FbmRwb2ludCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5kcG9pbnREaXNjb3ZlcnlSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/endpointDiscoveryRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/resourceThrottleRetryPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/resourceThrottleRetryPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResourceThrottleRetryPolicy: () => (/* binding */ ResourceThrottleRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This class implements the resource throttle retry policy for requests.\n * @hidden\n */\nclass ResourceThrottleRetryPolicy {\n    /** Current retry attempt count. */\n    currentRetryAttemptCount = 0;\n    /** Cummulative wait time in milliseconds for a request while the retries are happening. */\n    cummulativeWaitTimeinMs = 0;\n    /** Retry interval in milliseconds to wait before the next request will be sent. */\n    retryAfterInMs = 0;\n    /** Max wait time in milliseconds to wait for a request while the retries are happening. */\n    timeoutInMs;\n    /**\n     * @param maxTries - Max number of retries to be performed for a request.\n     * @param fixedRetryIntervalInMs - Fixed retry interval in milliseconds to wait between each\n     * retry ignoring the retryAfter returned as part of the response.\n     * @param timeoutInSeconds - Max wait time in seconds to wait for a request while the\n     * retries are happening.\n     */\n    maxTries;\n    fixedRetryIntervalInMs;\n    constructor(options) {\n        this.maxTries = options.maxRetryAttemptCount ?? _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottledRequestMaxRetryAttemptCount;\n        this.fixedRetryIntervalInMs =\n            options.fixedRetryIntervalInMilliseconds ?? _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottledRequestFixedRetryIntervalInMs;\n        const timeoutInSeconds = options.maxWaitTimeInSeconds ?? _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottledRequestMaxWaitTimeInSeconds;\n        this.timeoutInMs = timeoutInSeconds * 1000;\n        this.currentRetryAttemptCount = 0;\n        this.cummulativeWaitTimeinMs = 0;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param err - Error returned by the request.\n     */\n    async shouldRetry(err, diagnosticNode) {\n        // TODO: any custom error object\n        if (err) {\n            if (this.currentRetryAttemptCount < this.maxTries) {\n                this.currentRetryAttemptCount++;\n                this.retryAfterInMs = 0;\n                if (this.fixedRetryIntervalInMs) {\n                    this.retryAfterInMs = this.fixedRetryIntervalInMs;\n                }\n                else if (err.retryAfterInMs) {\n                    this.retryAfterInMs = err.retryAfterInMs;\n                }\n                if (this.cummulativeWaitTimeinMs < this.timeoutInMs) {\n                    this.cummulativeWaitTimeinMs += this.retryAfterInMs;\n                    diagnosticNode.addData({ successfulRetryPolicy: \"resourceThrottle\" });\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=resourceThrottleRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9yZXNvdXJjZVRocm90dGxlUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsMkRBQVM7QUFDakU7QUFDQSx3REFBd0QsMkRBQVM7QUFDakUsaUVBQWlFLDJEQUFTO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDJDQUEyQztBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9yZXNvdXJjZVRocm90dGxlUmV0cnlQb2xpY3kuanM/ZWUwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gXCIuLi9jb21tb24vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIFRoaXMgY2xhc3MgaW1wbGVtZW50cyB0aGUgcmVzb3VyY2UgdGhyb3R0bGUgcmV0cnkgcG9saWN5IGZvciByZXF1ZXN0cy5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFJlc291cmNlVGhyb3R0bGVSZXRyeVBvbGljeSB7XG4gICAgLyoqIEN1cnJlbnQgcmV0cnkgYXR0ZW1wdCBjb3VudC4gKi9cbiAgICBjdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPSAwO1xuICAgIC8qKiBDdW1tdWxhdGl2ZSB3YWl0IHRpbWUgaW4gbWlsbGlzZWNvbmRzIGZvciBhIHJlcXVlc3Qgd2hpbGUgdGhlIHJldHJpZXMgYXJlIGhhcHBlbmluZy4gKi9cbiAgICBjdW1tdWxhdGl2ZVdhaXRUaW1laW5NcyA9IDA7XG4gICAgLyoqIFJldHJ5IGludGVydmFsIGluIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJlZm9yZSB0aGUgbmV4dCByZXF1ZXN0IHdpbGwgYmUgc2VudC4gKi9cbiAgICByZXRyeUFmdGVySW5NcyA9IDA7XG4gICAgLyoqIE1heCB3YWl0IHRpbWUgaW4gbWlsbGlzZWNvbmRzIHRvIHdhaXQgZm9yIGEgcmVxdWVzdCB3aGlsZSB0aGUgcmV0cmllcyBhcmUgaGFwcGVuaW5nLiAqL1xuICAgIHRpbWVvdXRJbk1zO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBtYXhUcmllcyAtIE1heCBudW1iZXIgb2YgcmV0cmllcyB0byBiZSBwZXJmb3JtZWQgZm9yIGEgcmVxdWVzdC5cbiAgICAgKiBAcGFyYW0gZml4ZWRSZXRyeUludGVydmFsSW5NcyAtIEZpeGVkIHJldHJ5IGludGVydmFsIGluIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJldHdlZW4gZWFjaFxuICAgICAqIHJldHJ5IGlnbm9yaW5nIHRoZSByZXRyeUFmdGVyIHJldHVybmVkIGFzIHBhcnQgb2YgdGhlIHJlc3BvbnNlLlxuICAgICAqIEBwYXJhbSB0aW1lb3V0SW5TZWNvbmRzIC0gTWF4IHdhaXQgdGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgZm9yIGEgcmVxdWVzdCB3aGlsZSB0aGVcbiAgICAgKiByZXRyaWVzIGFyZSBoYXBwZW5pbmcuXG4gICAgICovXG4gICAgbWF4VHJpZXM7XG4gICAgZml4ZWRSZXRyeUludGVydmFsSW5NcztcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMubWF4VHJpZXMgPSBvcHRpb25zLm1heFJldHJ5QXR0ZW1wdENvdW50ID8/IENvbnN0YW50cy5UaHJvdHRsZWRSZXF1ZXN0TWF4UmV0cnlBdHRlbXB0Q291bnQ7XG4gICAgICAgIHRoaXMuZml4ZWRSZXRyeUludGVydmFsSW5NcyA9XG4gICAgICAgICAgICBvcHRpb25zLmZpeGVkUmV0cnlJbnRlcnZhbEluTWlsbGlzZWNvbmRzID8/IENvbnN0YW50cy5UaHJvdHRsZWRSZXF1ZXN0Rml4ZWRSZXRyeUludGVydmFsSW5NcztcbiAgICAgICAgY29uc3QgdGltZW91dEluU2Vjb25kcyA9IG9wdGlvbnMubWF4V2FpdFRpbWVJblNlY29uZHMgPz8gQ29uc3RhbnRzLlRocm90dGxlZFJlcXVlc3RNYXhXYWl0VGltZUluU2Vjb25kcztcbiAgICAgICAgdGhpcy50aW1lb3V0SW5NcyA9IHRpbWVvdXRJblNlY29uZHMgKiAxMDAwO1xuICAgICAgICB0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA9IDA7XG4gICAgICAgIHRoaXMuY3VtbXVsYXRpdmVXYWl0VGltZWluTXMgPSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHJlcXVlc3Qgc2hvdWxkIGJlIHJldHJpZWQgb3Igbm90LlxuICAgICAqIEBwYXJhbSBlcnIgLSBFcnJvciByZXR1cm5lZCBieSB0aGUgcmVxdWVzdC5cbiAgICAgKi9cbiAgICBhc3luYyBzaG91bGRSZXRyeShlcnIsIGRpYWdub3N0aWNOb2RlKSB7XG4gICAgICAgIC8vIFRPRE86IGFueSBjdXN0b20gZXJyb3Igb2JqZWN0XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA8IHRoaXMubWF4VHJpZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCsrO1xuICAgICAgICAgICAgICAgIHRoaXMucmV0cnlBZnRlckluTXMgPSAwO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZpeGVkUmV0cnlJbnRlcnZhbEluTXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXRyeUFmdGVySW5NcyA9IHRoaXMuZml4ZWRSZXRyeUludGVydmFsSW5NcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZXJyLnJldHJ5QWZ0ZXJJbk1zKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmV0cnlBZnRlckluTXMgPSBlcnIucmV0cnlBZnRlckluTXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1bW11bGF0aXZlV2FpdFRpbWVpbk1zIDwgdGhpcy50aW1lb3V0SW5Ncykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmN1bW11bGF0aXZlV2FpdFRpbWVpbk1zICs9IHRoaXMucmV0cnlBZnRlckluTXM7XG4gICAgICAgICAgICAgICAgICAgIGRpYWdub3N0aWNOb2RlLmFkZERhdGEoeyBzdWNjZXNzZnVsUmV0cnlQb2xpY3k6IFwicmVzb3VyY2VUaHJvdHRsZVwiIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc291cmNlVGhyb3R0bGVSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/resourceThrottleRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/retryUtility.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/retryUtility.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   execute: () => (/* binding */ execute)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _common_helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _request_TimeoutError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../request/TimeoutError.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n/* harmony import */ var _defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./defaultRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/defaultRetryPolicy.js\");\n/* harmony import */ var _endpointDiscoveryRetryPolicy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./endpointDiscoveryRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/endpointDiscoveryRetryPolicy.js\");\n/* harmony import */ var _resourceThrottleRetryPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resourceThrottleRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/resourceThrottleRetryPolicy.js\");\n/* harmony import */ var _sessionRetryPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sessionRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/sessionRetryPolicy.js\");\n/* harmony import */ var _timeoutFailoverRetryPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./timeoutFailoverRetryPolicy.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/timeoutFailoverRetryPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n */\nasync function execute({ diagnosticNode, retryContext = { retryCount: 0 }, retryPolicies, requestContext, executeRequest, }) {\n    // TODO: any response\n    return (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_5__.addDiagnosticChild)(async (localDiagnosticNode) => {\n        localDiagnosticNode.addData({ requestAttempNumber: retryContext.retryCount });\n        if (!retryPolicies) {\n            retryPolicies = {\n                endpointDiscoveryRetryPolicy: new _endpointDiscoveryRetryPolicy_js__WEBPACK_IMPORTED_MODULE_8__.EndpointDiscoveryRetryPolicy(requestContext.globalEndpointManager, requestContext.resourceType, requestContext.operationType, requestContext.globalPartitionEndpointManager),\n                resourceThrottleRetryPolicy: new _resourceThrottleRetryPolicy_js__WEBPACK_IMPORTED_MODULE_9__.ResourceThrottleRetryPolicy(requestContext.connectionPolicy.retryOptions ?? {}),\n                sessionReadRetryPolicy: new _sessionRetryPolicy_js__WEBPACK_IMPORTED_MODULE_10__.SessionRetryPolicy(requestContext.globalEndpointManager, requestContext.resourceType, requestContext.operationType, requestContext.connectionPolicy),\n                defaultRetryPolicy: new _defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.DefaultRetryPolicy(requestContext.operationType),\n                timeoutFailoverRetryPolicy: new _timeoutFailoverRetryPolicy_js__WEBPACK_IMPORTED_MODULE_11__.TimeoutFailoverRetryPolicy(requestContext.globalEndpointManager, requestContext.headers, requestContext.method, requestContext.resourceType, requestContext.operationType, requestContext.connectionPolicy.enableEndpointDiscovery, requestContext.connectionPolicy.enablePartitionLevelFailover, requestContext.globalPartitionEndpointManager),\n            };\n        }\n        if (retryContext && retryContext.clearSessionTokenNotAvailable) {\n            requestContext.client.clearSessionToken(requestContext.path);\n            delete requestContext.headers[\"x-ms-session-token\"];\n        }\n        if (retryContext && retryContext.retryLocationServerIndex) {\n            requestContext.endpoint = await requestContext.globalEndpointManager.resolveServiceEndpoint(localDiagnosticNode, requestContext.resourceType, requestContext.operationType, retryContext.retryLocationServerIndex);\n        }\n        else {\n            requestContext.endpoint = await requestContext.globalEndpointManager.resolveServiceEndpoint(localDiagnosticNode, requestContext.resourceType, requestContext.operationType);\n        }\n        const startTimeUTCInMs = (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_6__.getCurrentTimestampInMs)();\n        const correlatedActivityId = requestContext.headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId];\n        if (requestContext.globalPartitionEndpointManager) {\n            // Try partition level location override\n            // This is used to override the partition level location for the request\n            // if there has been a partition level failover\n            requestContext =\n                await requestContext.globalPartitionEndpointManager.tryAddPartitionLevelLocationOverride(requestContext, localDiagnosticNode);\n        }\n        try {\n            const response = await executeRequest(localDiagnosticNode, requestContext);\n            response.headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottleRetryCount] =\n                retryPolicies.resourceThrottleRetryPolicy.currentRetryAttemptCount;\n            response.headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottleRetryWaitTimeInMs] =\n                retryPolicies.resourceThrottleRetryPolicy.cummulativeWaitTimeinMs;\n            if (correlatedActivityId) {\n                response.headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId] = correlatedActivityId;\n            }\n            return response;\n        }\n        catch (err) {\n            // TODO: any error\n            let retryPolicy = null;\n            const headers = err.headers || {};\n            if (correlatedActivityId) {\n                headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.CorrelatedActivityId] = correlatedActivityId;\n            }\n            if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.StatusCodes.ENOTFOUND ||\n                err.code === \"REQUEST_SEND_ERROR\" ||\n                (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.StatusCodes.Forbidden &&\n                    (err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.SubStatusCodes.DatabaseAccountNotFound ||\n                        err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.SubStatusCodes.WriteForbidden))) {\n                retryPolicy = retryPolicies.endpointDiscoveryRetryPolicy;\n            }\n            else if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.StatusCodes.TooManyRequests && !isBulkRequest(requestContext)) {\n                retryPolicy = retryPolicies.resourceThrottleRetryPolicy;\n            }\n            else if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.StatusCodes.NotFound &&\n                err.substatus === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.SubStatusCodes.ReadSessionNotAvailable) {\n                retryPolicy = retryPolicies.sessionReadRetryPolicy;\n            }\n            else if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_2__.StatusCodes.ServiceUnavailable || err.code === _request_TimeoutError_js__WEBPACK_IMPORTED_MODULE_4__.TimeoutErrorCode) {\n                retryPolicy = retryPolicies.timeoutFailoverRetryPolicy;\n            }\n            else {\n                retryPolicy = retryPolicies.defaultRetryPolicy;\n            }\n            const results = await retryPolicy.shouldRetry(err, localDiagnosticNode, retryContext, requestContext.endpoint, requestContext);\n            if (!results) {\n                headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottleRetryCount] =\n                    retryPolicies.resourceThrottleRetryPolicy.currentRetryAttemptCount;\n                headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.ThrottleRetryWaitTimeInMs] =\n                    retryPolicies.resourceThrottleRetryPolicy.cummulativeWaitTimeinMs;\n                err.headers = { ...err.headers, ...headers };\n                throw err;\n            }\n            else {\n                requestContext.retryCount++;\n                const newUrl = results[1]; // TODO: any hack\n                if (newUrl !== undefined) {\n                    requestContext.endpoint = newUrl;\n                }\n                localDiagnosticNode.recordFailedNetworkCall(startTimeUTCInMs, requestContext, retryContext.retryCount, err.code, err.subsstatusCode, headers);\n                await (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(retryPolicy.retryAfterInMs);\n                return execute({\n                    diagnosticNode,\n                    executeRequest,\n                    requestContext,\n                    retryContext,\n                    retryPolicies,\n                });\n            }\n        }\n    }, diagnosticNode, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_3__.DiagnosticNodeType.HTTP_REQUEST);\n}\n/**\n * @hidden\n */\nfunction isBulkRequest(requestContext) {\n    return (requestContext.operationType === \"batch\" &&\n        !requestContext.headers[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpHeaders.IsBatchAtomic]);\n}\n//# sourceMappingURL=retryUtility.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/retryUtility.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/sessionRetryPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/sessionRetryPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionRetryPolicy: () => (/* binding */ SessionRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n\n/**\n * This class implements the retry policy for session consistent reads.\n * @hidden\n */\nclass SessionRetryPolicy {\n    globalEndpointManager;\n    resourceType;\n    operationType;\n    connectionPolicy;\n    /** Current retry attempt count. */\n    currentRetryAttemptCount = 0;\n    /** Retry interval in milliseconds. */\n    retryAfterInMs = 0;\n    /**\n     * @param globalEndpointManager - The GlobalEndpointManager instance.\n     */\n    constructor(globalEndpointManager, resourceType, operationType, connectionPolicy) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.resourceType = resourceType;\n        this.operationType = operationType;\n        this.connectionPolicy = connectionPolicy;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param err - Error returned by the request.\n     * @param callback - The callback function which takes bool argument which specifies whether the request\n     * will be retried or not.\n     */\n    async shouldRetry(err, diagnosticNode, retryContext) {\n        if (!err) {\n            return false;\n        }\n        if (!retryContext) {\n            return false;\n        }\n        if (!this.connectionPolicy.enableEndpointDiscovery) {\n            return false;\n        }\n        if (this.globalEndpointManager.canUseMultipleWriteLocations(this.resourceType, this.operationType)) {\n            // If we can write to multiple locations, we should against every write endpoint until we succeed\n            const endpoints = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.isReadRequest)(this.operationType)\n                ? await this.globalEndpointManager.getReadEndpoints()\n                : await this.globalEndpointManager.getWriteEndpoints();\n            if (this.currentRetryAttemptCount > endpoints.length) {\n                return false;\n            }\n            else {\n                this.currentRetryAttemptCount++;\n                retryContext.retryCount++;\n                retryContext.retryRequestOnPreferredLocations = this.currentRetryAttemptCount > 1;\n                retryContext.clearSessionTokenNotAvailable =\n                    this.currentRetryAttemptCount === endpoints.length;\n                diagnosticNode.addData({ successfulRetryPolicy: \"session\" });\n                return true;\n            }\n        }\n        else {\n            if (this.currentRetryAttemptCount > 1) {\n                return false;\n            }\n            else {\n                this.currentRetryAttemptCount++;\n                retryContext.retryCount++;\n                retryContext.retryRequestOnPreferredLocations = false; // Forces all operations to primary write endpoint\n                retryContext.clearSessionTokenNotAvailable = true;\n                diagnosticNode.addData({ successfulRetryPolicy: \"session\" });\n                return true;\n            }\n        }\n    }\n}\n//# sourceMappingURL=sessionRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yZXRyeS9zZXNzaW9uUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0RBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxrQ0FBa0M7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkU7QUFDQSx5Q0FBeUMsa0NBQWtDO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vcmV0cnkvc2Vzc2lvblJldHJ5UG9saWN5LmpzPzI0MjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNSZWFkUmVxdWVzdCB9IGZyb20gXCIuLi9jb21tb24vaW5kZXguanNcIjtcbi8qKlxuICogVGhpcyBjbGFzcyBpbXBsZW1lbnRzIHRoZSByZXRyeSBwb2xpY3kgZm9yIHNlc3Npb24gY29uc2lzdGVudCByZWFkcy5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFNlc3Npb25SZXRyeVBvbGljeSB7XG4gICAgZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyO1xuICAgIHJlc291cmNlVHlwZTtcbiAgICBvcGVyYXRpb25UeXBlO1xuICAgIGNvbm5lY3Rpb25Qb2xpY3k7XG4gICAgLyoqIEN1cnJlbnQgcmV0cnkgYXR0ZW1wdCBjb3VudC4gKi9cbiAgICBjdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPSAwO1xuICAgIC8qKiBSZXRyeSBpbnRlcnZhbCBpbiBtaWxsaXNlY29uZHMuICovXG4gICAgcmV0cnlBZnRlckluTXMgPSAwO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBnbG9iYWxFbmRwb2ludE1hbmFnZXIgLSBUaGUgR2xvYmFsRW5kcG9pbnRNYW5hZ2VyIGluc3RhbmNlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGdsb2JhbEVuZHBvaW50TWFuYWdlciwgcmVzb3VyY2VUeXBlLCBvcGVyYXRpb25UeXBlLCBjb25uZWN0aW9uUG9saWN5KSB7XG4gICAgICAgIHRoaXMuZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyID0gZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyO1xuICAgICAgICB0aGlzLnJlc291cmNlVHlwZSA9IHJlc291cmNlVHlwZTtcbiAgICAgICAgdGhpcy5vcGVyYXRpb25UeXBlID0gb3BlcmF0aW9uVHlwZTtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uUG9saWN5ID0gY29ubmVjdGlvblBvbGljeTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSByZXF1ZXN0IHNob3VsZCBiZSByZXRyaWVkIG9yIG5vdC5cbiAgICAgKiBAcGFyYW0gZXJyIC0gRXJyb3IgcmV0dXJuZWQgYnkgdGhlIHJlcXVlc3QuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHdoaWNoIHRha2VzIGJvb2wgYXJndW1lbnQgd2hpY2ggc3BlY2lmaWVzIHdoZXRoZXIgdGhlIHJlcXVlc3RcbiAgICAgKiB3aWxsIGJlIHJldHJpZWQgb3Igbm90LlxuICAgICAqL1xuICAgIGFzeW5jIHNob3VsZFJldHJ5KGVyciwgZGlhZ25vc3RpY05vZGUsIHJldHJ5Q29udGV4dCkge1xuICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcmV0cnlDb250ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3Rpb25Qb2xpY3kuZW5hYmxlRW5kcG9pbnREaXNjb3ZlcnkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5nbG9iYWxFbmRwb2ludE1hbmFnZXIuY2FuVXNlTXVsdGlwbGVXcml0ZUxvY2F0aW9ucyh0aGlzLnJlc291cmNlVHlwZSwgdGhpcy5vcGVyYXRpb25UeXBlKSkge1xuICAgICAgICAgICAgLy8gSWYgd2UgY2FuIHdyaXRlIHRvIG11bHRpcGxlIGxvY2F0aW9ucywgd2Ugc2hvdWxkIGFnYWluc3QgZXZlcnkgd3JpdGUgZW5kcG9pbnQgdW50aWwgd2Ugc3VjY2VlZFxuICAgICAgICAgICAgY29uc3QgZW5kcG9pbnRzID0gaXNSZWFkUmVxdWVzdCh0aGlzLm9wZXJhdGlvblR5cGUpXG4gICAgICAgICAgICAgICAgPyBhd2FpdCB0aGlzLmdsb2JhbEVuZHBvaW50TWFuYWdlci5nZXRSZWFkRW5kcG9pbnRzKClcbiAgICAgICAgICAgICAgICA6IGF3YWl0IHRoaXMuZ2xvYmFsRW5kcG9pbnRNYW5hZ2VyLmdldFdyaXRlRW5kcG9pbnRzKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQgPiBlbmRwb2ludHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UmV0cnlBdHRlbXB0Q291bnQrKztcbiAgICAgICAgICAgICAgICByZXRyeUNvbnRleHQucmV0cnlDb3VudCsrO1xuICAgICAgICAgICAgICAgIHJldHJ5Q29udGV4dC5yZXRyeVJlcXVlc3RPblByZWZlcnJlZExvY2F0aW9ucyA9IHRoaXMuY3VycmVudFJldHJ5QXR0ZW1wdENvdW50ID4gMTtcbiAgICAgICAgICAgICAgICByZXRyeUNvbnRleHQuY2xlYXJTZXNzaW9uVG9rZW5Ob3RBdmFpbGFibGUgPVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA9PT0gZW5kcG9pbnRzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5hZGREYXRhKHsgc3VjY2Vzc2Z1bFJldHJ5UG9saWN5OiBcInNlc3Npb25cIiB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCA+IDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRSZXRyeUF0dGVtcHRDb3VudCsrO1xuICAgICAgICAgICAgICAgIHJldHJ5Q29udGV4dC5yZXRyeUNvdW50Kys7XG4gICAgICAgICAgICAgICAgcmV0cnlDb250ZXh0LnJldHJ5UmVxdWVzdE9uUHJlZmVycmVkTG9jYXRpb25zID0gZmFsc2U7IC8vIEZvcmNlcyBhbGwgb3BlcmF0aW9ucyB0byBwcmltYXJ5IHdyaXRlIGVuZHBvaW50XG4gICAgICAgICAgICAgICAgcmV0cnlDb250ZXh0LmNsZWFyU2Vzc2lvblRva2VuTm90QXZhaWxhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBkaWFnbm9zdGljTm9kZS5hZGREYXRhKHsgc3VjY2Vzc2Z1bFJldHJ5UG9saWN5OiBcInNlc3Npb25cIiB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb25SZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/sessionRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/timeoutFailoverRetryPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/retry/timeoutFailoverRetryPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimeoutFailoverRetryPolicy: () => (/* binding */ TimeoutFailoverRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/statusCodes.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/statusCodes.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _request_TimeoutError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../request/TimeoutError.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/TimeoutError.js\");\n\n\n\n\n/**\n * This class TimeoutFailoverRetryPolicy handles retries for read operations\n * (including data plane,metadata, and query plan) in case of request timeouts\n * (TimeoutError) or service unavailability (503 status code) by performing failover\n * and retrying on other regions.\n * @hidden\n */\nclass TimeoutFailoverRetryPolicy {\n    globalEndpointManager;\n    headers;\n    methodType;\n    resourceType;\n    operationType;\n    enableEndPointDiscovery;\n    enablePartitionLevelFailover;\n    globalPartitionEndpointManager;\n    maxRetryAttemptCount = 120;\n    maxServiceUnavailableRetryCount = 1;\n    retryAfterInMs = 0;\n    failoverRetryCount = 0;\n    request;\n    locationEndpoint;\n    constructor(globalEndpointManager, headers, methodType, resourceType, operationType, enableEndPointDiscovery, enablePartitionLevelFailover, globalPartitionEndpointManager) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.headers = headers;\n        this.methodType = methodType;\n        this.resourceType = resourceType;\n        this.operationType = operationType;\n        this.enableEndPointDiscovery = enableEndPointDiscovery;\n        this.enablePartitionLevelFailover = enablePartitionLevelFailover;\n        this.globalPartitionEndpointManager = globalPartitionEndpointManager;\n    }\n    /**\n     * Checks if a timeout request is valid for the timeout failover retry policy.\n     * A valid request should be a data plane, metadata, or query plan request.\n     * @returns\n     */\n    isValidRequestForTimeoutError() {\n        const isQuery = _common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.IsQuery in this.headers;\n        const isQueryPlan = _common_constants_js__WEBPACK_IMPORTED_MODULE_2__.Constants.HttpHeaders.IsQueryPlan in this.headers;\n        if (this.methodType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.HTTPMethod.get || isQuery || isQueryPlan) {\n            return true;\n        }\n        return false;\n    }\n    async shouldRetry(err, diagnosticNode, retryContext, locationEndpoint, requestContext) {\n        if (!err) {\n            return false;\n        }\n        if (!retryContext || !locationEndpoint) {\n            return false;\n        }\n        if (!this.enableEndPointDiscovery) {\n            return false;\n        }\n        // Mark the partition as unavailable.\n        // Let the Retry logic decide if the request should be retried\n        if (requestContext && this.globalPartitionEndpointManager) {\n            await this.globalPartitionEndpointManager.tryPartitionLevelFailover(requestContext, diagnosticNode);\n        }\n        // Check if the error is a timeout error (TimeoutErrorCode) and if it is not a valid HTTP network timeout request\n        if (err.code === _request_TimeoutError_js__WEBPACK_IMPORTED_MODULE_3__.TimeoutErrorCode && !this.isValidRequestForTimeoutError()) {\n            return false;\n        }\n        if (err.code === _common_statusCodes_js__WEBPACK_IMPORTED_MODULE_0__.StatusCodes.ServiceUnavailable &&\n            this.failoverRetryCount >= this.maxServiceUnavailableRetryCount) {\n            return false;\n        }\n        if (this.failoverRetryCount >= this.maxRetryAttemptCount) {\n            return false;\n        }\n        const canUseMultipleWriteLocations = this.globalEndpointManager.canUseMultipleWriteLocations(this.resourceType, this.operationType);\n        const readRequest = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isReadRequest)(this.operationType);\n        if (!canUseMultipleWriteLocations && !readRequest && !this.enablePartitionLevelFailover) {\n            // Write requests on single master cannot be retried if partition level failover is disabled.\n            // This means there are no other regions available to serve the writes.\n            return false;\n        }\n        this.failoverRetryCount++;\n        // Setting the retryLocationIndex to the next available location for retry.\n        // The retryLocationIndex is determined based on the failoverRetryCount, starting from zero.\n        retryContext.retryLocationServerIndex = await this.findEndpointIndex(this.failoverRetryCount);\n        diagnosticNode.addData({ successfulRetryPolicy: \"timeout-failover\" });\n        return true;\n    }\n    /**\n     * Determines index of endpoint to be used for retry based upon failoverRetryCount and avalable locations\n     * @param failoverRetryCount - count of failovers\n     * @returns\n     */\n    async findEndpointIndex(failoverRetryCount) {\n        // count of preferred locations specified by user\n        const preferredLocationsCount = this.globalEndpointManager.preferredLocationsCount;\n        const readRequest = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isReadRequest)(this.operationType);\n        let endpointIndex = 0;\n        // If preferredLocationsCount is not zero, it indicates that the user has specified preferred locations.\n        if (preferredLocationsCount !== 0) {\n            // The endpointIndex is set based on the preferred location and the failover retry count.\n            endpointIndex = failoverRetryCount % preferredLocationsCount;\n        }\n        else {\n            // In the absence of preferred locations, the endpoint selection is based on the failover count and the number of available locations.\n            if (readRequest) {\n                const getReadEndpoints = await this.globalEndpointManager.getReadEndpoints();\n                if (getReadEndpoints && getReadEndpoints.length > 0) {\n                    endpointIndex = failoverRetryCount % getReadEndpoints.length;\n                }\n            }\n            else {\n                const getWriteEndpoints = await this.globalEndpointManager.getWriteEndpoints();\n                if (getWriteEndpoints && getWriteEndpoints.length > 0) {\n                    endpointIndex = failoverRetryCount % getWriteEndpoints.length;\n                }\n            }\n        }\n        return endpointIndex;\n    }\n}\n//# sourceMappingURL=timeoutFailoverRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/retry/timeoutFailoverRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/CollectionRoutingMapFactory.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/routing/CollectionRoutingMapFactory.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCompleteRoutingMap: () => (/* binding */ createCompleteRoutingMap)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _inMemoryCollectionRoutingMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inMemoryCollectionRoutingMap.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/inMemoryCollectionRoutingMap.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @hidden\n */\nfunction compareRanges(a, b) {\n    const aVal = a[0][_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive];\n    const bVal = b[0][_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive];\n    if (aVal > bVal) {\n        return 1;\n    }\n    if (aVal < bVal) {\n        return -1;\n    }\n    return 0;\n}\n/** @hidden */\nfunction createCompleteRoutingMap(partitionKeyRangeInfoTuppleList) {\n    const rangeById = {}; // TODO: any\n    const rangeByInfo = {}; // TODO: any\n    let sortedRanges = [];\n    // the for loop doesn't invoke any async callback\n    for (const r of partitionKeyRangeInfoTuppleList) {\n        rangeById[r[0][_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.Id]] = r;\n        rangeByInfo[r[1]] = r[0];\n        sortedRanges.push(r);\n    }\n    sortedRanges = sortedRanges.sort(compareRanges);\n    const partitionKeyOrderedRange = sortedRanges.map((r) => r[0]);\n    const orderedPartitionInfo = sortedRanges.map((r) => r[1]);\n    if (!isCompleteSetOfRange(partitionKeyOrderedRange)) {\n        return undefined;\n    }\n    return new _inMemoryCollectionRoutingMap_js__WEBPACK_IMPORTED_MODULE_1__.InMemoryCollectionRoutingMap(partitionKeyOrderedRange, orderedPartitionInfo);\n}\n/**\n * @hidden\n */\nfunction isCompleteSetOfRange(partitionKeyOrderedRange) {\n    // TODO: any\n    let isComplete = false;\n    if (partitionKeyOrderedRange.length > 0) {\n        const firstRange = partitionKeyOrderedRange[0];\n        const lastRange = partitionKeyOrderedRange[partitionKeyOrderedRange.length - 1];\n        isComplete =\n            firstRange[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive] ===\n                _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.EffectivePartitionKeyConstants.MinimumInclusiveEffectivePartitionKey;\n        isComplete =\n            isComplete &&\n                lastRange[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MaxExclusive] ===\n                    _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.EffectivePartitionKeyConstants.MaximumExclusiveEffectivePartitionKey;\n        for (let i = 1; i < partitionKeyOrderedRange.length; i++) {\n            const previousRange = partitionKeyOrderedRange[i - 1];\n            const currentRange = partitionKeyOrderedRange[i];\n            isComplete =\n                isComplete &&\n                    previousRange[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MaxExclusive] ===\n                        currentRange[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive];\n            if (!isComplete) {\n                if (previousRange[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MaxExclusive] >\n                    currentRange[_common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive]) {\n                    throw Error(\"Ranges overlap\");\n                }\n                break;\n            }\n        }\n    }\n    return isComplete;\n}\n//# sourceMappingURL=CollectionRoutingMapFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL0NvbGxlY3Rpb25Sb3V0aW5nTWFwRmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQzhCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFTO0FBQy9CLHNCQUFzQiwyREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDBCQUEwQjtBQUMxQiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDJEQUFTO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMEZBQTRCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQVM7QUFDaEMsZ0JBQWdCLDJEQUFTO0FBQ3pCO0FBQ0E7QUFDQSwwQkFBMEIsMkRBQVM7QUFDbkMsb0JBQW9CLDJEQUFTO0FBQzdCLHdCQUF3QixxQ0FBcUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsMkRBQVM7QUFDM0MscUNBQXFDLDJEQUFTO0FBQzlDO0FBQ0Esa0NBQWtDLDJEQUFTO0FBQzNDLGlDQUFpQywyREFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3JvdXRpbmcvQ29sbGVjdGlvblJvdXRpbmdNYXBGYWN0b3J5LmpzPzA5NTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vY29tbW9uL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IHsgSW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcCB9IGZyb20gXCIuL2luTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAuanNcIjtcbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBjb21wYXJlUmFuZ2VzKGEsIGIpIHtcbiAgICBjb25zdCBhVmFsID0gYVswXVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXTtcbiAgICBjb25zdCBiVmFsID0gYlswXVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXTtcbiAgICBpZiAoYVZhbCA+IGJWYWwpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIGlmIChhVmFsIDwgYlZhbCkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wbGV0ZVJvdXRpbmdNYXAocGFydGl0aW9uS2V5UmFuZ2VJbmZvVHVwcGxlTGlzdCkge1xuICAgIGNvbnN0IHJhbmdlQnlJZCA9IHt9OyAvLyBUT0RPOiBhbnlcbiAgICBjb25zdCByYW5nZUJ5SW5mbyA9IHt9OyAvLyBUT0RPOiBhbnlcbiAgICBsZXQgc29ydGVkUmFuZ2VzID0gW107XG4gICAgLy8gdGhlIGZvciBsb29wIGRvZXNuJ3QgaW52b2tlIGFueSBhc3luYyBjYWxsYmFja1xuICAgIGZvciAoY29uc3QgciBvZiBwYXJ0aXRpb25LZXlSYW5nZUluZm9UdXBwbGVMaXN0KSB7XG4gICAgICAgIHJhbmdlQnlJZFtyWzBdW0NvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5JZF1dID0gcjtcbiAgICAgICAgcmFuZ2VCeUluZm9bclsxXV0gPSByWzBdO1xuICAgICAgICBzb3J0ZWRSYW5nZXMucHVzaChyKTtcbiAgICB9XG4gICAgc29ydGVkUmFuZ2VzID0gc29ydGVkUmFuZ2VzLnNvcnQoY29tcGFyZVJhbmdlcyk7XG4gICAgY29uc3QgcGFydGl0aW9uS2V5T3JkZXJlZFJhbmdlID0gc29ydGVkUmFuZ2VzLm1hcCgocikgPT4gclswXSk7XG4gICAgY29uc3Qgb3JkZXJlZFBhcnRpdGlvbkluZm8gPSBzb3J0ZWRSYW5nZXMubWFwKChyKSA9PiByWzFdKTtcbiAgICBpZiAoIWlzQ29tcGxldGVTZXRPZlJhbmdlKHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZSkpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBJbk1lbW9yeUNvbGxlY3Rpb25Sb3V0aW5nTWFwKHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZSwgb3JkZXJlZFBhcnRpdGlvbkluZm8pO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGlzQ29tcGxldGVTZXRPZlJhbmdlKHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZSkge1xuICAgIC8vIFRPRE86IGFueVxuICAgIGxldCBpc0NvbXBsZXRlID0gZmFsc2U7XG4gICAgaWYgKHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IGZpcnN0UmFuZ2UgPSBwYXJ0aXRpb25LZXlPcmRlcmVkUmFuZ2VbMF07XG4gICAgICAgIGNvbnN0IGxhc3RSYW5nZSA9IHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZVtwYXJ0aXRpb25LZXlPcmRlcmVkUmFuZ2UubGVuZ3RoIC0gMV07XG4gICAgICAgIGlzQ29tcGxldGUgPVxuICAgICAgICAgICAgZmlyc3RSYW5nZVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXSA9PT1cbiAgICAgICAgICAgICAgICBDb25zdGFudHMuRWZmZWN0aXZlUGFydGl0aW9uS2V5Q29uc3RhbnRzLk1pbmltdW1JbmNsdXNpdmVFZmZlY3RpdmVQYXJ0aXRpb25LZXk7XG4gICAgICAgIGlzQ29tcGxldGUgPVxuICAgICAgICAgICAgaXNDb21wbGV0ZSAmJlxuICAgICAgICAgICAgICAgIGxhc3RSYW5nZVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWF4RXhjbHVzaXZlXSA9PT1cbiAgICAgICAgICAgICAgICAgICAgQ29uc3RhbnRzLkVmZmVjdGl2ZVBhcnRpdGlvbktleUNvbnN0YW50cy5NYXhpbXVtRXhjbHVzaXZlRWZmZWN0aXZlUGFydGl0aW9uS2V5O1xuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcHJldmlvdXNSYW5nZSA9IHBhcnRpdGlvbktleU9yZGVyZWRSYW5nZVtpIC0gMV07XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50UmFuZ2UgPSBwYXJ0aXRpb25LZXlPcmRlcmVkUmFuZ2VbaV07XG4gICAgICAgICAgICBpc0NvbXBsZXRlID1cbiAgICAgICAgICAgICAgICBpc0NvbXBsZXRlICYmXG4gICAgICAgICAgICAgICAgICAgIHByZXZpb3VzUmFuZ2VbQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1heEV4Y2x1c2l2ZV0gPT09XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50UmFuZ2VbQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1pbkluY2x1c2l2ZV07XG4gICAgICAgICAgICBpZiAoIWlzQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJldmlvdXNSYW5nZVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWF4RXhjbHVzaXZlXSA+XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSYW5nZVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWluSW5jbHVzaXZlXSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihcIlJhbmdlcyBvdmVybGFwXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaXNDb21wbGV0ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbGxlY3Rpb25Sb3V0aW5nTWFwRmFjdG9yeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/CollectionRoutingMapFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryRange: () => (/* binding */ QueryRange)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n\n/** @hidden */\nclass QueryRange {\n    min;\n    max;\n    isMinInclusive;\n    isMaxInclusive;\n    /**\n     * Represents a QueryRange.\n     *\n     * @param rangeMin                - min\n     * @param rangeMin                - max\n     * @param isMinInclusive         - isMinInclusive\n     * @param isMaxInclusive         - isMaxInclusive\n     * @hidden\n     */\n    constructor(rangeMin, rangeMax, isMinInclusive, isMaxInclusive) {\n        this.min = rangeMin;\n        this.max = rangeMax;\n        this.isMinInclusive = isMinInclusive;\n        this.isMaxInclusive = isMaxInclusive;\n    }\n    overlaps(other) {\n        const range1 = this; // eslint-disable-line @typescript-eslint/no-this-alias\n        const range2 = other;\n        if (range1 === undefined || range2 === undefined) {\n            return false;\n        }\n        if (range1.isEmpty() || range2.isEmpty()) {\n            return false;\n        }\n        if (range1.min <= range2.max || range2.min <= range1.max) {\n            if ((range1.min === range2.max && !(range1.isMinInclusive && range2.isMaxInclusive)) ||\n                (range2.min === range1.max && !(range2.isMinInclusive && range1.isMaxInclusive))) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n    isFullRange() {\n        return (this.min === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.EffectivePartitionKeyConstants.MinimumInclusiveEffectivePartitionKey &&\n            this.max === _common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.EffectivePartitionKeyConstants.MaximumExclusiveEffectivePartitionKey &&\n            this.isMinInclusive === true &&\n            this.isMaxInclusive === false);\n    }\n    isEmpty() {\n        return !(this.isMinInclusive && this.isMaxInclusive) && this.min === this.max;\n    }\n    /**\n     * Parse a QueryRange from a partitionKeyRange\n     * @returns QueryRange\n     * @hidden\n     */\n    static parsePartitionKeyRange(partitionKeyRange) {\n        return new QueryRange(partitionKeyRange[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive], partitionKeyRange[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MaxExclusive], true, false);\n    }\n    /**\n     * Parse a QueryRange from a dictionary\n     * @returns QueryRange\n     * @hidden\n     */\n    static parseFromDict(queryRangeDict) {\n        return new QueryRange(queryRangeDict.min, queryRangeDict.max, queryRangeDict.isMinInclusive, queryRangeDict.isMaxInclusive);\n    }\n}\n//# sourceMappingURL=QueryRange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL1F1ZXJ5UmFuZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix1REFBUztBQUN0Qyx5QkFBeUIsdURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELHVEQUFTLG9EQUFvRCx1REFBUztBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL1F1ZXJ5UmFuZ2UuanM/Nzk0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi4vY29tbW9uL2luZGV4LmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIFF1ZXJ5UmFuZ2Uge1xuICAgIG1pbjtcbiAgICBtYXg7XG4gICAgaXNNaW5JbmNsdXNpdmU7XG4gICAgaXNNYXhJbmNsdXNpdmU7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhIFF1ZXJ5UmFuZ2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmFuZ2VNaW4gICAgICAgICAgICAgICAgLSBtaW5cbiAgICAgKiBAcGFyYW0gcmFuZ2VNaW4gICAgICAgICAgICAgICAgLSBtYXhcbiAgICAgKiBAcGFyYW0gaXNNaW5JbmNsdXNpdmUgICAgICAgICAtIGlzTWluSW5jbHVzaXZlXG4gICAgICogQHBhcmFtIGlzTWF4SW5jbHVzaXZlICAgICAgICAgLSBpc01heEluY2x1c2l2ZVxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyYW5nZU1pbiwgcmFuZ2VNYXgsIGlzTWluSW5jbHVzaXZlLCBpc01heEluY2x1c2l2ZSkge1xuICAgICAgICB0aGlzLm1pbiA9IHJhbmdlTWluO1xuICAgICAgICB0aGlzLm1heCA9IHJhbmdlTWF4O1xuICAgICAgICB0aGlzLmlzTWluSW5jbHVzaXZlID0gaXNNaW5JbmNsdXNpdmU7XG4gICAgICAgIHRoaXMuaXNNYXhJbmNsdXNpdmUgPSBpc01heEluY2x1c2l2ZTtcbiAgICB9XG4gICAgb3ZlcmxhcHMob3RoZXIpIHtcbiAgICAgICAgY29uc3QgcmFuZ2UxID0gdGhpczsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdGhpcy1hbGlhc1xuICAgICAgICBjb25zdCByYW5nZTIgPSBvdGhlcjtcbiAgICAgICAgaWYgKHJhbmdlMSA9PT0gdW5kZWZpbmVkIHx8IHJhbmdlMiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJhbmdlMS5pc0VtcHR5KCkgfHwgcmFuZ2UyLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyYW5nZTEubWluIDw9IHJhbmdlMi5tYXggfHwgcmFuZ2UyLm1pbiA8PSByYW5nZTEubWF4KSB7XG4gICAgICAgICAgICBpZiAoKHJhbmdlMS5taW4gPT09IHJhbmdlMi5tYXggJiYgIShyYW5nZTEuaXNNaW5JbmNsdXNpdmUgJiYgcmFuZ2UyLmlzTWF4SW5jbHVzaXZlKSkgfHxcbiAgICAgICAgICAgICAgICAocmFuZ2UyLm1pbiA9PT0gcmFuZ2UxLm1heCAmJiAhKHJhbmdlMi5pc01pbkluY2x1c2l2ZSAmJiByYW5nZTEuaXNNYXhJbmNsdXNpdmUpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaXNGdWxsUmFuZ2UoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5taW4gPT09IENvbnN0YW50cy5FZmZlY3RpdmVQYXJ0aXRpb25LZXlDb25zdGFudHMuTWluaW11bUluY2x1c2l2ZUVmZmVjdGl2ZVBhcnRpdGlvbktleSAmJlxuICAgICAgICAgICAgdGhpcy5tYXggPT09IENvbnN0YW50cy5FZmZlY3RpdmVQYXJ0aXRpb25LZXlDb25zdGFudHMuTWF4aW11bUV4Y2x1c2l2ZUVmZmVjdGl2ZVBhcnRpdGlvbktleSAmJlxuICAgICAgICAgICAgdGhpcy5pc01pbkluY2x1c2l2ZSA9PT0gdHJ1ZSAmJlxuICAgICAgICAgICAgdGhpcy5pc01heEluY2x1c2l2ZSA9PT0gZmFsc2UpO1xuICAgIH1cbiAgICBpc0VtcHR5KCkge1xuICAgICAgICByZXR1cm4gISh0aGlzLmlzTWluSW5jbHVzaXZlICYmIHRoaXMuaXNNYXhJbmNsdXNpdmUpICYmIHRoaXMubWluID09PSB0aGlzLm1heDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgYSBRdWVyeVJhbmdlIGZyb20gYSBwYXJ0aXRpb25LZXlSYW5nZVxuICAgICAqIEByZXR1cm5zIFF1ZXJ5UmFuZ2VcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgc3RhdGljIHBhcnNlUGFydGl0aW9uS2V5UmFuZ2UocGFydGl0aW9uS2V5UmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeVJhbmdlKHBhcnRpdGlvbktleVJhbmdlW0NvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NaW5JbmNsdXNpdmVdLCBwYXJ0aXRpb25LZXlSYW5nZVtDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWF4RXhjbHVzaXZlXSwgdHJ1ZSwgZmFsc2UpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZSBhIFF1ZXJ5UmFuZ2UgZnJvbSBhIGRpY3Rpb25hcnlcbiAgICAgKiBAcmV0dXJucyBRdWVyeVJhbmdlXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHN0YXRpYyBwYXJzZUZyb21EaWN0KHF1ZXJ5UmFuZ2VEaWN0KSB7XG4gICAgICAgIHJldHVybiBuZXcgUXVlcnlSYW5nZShxdWVyeVJhbmdlRGljdC5taW4sIHF1ZXJ5UmFuZ2VEaWN0Lm1heCwgcXVlcnlSYW5nZURpY3QuaXNNaW5JbmNsdXNpdmUsIHF1ZXJ5UmFuZ2VEaWN0LmlzTWF4SW5jbHVzaXZlKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1RdWVyeVJhbmdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/inMemoryCollectionRoutingMap.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/routing/inMemoryCollectionRoutingMap.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InMemoryCollectionRoutingMap: () => (/* binding */ InMemoryCollectionRoutingMap)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _QueryRange_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js\");\n\n\n/** @hidden */\nclass InMemoryCollectionRoutingMap {\n    orderedPartitionKeyRanges;\n    orderedRanges;\n    // TODO: chrande made this public, even though it is implementation detail for a test\n    orderedPartitionInfo;\n    /**\n     * Represents a InMemoryCollectionRoutingMap Object,\n     * Stores partition key ranges in an efficient way with some additional information and provides\n     * convenience methods for working with set of ranges.\n     */\n    constructor(orderedPartitionKeyRanges, orderedPartitionInfo) {\n        this.orderedPartitionKeyRanges = orderedPartitionKeyRanges;\n        this.orderedRanges = orderedPartitionKeyRanges.map((pkr) => {\n            return new _QueryRange_js__WEBPACK_IMPORTED_MODULE_1__.QueryRange(pkr[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive], pkr[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MaxExclusive], true, false);\n        });\n        this.orderedPartitionInfo = orderedPartitionInfo;\n    }\n    getOrderedParitionKeyRanges() {\n        return this.orderedPartitionKeyRanges;\n    }\n    getOverlappingRanges(providedQueryRanges) {\n        // TODO This code has all kinds of smells. Multiple iterations and sorts just to grab overlapping ranges\n        // stfaul attempted to bring it down to one for-loop and failed\n        const pqr = Array.isArray(providedQueryRanges)\n            ? providedQueryRanges\n            : [providedQueryRanges];\n        const minToPartitionRange = {}; // TODO: any\n        // this for loop doesn't invoke any async callback\n        for (const queryRange of pqr) {\n            if (queryRange.isEmpty()) {\n                continue;\n            }\n            if (queryRange.isFullRange()) {\n                return this.orderedPartitionKeyRanges;\n            }\n            const minIndex = this.orderedRanges.findIndex((range) => {\n                if (queryRange.min > range.min && queryRange.min < range.max) {\n                    return true;\n                }\n                if (queryRange.min === range.min) {\n                    return true;\n                }\n                if (queryRange.min === range.max) {\n                    return true;\n                }\n            });\n            if (minIndex < 0) {\n                throw new Error(\"error in collection routing map, queried value is less than the start range.\");\n            }\n            // Start at the end and work backwards\n            let maxIndex;\n            for (let i = this.orderedRanges.length - 1; i >= 0; i--) {\n                const range = this.orderedRanges[i];\n                if (queryRange.max > range.min && queryRange.max < range.max) {\n                    maxIndex = i;\n                    break;\n                }\n                if (queryRange.max === range.min) {\n                    maxIndex = i;\n                    break;\n                }\n                if (queryRange.max === range.max) {\n                    maxIndex = i;\n                    break;\n                }\n            }\n            if (maxIndex > this.orderedRanges.length) {\n                throw new Error(\"error in collection routing map, queried value is greater than the end range.\");\n            }\n            for (let j = minIndex; j < maxIndex + 1; j++) {\n                if (queryRange.overlaps(this.orderedRanges[j])) {\n                    minToPartitionRange[this.orderedPartitionKeyRanges[j][_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive]] = this.orderedPartitionKeyRanges[j];\n                }\n            }\n        }\n        const overlappingPartitionKeyRanges = Object.keys(minToPartitionRange).map((k) => minToPartitionRange[k]);\n        return overlappingPartitionKeyRanges.sort((a, b) => {\n            return a[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive].localeCompare(b[_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange.MinInclusive]);\n        });\n    }\n}\n//# sourceMappingURL=inMemoryCollectionRoutingMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL2luTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ0Y7QUFDN0M7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBVSxLQUFLLHVEQUFTLHNDQUFzQyx1REFBUztBQUM5RixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxRQUFRO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0JBQWtCO0FBQ3JEO0FBQ0EsMEVBQTBFLHVEQUFTO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdURBQVMsaURBQWlELHVEQUFTO0FBQ3hGLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3JvdXRpbmcvaW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcC5qcz9iZmI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gXCIuLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IFF1ZXJ5UmFuZ2UgfSBmcm9tIFwiLi9RdWVyeVJhbmdlLmpzXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIEluTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAge1xuICAgIG9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXM7XG4gICAgb3JkZXJlZFJhbmdlcztcbiAgICAvLyBUT0RPOiBjaHJhbmRlIG1hZGUgdGhpcyBwdWJsaWMsIGV2ZW4gdGhvdWdoIGl0IGlzIGltcGxlbWVudGF0aW9uIGRldGFpbCBmb3IgYSB0ZXN0XG4gICAgb3JkZXJlZFBhcnRpdGlvbkluZm87XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhIEluTWVtb3J5Q29sbGVjdGlvblJvdXRpbmdNYXAgT2JqZWN0LFxuICAgICAqIFN0b3JlcyBwYXJ0aXRpb24ga2V5IHJhbmdlcyBpbiBhbiBlZmZpY2llbnQgd2F5IHdpdGggc29tZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFuZCBwcm92aWRlc1xuICAgICAqIGNvbnZlbmllbmNlIG1ldGhvZHMgZm9yIHdvcmtpbmcgd2l0aCBzZXQgb2YgcmFuZ2VzLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXMsIG9yZGVyZWRQYXJ0aXRpb25JbmZvKSB7XG4gICAgICAgIHRoaXMub3JkZXJlZFBhcnRpdGlvbktleVJhbmdlcyA9IG9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXM7XG4gICAgICAgIHRoaXMub3JkZXJlZFJhbmdlcyA9IG9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXMubWFwKChwa3IpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUXVlcnlSYW5nZShwa3JbQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1pbkluY2x1c2l2ZV0sIHBrcltDb25zdGFudHMuUGFydGl0aW9uS2V5UmFuZ2UuTWF4RXhjbHVzaXZlXSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vcmRlcmVkUGFydGl0aW9uSW5mbyA9IG9yZGVyZWRQYXJ0aXRpb25JbmZvO1xuICAgIH1cbiAgICBnZXRPcmRlcmVkUGFyaXRpb25LZXlSYW5nZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXM7XG4gICAgfVxuICAgIGdldE92ZXJsYXBwaW5nUmFuZ2VzKHByb3ZpZGVkUXVlcnlSYW5nZXMpIHtcbiAgICAgICAgLy8gVE9ETyBUaGlzIGNvZGUgaGFzIGFsbCBraW5kcyBvZiBzbWVsbHMuIE11bHRpcGxlIGl0ZXJhdGlvbnMgYW5kIHNvcnRzIGp1c3QgdG8gZ3JhYiBvdmVybGFwcGluZyByYW5nZXNcbiAgICAgICAgLy8gc3RmYXVsIGF0dGVtcHRlZCB0byBicmluZyBpdCBkb3duIHRvIG9uZSBmb3ItbG9vcCBhbmQgZmFpbGVkXG4gICAgICAgIGNvbnN0IHBxciA9IEFycmF5LmlzQXJyYXkocHJvdmlkZWRRdWVyeVJhbmdlcylcbiAgICAgICAgICAgID8gcHJvdmlkZWRRdWVyeVJhbmdlc1xuICAgICAgICAgICAgOiBbcHJvdmlkZWRRdWVyeVJhbmdlc107XG4gICAgICAgIGNvbnN0IG1pblRvUGFydGl0aW9uUmFuZ2UgPSB7fTsgLy8gVE9ETzogYW55XG4gICAgICAgIC8vIHRoaXMgZm9yIGxvb3AgZG9lc24ndCBpbnZva2UgYW55IGFzeW5jIGNhbGxiYWNrXG4gICAgICAgIGZvciAoY29uc3QgcXVlcnlSYW5nZSBvZiBwcXIpIHtcbiAgICAgICAgICAgIGlmIChxdWVyeVJhbmdlLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHF1ZXJ5UmFuZ2UuaXNGdWxsUmFuZ2UoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9yZGVyZWRQYXJ0aXRpb25LZXlSYW5nZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtaW5JbmRleCA9IHRoaXMub3JkZXJlZFJhbmdlcy5maW5kSW5kZXgoKHJhbmdlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHF1ZXJ5UmFuZ2UubWluID4gcmFuZ2UubWluICYmIHF1ZXJ5UmFuZ2UubWluIDwgcmFuZ2UubWF4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocXVlcnlSYW5nZS5taW4gPT09IHJhbmdlLm1pbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHF1ZXJ5UmFuZ2UubWluID09PSByYW5nZS5tYXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAobWluSW5kZXggPCAwKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXJyb3IgaW4gY29sbGVjdGlvbiByb3V0aW5nIG1hcCwgcXVlcmllZCB2YWx1ZSBpcyBsZXNzIHRoYW4gdGhlIHN0YXJ0IHJhbmdlLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFN0YXJ0IGF0IHRoZSBlbmQgYW5kIHdvcmsgYmFja3dhcmRzXG4gICAgICAgICAgICBsZXQgbWF4SW5kZXg7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5vcmRlcmVkUmFuZ2VzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSB0aGlzLm9yZGVyZWRSYW5nZXNbaV07XG4gICAgICAgICAgICAgICAgaWYgKHF1ZXJ5UmFuZ2UubWF4ID4gcmFuZ2UubWluICYmIHF1ZXJ5UmFuZ2UubWF4IDwgcmFuZ2UubWF4KSB7XG4gICAgICAgICAgICAgICAgICAgIG1heEluZGV4ID0gaTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChxdWVyeVJhbmdlLm1heCA9PT0gcmFuZ2UubWluKSB7XG4gICAgICAgICAgICAgICAgICAgIG1heEluZGV4ID0gaTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChxdWVyeVJhbmdlLm1heCA9PT0gcmFuZ2UubWF4KSB7XG4gICAgICAgICAgICAgICAgICAgIG1heEluZGV4ID0gaTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1heEluZGV4ID4gdGhpcy5vcmRlcmVkUmFuZ2VzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImVycm9yIGluIGNvbGxlY3Rpb24gcm91dGluZyBtYXAsIHF1ZXJpZWQgdmFsdWUgaXMgZ3JlYXRlciB0aGFuIHRoZSBlbmQgcmFuZ2UuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IG1pbkluZGV4OyBqIDwgbWF4SW5kZXggKyAxOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAocXVlcnlSYW5nZS5vdmVybGFwcyh0aGlzLm9yZGVyZWRSYW5nZXNbal0pKSB7XG4gICAgICAgICAgICAgICAgICAgIG1pblRvUGFydGl0aW9uUmFuZ2VbdGhpcy5vcmRlcmVkUGFydGl0aW9uS2V5UmFuZ2VzW2pdW0NvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NaW5JbmNsdXNpdmVdXSA9IHRoaXMub3JkZXJlZFBhcnRpdGlvbktleVJhbmdlc1tqXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3ZlcmxhcHBpbmdQYXJ0aXRpb25LZXlSYW5nZXMgPSBPYmplY3Qua2V5cyhtaW5Ub1BhcnRpdGlvblJhbmdlKS5tYXAoKGspID0+IG1pblRvUGFydGl0aW9uUmFuZ2Vba10pO1xuICAgICAgICByZXR1cm4gb3ZlcmxhcHBpbmdQYXJ0aXRpb25LZXlSYW5nZXMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGFbQ29uc3RhbnRzLlBhcnRpdGlvbktleVJhbmdlLk1pbkluY2x1c2l2ZV0ubG9jYWxlQ29tcGFyZShiW0NvbnN0YW50cy5QYXJ0aXRpb25LZXlSYW5nZS5NaW5JbmNsdXNpdmVdKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5NZW1vcnlDb2xsZWN0aW9uUm91dGluZ01hcC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/inMemoryCollectionRoutingMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/routing/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InMemoryCollectionRoutingMap: () => (/* reexport safe */ _inMemoryCollectionRoutingMap_js__WEBPACK_IMPORTED_MODULE_1__.InMemoryCollectionRoutingMap),\n/* harmony export */   PARITIONKEYRANGE: () => (/* reexport safe */ _smartRoutingMapProvider_js__WEBPACK_IMPORTED_MODULE_3__.PARITIONKEYRANGE),\n/* harmony export */   PartitionKeyRangeCache: () => (/* reexport safe */ _partitionKeyRangeCache_js__WEBPACK_IMPORTED_MODULE_2__.PartitionKeyRangeCache),\n/* harmony export */   QueryRange: () => (/* reexport safe */ _QueryRange_js__WEBPACK_IMPORTED_MODULE_0__.QueryRange),\n/* harmony export */   SmartRoutingMapProvider: () => (/* reexport safe */ _smartRoutingMapProvider_js__WEBPACK_IMPORTED_MODULE_3__.SmartRoutingMapProvider)\n/* harmony export */ });\n/* harmony import */ var _QueryRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QueryRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js\");\n/* harmony import */ var _inMemoryCollectionRoutingMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inMemoryCollectionRoutingMap.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/inMemoryCollectionRoutingMap.js\");\n/* harmony import */ var _partitionKeyRangeCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./partitionKeyRangeCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/partitionKeyRangeCache.js\");\n/* harmony import */ var _smartRoutingMapProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./smartRoutingMapProvider.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/smartRoutingMapProvider.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDZ0M7QUFDa0I7QUFDTjtBQUNDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL2luZGV4LmpzPzBiMjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgKiBmcm9tIFwiLi9RdWVyeVJhbmdlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9pbk1lbW9yeUNvbGxlY3Rpb25Sb3V0aW5nTWFwLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zbWFydFJvdXRpbmdNYXBQcm92aWRlci5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/partitionKeyRangeCache.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/routing/partitionKeyRangeCache.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartitionKeyRangeCache: () => (/* binding */ PartitionKeyRangeCache)\n/* harmony export */ });\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _common_helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/helper.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/helper.js\");\n/* harmony import */ var _utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/diagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\");\n/* harmony import */ var _CollectionRoutingMapFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CollectionRoutingMapFactory.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/CollectionRoutingMapFactory.js\");\n/* harmony import */ var _utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/hashing/hash.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/hash.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n/** @hidden */\nclass PartitionKeyRangeCache {\n    clientContext;\n    collectionRoutingMapByCollectionId;\n    constructor(clientContext) {\n        this.clientContext = clientContext;\n        this.collectionRoutingMapByCollectionId = {};\n    }\n    /**\n     * Finds or Instantiates the requested Collection Routing Map\n     * @param collectionLink - Requested collectionLink\n     * @hidden\n     */\n    async onCollectionRoutingMap(collectionLink, diagnosticNode, forceRefresh = false) {\n        const collectionId = (0,_common_helper_js__WEBPACK_IMPORTED_MODULE_1__.getIdFromLink)(collectionLink);\n        if (this.collectionRoutingMapByCollectionId[collectionId] === undefined || forceRefresh) {\n            this.collectionRoutingMapByCollectionId[collectionId] = this.requestCollectionRoutingMap(collectionLink, diagnosticNode);\n        }\n        return this.collectionRoutingMapByCollectionId[collectionId];\n    }\n    /**\n     * Given the query ranges and a collection, invokes the callback on the list of overlapping partition key ranges\n     * @hidden\n     */\n    async getOverlappingRanges(collectionLink, queryRange, diagnosticNode, forceRefresh = false) {\n        const crm = await this.onCollectionRoutingMap(collectionLink, diagnosticNode, forceRefresh);\n        return crm.getOverlappingRanges(queryRange);\n    }\n    async requestCollectionRoutingMap(collectionLink, diagnosticNode) {\n        const { resources } = await (0,_utils_diagnostics_js__WEBPACK_IMPORTED_MODULE_2__.withMetadataDiagnostics)(async (metadataDiagnostics) => {\n            return this.clientContext\n                .queryPartitionKeyRanges(collectionLink)\n                .fetchAllInternal(metadataDiagnostics);\n        }, diagnosticNode, _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_0__.MetadataLookUpType.PartitionKeyRangeLookUp);\n        return (0,_CollectionRoutingMapFactory_js__WEBPACK_IMPORTED_MODULE_3__.createCompleteRoutingMap)(resources.map((r) => [r, true]));\n    }\n    /**\n     * Given a partition key, returns the partition key range id\n     * @internal\n     */\n    async getPartitionKeyRangeIdFromPartitionKey(collectionLink, partitionKey, partitionKeyDefinition, diagnosticNode) {\n        const hashedPartitionKey = (0,_utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_4__.hashPartitionKey)(partitionKey, partitionKeyDefinition);\n        const partitionKeyRanges = (await this.onCollectionRoutingMap(collectionLink, diagnosticNode)).getOrderedParitionKeyRanges();\n        const partitionKeyRangeId = (0,_utils_hashing_hash_js__WEBPACK_IMPORTED_MODULE_4__.binarySearchOnPartitionKeyRanges)(partitionKeyRanges, hashedPartitionKey);\n        return partitionKeyRangeId;\n    }\n}\n//# sourceMappingURL=partitionKeyRangeCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9yb3V0aW5nL3BhcnRpdGlvbktleVJhbmdlQ2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM2RDtBQUNUO0FBQ2M7QUFDVTtBQUNrQjtBQUM5RjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdFQUFhO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsWUFBWSxRQUFRLDhFQUF1QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxTQUFTLGtCQUFrQixxRUFBa0I7QUFDN0MsZUFBZSx5RkFBd0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHdFQUFnQjtBQUNuRDtBQUNBLG9DQUFvQyx3RkFBZ0M7QUFDcEU7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3JvdXRpbmcvcGFydGl0aW9uS2V5UmFuZ2VDYWNoZS5qcz80OTgzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgTWV0YWRhdGFMb29rVXBUeXBlIH0gZnJvbSBcIi4uL0Nvc21vc0RpYWdub3N0aWNzLmpzXCI7XG5pbXBvcnQgeyBnZXRJZEZyb21MaW5rIH0gZnJvbSBcIi4uL2NvbW1vbi9oZWxwZXIuanNcIjtcbmltcG9ydCB7IHdpdGhNZXRhZGF0YURpYWdub3N0aWNzIH0gZnJvbSBcIi4uL3V0aWxzL2RpYWdub3N0aWNzLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVDb21wbGV0ZVJvdXRpbmdNYXAgfSBmcm9tIFwiLi9Db2xsZWN0aW9uUm91dGluZ01hcEZhY3RvcnkuanNcIjtcbmltcG9ydCB7IGhhc2hQYXJ0aXRpb25LZXksIGJpbmFyeVNlYXJjaE9uUGFydGl0aW9uS2V5UmFuZ2VzIH0gZnJvbSBcIi4uL3V0aWxzL2hhc2hpbmcvaGFzaC5qc1wiO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBQYXJ0aXRpb25LZXlSYW5nZUNhY2hlIHtcbiAgICBjbGllbnRDb250ZXh0O1xuICAgIGNvbGxlY3Rpb25Sb3V0aW5nTWFwQnlDb2xsZWN0aW9uSWQ7XG4gICAgY29uc3RydWN0b3IoY2xpZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLmNsaWVudENvbnRleHQgPSBjbGllbnRDb250ZXh0O1xuICAgICAgICB0aGlzLmNvbGxlY3Rpb25Sb3V0aW5nTWFwQnlDb2xsZWN0aW9uSWQgPSB7fTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRmluZHMgb3IgSW5zdGFudGlhdGVzIHRoZSByZXF1ZXN0ZWQgQ29sbGVjdGlvbiBSb3V0aW5nIE1hcFxuICAgICAqIEBwYXJhbSBjb2xsZWN0aW9uTGluayAtIFJlcXVlc3RlZCBjb2xsZWN0aW9uTGlua1xuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhc3luYyBvbkNvbGxlY3Rpb25Sb3V0aW5nTWFwKGNvbGxlY3Rpb25MaW5rLCBkaWFnbm9zdGljTm9kZSwgZm9yY2VSZWZyZXNoID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgY29sbGVjdGlvbklkID0gZ2V0SWRGcm9tTGluayhjb2xsZWN0aW9uTGluayk7XG4gICAgICAgIGlmICh0aGlzLmNvbGxlY3Rpb25Sb3V0aW5nTWFwQnlDb2xsZWN0aW9uSWRbY29sbGVjdGlvbklkXSA9PT0gdW5kZWZpbmVkIHx8IGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgICAgdGhpcy5jb2xsZWN0aW9uUm91dGluZ01hcEJ5Q29sbGVjdGlvbklkW2NvbGxlY3Rpb25JZF0gPSB0aGlzLnJlcXVlc3RDb2xsZWN0aW9uUm91dGluZ01hcChjb2xsZWN0aW9uTGluaywgZGlhZ25vc3RpY05vZGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb25Sb3V0aW5nTWFwQnlDb2xsZWN0aW9uSWRbY29sbGVjdGlvbklkXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2l2ZW4gdGhlIHF1ZXJ5IHJhbmdlcyBhbmQgYSBjb2xsZWN0aW9uLCBpbnZva2VzIHRoZSBjYWxsYmFjayBvbiB0aGUgbGlzdCBvZiBvdmVybGFwcGluZyBwYXJ0aXRpb24ga2V5IHJhbmdlc1xuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRPdmVybGFwcGluZ1Jhbmdlcyhjb2xsZWN0aW9uTGluaywgcXVlcnlSYW5nZSwgZGlhZ25vc3RpY05vZGUsIGZvcmNlUmVmcmVzaCA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IGNybSA9IGF3YWl0IHRoaXMub25Db2xsZWN0aW9uUm91dGluZ01hcChjb2xsZWN0aW9uTGluaywgZGlhZ25vc3RpY05vZGUsIGZvcmNlUmVmcmVzaCk7XG4gICAgICAgIHJldHVybiBjcm0uZ2V0T3ZlcmxhcHBpbmdSYW5nZXMocXVlcnlSYW5nZSk7XG4gICAgfVxuICAgIGFzeW5jIHJlcXVlc3RDb2xsZWN0aW9uUm91dGluZ01hcChjb2xsZWN0aW9uTGluaywgZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgY29uc3QgeyByZXNvdXJjZXMgfSA9IGF3YWl0IHdpdGhNZXRhZGF0YURpYWdub3N0aWNzKGFzeW5jIChtZXRhZGF0YURpYWdub3N0aWNzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnRDb250ZXh0XG4gICAgICAgICAgICAgICAgLnF1ZXJ5UGFydGl0aW9uS2V5UmFuZ2VzKGNvbGxlY3Rpb25MaW5rKVxuICAgICAgICAgICAgICAgIC5mZXRjaEFsbEludGVybmFsKG1ldGFkYXRhRGlhZ25vc3RpY3MpO1xuICAgICAgICB9LCBkaWFnbm9zdGljTm9kZSwgTWV0YWRhdGFMb29rVXBUeXBlLlBhcnRpdGlvbktleVJhbmdlTG9va1VwKTtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBsZXRlUm91dGluZ01hcChyZXNvdXJjZXMubWFwKChyKSA9PiBbciwgdHJ1ZV0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2l2ZW4gYSBwYXJ0aXRpb24ga2V5LCByZXR1cm5zIHRoZSBwYXJ0aXRpb24ga2V5IHJhbmdlIGlkXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgZ2V0UGFydGl0aW9uS2V5UmFuZ2VJZEZyb21QYXJ0aXRpb25LZXkoY29sbGVjdGlvbkxpbmssIHBhcnRpdGlvbktleSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbiwgZGlhZ25vc3RpY05vZGUpIHtcbiAgICAgICAgY29uc3QgaGFzaGVkUGFydGl0aW9uS2V5ID0gaGFzaFBhcnRpdGlvbktleShwYXJ0aXRpb25LZXksIHBhcnRpdGlvbktleURlZmluaXRpb24pO1xuICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlSYW5nZXMgPSAoYXdhaXQgdGhpcy5vbkNvbGxlY3Rpb25Sb3V0aW5nTWFwKGNvbGxlY3Rpb25MaW5rLCBkaWFnbm9zdGljTm9kZSkpLmdldE9yZGVyZWRQYXJpdGlvbktleVJhbmdlcygpO1xuICAgICAgICBjb25zdCBwYXJ0aXRpb25LZXlSYW5nZUlkID0gYmluYXJ5U2VhcmNoT25QYXJ0aXRpb25LZXlSYW5nZXMocGFydGl0aW9uS2V5UmFuZ2VzLCBoYXNoZWRQYXJ0aXRpb25LZXkpO1xuICAgICAgICByZXR1cm4gcGFydGl0aW9uS2V5UmFuZ2VJZDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJ0aXRpb25LZXlSYW5nZUNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/partitionKeyRangeCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/smartRoutingMapProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/routing/smartRoutingMapProvider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PARITIONKEYRANGE: () => (/* binding */ PARITIONKEYRANGE),\n/* harmony export */   SmartRoutingMapProvider: () => (/* binding */ SmartRoutingMapProvider)\n/* harmony export */ });\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _partitionKeyRangeCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./partitionKeyRangeCache.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/partitionKeyRangeCache.js\");\n/* harmony import */ var _QueryRange_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./QueryRange.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/QueryRange.js\");\n\n\n\n/** @hidden */\nconst PARITIONKEYRANGE = _common_constants_js__WEBPACK_IMPORTED_MODULE_0__.Constants.PartitionKeyRange;\n/** @hidden */\nclass SmartRoutingMapProvider {\n    partitionKeyRangeCache;\n    constructor(clientContext) {\n        this.partitionKeyRangeCache = new _partitionKeyRangeCache_js__WEBPACK_IMPORTED_MODULE_1__.PartitionKeyRangeCache(clientContext);\n    }\n    static _secondRangeIsAfterFirstRange(range1, range2) {\n        if (typeof range1.max === \"undefined\") {\n            throw new Error(\"range1 must have max\");\n        }\n        if (typeof range2.min === \"undefined\") {\n            throw new Error(\"range2 must have min\");\n        }\n        if (range1.max > range2.min) {\n            // r.min < #previous_r.max\n            return false;\n        }\n        else {\n            if (range1.max === range2.min && range1.isMaxInclusive && range2.isMinInclusive) {\n                // the inclusive ending endpoint of previous_r is the same as the inclusive beginning endpoint of r\n                // they share a point\n                return false;\n            }\n            return true;\n        }\n    }\n    static _isSortedAndNonOverlapping(ranges) {\n        for (let idx = 1; idx < ranges.length; idx++) {\n            const previousR = ranges[idx - 1];\n            const r = ranges[idx];\n            if (!this._secondRangeIsAfterFirstRange(previousR, r)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _stringMax(a, b) {\n        return a >= b ? a : b;\n    }\n    static _stringCompare(a, b) {\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    static _subtractRange(r, partitionKeyRange) {\n        const left = this._stringMax(partitionKeyRange[PARITIONKEYRANGE.MaxExclusive], r.min);\n        const leftInclusive = this._stringCompare(left, r.min) === 0 ? r.isMinInclusive : false;\n        return new _QueryRange_js__WEBPACK_IMPORTED_MODULE_2__.QueryRange(left, r.max, leftInclusive, r.isMaxInclusive);\n    }\n    /**\n     * Given the sorted ranges and a collection, invokes the callback on the list of overlapping partition key ranges\n     * @param callback - Function execute on the overlapping partition key ranges result,\n     *                   takes two parameters error, partition key ranges\n     * @hidden\n     */\n    async getOverlappingRanges(collectionLink, sortedRanges, diagnosticNode) {\n        // validate if the list is non- overlapping and sorted                             TODO: any PartitionKeyRanges\n        if (!SmartRoutingMapProvider._isSortedAndNonOverlapping(sortedRanges)) {\n            throw new Error(\"the list of ranges is not a non-overlapping sorted ranges\");\n        }\n        let partitionKeyRanges = []; // TODO: any ParitionKeyRanges\n        if (sortedRanges.length === 0) {\n            return partitionKeyRanges;\n        }\n        const collectionRoutingMap = await this.partitionKeyRangeCache.onCollectionRoutingMap(collectionLink, diagnosticNode);\n        let index = 0;\n        let currentProvidedRange = sortedRanges[index];\n        for (;;) {\n            if (currentProvidedRange.isEmpty()) {\n                // skip and go to the next item\n                if (++index >= sortedRanges.length) {\n                    return partitionKeyRanges;\n                }\n                currentProvidedRange = sortedRanges[index];\n                continue;\n            }\n            let queryRange;\n            if (partitionKeyRanges.length > 0) {\n                queryRange = SmartRoutingMapProvider._subtractRange(currentProvidedRange, partitionKeyRanges[partitionKeyRanges.length - 1]);\n            }\n            else {\n                queryRange = currentProvidedRange;\n            }\n            const overlappingRanges = collectionRoutingMap.getOverlappingRanges(queryRange);\n            if (overlappingRanges.length <= 0) {\n                throw new Error(`error: returned overlapping ranges for queryRange ${queryRange} is empty`);\n            }\n            partitionKeyRanges = partitionKeyRanges.concat(overlappingRanges);\n            const lastKnownTargetRange = _QueryRange_js__WEBPACK_IMPORTED_MODULE_2__.QueryRange.parsePartitionKeyRange(partitionKeyRanges[partitionKeyRanges.length - 1]);\n            if (!lastKnownTargetRange) {\n                throw new Error(\"expected lastKnowTargetRange to be truthy\");\n            }\n            // the overlapping ranges must contain the requested range\n            if (SmartRoutingMapProvider._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) >\n                0) {\n                throw new Error(`error: returned overlapping ranges ${overlappingRanges} \\\n        does not contain the requested range ${queryRange}`);\n            }\n            // the current range is contained in partitionKeyRanges just move forward\n            if (++index >= sortedRanges.length) {\n                return partitionKeyRanges;\n            }\n            currentProvidedRange = sortedRanges[index];\n            while (SmartRoutingMapProvider._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) <= 0) {\n                // the current range is covered too.just move forward\n                if (++index >= sortedRanges.length) {\n                    return partitionKeyRanges;\n                }\n                currentProvidedRange = sortedRanges[index];\n            }\n        }\n    }\n}\n//# sourceMappingURL=smartRoutingMapProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/routing/smartRoutingMapProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/session/VectorSessionToken.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/session/VectorSessionToken.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorSessionToken: () => (/* binding */ VectorSessionToken)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Models vector clock bases session token. Session token has the following format:\n * `{Version}#{GlobalLSN}#{RegionId1}={LocalLsn1}#{RegionId2}={LocalLsn2}....#{RegionIdN}={LocalLsnN}`\n * 'Version' captures the configuration number of the partition which returned this session token.\n * 'Version' is incremented everytime topology of the partition is updated (say due to Add/Remove/Failover).\n *\n * The choice of separators '#' and '=' is important. Separators ';' and ',' are used to delimit\n * per-partitionKeyRange session token\n * @hidden\n *\n */\nclass VectorSessionToken {\n    version;\n    globalLsn;\n    localLsnByregion;\n    sessionToken;\n    static SEGMENT_SEPARATOR = \"#\";\n    static REGION_PROGRESS_SEPARATOR = \"=\";\n    constructor(version, globalLsn, localLsnByregion, sessionToken) {\n        this.version = version;\n        this.globalLsn = globalLsn;\n        this.localLsnByregion = localLsnByregion;\n        this.sessionToken = sessionToken;\n        if (!this.sessionToken) {\n            const regionAndLocalLsn = [];\n            for (const [key, value] of this.localLsnByregion.entries()) {\n                regionAndLocalLsn.push(`${key}${VectorSessionToken.REGION_PROGRESS_SEPARATOR}${value}`);\n            }\n            const regionProgress = regionAndLocalLsn.join(VectorSessionToken.SEGMENT_SEPARATOR);\n            if (regionProgress === \"\") {\n                this.sessionToken = `${this.version}${VectorSessionToken.SEGMENT_SEPARATOR}${this.globalLsn}`;\n            }\n            else {\n                this.sessionToken = `${this.version}${VectorSessionToken.SEGMENT_SEPARATOR}${this.globalLsn}${VectorSessionToken.SEGMENT_SEPARATOR}${regionProgress}`;\n            }\n        }\n    }\n    static create(sessionToken) {\n        const [versionStr, globalLsnStr, ...regionSegments] = sessionToken.split(VectorSessionToken.SEGMENT_SEPARATOR);\n        const version = parseInt(versionStr, 10);\n        const globalLsn = parseFloat(globalLsnStr);\n        if (typeof version !== \"number\" || typeof globalLsn !== \"number\") {\n            return null;\n        }\n        const lsnByRegion = new Map();\n        for (const regionSegment of regionSegments) {\n            const [regionIdStr, localLsnStr] = regionSegment.split(VectorSessionToken.REGION_PROGRESS_SEPARATOR);\n            if (!regionIdStr || !localLsnStr) {\n                return null;\n            }\n            const regionId = parseInt(regionIdStr, 10);\n            let localLsn;\n            try {\n                localLsn = localLsnStr;\n            }\n            catch (err) {\n                // TODO: log error\n                return null;\n            }\n            if (typeof regionId !== \"number\") {\n                return null;\n            }\n            lsnByRegion.set(regionId, localLsn);\n        }\n        return new VectorSessionToken(version, globalLsn, lsnByRegion, sessionToken);\n    }\n    equals(other) {\n        return !other\n            ? false\n            : this.version === other.version &&\n                this.globalLsn === other.globalLsn &&\n                this.areRegionProgressEqual(other.localLsnByregion);\n    }\n    merge(other) {\n        if (other == null) {\n            throw new Error(\"other (Vector Session Token) must not be null\");\n        }\n        if (this.version === other.version &&\n            this.localLsnByregion.size !== other.localLsnByregion.size) {\n            throw new Error(`Compared session tokens ${this.sessionToken} and ${other.sessionToken} have unexpected regions`);\n        }\n        const [higherVersionSessionToken, lowerVersionSessionToken] = this.version < other.version ? [other, this] : [this, other];\n        const highestLocalLsnByRegion = new Map();\n        for (const [regionId, highLocalLsn] of higherVersionSessionToken.localLsnByregion.entries()) {\n            const lowLocalLsn = lowerVersionSessionToken.localLsnByregion.get(regionId);\n            if (lowLocalLsn) {\n                highestLocalLsnByRegion.set(regionId, max(highLocalLsn, lowLocalLsn));\n            }\n            else if (this.version === other.version) {\n                throw new Error(`Compared session tokens have unexpected regions. Session 1: ${this.sessionToken} - Session 2: ${this.sessionToken}`);\n            }\n            else {\n                highestLocalLsnByRegion.set(regionId, highLocalLsn);\n            }\n        }\n        return new VectorSessionToken(Math.max(this.version, other.version), Math.max(this.globalLsn, other.globalLsn), highestLocalLsnByRegion);\n    }\n    toString() {\n        return this.sessionToken;\n    }\n    areRegionProgressEqual(other) {\n        if (this.localLsnByregion.size !== other.size) {\n            return false;\n        }\n        for (const [regionId, localLsn] of this.localLsnByregion.entries()) {\n            const otherLocalLsn = other.get(regionId);\n            if (localLsn !== otherLocalLsn) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n/**\n * @hidden\n */\nfunction max(int1, int2) {\n    // NOTE: This only works for positive numbers\n    if (int1.length === int2.length) {\n        return int1 > int2 ? int1 : int2;\n    }\n    else if (int1.length > int2.length) {\n        return int1;\n    }\n    else {\n        return int2;\n    }\n}\n//# sourceMappingURL=VectorSessionToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/session/VectorSessionToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/session/sessionContainer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/session/sessionContainer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionContainer: () => (/* binding */ SessionContainer)\n/* harmony export */ });\n/* harmony import */ var _utils_atob_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/atob.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/atob.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _VectorSessionToken_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./VectorSessionToken.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/session/VectorSessionToken.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/** @hidden */\nclass SessionContainer {\n    collectionNameToCollectionResourceId;\n    collectionResourceIdToSessionTokens;\n    static EMPTY_SESSION_TOKEN = \"\";\n    static SESSION_TOKEN_SEPARATOR = \",\";\n    static SESSION_TOKEN_PARTITION_SPLITTER = \":\";\n    constructor(collectionNameToCollectionResourceId = new Map(), collectionResourceIdToSessionTokens = new Map()) {\n        this.collectionNameToCollectionResourceId = collectionNameToCollectionResourceId;\n        this.collectionResourceIdToSessionTokens = collectionResourceIdToSessionTokens;\n    }\n    get(request) {\n        if (!request) {\n            throw new Error(\"request cannot be null\");\n        }\n        const collectionName = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getContainerLink)((0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashes)(request.resourceAddress));\n        const rangeIdToTokenMap = this.getPartitionKeyRangeIdToTokenMap(collectionName);\n        return SessionContainer.getCombinedSessionTokenString(rangeIdToTokenMap);\n    }\n    remove(request) {\n        let collectionResourceId;\n        const resourceAddress = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashes)(request.resourceAddress);\n        const collectionName = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getContainerLink)(resourceAddress);\n        if (collectionName) {\n            collectionResourceId = this.collectionNameToCollectionResourceId.get(collectionName);\n            this.collectionNameToCollectionResourceId.delete(collectionName);\n        }\n        if (collectionResourceId !== undefined) {\n            this.collectionResourceIdToSessionTokens.delete(collectionResourceId);\n        }\n    }\n    set(request, resHeaders) {\n        // TODO: we check the master logic a few different places. Might not need it.\n        if (!resHeaders ||\n            SessionContainer.isReadingFromMaster(request.resourceType, request.operationType)) {\n            return;\n        }\n        const sessionTokenString = resHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.SessionToken];\n        if (!sessionTokenString) {\n            return;\n        }\n        const containerName = this.getContainerName(request, resHeaders);\n        const ownerId = !request.isNameBased\n            ? request.resourceId\n            : resHeaders[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.OwnerId] || request.resourceId;\n        if (!ownerId) {\n            return;\n        }\n        if (containerName && this.validateOwnerID(ownerId)) {\n            if (!this.collectionResourceIdToSessionTokens.has(ownerId)) {\n                this.collectionResourceIdToSessionTokens.set(ownerId, new Map());\n            }\n            if (!this.collectionNameToCollectionResourceId.has(containerName)) {\n                this.collectionNameToCollectionResourceId.set(containerName, ownerId);\n            }\n            const containerSessionContainer = this.collectionResourceIdToSessionTokens.get(ownerId);\n            SessionContainer.compareAndSetToken(sessionTokenString, containerSessionContainer);\n        }\n    }\n    validateOwnerID(ownerId) {\n        // If ownerId contains exactly 8 bytes it represents a unique database+collection identifier. Otherwise it represents another resource\n        // The first 4 bytes are the database. The last 4 bytes are the collection.\n        // Cosmos rids potentially contain \"-\" which is an invalid character in the browser atob implementation\n        // See https://en.wikipedia.org/wiki/Base64#Filenames\n        return (0,_utils_atob_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ownerId.replace(/-/g, \"/\")).length === 8;\n    }\n    getPartitionKeyRangeIdToTokenMap(collectionName) {\n        let rangeIdToTokenMap = null;\n        if (collectionName && this.collectionNameToCollectionResourceId.has(collectionName)) {\n            rangeIdToTokenMap = this.collectionResourceIdToSessionTokens.get(this.collectionNameToCollectionResourceId.get(collectionName));\n        }\n        return rangeIdToTokenMap;\n    }\n    static getCombinedSessionTokenString(tokens) {\n        if (!tokens || tokens.size === 0) {\n            return SessionContainer.EMPTY_SESSION_TOKEN;\n        }\n        let result = \"\";\n        for (const [range, token] of tokens.entries()) {\n            result +=\n                range +\n                    SessionContainer.SESSION_TOKEN_PARTITION_SPLITTER +\n                    token.toString() +\n                    SessionContainer.SESSION_TOKEN_SEPARATOR;\n        }\n        return result.slice(0, -1);\n    }\n    static compareAndSetToken(newTokenString, containerSessionTokens) {\n        if (!newTokenString) {\n            return;\n        }\n        const partitionsParts = newTokenString.split(SessionContainer.SESSION_TOKEN_SEPARATOR);\n        for (const partitionPart of partitionsParts) {\n            const newTokenParts = partitionPart.split(SessionContainer.SESSION_TOKEN_PARTITION_SPLITTER);\n            if (newTokenParts.length !== 2) {\n                return;\n            }\n            const range = newTokenParts[0];\n            const newToken = _VectorSessionToken_js__WEBPACK_IMPORTED_MODULE_2__.VectorSessionToken.create(newTokenParts[1]);\n            const tokenForRange = !containerSessionTokens.get(range)\n                ? newToken\n                : containerSessionTokens.get(range).merge(newToken);\n            containerSessionTokens.set(range, tokenForRange);\n        }\n    }\n    // TODO: have a assert if the type doesn't mastch known types\n    static isReadingFromMaster(resourceType, operationType) {\n        if (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.OffersPathSegment ||\n            resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.DatabasesPathSegment ||\n            resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.UsersPathSegment ||\n            resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.PermissionsPathSegment ||\n            resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.TopologyPathSegment ||\n            resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.DatabaseAccountPathSegment ||\n            resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.PartitionKeyRangesPathSegment ||\n            (resourceType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.Path.CollectionsPathSegment &&\n                operationType === _common_index_js__WEBPACK_IMPORTED_MODULE_1__.OperationType.Query)) {\n            return true;\n        }\n        return false;\n    }\n    getContainerName(request, headers) {\n        let ownerFullName = headers[_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.OwnerFullName];\n        if (!ownerFullName) {\n            ownerFullName = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.trimSlashes)(request.resourceAddress);\n        }\n        return (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.getContainerLink)(ownerFullName);\n    }\n}\n//# sourceMappingURL=sessionContainer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS9zZXNzaW9uL3Nlc3Npb25Db250YWluZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDb0M7QUFDeUQ7QUFDaEM7QUFDN0Q7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtFQUFnQixDQUFDLDZEQUFXO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNkRBQVc7QUFDM0MsK0JBQStCLGtFQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHVEQUFTO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1REFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMERBQUk7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHNFQUFrQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVEQUFTO0FBQ3RDLDZCQUE2Qix1REFBUztBQUN0Qyw2QkFBNkIsdURBQVM7QUFDdEMsNkJBQTZCLHVEQUFTO0FBQ3RDLDZCQUE2Qix1REFBUztBQUN0Qyw2QkFBNkIsdURBQVM7QUFDdEMsNkJBQTZCLHVEQUFTO0FBQ3RDLDhCQUE4Qix1REFBUztBQUN2QyxrQ0FBa0MsMkRBQWE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx1REFBUztBQUM3QztBQUNBLDRCQUE0Qiw2REFBVztBQUN2QztBQUNBLGVBQWUsa0VBQWdCO0FBQy9CO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vc2Vzc2lvbi9zZXNzaW9uQ29udGFpbmVyLmpzP2UxZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgYXRvYiBmcm9tIFwiLi4vdXRpbHMvYXRvYi5qc1wiO1xuaW1wb3J0IHsgQ29uc3RhbnRzLCBnZXRDb250YWluZXJMaW5rLCBPcGVyYXRpb25UeXBlLCB0cmltU2xhc2hlcyB9IGZyb20gXCIuLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IFZlY3RvclNlc3Npb25Ub2tlbiB9IGZyb20gXCIuL1ZlY3RvclNlc3Npb25Ub2tlbi5qc1wiO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBTZXNzaW9uQ29udGFpbmVyIHtcbiAgICBjb2xsZWN0aW9uTmFtZVRvQ29sbGVjdGlvblJlc291cmNlSWQ7XG4gICAgY29sbGVjdGlvblJlc291cmNlSWRUb1Nlc3Npb25Ub2tlbnM7XG4gICAgc3RhdGljIEVNUFRZX1NFU1NJT05fVE9LRU4gPSBcIlwiO1xuICAgIHN0YXRpYyBTRVNTSU9OX1RPS0VOX1NFUEFSQVRPUiA9IFwiLFwiO1xuICAgIHN0YXRpYyBTRVNTSU9OX1RPS0VOX1BBUlRJVElPTl9TUExJVFRFUiA9IFwiOlwiO1xuICAgIGNvbnN0cnVjdG9yKGNvbGxlY3Rpb25OYW1lVG9Db2xsZWN0aW9uUmVzb3VyY2VJZCA9IG5ldyBNYXAoKSwgY29sbGVjdGlvblJlc291cmNlSWRUb1Nlc3Npb25Ub2tlbnMgPSBuZXcgTWFwKCkpIHtcbiAgICAgICAgdGhpcy5jb2xsZWN0aW9uTmFtZVRvQ29sbGVjdGlvblJlc291cmNlSWQgPSBjb2xsZWN0aW9uTmFtZVRvQ29sbGVjdGlvblJlc291cmNlSWQ7XG4gICAgICAgIHRoaXMuY29sbGVjdGlvblJlc291cmNlSWRUb1Nlc3Npb25Ub2tlbnMgPSBjb2xsZWN0aW9uUmVzb3VyY2VJZFRvU2Vzc2lvblRva2VucztcbiAgICB9XG4gICAgZ2V0KHJlcXVlc3QpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1ZXN0IGNhbm5vdCBiZSBudWxsXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb25OYW1lID0gZ2V0Q29udGFpbmVyTGluayh0cmltU2xhc2hlcyhyZXF1ZXN0LnJlc291cmNlQWRkcmVzcykpO1xuICAgICAgICBjb25zdCByYW5nZUlkVG9Ub2tlbk1hcCA9IHRoaXMuZ2V0UGFydGl0aW9uS2V5UmFuZ2VJZFRvVG9rZW5NYXAoY29sbGVjdGlvbk5hbWUpO1xuICAgICAgICByZXR1cm4gU2Vzc2lvbkNvbnRhaW5lci5nZXRDb21iaW5lZFNlc3Npb25Ub2tlblN0cmluZyhyYW5nZUlkVG9Ub2tlbk1hcCk7XG4gICAgfVxuICAgIHJlbW92ZShyZXF1ZXN0KSB7XG4gICAgICAgIGxldCBjb2xsZWN0aW9uUmVzb3VyY2VJZDtcbiAgICAgICAgY29uc3QgcmVzb3VyY2VBZGRyZXNzID0gdHJpbVNsYXNoZXMocmVxdWVzdC5yZXNvdXJjZUFkZHJlc3MpO1xuICAgICAgICBjb25zdCBjb2xsZWN0aW9uTmFtZSA9IGdldENvbnRhaW5lckxpbmsocmVzb3VyY2VBZGRyZXNzKTtcbiAgICAgICAgaWYgKGNvbGxlY3Rpb25OYW1lKSB7XG4gICAgICAgICAgICBjb2xsZWN0aW9uUmVzb3VyY2VJZCA9IHRoaXMuY29sbGVjdGlvbk5hbWVUb0NvbGxlY3Rpb25SZXNvdXJjZUlkLmdldChjb2xsZWN0aW9uTmFtZSk7XG4gICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb25OYW1lVG9Db2xsZWN0aW9uUmVzb3VyY2VJZC5kZWxldGUoY29sbGVjdGlvbk5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb2xsZWN0aW9uUmVzb3VyY2VJZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb25SZXNvdXJjZUlkVG9TZXNzaW9uVG9rZW5zLmRlbGV0ZShjb2xsZWN0aW9uUmVzb3VyY2VJZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0KHJlcXVlc3QsIHJlc0hlYWRlcnMpIHtcbiAgICAgICAgLy8gVE9ETzogd2UgY2hlY2sgdGhlIG1hc3RlciBsb2dpYyBhIGZldyBkaWZmZXJlbnQgcGxhY2VzLiBNaWdodCBub3QgbmVlZCBpdC5cbiAgICAgICAgaWYgKCFyZXNIZWFkZXJzIHx8XG4gICAgICAgICAgICBTZXNzaW9uQ29udGFpbmVyLmlzUmVhZGluZ0Zyb21NYXN0ZXIocmVxdWVzdC5yZXNvdXJjZVR5cGUsIHJlcXVlc3Qub3BlcmF0aW9uVHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZXNzaW9uVG9rZW5TdHJpbmcgPSByZXNIZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5TZXNzaW9uVG9rZW5dO1xuICAgICAgICBpZiAoIXNlc3Npb25Ub2tlblN0cmluZykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lck5hbWUgPSB0aGlzLmdldENvbnRhaW5lck5hbWUocmVxdWVzdCwgcmVzSGVhZGVycyk7XG4gICAgICAgIGNvbnN0IG93bmVySWQgPSAhcmVxdWVzdC5pc05hbWVCYXNlZFxuICAgICAgICAgICAgPyByZXF1ZXN0LnJlc291cmNlSWRcbiAgICAgICAgICAgIDogcmVzSGVhZGVyc1tDb25zdGFudHMuSHR0cEhlYWRlcnMuT3duZXJJZF0gfHwgcmVxdWVzdC5yZXNvdXJjZUlkO1xuICAgICAgICBpZiAoIW93bmVySWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29udGFpbmVyTmFtZSAmJiB0aGlzLnZhbGlkYXRlT3duZXJJRChvd25lcklkKSkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbGxlY3Rpb25SZXNvdXJjZUlkVG9TZXNzaW9uVG9rZW5zLmhhcyhvd25lcklkKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29sbGVjdGlvblJlc291cmNlSWRUb1Nlc3Npb25Ub2tlbnMuc2V0KG93bmVySWQsIG5ldyBNYXAoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMuY29sbGVjdGlvbk5hbWVUb0NvbGxlY3Rpb25SZXNvdXJjZUlkLmhhcyhjb250YWluZXJOYW1lKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29sbGVjdGlvbk5hbWVUb0NvbGxlY3Rpb25SZXNvdXJjZUlkLnNldChjb250YWluZXJOYW1lLCBvd25lcklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclNlc3Npb25Db250YWluZXIgPSB0aGlzLmNvbGxlY3Rpb25SZXNvdXJjZUlkVG9TZXNzaW9uVG9rZW5zLmdldChvd25lcklkKTtcbiAgICAgICAgICAgIFNlc3Npb25Db250YWluZXIuY29tcGFyZUFuZFNldFRva2VuKHNlc3Npb25Ub2tlblN0cmluZywgY29udGFpbmVyU2Vzc2lvbkNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFsaWRhdGVPd25lcklEKG93bmVySWQpIHtcbiAgICAgICAgLy8gSWYgb3duZXJJZCBjb250YWlucyBleGFjdGx5IDggYnl0ZXMgaXQgcmVwcmVzZW50cyBhIHVuaXF1ZSBkYXRhYmFzZStjb2xsZWN0aW9uIGlkZW50aWZpZXIuIE90aGVyd2lzZSBpdCByZXByZXNlbnRzIGFub3RoZXIgcmVzb3VyY2VcbiAgICAgICAgLy8gVGhlIGZpcnN0IDQgYnl0ZXMgYXJlIHRoZSBkYXRhYmFzZS4gVGhlIGxhc3QgNCBieXRlcyBhcmUgdGhlIGNvbGxlY3Rpb24uXG4gICAgICAgIC8vIENvc21vcyByaWRzIHBvdGVudGlhbGx5IGNvbnRhaW4gXCItXCIgd2hpY2ggaXMgYW4gaW52YWxpZCBjaGFyYWN0ZXIgaW4gdGhlIGJyb3dzZXIgYXRvYiBpbXBsZW1lbnRhdGlvblxuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0I0ZpbGVuYW1lc1xuICAgICAgICByZXR1cm4gYXRvYihvd25lcklkLnJlcGxhY2UoLy0vZywgXCIvXCIpKS5sZW5ndGggPT09IDg7XG4gICAgfVxuICAgIGdldFBhcnRpdGlvbktleVJhbmdlSWRUb1Rva2VuTWFwKGNvbGxlY3Rpb25OYW1lKSB7XG4gICAgICAgIGxldCByYW5nZUlkVG9Ub2tlbk1hcCA9IG51bGw7XG4gICAgICAgIGlmIChjb2xsZWN0aW9uTmFtZSAmJiB0aGlzLmNvbGxlY3Rpb25OYW1lVG9Db2xsZWN0aW9uUmVzb3VyY2VJZC5oYXMoY29sbGVjdGlvbk5hbWUpKSB7XG4gICAgICAgICAgICByYW5nZUlkVG9Ub2tlbk1hcCA9IHRoaXMuY29sbGVjdGlvblJlc291cmNlSWRUb1Nlc3Npb25Ub2tlbnMuZ2V0KHRoaXMuY29sbGVjdGlvbk5hbWVUb0NvbGxlY3Rpb25SZXNvdXJjZUlkLmdldChjb2xsZWN0aW9uTmFtZSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByYW5nZUlkVG9Ub2tlbk1hcDtcbiAgICB9XG4gICAgc3RhdGljIGdldENvbWJpbmVkU2Vzc2lvblRva2VuU3RyaW5nKHRva2Vucykge1xuICAgICAgICBpZiAoIXRva2VucyB8fCB0b2tlbnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIFNlc3Npb25Db250YWluZXIuRU1QVFlfU0VTU0lPTl9UT0tFTjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICAgICAgZm9yIChjb25zdCBbcmFuZ2UsIHRva2VuXSBvZiB0b2tlbnMuZW50cmllcygpKSB7XG4gICAgICAgICAgICByZXN1bHQgKz1cbiAgICAgICAgICAgICAgICByYW5nZSArXG4gICAgICAgICAgICAgICAgICAgIFNlc3Npb25Db250YWluZXIuU0VTU0lPTl9UT0tFTl9QQVJUSVRJT05fU1BMSVRURVIgK1xuICAgICAgICAgICAgICAgICAgICB0b2tlbi50b1N0cmluZygpICtcbiAgICAgICAgICAgICAgICAgICAgU2Vzc2lvbkNvbnRhaW5lci5TRVNTSU9OX1RPS0VOX1NFUEFSQVRPUjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LnNsaWNlKDAsIC0xKTtcbiAgICB9XG4gICAgc3RhdGljIGNvbXBhcmVBbmRTZXRUb2tlbihuZXdUb2tlblN0cmluZywgY29udGFpbmVyU2Vzc2lvblRva2Vucykge1xuICAgICAgICBpZiAoIW5ld1Rva2VuU3RyaW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFydGl0aW9uc1BhcnRzID0gbmV3VG9rZW5TdHJpbmcuc3BsaXQoU2Vzc2lvbkNvbnRhaW5lci5TRVNTSU9OX1RPS0VOX1NFUEFSQVRPUik7XG4gICAgICAgIGZvciAoY29uc3QgcGFydGl0aW9uUGFydCBvZiBwYXJ0aXRpb25zUGFydHMpIHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Rva2VuUGFydHMgPSBwYXJ0aXRpb25QYXJ0LnNwbGl0KFNlc3Npb25Db250YWluZXIuU0VTU0lPTl9UT0tFTl9QQVJUSVRJT05fU1BMSVRURVIpO1xuICAgICAgICAgICAgaWYgKG5ld1Rva2VuUGFydHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSBuZXdUb2tlblBhcnRzWzBdO1xuICAgICAgICAgICAgY29uc3QgbmV3VG9rZW4gPSBWZWN0b3JTZXNzaW9uVG9rZW4uY3JlYXRlKG5ld1Rva2VuUGFydHNbMV0pO1xuICAgICAgICAgICAgY29uc3QgdG9rZW5Gb3JSYW5nZSA9ICFjb250YWluZXJTZXNzaW9uVG9rZW5zLmdldChyYW5nZSlcbiAgICAgICAgICAgICAgICA/IG5ld1Rva2VuXG4gICAgICAgICAgICAgICAgOiBjb250YWluZXJTZXNzaW9uVG9rZW5zLmdldChyYW5nZSkubWVyZ2UobmV3VG9rZW4pO1xuICAgICAgICAgICAgY29udGFpbmVyU2Vzc2lvblRva2Vucy5zZXQocmFuZ2UsIHRva2VuRm9yUmFuZ2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFRPRE86IGhhdmUgYSBhc3NlcnQgaWYgdGhlIHR5cGUgZG9lc24ndCBtYXN0Y2gga25vd24gdHlwZXNcbiAgICBzdGF0aWMgaXNSZWFkaW5nRnJvbU1hc3RlcihyZXNvdXJjZVR5cGUsIG9wZXJhdGlvblR5cGUpIHtcbiAgICAgICAgaWYgKHJlc291cmNlVHlwZSA9PT0gQ29uc3RhbnRzLlBhdGguT2ZmZXJzUGF0aFNlZ21lbnQgfHxcbiAgICAgICAgICAgIHJlc291cmNlVHlwZSA9PT0gQ29uc3RhbnRzLlBhdGguRGF0YWJhc2VzUGF0aFNlZ21lbnQgfHxcbiAgICAgICAgICAgIHJlc291cmNlVHlwZSA9PT0gQ29uc3RhbnRzLlBhdGguVXNlcnNQYXRoU2VnbWVudCB8fFxuICAgICAgICAgICAgcmVzb3VyY2VUeXBlID09PSBDb25zdGFudHMuUGF0aC5QZXJtaXNzaW9uc1BhdGhTZWdtZW50IHx8XG4gICAgICAgICAgICByZXNvdXJjZVR5cGUgPT09IENvbnN0YW50cy5QYXRoLlRvcG9sb2d5UGF0aFNlZ21lbnQgfHxcbiAgICAgICAgICAgIHJlc291cmNlVHlwZSA9PT0gQ29uc3RhbnRzLlBhdGguRGF0YWJhc2VBY2NvdW50UGF0aFNlZ21lbnQgfHxcbiAgICAgICAgICAgIHJlc291cmNlVHlwZSA9PT0gQ29uc3RhbnRzLlBhdGguUGFydGl0aW9uS2V5UmFuZ2VzUGF0aFNlZ21lbnQgfHxcbiAgICAgICAgICAgIChyZXNvdXJjZVR5cGUgPT09IENvbnN0YW50cy5QYXRoLkNvbGxlY3Rpb25zUGF0aFNlZ21lbnQgJiZcbiAgICAgICAgICAgICAgICBvcGVyYXRpb25UeXBlID09PSBPcGVyYXRpb25UeXBlLlF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBnZXRDb250YWluZXJOYW1lKHJlcXVlc3QsIGhlYWRlcnMpIHtcbiAgICAgICAgbGV0IG93bmVyRnVsbE5hbWUgPSBoZWFkZXJzW0NvbnN0YW50cy5IdHRwSGVhZGVycy5Pd25lckZ1bGxOYW1lXTtcbiAgICAgICAgaWYgKCFvd25lckZ1bGxOYW1lKSB7XG4gICAgICAgICAgICBvd25lckZ1bGxOYW1lID0gdHJpbVNsYXNoZXMocmVxdWVzdC5yZXNvdXJjZUFkZHJlc3MpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRDb250YWluZXJMaW5rKG93bmVyRnVsbE5hbWUpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb25Db250YWluZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/session/sessionContainer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/SasToken.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/SasToken.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAuthorizationSasToken: () => (/* binding */ createAuthorizationSasToken),\n/* harmony export */   utcsecondsSinceEpoch: () => (/* binding */ utcsecondsSinceEpoch)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encode.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/encode.js\");\n/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hmac.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hmac.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Experimental internal only\n * Generates the payload representing the permission configuration for the sas token.\n */\nasync function createAuthorizationSasToken(masterKey, sasTokenProperties) {\n    let resourcePrefixPath = \"\";\n    if (typeof sasTokenProperties.databaseName === \"string\" &&\n        sasTokenProperties.databaseName !== \"\") {\n        resourcePrefixPath += `/${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.DatabasesPathSegment}/${sasTokenProperties.databaseName}`;\n    }\n    if (typeof sasTokenProperties.containerName === \"string\" &&\n        sasTokenProperties.containerName !== \"\") {\n        if (sasTokenProperties.databaseName === \"\") {\n            throw new Error(`illegalArgumentException : ${sasTokenProperties.databaseName} \\\n                          is an invalid database name`);\n        }\n        resourcePrefixPath += `/${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.CollectionsPathSegment}/${sasTokenProperties.containerName}`;\n    }\n    if (typeof sasTokenProperties.resourceName === \"string\" &&\n        sasTokenProperties.resourceName !== \"\") {\n        if (sasTokenProperties.containerName === \"\") {\n            throw new Error(`illegalArgumentException : ${sasTokenProperties.containerName} \\\n                          is an invalid container name`);\n        }\n        switch (sasTokenProperties.resourceKind) {\n            case \"ITEM\":\n                resourcePrefixPath += `${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.Root}${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.DocumentsPathSegment}`;\n                break;\n            case \"STORED_PROCEDURE\":\n                resourcePrefixPath += `${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.Root}${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.StoredProceduresPathSegment}`;\n                break;\n            case \"USER_DEFINED_FUNCTION\":\n                resourcePrefixPath += `${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.Root}${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.UserDefinedFunctionsPathSegment}`;\n                break;\n            case \"TRIGGER\":\n                resourcePrefixPath += `${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.Root}${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.TriggersPathSegment}`;\n                break;\n            default:\n                throw new Error(`illegalArgumentException : ${sasTokenProperties.resourceKind} \\\n                          is an invalid resource kind`);\n                break;\n        }\n        resourcePrefixPath += `${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.Root}${sasTokenProperties.resourceName}${_common_index_js__WEBPACK_IMPORTED_MODULE_0__.Constants.Path.Root}`;\n    }\n    sasTokenProperties.resourcePath = resourcePrefixPath.toString();\n    let partitionRanges = \"\";\n    if (sasTokenProperties.partitionKeyValueRanges !== undefined &&\n        sasTokenProperties.partitionKeyValueRanges.length > 0) {\n        if (typeof sasTokenProperties.resourceKind !== \"string\" &&\n            sasTokenProperties.resourceKind !== \"ITEM\") {\n            throw new Error(`illegalArgumentException : ${sasTokenProperties.resourceKind} \\\n                          is an invalid partition key value range`);\n        }\n        sasTokenProperties.partitionKeyValueRanges.forEach((range) => {\n            partitionRanges += `${(0,_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(range)},`;\n        });\n    }\n    if (sasTokenProperties.controlPlaneReaderScope === 0) {\n        sasTokenProperties.controlPlaneReaderScope += _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SasTokenPermissionKind.ContainerReadAny;\n        sasTokenProperties.controlPlaneWriterScope += _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SasTokenPermissionKind.ContainerReadAny;\n    }\n    if (sasTokenProperties.dataPlaneReaderScope === 0 &&\n        sasTokenProperties.dataPlaneWriterScope === 0) {\n        sasTokenProperties.dataPlaneReaderScope = _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SasTokenPermissionKind.ContainerFullAccess;\n        sasTokenProperties.dataPlaneWriterScope = _common_index_js__WEBPACK_IMPORTED_MODULE_0__.SasTokenPermissionKind.ContainerFullAccess;\n    }\n    if (typeof sasTokenProperties.keyType !== \"number\" ||\n        typeof sasTokenProperties.keyType === \"undefined\") {\n        switch (sasTokenProperties.keyType) {\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_0__.CosmosKeyType.PrimaryMaster:\n                sasTokenProperties.keyType = 1;\n                break;\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_0__.CosmosKeyType.SecondaryMaster:\n                sasTokenProperties.keyType = 2;\n                break;\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_0__.CosmosKeyType.PrimaryReadOnly:\n                sasTokenProperties.keyType = 3;\n                break;\n            case _common_index_js__WEBPACK_IMPORTED_MODULE_0__.CosmosKeyType.SecondaryReadOnly:\n                sasTokenProperties.keyType = 4;\n                break;\n            default:\n                throw new Error(`illegalArgumentException : ${sasTokenProperties.keyType} \\\n                          is an invalid key type`);\n                break;\n        }\n    }\n    const payload = sasTokenProperties.user +\n        \"\\n\" +\n        sasTokenProperties.userTag +\n        \"\\n\" +\n        sasTokenProperties.resourcePath +\n        \"\\n\" +\n        partitionRanges +\n        \"\\n\" +\n        utcsecondsSinceEpoch(sasTokenProperties.startTime).toString(16) +\n        \"\\n\" +\n        utcsecondsSinceEpoch(sasTokenProperties.expiryTime).toString(16) +\n        \"\\n\" +\n        sasTokenProperties.keyType +\n        \"\\n\" +\n        sasTokenProperties.controlPlaneReaderScope.toString(16) +\n        \"\\n\" +\n        sasTokenProperties.controlPlaneWriterScope.toString(16) +\n        \"\\n\" +\n        sasTokenProperties.dataPlaneReaderScope.toString(16) +\n        \"\\n\" +\n        sasTokenProperties.dataPlaneWriterScope.toString(16) +\n        \"\\n\";\n    const signedPayload = await (0,_hmac_js__WEBPACK_IMPORTED_MODULE_2__.hmac)(masterKey, Buffer.from(payload).toString(\"base64\"));\n    return \"type=sas&ver=1.0&sig=\" + signedPayload + \";\" + Buffer.from(payload).toString(\"base64\");\n}\n/**\n * @hidden\n */\n// TODO: utcMilllisecondsSinceEpoch\nfunction utcsecondsSinceEpoch(date) {\n    return Math.round(date.getTime() / 1000);\n}\n//# sourceMappingURL=SasToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/SasToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/atob.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/atob.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ atob)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction atob(str) {\n    return Buffer.from(str, \"base64\").toString(\"binary\");\n}\n//# sourceMappingURL=atob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9hdG9iLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL2F0b2IuanM/YmE2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGF0b2Ioc3RyKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHN0ciwgXCJiYXNlNjRcIikudG9TdHJpbmcoXCJiaW5hcnlcIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdG9iLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/atob.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/batch.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BulkOperationType: () => (/* binding */ BulkOperationType),\n/* harmony export */   TaskCompletionSource: () => (/* binding */ TaskCompletionSource),\n/* harmony export */   calculateObjectSizeInBytes: () => (/* binding */ calculateObjectSizeInBytes),\n/* harmony export */   decorateBatchOperation: () => (/* binding */ decorateBatchOperation),\n/* harmony export */   encryptOperationInput: () => (/* binding */ encryptOperationInput),\n/* harmony export */   hasResource: () => (/* binding */ hasResource),\n/* harmony export */   isKeyInRange: () => (/* binding */ isKeyInRange),\n/* harmony export */   isSuccessStatusCode: () => (/* binding */ isSuccessStatusCode),\n/* harmony export */   prepareOperations: () => (/* binding */ prepareOperations),\n/* harmony export */   splitBatchBasedOnBodySize: () => (/* binding */ splitBatchBasedOnBodySize)\n/* harmony export */ });\n/* harmony import */ var _extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../extractPartitionKey.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/extractPartitionKey.js\");\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _typeChecks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typeChecks.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js\");\n/* harmony import */ var _request_request_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../request/request.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/request/request.js\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\nfunction isKeyInRange(min, max, key) {\n    const isAfterMinInclusive = key.localeCompare(min) >= 0;\n    const isBeforeMax = key.localeCompare(max) < 0;\n    return isAfterMinInclusive && isBeforeMax;\n}\nconst BulkOperationType = {\n    Create: \"Create\",\n    Upsert: \"Upsert\",\n    Read: \"Read\",\n    Delete: \"Delete\",\n    Replace: \"Replace\",\n    Patch: \"Patch\",\n};\nfunction hasResource(operation) {\n    return (operation.operationType !== \"Patch\" &&\n        operation.resourceBody !== undefined);\n}\n/**\n * Maps OperationInput to Operation by\n * - generating Ids if needed.\n * - choosing partitionKey which can be used to choose which batch this\n * operation should be part of. The order is -\n *   1. If the operationInput itself has partitionKey field set it is used.\n *   2. Other wise for create/replace/upsert it is extracted from resource body.\n *   3. For read/delete/patch type operations undefined partitionKey is used.\n * - Here one nuance is that, the partitionKey field inside Operation needs to\n *  be serialized as a JSON string.\n * @param operationInput - OperationInput\n * @param definition - PartitionKeyDefinition\n * @param options - RequestOptions\n * @returns\n */\nfunction prepareOperations(operationInput, definition, options = {}) {\n    populateIdsIfNeeded(operationInput, options);\n    let partitionKey;\n    if (Object.prototype.hasOwnProperty.call(operationInput, \"partitionKey\")) {\n        if (operationInput.partitionKey === undefined) {\n            partitionKey = definition.paths.map(() => _documents_index_js__WEBPACK_IMPORTED_MODULE_1__.NonePartitionKeyLiteral);\n        }\n        else {\n            partitionKey = (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_1__.convertToInternalPartitionKey)(operationInput.partitionKey);\n        }\n    }\n    else {\n        switch (operationInput.operationType) {\n            case BulkOperationType.Create:\n            case BulkOperationType.Replace:\n            case BulkOperationType.Upsert:\n                partitionKey = (0,_typeChecks_js__WEBPACK_IMPORTED_MODULE_2__.assertNotUndefined)((0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_0__.extractPartitionKeys)(operationInput.resourceBody, definition), \"Unexpected undefined Partition Key Found.\");\n                break;\n            case BulkOperationType.Read:\n            case BulkOperationType.Delete:\n            case BulkOperationType.Patch:\n                partitionKey = (0,_extractPartitionKey_js__WEBPACK_IMPORTED_MODULE_0__.undefinedPartitionKey)(definition);\n                break;\n        }\n    }\n    return {\n        operation: { ...operationInput, partitionKey: JSON.stringify(partitionKey) },\n        partitionKey,\n    };\n}\n/**\n * For operations requiring Id genrate random uuids.\n * @param operationInput - OperationInput to be checked.\n * @param options - RequestOptions\n */\nfunction populateIdsIfNeeded(operationInput, options) {\n    if (operationInput.operationType === BulkOperationType.Create ||\n        operationInput.operationType === BulkOperationType.Upsert) {\n        if ((operationInput.resourceBody.id === undefined || operationInput.resourceBody.id === \"\") &&\n            !options.disableAutomaticIdGeneration) {\n            operationInput.resourceBody.id = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_5__.randomUUID)();\n        }\n    }\n}\n/**\n * Splits a batch into array of batches based on cumulative size of its operations by making sure\n * cumulative size of an individual batch is not larger than {@link Constants.DefaultMaxBulkRequestBodySizeInBytes}.\n * If a single operation itself is larger than {@link Constants.DefaultMaxBulkRequestBodySizeInBytes}, that\n * operation would be moved into a batch containing only that operation.\n * @param originalBatch - A batch of operations needed to be checked.\n * @returns\n * @hidden\n */\nfunction splitBatchBasedOnBodySize(originalBatch) {\n    if (originalBatch?.operations === undefined || originalBatch.operations.length < 1)\n        return [];\n    let currentBatchSize = calculateObjectSizeInBytes(originalBatch.operations[0]);\n    let currentBatch = {\n        ...originalBatch,\n        operations: [originalBatch.operations[0]],\n        indexes: [originalBatch.indexes[0]],\n    };\n    const processedBatches = [];\n    processedBatches.push(currentBatch);\n    for (let index = 1; index < originalBatch.operations.length; index++) {\n        const operation = originalBatch.operations[index];\n        const currentOpSize = calculateObjectSizeInBytes(operation);\n        if (currentBatchSize + currentOpSize > _common_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.DefaultMaxBulkRequestBodySizeInBytes) {\n            currentBatch = {\n                ...originalBatch,\n                operations: [],\n                indexes: [],\n            };\n            processedBatches.push(currentBatch);\n            currentBatchSize = 0;\n        }\n        currentBatch.operations.push(operation);\n        currentBatch.indexes.push(originalBatch.indexes[index]);\n        currentBatchSize += currentOpSize;\n    }\n    return processedBatches;\n}\n/**\n * Calculates size of an JSON object in bytes with utf-8 encoding.\n * @hidden\n */\nfunction calculateObjectSizeInBytes(obj) {\n    return new TextEncoder().encode((0,_request_request_js__WEBPACK_IMPORTED_MODULE_3__.bodyFromData)(obj)).length;\n}\nfunction decorateBatchOperation(operation, options = {}) {\n    if (operation.operationType === BulkOperationType.Create ||\n        operation.operationType === BulkOperationType.Upsert) {\n        if ((operation.resourceBody.id === undefined || operation.resourceBody.id === \"\") &&\n            !options.disableAutomaticIdGeneration) {\n            operation.resourceBody.id = (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_5__.randomUUID)();\n        }\n    }\n    return operation;\n}\nfunction isSuccessStatusCode(statusCode) {\n    return statusCode >= 200 && statusCode <= 299;\n}\nclass TaskCompletionSource {\n    promise;\n    resolveFn;\n    rejectFn;\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolveFn = resolve;\n            this.rejectFn = reject;\n        });\n    }\n    get task() {\n        return this.promise;\n    }\n    setResult(value) {\n        this.resolveFn(value);\n    }\n    setException(error) {\n        this.rejectFn(error);\n    }\n}\nasync function encryptOperationInput(encryptionProcessor, operation, totalPropertiesEncryptedCount) {\n    if (Object.prototype.hasOwnProperty.call(operation, \"partitionKey\")) {\n        const partitionKeyInternal = (0,_documents_index_js__WEBPACK_IMPORTED_MODULE_1__.convertToInternalPartitionKey)(operation.partitionKey);\n        const { partitionKeyList, encryptedCount } = await encryptionProcessor.getEncryptedPartitionKeyValue(partitionKeyInternal);\n        operation.partitionKey = partitionKeyList;\n        totalPropertiesEncryptedCount += encryptedCount;\n    }\n    switch (operation.operationType) {\n        case BulkOperationType.Create:\n        case BulkOperationType.Upsert: {\n            const { body, propertiesEncryptedCount } = await encryptionProcessor.encrypt(operation.resourceBody);\n            operation.resourceBody = body;\n            totalPropertiesEncryptedCount += propertiesEncryptedCount;\n            break;\n        }\n        case BulkOperationType.Read:\n        case BulkOperationType.Delete:\n            if (await encryptionProcessor.isPathEncrypted(\"/id\")) {\n                operation.id = await encryptionProcessor.getEncryptedId(operation.id);\n                totalPropertiesEncryptedCount++;\n            }\n            break;\n        case BulkOperationType.Replace: {\n            if (await encryptionProcessor.isPathEncrypted(\"/id\")) {\n                operation.id = await encryptionProcessor.getEncryptedId(operation.id);\n                totalPropertiesEncryptedCount++;\n            }\n            const { body, propertiesEncryptedCount } = await encryptionProcessor.encrypt(operation.resourceBody);\n            operation.resourceBody = body;\n            totalPropertiesEncryptedCount += propertiesEncryptedCount;\n            break;\n        }\n        case BulkOperationType.Patch: {\n            if (await encryptionProcessor.isPathEncrypted(\"/id\")) {\n                operation.id = await encryptionProcessor.getEncryptedId(operation.id);\n                totalPropertiesEncryptedCount++;\n            }\n            const body = operation.resourceBody;\n            const patchRequestBody = Array.isArray(body) ? body : body.operations;\n            for (const patchOperation of patchRequestBody) {\n                if (\"value\" in patchOperation) {\n                    if (await encryptionProcessor.isPathEncrypted(patchOperation.path)) {\n                        patchOperation.value = await encryptionProcessor.encryptProperty(patchOperation.path, patchOperation.value);\n                        totalPropertiesEncryptedCount++;\n                    }\n                }\n            }\n            break;\n        }\n    }\n    return { operation, totalPropertiesEncryptedCount };\n}\n//# sourceMappingURL=batch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/cachedClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/cachedClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCachedDefaultHttpClient: () => (/* binding */ getCachedDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createDefaultHttpClient)();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=cachedClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9jYWNoZWRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ29FO0FBQ3BFO0FBQ087QUFDUDtBQUNBLDJCQUEyQixrRkFBdUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL2NhY2hlZENsaWVudC5qcz9hYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlRGVmYXVsdEh0dHBDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xubGV0IGNhY2hlZEh0dHBDbGllbnQ7XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2FjaGVkRGVmYXVsdEh0dHBDbGllbnQoKSB7XG4gICAgaWYgKCFjYWNoZWRIdHRwQ2xpZW50KSB7XG4gICAgICAgIGNhY2hlZEh0dHBDbGllbnQgPSBjcmVhdGVEZWZhdWx0SHR0cENsaWVudCgpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVkSHR0cENsaWVudDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhY2hlZENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/cachedClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkURL: () => (/* binding */ checkURL),\n/* harmony export */   normalizeEndpoint: () => (/* binding */ normalizeEndpoint),\n/* harmony export */   sanitizeEndpoint: () => (/* binding */ sanitizeEndpoint)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction checkURL(testString) {\n    return new URL(testString);\n}\nfunction sanitizeEndpoint(url) {\n    return new URL(url).href.replace(/\\/$/, \"\");\n}\n/**\n * @internal\n */\nfunction normalizeEndpoint(endpoint) {\n    return endpoint.replace(/\\s+/g, \"\").toLowerCase();\n}\n//# sourceMappingURL=checkURL.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9jaGVja1VSTC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL2NoZWNrVVJMLmpzPzQyMGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tVUkwodGVzdFN0cmluZykge1xuICAgIHJldHVybiBuZXcgVVJMKHRlc3RTdHJpbmcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplRW5kcG9pbnQodXJsKSB7XG4gICAgcmV0dXJuIG5ldyBVUkwodXJsKS5ocmVmLnJlcGxhY2UoL1xcLyQvLCBcIlwiKTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVFbmRwb2ludChlbmRwb2ludCkge1xuICAgIHJldHVybiBlbmRwb2ludC5yZXBsYWNlKC9cXHMrL2csIFwiXCIpLnRvTG93ZXJDYXNlKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGVja1VSTC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/checkURL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addDiagnosticChild: () => (/* binding */ addDiagnosticChild),\n/* harmony export */   getEmptyCosmosDiagnostics: () => (/* binding */ getEmptyCosmosDiagnostics),\n/* harmony export */   withDiagnostics: () => (/* binding */ withDiagnostics),\n/* harmony export */   withMetadataDiagnostics: () => (/* binding */ withMetadataDiagnostics)\n/* harmony export */ });\n/* harmony import */ var _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CosmosDiagnostics.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/CosmosDiagnostics.js\");\n/* harmony import */ var _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../diagnostics/DiagnosticNodeInternal.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/DiagnosticNodeInternal.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./time.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\");\n/* harmony import */ var _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../diagnostics/CosmosDbDiagnosticLevel.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/diagnostics/CosmosDbDiagnosticLevel.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n/**\n * @hidden\n * Utility function to create an Empty CosmosDiagnostic object.\n */\nfunction getEmptyCosmosDiagnostics() {\n    return new _CosmosDiagnostics_js__WEBPACK_IMPORTED_MODULE_0__.CosmosDiagnostics({\n        requestDurationInMs: 0,\n        requestStartTimeUTCInMs: (0,_time_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentTimestampInMs)(),\n        totalRequestPayloadLengthInBytes: 0,\n        totalResponsePayloadLengthInBytes: 0,\n        locationEndpointsContacted: [],\n        retryDiagnostics: {\n            failedAttempts: [],\n        },\n        metadataDiagnostics: {\n            metadataLookups: [],\n        },\n        gatewayStatistics: [],\n    }, {\n        id: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.randomUUID)(),\n        nodeType: _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeType.CLIENT_REQUEST_NODE,\n        children: [],\n        data: {},\n        startTimeUTCInMs: (0,_time_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentTimestampInMs)(),\n        durationInMs: 0,\n    });\n}\n/**\n * A supporting utility wrapper function, to be used inside a diagnostic session started\n * by `withDiagnostics` function.\n * Created a Diagnostic node and add it as a child to existing diagnostic session.\n * @hidden\n */\nasync function addDiagnosticChild(callback, node, type, data = {}) {\n    const childNode = node.initializeChildNode(type, _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_3__.CosmosDbDiagnosticLevel.debug, data);\n    try {\n        const response = await callback(childNode);\n        childNode.updateTimestamp();\n        return response;\n    }\n    catch (e) {\n        childNode.addData({\n            failure: true,\n        });\n        childNode.updateTimestamp();\n        throw e;\n    }\n}\n/**\n * A supporting utility wrapper function, to be used inside a diagnostic session started\n * by `withDiagnostics` function.\n * Treats requests originating in  provided `callback` as metadata calls.\n * To realize this, starts a temporary diagnostic session, after execution of callback is\n * finished. Merges this temporary diagnostic session to the original diagnostic session\n * represented by the input parameter `node`.\n * @hidden\n */\nasync function withMetadataDiagnostics(callback, node, type) {\n    const diagnosticNodeForMetadataCall = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeInternal(node.diagnosticLevel, _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeType.METADATA_REQUEST_NODE, null);\n    try {\n        const response = await callback(diagnosticNodeForMetadataCall);\n        node.addChildNode(diagnosticNodeForMetadataCall, _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_3__.CosmosDbDiagnosticLevel.debug, type);\n        return response;\n    }\n    catch (e) {\n        node.addChildNode(diagnosticNodeForMetadataCall, _diagnostics_CosmosDbDiagnosticLevel_js__WEBPACK_IMPORTED_MODULE_3__.CosmosDbDiagnosticLevel.debug, type);\n        throw e;\n    }\n}\n/**\n * Utility wrapper function to managed lifecycle of a Diagnostic session.\n * Meant to be used at the root of the client operation. i.e. item.read(),\n * queryIterator.fetchAll().\n *\n * This utility starts a new diagnostic session. So using it any where else\n * other than start of operation, will result is different diagnostic sessions.\n *\n * Workings :\n * 1. Takes a callback function as input.\n * 2. Creates a new instance of DiagnosticNodeInternal, which can be though as starting\n * a new diagnostic session.\n * 3. Executes the callback function.\n * 4. If execution was successful. Converts DiagnosticNodeInternal to CosmosDiagnostics\n * and injects it to the response object and returns this object.\n * 5. If execution threw an exception. Sill converts DiagnosticNodeInternal to CosmosDiagnostics\n * and injects it to the Error object, and rethrows the Error object.\n *\n * @hidden\n */\nasync function withDiagnostics(callback, clientContext, type = _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeType.CLIENT_REQUEST_NODE) {\n    const diagnosticNode = new _diagnostics_DiagnosticNodeInternal_js__WEBPACK_IMPORTED_MODULE_1__.DiagnosticNodeInternal(clientContext.diagnosticLevel, type, null);\n    try {\n        const response = await callback(diagnosticNode);\n        diagnosticNode.updateTimestamp();\n        const diagnostics = diagnosticNode.toDiagnostic(clientContext.getClientConfig());\n        if (typeof response === \"object\" && response !== null) {\n            response.diagnostics = diagnostics;\n        }\n        clientContext.recordDiagnostics(diagnostics);\n        return response;\n    }\n    catch (e) {\n        diagnosticNode.updateTimestamp();\n        diagnosticNode.addData({\n            failure: true,\n        });\n        const diagnostics = diagnosticNode.toDiagnostic(clientContext.getClientConfig());\n        e.diagnostics = diagnostics;\n        clientContext.recordDiagnostics(diagnostics);\n        throw e;\n    }\n}\n//# sourceMappingURL=diagnostics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9kaWFnbm9zdGljcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzREO0FBQzJDO0FBQ25EO0FBQ2dDO0FBQ3RDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxlQUFlLG9FQUFpQjtBQUNoQztBQUNBLGlDQUFpQyxpRUFBdUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLFlBQVksNERBQVU7QUFDdEIsa0JBQWtCLHNGQUFrQjtBQUNwQztBQUNBLGdCQUFnQjtBQUNoQiwwQkFBMEIsaUVBQXVCO0FBQ2pEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUVBQWlFO0FBQ3hFLHFEQUFxRCw0RkFBdUI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsOENBQThDLDBGQUFzQix1QkFBdUIsc0ZBQWtCO0FBQzdHO0FBQ0E7QUFDQSx5REFBeUQsNEZBQXVCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCw0RkFBdUI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtEQUErRCxzRkFBa0I7QUFDeEYsK0JBQStCLDBGQUFzQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9kaWFnbm9zdGljcy5qcz80ZTU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQ29zbW9zRGlhZ25vc3RpY3MgfSBmcm9tIFwiLi4vQ29zbW9zRGlhZ25vc3RpY3MuanNcIjtcbmltcG9ydCB7IERpYWdub3N0aWNOb2RlSW50ZXJuYWwsIERpYWdub3N0aWNOb2RlVHlwZSwgfSBmcm9tIFwiLi4vZGlhZ25vc3RpY3MvRGlhZ25vc3RpY05vZGVJbnRlcm5hbC5qc1wiO1xuaW1wb3J0IHsgZ2V0Q3VycmVudFRpbWVzdGFtcEluTXMgfSBmcm9tIFwiLi90aW1lLmpzXCI7XG5pbXBvcnQgeyBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbCB9IGZyb20gXCIuLi9kaWFnbm9zdGljcy9Db3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5qc1wiO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqIFV0aWxpdHkgZnVuY3Rpb24gdG8gY3JlYXRlIGFuIEVtcHR5IENvc21vc0RpYWdub3N0aWMgb2JqZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW1wdHlDb3Ntb3NEaWFnbm9zdGljcygpIHtcbiAgICByZXR1cm4gbmV3IENvc21vc0RpYWdub3N0aWNzKHtcbiAgICAgICAgcmVxdWVzdER1cmF0aW9uSW5NczogMCxcbiAgICAgICAgcmVxdWVzdFN0YXJ0VGltZVVUQ0luTXM6IGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCksXG4gICAgICAgIHRvdGFsUmVxdWVzdFBheWxvYWRMZW5ndGhJbkJ5dGVzOiAwLFxuICAgICAgICB0b3RhbFJlc3BvbnNlUGF5bG9hZExlbmd0aEluQnl0ZXM6IDAsXG4gICAgICAgIGxvY2F0aW9uRW5kcG9pbnRzQ29udGFjdGVkOiBbXSxcbiAgICAgICAgcmV0cnlEaWFnbm9zdGljczoge1xuICAgICAgICAgICAgZmFpbGVkQXR0ZW1wdHM6IFtdLFxuICAgICAgICB9LFxuICAgICAgICBtZXRhZGF0YURpYWdub3N0aWNzOiB7XG4gICAgICAgICAgICBtZXRhZGF0YUxvb2t1cHM6IFtdLFxuICAgICAgICB9LFxuICAgICAgICBnYXRld2F5U3RhdGlzdGljczogW10sXG4gICAgfSwge1xuICAgICAgICBpZDogcmFuZG9tVVVJRCgpLFxuICAgICAgICBub2RlVHlwZTogRGlhZ25vc3RpY05vZGVUeXBlLkNMSUVOVF9SRVFVRVNUX05PREUsXG4gICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgZGF0YToge30sXG4gICAgICAgIHN0YXJ0VGltZVVUQ0luTXM6IGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCksXG4gICAgICAgIGR1cmF0aW9uSW5NczogMCxcbiAgICB9KTtcbn1cbi8qKlxuICogQSBzdXBwb3J0aW5nIHV0aWxpdHkgd3JhcHBlciBmdW5jdGlvbiwgdG8gYmUgdXNlZCBpbnNpZGUgYSBkaWFnbm9zdGljIHNlc3Npb24gc3RhcnRlZFxuICogYnkgYHdpdGhEaWFnbm9zdGljc2AgZnVuY3Rpb24uXG4gKiBDcmVhdGVkIGEgRGlhZ25vc3RpYyBub2RlIGFuZCBhZGQgaXQgYXMgYSBjaGlsZCB0byBleGlzdGluZyBkaWFnbm9zdGljIHNlc3Npb24uXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGREaWFnbm9zdGljQ2hpbGQoY2FsbGJhY2ssIG5vZGUsIHR5cGUsIGRhdGEgPSB7fSkge1xuICAgIGNvbnN0IGNoaWxkTm9kZSA9IG5vZGUuaW5pdGlhbGl6ZUNoaWxkTm9kZSh0eXBlLCBDb3Ntb3NEYkRpYWdub3N0aWNMZXZlbC5kZWJ1ZywgZGF0YSk7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjYWxsYmFjayhjaGlsZE5vZGUpO1xuICAgICAgICBjaGlsZE5vZGUudXBkYXRlVGltZXN0YW1wKCk7XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgY2hpbGROb2RlLmFkZERhdGEoe1xuICAgICAgICAgICAgZmFpbHVyZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNoaWxkTm9kZS51cGRhdGVUaW1lc3RhbXAoKTtcbiAgICAgICAgdGhyb3cgZTtcbiAgICB9XG59XG4vKipcbiAqIEEgc3VwcG9ydGluZyB1dGlsaXR5IHdyYXBwZXIgZnVuY3Rpb24sIHRvIGJlIHVzZWQgaW5zaWRlIGEgZGlhZ25vc3RpYyBzZXNzaW9uIHN0YXJ0ZWRcbiAqIGJ5IGB3aXRoRGlhZ25vc3RpY3NgIGZ1bmN0aW9uLlxuICogVHJlYXRzIHJlcXVlc3RzIG9yaWdpbmF0aW5nIGluICBwcm92aWRlZCBgY2FsbGJhY2tgIGFzIG1ldGFkYXRhIGNhbGxzLlxuICogVG8gcmVhbGl6ZSB0aGlzLCBzdGFydHMgYSB0ZW1wb3JhcnkgZGlhZ25vc3RpYyBzZXNzaW9uLCBhZnRlciBleGVjdXRpb24gb2YgY2FsbGJhY2sgaXNcbiAqIGZpbmlzaGVkLiBNZXJnZXMgdGhpcyB0ZW1wb3JhcnkgZGlhZ25vc3RpYyBzZXNzaW9uIHRvIHRoZSBvcmlnaW5hbCBkaWFnbm9zdGljIHNlc3Npb25cbiAqIHJlcHJlc2VudGVkIGJ5IHRoZSBpbnB1dCBwYXJhbWV0ZXIgYG5vZGVgLlxuICogQGhpZGRlblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2l0aE1ldGFkYXRhRGlhZ25vc3RpY3MoY2FsbGJhY2ssIG5vZGUsIHR5cGUpIHtcbiAgICBjb25zdCBkaWFnbm9zdGljTm9kZUZvck1ldGFkYXRhQ2FsbCA9IG5ldyBEaWFnbm9zdGljTm9kZUludGVybmFsKG5vZGUuZGlhZ25vc3RpY0xldmVsLCBEaWFnbm9zdGljTm9kZVR5cGUuTUVUQURBVEFfUkVRVUVTVF9OT0RFLCBudWxsKTtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNhbGxiYWNrKGRpYWdub3N0aWNOb2RlRm9yTWV0YWRhdGFDYWxsKTtcbiAgICAgICAgbm9kZS5hZGRDaGlsZE5vZGUoZGlhZ25vc3RpY05vZGVGb3JNZXRhZGF0YUNhbGwsIENvc21vc0RiRGlhZ25vc3RpY0xldmVsLmRlYnVnLCB0eXBlKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBub2RlLmFkZENoaWxkTm9kZShkaWFnbm9zdGljTm9kZUZvck1ldGFkYXRhQ2FsbCwgQ29zbW9zRGJEaWFnbm9zdGljTGV2ZWwuZGVidWcsIHR5cGUpO1xuICAgICAgICB0aHJvdyBlO1xuICAgIH1cbn1cbi8qKlxuICogVXRpbGl0eSB3cmFwcGVyIGZ1bmN0aW9uIHRvIG1hbmFnZWQgbGlmZWN5Y2xlIG9mIGEgRGlhZ25vc3RpYyBzZXNzaW9uLlxuICogTWVhbnQgdG8gYmUgdXNlZCBhdCB0aGUgcm9vdCBvZiB0aGUgY2xpZW50IG9wZXJhdGlvbi4gaS5lLiBpdGVtLnJlYWQoKSxcbiAqIHF1ZXJ5SXRlcmF0b3IuZmV0Y2hBbGwoKS5cbiAqXG4gKiBUaGlzIHV0aWxpdHkgc3RhcnRzIGEgbmV3IGRpYWdub3N0aWMgc2Vzc2lvbi4gU28gdXNpbmcgaXQgYW55IHdoZXJlIGVsc2VcbiAqIG90aGVyIHRoYW4gc3RhcnQgb2Ygb3BlcmF0aW9uLCB3aWxsIHJlc3VsdCBpcyBkaWZmZXJlbnQgZGlhZ25vc3RpYyBzZXNzaW9ucy5cbiAqXG4gKiBXb3JraW5ncyA6XG4gKiAxLiBUYWtlcyBhIGNhbGxiYWNrIGZ1bmN0aW9uIGFzIGlucHV0LlxuICogMi4gQ3JlYXRlcyBhIG5ldyBpbnN0YW5jZSBvZiBEaWFnbm9zdGljTm9kZUludGVybmFsLCB3aGljaCBjYW4gYmUgdGhvdWdoIGFzIHN0YXJ0aW5nXG4gKiBhIG5ldyBkaWFnbm9zdGljIHNlc3Npb24uXG4gKiAzLiBFeGVjdXRlcyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uXG4gKiA0LiBJZiBleGVjdXRpb24gd2FzIHN1Y2Nlc3NmdWwuIENvbnZlcnRzIERpYWdub3N0aWNOb2RlSW50ZXJuYWwgdG8gQ29zbW9zRGlhZ25vc3RpY3NcbiAqIGFuZCBpbmplY3RzIGl0IHRvIHRoZSByZXNwb25zZSBvYmplY3QgYW5kIHJldHVybnMgdGhpcyBvYmplY3QuXG4gKiA1LiBJZiBleGVjdXRpb24gdGhyZXcgYW4gZXhjZXB0aW9uLiBTaWxsIGNvbnZlcnRzIERpYWdub3N0aWNOb2RlSW50ZXJuYWwgdG8gQ29zbW9zRGlhZ25vc3RpY3NcbiAqIGFuZCBpbmplY3RzIGl0IHRvIHRoZSBFcnJvciBvYmplY3QsIGFuZCByZXRocm93cyB0aGUgRXJyb3Igb2JqZWN0LlxuICpcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdpdGhEaWFnbm9zdGljcyhjYWxsYmFjaywgY2xpZW50Q29udGV4dCwgdHlwZSA9IERpYWdub3N0aWNOb2RlVHlwZS5DTElFTlRfUkVRVUVTVF9OT0RFKSB7XG4gICAgY29uc3QgZGlhZ25vc3RpY05vZGUgPSBuZXcgRGlhZ25vc3RpY05vZGVJbnRlcm5hbChjbGllbnRDb250ZXh0LmRpYWdub3N0aWNMZXZlbCwgdHlwZSwgbnVsbCk7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjYWxsYmFjayhkaWFnbm9zdGljTm9kZSk7XG4gICAgICAgIGRpYWdub3N0aWNOb2RlLnVwZGF0ZVRpbWVzdGFtcCgpO1xuICAgICAgICBjb25zdCBkaWFnbm9zdGljcyA9IGRpYWdub3N0aWNOb2RlLnRvRGlhZ25vc3RpYyhjbGllbnRDb250ZXh0LmdldENsaWVudENvbmZpZygpKTtcbiAgICAgICAgaWYgKHR5cGVvZiByZXNwb25zZSA9PT0gXCJvYmplY3RcIiAmJiByZXNwb25zZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmVzcG9uc2UuZGlhZ25vc3RpY3MgPSBkaWFnbm9zdGljcztcbiAgICAgICAgfVxuICAgICAgICBjbGllbnRDb250ZXh0LnJlY29yZERpYWdub3N0aWNzKGRpYWdub3N0aWNzKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnbm9zdGljTm9kZS51cGRhdGVUaW1lc3RhbXAoKTtcbiAgICAgICAgZGlhZ25vc3RpY05vZGUuYWRkRGF0YSh7XG4gICAgICAgICAgICBmYWlsdXJlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZGlhZ25vc3RpY3MgPSBkaWFnbm9zdGljTm9kZS50b0RpYWdub3N0aWMoY2xpZW50Q29udGV4dC5nZXRDbGllbnRDb25maWcoKSk7XG4gICAgICAgIGUuZGlhZ25vc3RpY3MgPSBkaWFnbm9zdGljcztcbiAgICAgICAgY2xpZW50Q29udGV4dC5yZWNvcmREaWFnbm9zdGljcyhkaWFnbm9zdGljcyk7XG4gICAgICAgIHRocm93IGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlhZ25vc3RpY3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/diagnostics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/digest.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/digest.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* binding */ digest)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nasync function digest(str) {\n    const hash = (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha256\");\n    hash.update(str, \"utf8\");\n    return hash.digest(\"hex\");\n}\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9kaWdlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ3lDO0FBQ2xDO0FBQ1AsaUJBQWlCLHVEQUFVO0FBQzNCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9kaWdlc3QuanM/NTllNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUhhc2ggfSBmcm9tIFwibm9kZTpjcnlwdG9cIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkaWdlc3Qoc3RyKSB7XG4gICAgY29uc3QgaGFzaCA9IGNyZWF0ZUhhc2goXCJzaGEyNTZcIik7XG4gICAgaGFzaC51cGRhdGUoc3RyLCBcInV0ZjhcIik7XG4gICAgcmV0dXJuIGhhc2guZGlnZXN0KFwiaGV4XCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlnZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/encode.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/encode.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64),\n/* harmony export */   encodeUTF8: () => (/* binding */ encodeUTF8)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/// <reference lib=\"dom\"/>\nfunction encodeUTF8(str) {\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction encodeBase64(value) {\n    if (\"function\" !== typeof btoa) {\n        throw new Error(\"Your browser environment is missing the global `btoa` function\");\n    }\n    let binary = \"\";\n    const bytes = new Uint8Array(value);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\n//# sourceMappingURL=encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9lbmNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvZW5jb2RlLmpzPzkwMjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vLy8gPHJlZmVyZW5jZSBsaWI9XCJkb21cIi8+XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVVRGOChzdHIpIHtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KHN0ci5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJ5dGVzW2ldID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICAgIHJldHVybiBieXRlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCYXNlNjQodmFsdWUpIHtcbiAgICBpZiAoXCJmdW5jdGlvblwiICE9PSB0eXBlb2YgYnRvYSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3VyIGJyb3dzZXIgZW52aXJvbm1lbnQgaXMgbWlzc2luZyB0aGUgZ2xvYmFsIGBidG9hYCBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgbGV0IGJpbmFyeSA9IFwiXCI7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheSh2YWx1ZSk7XG4gICAgY29uc3QgbGVuID0gYnl0ZXMuYnl0ZUxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGJpbmFyeSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGVzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ0b2EoYmluYXJ5KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/encode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/envUtils.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/envUtils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diagnosticLevelFromEnv: () => (/* binding */ diagnosticLevelFromEnv)\n/* harmony export */ });\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:process */ \"node:process\");\n/* harmony import */ var _common_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/constants.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst diagnosticLevelFromEnv = node_process__WEBPACK_IMPORTED_MODULE_0__.env[_common_constants_js__WEBPACK_IMPORTED_MODULE_1__.Constants.CosmosDbDiagnosticLevelEnvVarName];\n//# sourceMappingURL=envUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9lbnZVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ21DO0FBQ2dCO0FBQzVDLCtCQUErQiw2Q0FBVyxDQUFDLDJEQUFTO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9lbnZVdGlscy5qcz9jZWY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHByb2Nlc3MgZnJvbSBcIm5vZGU6cHJvY2Vzc1wiO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSBcIi4uL2NvbW1vbi9jb25zdGFudHMuanNcIjtcbmV4cG9ydCBjb25zdCBkaWFnbm9zdGljTGV2ZWxGcm9tRW52ID0gcHJvY2Vzcy5lbnZbQ29uc3RhbnRzLkNvc21vc0RiRGlhZ25vc3RpY0xldmVsRW52VmFyTmFtZV07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnZVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/envUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/fixedSizePriorityQueue.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/fixedSizePriorityQueue.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FixedSizePriorityQueue: () => (/* binding */ FixedSizePriorityQueue)\n/* harmony export */ });\n/* harmony import */ var priorityqueuejs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! priorityqueuejs */ \"(rsc)/./node_modules/priorityqueuejs/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nclass FixedSizePriorityQueue {\n    pq;\n    // The compare function should return a positive number if a is greater than b, a negative number if a is less than b, and 0 if a is equal to b.\n    compareFn;\n    pqMaxSize;\n    constructor(compareFn, pqMaxSize) {\n        this.compareFn = compareFn;\n        this.pq = new priorityqueuejs__WEBPACK_IMPORTED_MODULE_0__(this.compareFn);\n        this.pqMaxSize = pqMaxSize;\n    }\n    enqueue(item) {\n        if (this.pq.size() < this.pqMaxSize) {\n            this.pq.enq(item);\n        }\n        else {\n            const topItem = this.pq.peek();\n            if (this.compareFn(topItem, item) > 0) {\n                this.pq.deq();\n                this.pq.enq(item);\n            }\n        }\n    }\n    dequeue() {\n        return this.pq.deq();\n    }\n    size() {\n        return this.pq.size();\n    }\n    isEmpty() {\n        return this.pq.isEmpty();\n    }\n    peek() {\n        return this.pq.peek();\n    }\n    getTopElements() {\n        const elements = [];\n        while (!this.pq.isEmpty()) {\n            elements.unshift(this.pq.deq());\n        }\n        return elements;\n    }\n    // Create a new instance of FixedSizePriorityQueue with a reversed compare function and the same maximum size.\n    // Enqueue all elements from the current priority queue into the reverse priority queue.\n    reverse() {\n        const reversePQ = new FixedSizePriorityQueue((a, b) => -this.compareFn(a, b), this.pqMaxSize);\n        while (!this.pq.isEmpty()) {\n            reversePQ.enqueue(this.pq.deq());\n        }\n        return reversePQ;\n    }\n}\n//# sourceMappingURL=fixedSizePriorityQueue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9maXhlZFNpemVQcmlvcml0eVF1ZXVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUM0QztBQUNyQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0Q0FBYTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9maXhlZFNpemVQcmlvcml0eVF1ZXVlLmpzP2NjMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgUHJpb3JpdHlRdWV1ZSBmcm9tIFwicHJpb3JpdHlxdWV1ZWpzXCI7XG5leHBvcnQgY2xhc3MgRml4ZWRTaXplUHJpb3JpdHlRdWV1ZSB7XG4gICAgcHE7XG4gICAgLy8gVGhlIGNvbXBhcmUgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBhIHBvc2l0aXZlIG51bWJlciBpZiBhIGlzIGdyZWF0ZXIgdGhhbiBiLCBhIG5lZ2F0aXZlIG51bWJlciBpZiBhIGlzIGxlc3MgdGhhbiBiLCBhbmQgMCBpZiBhIGlzIGVxdWFsIHRvIGIuXG4gICAgY29tcGFyZUZuO1xuICAgIHBxTWF4U2l6ZTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wYXJlRm4sIHBxTWF4U2l6ZSkge1xuICAgICAgICB0aGlzLmNvbXBhcmVGbiA9IGNvbXBhcmVGbjtcbiAgICAgICAgdGhpcy5wcSA9IG5ldyBQcmlvcml0eVF1ZXVlKHRoaXMuY29tcGFyZUZuKTtcbiAgICAgICAgdGhpcy5wcU1heFNpemUgPSBwcU1heFNpemU7XG4gICAgfVxuICAgIGVucXVldWUoaXRlbSkge1xuICAgICAgICBpZiAodGhpcy5wcS5zaXplKCkgPCB0aGlzLnBxTWF4U2l6ZSkge1xuICAgICAgICAgICAgdGhpcy5wcS5lbnEoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0b3BJdGVtID0gdGhpcy5wcS5wZWVrKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5jb21wYXJlRm4odG9wSXRlbSwgaXRlbSkgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcS5kZXEoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBxLmVucShpdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBkZXF1ZXVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcS5kZXEoKTtcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHEuc2l6ZSgpO1xuICAgIH1cbiAgICBpc0VtcHR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcS5pc0VtcHR5KCk7XG4gICAgfVxuICAgIHBlZWsoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBxLnBlZWsoKTtcbiAgICB9XG4gICAgZ2V0VG9wRWxlbWVudHMoKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gW107XG4gICAgICAgIHdoaWxlICghdGhpcy5wcS5pc0VtcHR5KCkpIHtcbiAgICAgICAgICAgIGVsZW1lbnRzLnVuc2hpZnQodGhpcy5wcS5kZXEoKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVsZW1lbnRzO1xuICAgIH1cbiAgICAvLyBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgRml4ZWRTaXplUHJpb3JpdHlRdWV1ZSB3aXRoIGEgcmV2ZXJzZWQgY29tcGFyZSBmdW5jdGlvbiBhbmQgdGhlIHNhbWUgbWF4aW11bSBzaXplLlxuICAgIC8vIEVucXVldWUgYWxsIGVsZW1lbnRzIGZyb20gdGhlIGN1cnJlbnQgcHJpb3JpdHkgcXVldWUgaW50byB0aGUgcmV2ZXJzZSBwcmlvcml0eSBxdWV1ZS5cbiAgICByZXZlcnNlKCkge1xuICAgICAgICBjb25zdCByZXZlcnNlUFEgPSBuZXcgRml4ZWRTaXplUHJpb3JpdHlRdWV1ZSgoYSwgYikgPT4gLXRoaXMuY29tcGFyZUZuKGEsIGIpLCB0aGlzLnBxTWF4U2l6ZSk7XG4gICAgICAgIHdoaWxlICghdGhpcy5wcS5pc0VtcHR5KCkpIHtcbiAgICAgICAgICAgIHJldmVyc2VQUS5lbnF1ZXVlKHRoaXMucHEuZGVxKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXZlcnNlUFE7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zml4ZWRTaXplUHJpb3JpdHlRdWV1ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/fixedSizePriorityQueue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashObject: () => (/* binding */ hashObject)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/digest.js\");\n/* harmony import */ var fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fast-json-stable-stringify */ \"(rsc)/./node_modules/fast-json-stable-stringify/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nasync function hashObject(object) {\n    const stringifiedObject = fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__(object);\n    return (0,_digest_js__WEBPACK_IMPORTED_MODULE_0__.digest)(stringifiedObject);\n}\n//# sourceMappingURL=hashObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDcUM7QUFDb0I7QUFDbEQ7QUFDUCw4QkFBOEIsdURBQWU7QUFDN0MsV0FBVyxrREFBTTtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoT2JqZWN0LmpzPzhiNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBkaWdlc3QgfSBmcm9tIFwiLi9kaWdlc3QuanNcIjtcbmltcG9ydCBzdGFibGVTdHJpbmdpZnkgZnJvbSBcImZhc3QtanNvbi1zdGFibGUtc3RyaW5naWZ5XCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFzaE9iamVjdChvYmplY3QpIHtcbiAgICBjb25zdCBzdHJpbmdpZmllZE9iamVjdCA9IHN0YWJsZVN0cmluZ2lmeShvYmplY3QpO1xuICAgIHJldHVybiBkaWdlc3Qoc3RyaW5naWZpZWRPYmplY3QpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaE9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/number.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/number.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   doubleToByteArrayBigInt: () => (/* binding */ doubleToByteArrayBigInt),\n/* harmony export */   writeNumberForBinaryEncodingBigInt: () => (/* binding */ writeNumberForBinaryEncodingBigInt)\n/* harmony export */ });\n/* harmony import */ var _uint8_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../uint8.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js\");\n/* harmony import */ var _prefix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prefix.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction writeNumberForBinaryEncodingBigInt(hash) {\n    let payload = encodeNumberAsUInt64BigInt(hash);\n    // Convert the BytePrefix.Number hex string to Uint8Array.\n    let outputStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.hexStringToUint8Array)(_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.Number);\n    const firstChunk = (payload >> BigInt(56)) & BigInt(0xff);\n    outputStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.concatUint8Arrays)([\n        outputStream,\n        (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.hexStringToUint8Array)(firstChunk.toString(16).padStart(2, \"0\")),\n    ]);\n    payload = (payload << BigInt(8)) & BigInt(\"0xffffffffffffffff\");\n    let byteToWrite = BigInt(0);\n    let firstIteration = true;\n    do {\n        if (!firstIteration) {\n            const padded = byteToWrite.toString(16).padStart(2, \"0\");\n            if (padded !== \"00\") {\n                outputStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.concatUint8Arrays)([outputStream, (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.hexStringToUint8Array)(padded)]);\n            }\n        }\n        else {\n            firstIteration = false;\n        }\n        const shifted = (payload >> BigInt(56)) & BigInt(0xff);\n        byteToWrite = shifted | BigInt(0x01);\n        payload = (payload << BigInt(7)) & BigInt(\"0xffffffffffffffff\");\n    } while (payload !== BigInt(0));\n    const lastChunk = byteToWrite & BigInt(0xfe);\n    const padded = lastChunk.toString(16).padStart(2, \"0\");\n    if (padded !== \"00\") {\n        outputStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.concatUint8Arrays)([outputStream, (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.hexStringToUint8Array)(padded)]);\n    }\n    return outputStream;\n}\nfunction encodeNumberAsUInt64BigInt(value) {\n    const rawValueBits = getRawBitsBigInt(value);\n    const mask = BigInt(\"0x8000000000000000\");\n    return mask > rawValueBits ? rawValueBits ^ mask : ~rawValueBits + BigInt(1);\n}\nfunction getRawBitsBigInt(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value);\n    // Convert the underlying bytes to a hex string.\n    return BigInt(\"0x\" + buf2hex(new Uint8Array(buffer)));\n}\nfunction buf2hex(arr) {\n    return Array.from(arr)\n        .map((x) => x.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\nfunction doubleToByteArrayBigInt(double) {\n    const output = new Uint8Array(8);\n    const lng = getRawBitsBigInt(double);\n    for (let i = 0; i < 8; i++) {\n        output[i] = Number((lng >> BigInt(i * 8)) & BigInt(0xff));\n    }\n    return output;\n}\n//# sourceMappingURL=number.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2VuY29kaW5nL251bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUMwRTtBQUNqQztBQUNsQztBQUNQO0FBQ0E7QUFDQSx1QkFBdUIsZ0VBQXFCLENBQUMsa0RBQVU7QUFDdkQ7QUFDQSxtQkFBbUIsNERBQWlCO0FBQ3BDO0FBQ0EsUUFBUSxnRUFBcUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0REFBaUIsZ0JBQWdCLGdFQUFxQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw0REFBaUIsZ0JBQWdCLGdFQUFxQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvaGFzaGluZy9lbmNvZGluZy9udW1iZXIuanM/Y2FhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNvbmNhdFVpbnQ4QXJyYXlzLCBoZXhTdHJpbmdUb1VpbnQ4QXJyYXkgfSBmcm9tIFwiLi4vLi4vdWludDguanNcIjtcbmltcG9ydCB7IEJ5dGVQcmVmaXggfSBmcm9tIFwiLi9wcmVmaXguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB3cml0ZU51bWJlckZvckJpbmFyeUVuY29kaW5nQmlnSW50KGhhc2gpIHtcbiAgICBsZXQgcGF5bG9hZCA9IGVuY29kZU51bWJlckFzVUludDY0QmlnSW50KGhhc2gpO1xuICAgIC8vIENvbnZlcnQgdGhlIEJ5dGVQcmVmaXguTnVtYmVyIGhleCBzdHJpbmcgdG8gVWludDhBcnJheS5cbiAgICBsZXQgb3V0cHV0U3RyZWFtID0gaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguTnVtYmVyKTtcbiAgICBjb25zdCBmaXJzdENodW5rID0gKHBheWxvYWQgPj4gQmlnSW50KDU2KSkgJiBCaWdJbnQoMHhmZik7XG4gICAgb3V0cHV0U3RyZWFtID0gY29uY2F0VWludDhBcnJheXMoW1xuICAgICAgICBvdXRwdXRTdHJlYW0sXG4gICAgICAgIGhleFN0cmluZ1RvVWludDhBcnJheShmaXJzdENodW5rLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikpLFxuICAgIF0pO1xuICAgIHBheWxvYWQgPSAocGF5bG9hZCA8PCBCaWdJbnQoOCkpICYgQmlnSW50KFwiMHhmZmZmZmZmZmZmZmZmZmZmXCIpO1xuICAgIGxldCBieXRlVG9Xcml0ZSA9IEJpZ0ludCgwKTtcbiAgICBsZXQgZmlyc3RJdGVyYXRpb24gPSB0cnVlO1xuICAgIGRvIHtcbiAgICAgICAgaWYgKCFmaXJzdEl0ZXJhdGlvbikge1xuICAgICAgICAgICAgY29uc3QgcGFkZGVkID0gYnl0ZVRvV3JpdGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICAgICAgICAgIGlmIChwYWRkZWQgIT09IFwiMDBcIikge1xuICAgICAgICAgICAgICAgIG91dHB1dFN0cmVhbSA9IGNvbmNhdFVpbnQ4QXJyYXlzKFtvdXRwdXRTdHJlYW0sIGhleFN0cmluZ1RvVWludDhBcnJheShwYWRkZWQpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBmaXJzdEl0ZXJhdGlvbiA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNoaWZ0ZWQgPSAocGF5bG9hZCA+PiBCaWdJbnQoNTYpKSAmIEJpZ0ludCgweGZmKTtcbiAgICAgICAgYnl0ZVRvV3JpdGUgPSBzaGlmdGVkIHwgQmlnSW50KDB4MDEpO1xuICAgICAgICBwYXlsb2FkID0gKHBheWxvYWQgPDwgQmlnSW50KDcpKSAmIEJpZ0ludChcIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKTtcbiAgICB9IHdoaWxlIChwYXlsb2FkICE9PSBCaWdJbnQoMCkpO1xuICAgIGNvbnN0IGxhc3RDaHVuayA9IGJ5dGVUb1dyaXRlICYgQmlnSW50KDB4ZmUpO1xuICAgIGNvbnN0IHBhZGRlZCA9IGxhc3RDaHVuay50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpO1xuICAgIGlmIChwYWRkZWQgIT09IFwiMDBcIikge1xuICAgICAgICBvdXRwdXRTdHJlYW0gPSBjb25jYXRVaW50OEFycmF5cyhbb3V0cHV0U3RyZWFtLCBoZXhTdHJpbmdUb1VpbnQ4QXJyYXkocGFkZGVkKV0pO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0U3RyZWFtO1xufVxuZnVuY3Rpb24gZW5jb2RlTnVtYmVyQXNVSW50NjRCaWdJbnQodmFsdWUpIHtcbiAgICBjb25zdCByYXdWYWx1ZUJpdHMgPSBnZXRSYXdCaXRzQmlnSW50KHZhbHVlKTtcbiAgICBjb25zdCBtYXNrID0gQmlnSW50KFwiMHg4MDAwMDAwMDAwMDAwMDAwXCIpO1xuICAgIHJldHVybiBtYXNrID4gcmF3VmFsdWVCaXRzID8gcmF3VmFsdWVCaXRzIF4gbWFzayA6IH5yYXdWYWx1ZUJpdHMgKyBCaWdJbnQoMSk7XG59XG5mdW5jdGlvbiBnZXRSYXdCaXRzQmlnSW50KHZhbHVlKSB7XG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKDgpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcbiAgICB2aWV3LnNldEZsb2F0NjQoMCwgdmFsdWUpO1xuICAgIC8vIENvbnZlcnQgdGhlIHVuZGVybHlpbmcgYnl0ZXMgdG8gYSBoZXggc3RyaW5nLlxuICAgIHJldHVybiBCaWdJbnQoXCIweFwiICsgYnVmMmhleChuZXcgVWludDhBcnJheShidWZmZXIpKSk7XG59XG5mdW5jdGlvbiBidWYyaGV4KGFycikge1xuICAgIHJldHVybiBBcnJheS5mcm9tKGFycilcbiAgICAgICAgLm1hcCgoeCkgPT4geC50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpKVxuICAgICAgICAuam9pbihcIlwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkb3VibGVUb0J5dGVBcnJheUJpZ0ludChkb3VibGUpIHtcbiAgICBjb25zdCBvdXRwdXQgPSBuZXcgVWludDhBcnJheSg4KTtcbiAgICBjb25zdCBsbmcgPSBnZXRSYXdCaXRzQmlnSW50KGRvdWJsZSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4OyBpKyspIHtcbiAgICAgICAgb3V0cHV0W2ldID0gTnVtYmVyKChsbmcgPj4gQmlnSW50KGkgKiA4KSkgJiBCaWdJbnQoMHhmZikpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bnVtYmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/number.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BytePrefix: () => (/* binding */ BytePrefix)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst BytePrefix = {\n    Undefined: \"00\",\n    Null: \"01\",\n    False: \"02\",\n    True: \"03\",\n    MinNumber: \"04\",\n    Number: \"05\",\n    MaxNumber: \"06\",\n    MinString: \"07\",\n    String: \"08\",\n    MaxString: \"09\",\n    Int64: \"0a\",\n    Int32: \"0b\",\n    Int16: \"0c\",\n    Int8: \"0d\",\n    Uint64: \"0e\",\n    Uint32: \"0f\",\n    Uint16: \"10\",\n    Uint8: \"11\",\n    Binary: \"12\",\n    Guid: \"13\",\n    Float: \"14\",\n    Infinity: \"FF\",\n};\n//# sourceMappingURL=prefix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2VuY29kaW5nL3ByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2VuY29kaW5nL3ByZWZpeC5qcz81MzNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IGNvbnN0IEJ5dGVQcmVmaXggPSB7XG4gICAgVW5kZWZpbmVkOiBcIjAwXCIsXG4gICAgTnVsbDogXCIwMVwiLFxuICAgIEZhbHNlOiBcIjAyXCIsXG4gICAgVHJ1ZTogXCIwM1wiLFxuICAgIE1pbk51bWJlcjogXCIwNFwiLFxuICAgIE51bWJlcjogXCIwNVwiLFxuICAgIE1heE51bWJlcjogXCIwNlwiLFxuICAgIE1pblN0cmluZzogXCIwN1wiLFxuICAgIFN0cmluZzogXCIwOFwiLFxuICAgIE1heFN0cmluZzogXCIwOVwiLFxuICAgIEludDY0OiBcIjBhXCIsXG4gICAgSW50MzI6IFwiMGJcIixcbiAgICBJbnQxNjogXCIwY1wiLFxuICAgIEludDg6IFwiMGRcIixcbiAgICBVaW50NjQ6IFwiMGVcIixcbiAgICBVaW50MzI6IFwiMGZcIixcbiAgICBVaW50MTY6IFwiMTBcIixcbiAgICBVaW50ODogXCIxMVwiLFxuICAgIEJpbmFyeTogXCIxMlwiLFxuICAgIEd1aWQ6IFwiMTNcIixcbiAgICBGbG9hdDogXCIxNFwiLFxuICAgIEluZmluaXR5OiBcIkZGXCIsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/string.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/string.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   writeStringForBinaryEncoding: () => (/* binding */ writeStringForBinaryEncoding)\n/* harmony export */ });\n/* harmony import */ var _prefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefix.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js\");\n/* harmony import */ var _uint8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../uint8.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nfunction writeStringForBinaryEncoding(payload) {\n    // Convert the BytePrefix.String hex into a Uint8Array.\n    const outputStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_1__.hexStringToUint8Array)(_prefix_js__WEBPACK_IMPORTED_MODULE_0__.BytePrefix.String);\n    const MAX_STRING_BYTES_TO_APPEND = 100;\n    // Use TextEncoder to get a UTF-8 byte array from the payload.\n    const byteArray = new TextEncoder().encode(payload);\n    const isShortString = payload.length <= MAX_STRING_BYTES_TO_APPEND;\n    let finalStream = outputStream;\n    for (let index = 0; index < (isShortString ? byteArray.length : MAX_STRING_BYTES_TO_APPEND + 1); index++) {\n        let charByte = byteArray[index];\n        if (charByte < 0xff) {\n            charByte++;\n        }\n        // Convert the byte value to a 2-digit hex string.\n        const hexRep = charByte.toString(16).padStart(2, \"0\");\n        finalStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_1__.concatUint8Arrays)([finalStream, (0,_uint8_js__WEBPACK_IMPORTED_MODULE_1__.hexStringToUint8Array)(hexRep)]);\n    }\n    if (isShortString) {\n        finalStream = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_1__.concatUint8Arrays)([finalStream, (0,_uint8_js__WEBPACK_IMPORTED_MODULE_1__.hexStringToUint8Array)(_prefix_js__WEBPACK_IMPORTED_MODULE_0__.BytePrefix.Undefined)]);\n    }\n    return finalStream;\n}\n//# sourceMappingURL=string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2VuY29kaW5nL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ3lDO0FBQ2lDO0FBQ25FO0FBQ1A7QUFDQSx5QkFBeUIsZ0VBQXFCLENBQUMsa0RBQVU7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2RUFBNkU7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFpQixlQUFlLGdFQUFxQjtBQUMzRTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFpQixlQUFlLGdFQUFxQixDQUFDLGtEQUFVO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2VuY29kaW5nL3N0cmluZy5qcz85NjVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgQnl0ZVByZWZpeCB9IGZyb20gXCIuL3ByZWZpeC5qc1wiO1xuaW1wb3J0IHsgaGV4U3RyaW5nVG9VaW50OEFycmF5LCBjb25jYXRVaW50OEFycmF5cyB9IGZyb20gXCIuLi8uLi91aW50OC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlU3RyaW5nRm9yQmluYXJ5RW5jb2RpbmcocGF5bG9hZCkge1xuICAgIC8vIENvbnZlcnQgdGhlIEJ5dGVQcmVmaXguU3RyaW5nIGhleCBpbnRvIGEgVWludDhBcnJheS5cbiAgICBjb25zdCBvdXRwdXRTdHJlYW0gPSBoZXhTdHJpbmdUb1VpbnQ4QXJyYXkoQnl0ZVByZWZpeC5TdHJpbmcpO1xuICAgIGNvbnN0IE1BWF9TVFJJTkdfQllURVNfVE9fQVBQRU5EID0gMTAwO1xuICAgIC8vIFVzZSBUZXh0RW5jb2RlciB0byBnZXQgYSBVVEYtOCBieXRlIGFycmF5IGZyb20gdGhlIHBheWxvYWQuXG4gICAgY29uc3QgYnl0ZUFycmF5ID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHBheWxvYWQpO1xuICAgIGNvbnN0IGlzU2hvcnRTdHJpbmcgPSBwYXlsb2FkLmxlbmd0aCA8PSBNQVhfU1RSSU5HX0JZVEVTX1RPX0FQUEVORDtcbiAgICBsZXQgZmluYWxTdHJlYW0gPSBvdXRwdXRTdHJlYW07XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IChpc1Nob3J0U3RyaW5nID8gYnl0ZUFycmF5Lmxlbmd0aCA6IE1BWF9TVFJJTkdfQllURVNfVE9fQVBQRU5EICsgMSk7IGluZGV4KyspIHtcbiAgICAgICAgbGV0IGNoYXJCeXRlID0gYnl0ZUFycmF5W2luZGV4XTtcbiAgICAgICAgaWYgKGNoYXJCeXRlIDwgMHhmZikge1xuICAgICAgICAgICAgY2hhckJ5dGUrKztcbiAgICAgICAgfVxuICAgICAgICAvLyBDb252ZXJ0IHRoZSBieXRlIHZhbHVlIHRvIGEgMi1kaWdpdCBoZXggc3RyaW5nLlxuICAgICAgICBjb25zdCBoZXhSZXAgPSBjaGFyQnl0ZS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpO1xuICAgICAgICBmaW5hbFN0cmVhbSA9IGNvbmNhdFVpbnQ4QXJyYXlzKFtmaW5hbFN0cmVhbSwgaGV4U3RyaW5nVG9VaW50OEFycmF5KGhleFJlcCldKTtcbiAgICB9XG4gICAgaWYgKGlzU2hvcnRTdHJpbmcpIHtcbiAgICAgICAgZmluYWxTdHJlYW0gPSBjb25jYXRVaW50OEFycmF5cyhbZmluYWxTdHJlYW0sIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4LlVuZGVmaW5lZCldKTtcbiAgICB9XG4gICAgcmV0dXJuIGZpbmFsU3RyZWFtO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/hash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/hash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binarySearchOnPartitionKeyRanges: () => (/* binding */ binarySearchOnPartitionKeyRanges),\n/* harmony export */   hashPartitionKey: () => (/* binding */ hashPartitionKey)\n/* harmony export */ });\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n/* harmony import */ var _batch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../batch.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/batch.js\");\n/* harmony import */ var _multiHash_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multiHash.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/multiHash.js\");\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v1.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v1.js\");\n/* harmony import */ var _v2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./v2.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v2.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n/**\n * Generate hash of a PartitonKey based on it PartitionKeyDefinition.\n * @param partitionKey - to be hashed.\n * @param partitionDefinition - container's partitionKey definition\n * @returns\n */\nfunction hashPartitionKey(partitionKey, partitionDefinition) {\n    const kind = partitionDefinition?.kind || _documents_index_js__WEBPACK_IMPORTED_MODULE_0__.PartitionKeyKind.Hash; // Default value.\n    const isV2 = partitionDefinition &&\n        partitionDefinition.version &&\n        partitionDefinition.version === _documents_index_js__WEBPACK_IMPORTED_MODULE_0__.PartitionKeyDefinitionVersion.V2;\n    switch (kind) {\n        case _documents_index_js__WEBPACK_IMPORTED_MODULE_0__.PartitionKeyKind.Hash:\n            return isV2 ? (0,_v2_js__WEBPACK_IMPORTED_MODULE_4__.hashV2PartitionKey)(partitionKey) : (0,_v1_js__WEBPACK_IMPORTED_MODULE_3__.hashV1PartitionKey)(partitionKey);\n        case _documents_index_js__WEBPACK_IMPORTED_MODULE_0__.PartitionKeyKind.MultiHash:\n            return (0,_multiHash_js__WEBPACK_IMPORTED_MODULE_2__.hashMultiHashPartitionKey)(partitionKey);\n    }\n}\nfunction binarySearchOnPartitionKeyRanges(partitionKeyRanges, hashedPartitionKey) {\n    let low = 0;\n    let high = partitionKeyRanges.length - 1;\n    while (low <= high) {\n        const mid = Math.floor((low + high) / 2);\n        const range = partitionKeyRanges[mid];\n        if ((0,_batch_js__WEBPACK_IMPORTED_MODULE_1__.isKeyInRange)(range.minInclusive, range.maxExclusive, hashedPartitionKey)) {\n            return range.id;\n        }\n        else if (hashedPartitionKey.localeCompare(range.minInclusive) < 0) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2hhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDMkY7QUFDaEQ7QUFDZ0I7QUFDZDtBQUNBO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsOENBQThDLGlFQUFnQixPQUFPO0FBQ3JFO0FBQ0E7QUFDQSx3Q0FBd0MsOEVBQTZCO0FBQ3JFO0FBQ0EsYUFBYSxpRUFBZ0I7QUFDN0IsMEJBQTBCLDBEQUFrQixpQkFBaUIsMERBQWtCO0FBQy9FLGFBQWEsaUVBQWdCO0FBQzdCLG1CQUFtQix3RUFBeUI7QUFDNUM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksdURBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2hhc2guanM/NGE2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IFBhcnRpdGlvbktleURlZmluaXRpb25WZXJzaW9uLCBQYXJ0aXRpb25LZXlLaW5kIH0gZnJvbSBcIi4uLy4uL2RvY3VtZW50cy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgaXNLZXlJblJhbmdlIH0gZnJvbSBcIi4uL2JhdGNoLmpzXCI7XG5pbXBvcnQgeyBoYXNoTXVsdGlIYXNoUGFydGl0aW9uS2V5IH0gZnJvbSBcIi4vbXVsdGlIYXNoLmpzXCI7XG5pbXBvcnQgeyBoYXNoVjFQYXJ0aXRpb25LZXkgfSBmcm9tIFwiLi92MS5qc1wiO1xuaW1wb3J0IHsgaGFzaFYyUGFydGl0aW9uS2V5IH0gZnJvbSBcIi4vdjIuanNcIjtcbi8qKlxuICogR2VuZXJhdGUgaGFzaCBvZiBhIFBhcnRpdG9uS2V5IGJhc2VkIG9uIGl0IFBhcnRpdGlvbktleURlZmluaXRpb24uXG4gKiBAcGFyYW0gcGFydGl0aW9uS2V5IC0gdG8gYmUgaGFzaGVkLlxuICogQHBhcmFtIHBhcnRpdGlvbkRlZmluaXRpb24gLSBjb250YWluZXIncyBwYXJ0aXRpb25LZXkgZGVmaW5pdGlvblxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc2hQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5LCBwYXJ0aXRpb25EZWZpbml0aW9uKSB7XG4gICAgY29uc3Qga2luZCA9IHBhcnRpdGlvbkRlZmluaXRpb24/LmtpbmQgfHwgUGFydGl0aW9uS2V5S2luZC5IYXNoOyAvLyBEZWZhdWx0IHZhbHVlLlxuICAgIGNvbnN0IGlzVjIgPSBwYXJ0aXRpb25EZWZpbml0aW9uICYmXG4gICAgICAgIHBhcnRpdGlvbkRlZmluaXRpb24udmVyc2lvbiAmJlxuICAgICAgICBwYXJ0aXRpb25EZWZpbml0aW9uLnZlcnNpb24gPT09IFBhcnRpdGlvbktleURlZmluaXRpb25WZXJzaW9uLlYyO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgICBjYXNlIFBhcnRpdGlvbktleUtpbmQuSGFzaDpcbiAgICAgICAgICAgIHJldHVybiBpc1YyID8gaGFzaFYyUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleSkgOiBoYXNoVjFQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5KTtcbiAgICAgICAgY2FzZSBQYXJ0aXRpb25LZXlLaW5kLk11bHRpSGFzaDpcbiAgICAgICAgICAgIHJldHVybiBoYXNoTXVsdGlIYXNoUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleSk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGJpbmFyeVNlYXJjaE9uUGFydGl0aW9uS2V5UmFuZ2VzKHBhcnRpdGlvbktleVJhbmdlcywgaGFzaGVkUGFydGl0aW9uS2V5KSB7XG4gICAgbGV0IGxvdyA9IDA7XG4gICAgbGV0IGhpZ2ggPSBwYXJ0aXRpb25LZXlSYW5nZXMubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAobG93IDw9IGhpZ2gpIHtcbiAgICAgICAgY29uc3QgbWlkID0gTWF0aC5mbG9vcigobG93ICsgaGlnaCkgLyAyKTtcbiAgICAgICAgY29uc3QgcmFuZ2UgPSBwYXJ0aXRpb25LZXlSYW5nZXNbbWlkXTtcbiAgICAgICAgaWYgKGlzS2V5SW5SYW5nZShyYW5nZS5taW5JbmNsdXNpdmUsIHJhbmdlLm1heEV4Y2x1c2l2ZSwgaGFzaGVkUGFydGl0aW9uS2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHJhbmdlLmlkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGhhc2hlZFBhcnRpdGlvbktleS5sb2NhbGVDb21wYXJlKHJhbmdlLm1pbkluY2x1c2l2ZSkgPCAwKSB7XG4gICAgICAgICAgICBoaWdoID0gbWlkIC0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxvdyA9IG1pZCArIDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/hash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/multiHash.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/multiHash.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashMultiHashPartitionKey: () => (/* binding */ hashMultiHashPartitionKey)\n/* harmony export */ });\n/* harmony import */ var _v2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v2.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v2.js\");\n\n/**\n * Generate Hash for a `Multi Hash` type partition.\n * @param partitionKey - to be hashed.\n * @returns\n */\nfunction hashMultiHashPartitionKey(partitionKey) {\n    return partitionKey.map((keys) => (0,_v2_js__WEBPACK_IMPORTED_MODULE_0__.hashV2PartitionKey)([keys])).join(\"\");\n}\n//# sourceMappingURL=multiHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL211bHRpSGFzaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxzQ0FBc0MsMERBQWtCO0FBQ3hEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL2hhc2hpbmcvbXVsdGlIYXNoLmpzPzZjZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaFYyUGFydGl0aW9uS2V5IH0gZnJvbSBcIi4vdjIuanNcIjtcbi8qKlxuICogR2VuZXJhdGUgSGFzaCBmb3IgYSBgTXVsdGkgSGFzaGAgdHlwZSBwYXJ0aXRpb24uXG4gKiBAcGFyYW0gcGFydGl0aW9uS2V5IC0gdG8gYmUgaGFzaGVkLlxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc2hNdWx0aUhhc2hQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5KSB7XG4gICAgcmV0dXJuIHBhcnRpdGlvbktleS5tYXAoKGtleXMpID0+IGhhc2hWMlBhcnRpdGlvbktleShba2V5c10pKS5qb2luKFwiXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGlIYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/multiHash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/murmurHash.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/murmurHash.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   reverse: () => (/* binding */ reverse)\n/* harmony export */ });\n/* harmony import */ var _uint8_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../uint8.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js\");\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n// PRIVATE FUNCTIONS\n// -----------------\n\nfunction _x86Multiply(m, n) {\n    //\n    // Given two 32bit ints, returns the two multiplied together as a\n    // 32bit int.\n    //\n    return (m & 0xffff) * n + ((((m >>> 16) * n) & 0xffff) << 16);\n}\nfunction _x86Rotl(m, n) {\n    //\n    // Given a 32bit int and an int representing a number of bit positions,\n    // returns the 32bit int rotated left by that number of positions.\n    //\n    return (m << n) | (m >>> (32 - n));\n}\nfunction _x86Fmix(h) {\n    //\n    // Given a block, returns murmurHash3's final x86 mix of that block.\n    //\n    h ^= h >>> 16;\n    h = _x86Multiply(h, 0x85ebca6b);\n    h ^= h >>> 13;\n    h = _x86Multiply(h, 0xc2b2ae35);\n    h ^= h >>> 16;\n    return h;\n}\nfunction _x64Add(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // added together as a 64bit int (as an array of two 32bit ints).\n    //\n    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n    const o = [0, 0, 0, 0];\n    o[3] += m[3] + n[3];\n    o[2] += o[3] >>> 16;\n    o[3] &= 0xffff;\n    o[2] += m[2] + n[2];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n    o[1] += m[1] + n[1];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[0] += m[0] + n[0];\n    o[0] &= 0xffff;\n    return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n}\nfunction _x64Multiply(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // multiplied together as a 64bit int (as an array of two 32bit ints).\n    //\n    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n    const o = [0, 0, 0, 0];\n    o[3] += m[3] * n[3];\n    o[2] += o[3] >>> 16;\n    o[3] &= 0xffff;\n    o[2] += m[2] * n[3];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n    o[2] += m[3] * n[2];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n    o[1] += m[1] * n[3];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[1] += m[2] * n[2];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[1] += m[3] * n[1];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n    o[0] += m[0] * n[3] + m[1] * n[2] + m[2] * n[1] + m[3] * n[0];\n    o[0] &= 0xffff;\n    return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n}\nfunction _x64Rotl(m, n) {\n    //\n    // Given a 64bit int (as an array of two 32bit ints) and an int\n    // representing a number of bit positions, returns the 64bit int (as an\n    // array of two 32bit ints) rotated left by that number of positions.\n    //\n    n %= 64;\n    if (n === 32) {\n        return [m[1], m[0]];\n    }\n    else if (n < 32) {\n        return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n    }\n    else {\n        n -= 32;\n        return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n    }\n}\nfunction _x64LeftShift(m, n) {\n    //\n    // Given a 64bit int (as an array of two 32bit ints) and an int\n    // representing a number of bit positions, returns the 64bit int (as an\n    // array of two 32bit ints) shifted left by that number of positions.\n    //\n    n %= 64;\n    if (n === 0) {\n        return m;\n    }\n    else if (n < 32) {\n        return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n    }\n    else {\n        return [m[1] << (n - 32), 0];\n    }\n}\nfunction _x64Xor(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // xored together as a 64bit int (as an array of two 32bit ints).\n    //\n    return [m[0] ^ n[0], m[1] ^ n[1]];\n}\nfunction _x64Fmix(h) {\n    //\n    // Given a block, returns murmurHash3's final x64 mix of that block.\n    // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n    // only place where we need to right shift 64bit ints.)\n    //\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    return h;\n}\n// PUBLIC FUNCTIONS\n// ----------------\nfunction x86Hash32(bytes, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 32 bit hash\n    // using the x86 flavor of MurmurHash3, as an unsigned int.\n    //\n    seed = seed || 0;\n    const remainder = bytes.length % 4;\n    const blocks = bytes.length - remainder;\n    let h1 = seed;\n    let k1 = 0;\n    const c1 = 0xcc9e2d51;\n    const c2 = 0x1b873593;\n    let j = 0;\n    for (let i = 0; i < blocks; i = i + 4) {\n        k1 = bytes[i] | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n        k1 = _x86Multiply(k1, c1);\n        k1 = _x86Rotl(k1, 15);\n        k1 = _x86Multiply(k1, c2);\n        h1 ^= k1;\n        h1 = _x86Rotl(h1, 13);\n        h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        j = i + 4;\n    }\n    k1 = 0;\n    switch (remainder) {\n        case 3:\n            k1 ^= bytes[j + 2] << 16;\n        case 2:\n            k1 ^= bytes[j + 1] << 8;\n        case 1:\n            k1 ^= bytes[j];\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n    }\n    h1 ^= bytes.length;\n    h1 = _x86Fmix(h1);\n    return h1 >>> 0;\n}\nfunction x86Hash128(bytes, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 128 bit\n    // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n    //\n    seed = seed || 0;\n    const remainder = bytes.length % 16;\n    const blocks = bytes.length - remainder;\n    let h1 = seed;\n    let h2 = seed;\n    let h3 = seed;\n    let h4 = seed;\n    let k1 = 0;\n    let k2 = 0;\n    let k3 = 0;\n    let k4 = 0;\n    const c1 = 0x239b961b;\n    const c2 = 0xab0e9789;\n    const c3 = 0x38b34ae5;\n    const c4 = 0xa1e38b93;\n    let j = 0;\n    for (let i = 0; i < blocks; i = i + 16) {\n        k1 = bytes[i] | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n        k2 = bytes[i + 4] | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n        k3 = bytes[i + 8] | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n        k4 = bytes[i + 12] | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n        k1 = _x86Multiply(k1, c1);\n        k1 = _x86Rotl(k1, 15);\n        k1 = _x86Multiply(k1, c2);\n        h1 ^= k1;\n        h1 = _x86Rotl(h1, 19);\n        h1 += h2;\n        h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n        k2 = _x86Multiply(k2, c2);\n        k2 = _x86Rotl(k2, 16);\n        k2 = _x86Multiply(k2, c3);\n        h2 ^= k2;\n        h2 = _x86Rotl(h2, 17);\n        h2 += h3;\n        h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n        k3 = _x86Multiply(k3, c3);\n        k3 = _x86Rotl(k3, 17);\n        k3 = _x86Multiply(k3, c4);\n        h3 ^= k3;\n        h3 = _x86Rotl(h3, 15);\n        h3 += h4;\n        h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n        k4 = _x86Multiply(k4, c4);\n        k4 = _x86Rotl(k4, 18);\n        k4 = _x86Multiply(k4, c1);\n        h4 ^= k4;\n        h4 = _x86Rotl(h4, 13);\n        h4 += h1;\n        h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        j = i + 16;\n    }\n    k1 = 0;\n    k2 = 0;\n    k3 = 0;\n    k4 = 0;\n    switch (remainder) {\n        case 15:\n            k4 ^= bytes[j + 14] << 16;\n        case 14:\n            k4 ^= bytes[j + 13] << 8;\n        case 13:\n            k4 ^= bytes[j + 12];\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n        case 12:\n            k3 ^= bytes[j + 11] << 24;\n        case 11:\n            k3 ^= bytes[j + 10] << 16;\n        case 10:\n            k3 ^= bytes[j + 9] << 8;\n        case 9:\n            k3 ^= bytes[j + 8];\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n        case 8:\n            k2 ^= bytes[j + 7] << 24;\n        case 7:\n            k2 ^= bytes[j + 6] << 16;\n        case 6:\n            k2 ^= bytes[j + 5] << 8;\n        case 5:\n            k2 ^= bytes[j + 4];\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n        case 4:\n            k1 ^= bytes[j + 3] << 24;\n        case 3:\n            k1 ^= bytes[j + 2] << 16;\n        case 2:\n            k1 ^= bytes[j + 1] << 8;\n        case 1:\n            k1 ^= bytes[j];\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n    }\n    h1 ^= bytes.length;\n    h2 ^= bytes.length;\n    h3 ^= bytes.length;\n    h4 ^= bytes.length;\n    h1 += h2;\n    h1 += h3;\n    h1 += h4;\n    h2 += h1;\n    h3 += h1;\n    h4 += h1;\n    h1 = _x86Fmix(h1);\n    h2 = _x86Fmix(h2);\n    h3 = _x86Fmix(h3);\n    h4 = _x86Fmix(h4);\n    h1 += h2;\n    h1 += h3;\n    h1 += h4;\n    h2 += h1;\n    h3 += h1;\n    h4 += h1;\n    return ((\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) +\n        (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) +\n        (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) +\n        (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8));\n}\nfunction x64Hash128(bytes, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 128 bit\n    // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n    //\n    seed = seed || 0;\n    const remainder = bytes.length % 16;\n    const blocks = bytes.length - remainder;\n    let h1 = [0, seed];\n    let h2 = [0, seed];\n    let k1 = [0, 0];\n    let k2 = [0, 0];\n    const c1 = [0x87c37b91, 0x114253d5];\n    const c2 = [0x4cf5ad43, 0x2745937f];\n    let j = 0;\n    for (let i = 0; i < blocks; i = i + 16) {\n        k1 = [\n            bytes[i + 4] | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24),\n            bytes[i] | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24),\n        ];\n        k2 = [\n            bytes[i + 12] | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24),\n            bytes[i + 8] | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24),\n        ];\n        k1 = _x64Multiply(k1, c1);\n        k1 = _x64Rotl(k1, 31);\n        k1 = _x64Multiply(k1, c2);\n        h1 = _x64Xor(h1, k1);\n        h1 = _x64Rotl(h1, 27);\n        h1 = _x64Add(h1, h2);\n        h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n        k2 = _x64Multiply(k2, c2);\n        k2 = _x64Rotl(k2, 33);\n        k2 = _x64Multiply(k2, c1);\n        h2 = _x64Xor(h2, k2);\n        h2 = _x64Rotl(h2, 31);\n        h2 = _x64Add(h2, h1);\n        h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        j = i + 16;\n    }\n    k1 = [0, 0];\n    k2 = [0, 0];\n    switch (remainder) {\n        case 15:\n            k2 = _x64Xor(k2, _x64LeftShift([0, bytes[j + 14]], 48));\n        case 14:\n            k2 = _x64Xor(k2, _x64LeftShift([0, bytes[j + 13]], 40));\n        case 13:\n            k2 = _x64Xor(k2, _x64LeftShift([0, bytes[j + 12]], 32));\n        case 12:\n            k2 = _x64Xor(k2, _x64LeftShift([0, bytes[j + 11]], 24));\n        case 11:\n            k2 = _x64Xor(k2, _x64LeftShift([0, bytes[j + 10]], 16));\n        case 10:\n            k2 = _x64Xor(k2, _x64LeftShift([0, bytes[j + 9]], 8));\n        case 9:\n            k2 = _x64Xor(k2, [0, bytes[j + 8]]);\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n        case 8:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 7]], 56));\n        case 7:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 6]], 48));\n        case 6:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 5]], 40));\n        case 5:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 4]], 32));\n        case 4:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 3]], 24));\n        case 3:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 2]], 16));\n        case 2:\n            k1 = _x64Xor(k1, _x64LeftShift([0, bytes[j + 1]], 8));\n        case 1:\n            k1 = _x64Xor(k1, [0, bytes[j]]);\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n    }\n    h1 = _x64Xor(h1, [0, bytes.length]);\n    h2 = _x64Xor(h2, [0, bytes.length]);\n    h1 = _x64Add(h1, h2);\n    h2 = _x64Add(h2, h1);\n    h1 = _x64Fmix(h1);\n    h2 = _x64Fmix(h2);\n    h1 = _x64Add(h1, h2);\n    h2 = _x64Add(h2, h1);\n    // Here we reverse h1 and h2 in Cosmos\n    // This is an implementation detail and not part of the public spec\n    // Convert h1 to hex string and then to Uint8Array.\n    const h1Hex = (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) +\n        (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8);\n    const h1Buff = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.hexStringToUint8Array)(h1Hex);\n    const h1Reversed = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToHex)(reverse(h1Buff));\n    const h2Hex = (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) +\n        (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    const h2Buff = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.hexStringToUint8Array)(h2Hex);\n    const h2Reversed = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToHex)(reverse(h2Buff));\n    return h1Reversed + h2Reversed;\n}\nfunction reverse(buff) {\n    const uint8array = new Uint8Array(buff.length);\n    for (let i = 0, j = buff.length - 1; i <= j; ++i, --j) {\n        uint8array[i] = buff[j];\n        uint8array[j] = buff[i];\n    }\n    return uint8array;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    version: \"3.0.0\",\n    x86: {\n        hash32: x86Hash32,\n        hash128: x86Hash128,\n    },\n    x64: {\n        hash128: x64Hash128,\n    },\n    inputValidation: true,\n});\n//# sourceMappingURL=murmurHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/murmurHash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v1.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/v1.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashV1PartitionKey: () => (/* binding */ hashV1PartitionKey)\n/* harmony export */ });\n/* harmony import */ var _encoding_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encoding/number.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/number.js\");\n/* harmony import */ var _encoding_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoding/string.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/string.js\");\n/* harmony import */ var _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encoding/prefix.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js\");\n/* harmony import */ var _murmurHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./murmurHash.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/murmurHash.js\");\n/* harmony import */ var _uint8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../uint8.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\nconst MAX_STRING_CHARS = 100;\nfunction hashV1PartitionKey(partitionKey) {\n    const key = partitionKey[0];\n    const toHash = prefixKeyByType(key);\n    const hash = _murmurHash_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].x86.hash32(toHash);\n    const encodedJSBI = (0,_encoding_number_js__WEBPACK_IMPORTED_MODULE_0__.writeNumberForBinaryEncodingBigInt)(hash);\n    const encodedValue = encodeByType(key);\n    const finalHash = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToHex)((0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.concatUint8Arrays)([encodedJSBI, encodedValue])).toUpperCase();\n    return finalHash;\n}\nfunction prefixKeyByType(key) {\n    let bytes;\n    switch (typeof key) {\n        case \"string\": {\n            const truncated = key.substr(0, MAX_STRING_CHARS);\n            bytes = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.concatUint8Arrays)([\n                (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.String),\n                new TextEncoder().encode(truncated),\n                (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Undefined),\n            ]);\n            return bytes;\n        }\n        case \"number\": {\n            const numberBytes = (0,_encoding_number_js__WEBPACK_IMPORTED_MODULE_0__.doubleToByteArrayBigInt)(key);\n            bytes = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.concatUint8Arrays)([(0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Number), numberBytes]);\n            return bytes;\n        }\n        case \"boolean\": {\n            const prefix = key ? _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.True : _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.False;\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(prefix);\n        }\n        case \"object\": {\n            if (key === null) {\n                return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Null);\n            }\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Undefined);\n        }\n        case \"undefined\": {\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Undefined);\n        }\n        default:\n            throw new Error(`Unexpected type: ${typeof key}`);\n    }\n}\nfunction encodeByType(key) {\n    switch (typeof key) {\n        case \"string\": {\n            const truncated = key.substring(0, MAX_STRING_CHARS);\n            return (0,_encoding_string_js__WEBPACK_IMPORTED_MODULE_1__.writeStringForBinaryEncoding)(truncated);\n        }\n        case \"number\": {\n            return (0,_encoding_number_js__WEBPACK_IMPORTED_MODULE_0__.writeNumberForBinaryEncodingBigInt)(key);\n        }\n        case \"boolean\": {\n            const prefix = key ? _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.True : _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.False;\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(prefix);\n        }\n        case \"object\":\n            if (key === null) {\n                return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Null);\n            }\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Undefined);\n        case \"undefined\":\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_4__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_2__.BytePrefix.Undefined);\n        default:\n            throw new Error(`Unexpected type: ${typeof key}`);\n    }\n}\n//# sourceMappingURL=v1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL3YxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDbUc7QUFDL0I7QUFDbEI7QUFDVDtBQUMrQztBQUN4RjtBQUNPO0FBQ1A7QUFDQTtBQUNBLGlCQUFpQixzREFBVTtBQUMzQix3QkFBd0IsdUZBQWtDO0FBQzFEO0FBQ0Esc0JBQXNCLDBEQUFlLENBQUMsNERBQWlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDREQUFpQjtBQUNyQyxnQkFBZ0IsZ0VBQXFCLENBQUMsMkRBQVU7QUFDaEQ7QUFDQSxnQkFBZ0IsZ0VBQXFCLENBQUMsMkRBQVU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNEVBQXVCO0FBQ3ZELG9CQUFvQiw0REFBaUIsRUFBRSxnRUFBcUIsQ0FBQywyREFBVTtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsMkRBQVUsUUFBUSwyREFBVTtBQUM3RCxtQkFBbUIsZ0VBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnRUFBcUIsQ0FBQywyREFBVTtBQUN2RDtBQUNBLG1CQUFtQixnRUFBcUIsQ0FBQywyREFBVTtBQUNuRDtBQUNBO0FBQ0EsbUJBQW1CLGdFQUFxQixDQUFDLDJEQUFVO0FBQ25EO0FBQ0E7QUFDQSxnREFBZ0QsV0FBVztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUZBQTRCO0FBQy9DO0FBQ0E7QUFDQSxtQkFBbUIsdUZBQWtDO0FBQ3JEO0FBQ0E7QUFDQSxpQ0FBaUMsMkRBQVUsUUFBUSwyREFBVTtBQUM3RCxtQkFBbUIsZ0VBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnRUFBcUIsQ0FBQywyREFBVTtBQUN2RDtBQUNBLG1CQUFtQixnRUFBcUIsQ0FBQywyREFBVTtBQUNuRDtBQUNBLG1CQUFtQixnRUFBcUIsQ0FBQywyREFBVTtBQUNuRDtBQUNBLGdEQUFnRCxXQUFXO0FBQzNEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvaGFzaGluZy92MS5qcz8yODE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgZG91YmxlVG9CeXRlQXJyYXlCaWdJbnQsIHdyaXRlTnVtYmVyRm9yQmluYXJ5RW5jb2RpbmdCaWdJbnQgfSBmcm9tIFwiLi9lbmNvZGluZy9udW1iZXIuanNcIjtcbmltcG9ydCB7IHdyaXRlU3RyaW5nRm9yQmluYXJ5RW5jb2RpbmcgfSBmcm9tIFwiLi9lbmNvZGluZy9zdHJpbmcuanNcIjtcbmltcG9ydCB7IEJ5dGVQcmVmaXggfSBmcm9tIFwiLi9lbmNvZGluZy9wcmVmaXguanNcIjtcbmltcG9ydCBNdXJtdXJIYXNoIGZyb20gXCIuL211cm11ckhhc2guanNcIjtcbmltcG9ydCB7IGNvbmNhdFVpbnQ4QXJyYXlzLCBoZXhTdHJpbmdUb1VpbnQ4QXJyYXksIHVpbnQ4QXJyYXlUb0hleCB9IGZyb20gXCIuLi91aW50OC5qc1wiO1xuY29uc3QgTUFYX1NUUklOR19DSEFSUyA9IDEwMDtcbmV4cG9ydCBmdW5jdGlvbiBoYXNoVjFQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5KSB7XG4gICAgY29uc3Qga2V5ID0gcGFydGl0aW9uS2V5WzBdO1xuICAgIGNvbnN0IHRvSGFzaCA9IHByZWZpeEtleUJ5VHlwZShrZXkpO1xuICAgIGNvbnN0IGhhc2ggPSBNdXJtdXJIYXNoLng4Ni5oYXNoMzIodG9IYXNoKTtcbiAgICBjb25zdCBlbmNvZGVkSlNCSSA9IHdyaXRlTnVtYmVyRm9yQmluYXJ5RW5jb2RpbmdCaWdJbnQoaGFzaCk7XG4gICAgY29uc3QgZW5jb2RlZFZhbHVlID0gZW5jb2RlQnlUeXBlKGtleSk7XG4gICAgY29uc3QgZmluYWxIYXNoID0gdWludDhBcnJheVRvSGV4KGNvbmNhdFVpbnQ4QXJyYXlzKFtlbmNvZGVkSlNCSSwgZW5jb2RlZFZhbHVlXSkpLnRvVXBwZXJDYXNlKCk7XG4gICAgcmV0dXJuIGZpbmFsSGFzaDtcbn1cbmZ1bmN0aW9uIHByZWZpeEtleUJ5VHlwZShrZXkpIHtcbiAgICBsZXQgYnl0ZXM7XG4gICAgc3dpdGNoICh0eXBlb2Yga2V5KSB7XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjoge1xuICAgICAgICAgICAgY29uc3QgdHJ1bmNhdGVkID0ga2V5LnN1YnN0cigwLCBNQVhfU1RSSU5HX0NIQVJTKTtcbiAgICAgICAgICAgIGJ5dGVzID0gY29uY2F0VWludDhBcnJheXMoW1xuICAgICAgICAgICAgICAgIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4LlN0cmluZyksXG4gICAgICAgICAgICAgICAgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHRydW5jYXRlZCksXG4gICAgICAgICAgICAgICAgaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguVW5kZWZpbmVkKSxcbiAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJudW1iZXJcIjoge1xuICAgICAgICAgICAgY29uc3QgbnVtYmVyQnl0ZXMgPSBkb3VibGVUb0J5dGVBcnJheUJpZ0ludChrZXkpO1xuICAgICAgICAgICAgYnl0ZXMgPSBjb25jYXRVaW50OEFycmF5cyhbaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguTnVtYmVyKSwgbnVtYmVyQnl0ZXNdKTtcbiAgICAgICAgICAgIHJldHVybiBieXRlcztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiYm9vbGVhblwiOiB7XG4gICAgICAgICAgICBjb25zdCBwcmVmaXggPSBrZXkgPyBCeXRlUHJlZml4LlRydWUgOiBCeXRlUHJlZml4LkZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIGhleFN0cmluZ1RvVWludDhBcnJheShwcmVmaXgpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJvYmplY3RcIjoge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBoZXhTdHJpbmdUb1VpbnQ4QXJyYXkoQnl0ZVByZWZpeC5OdWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBoZXhTdHJpbmdUb1VpbnQ4QXJyYXkoQnl0ZVByZWZpeC5VbmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJ1bmRlZmluZWRcIjoge1xuICAgICAgICAgICAgcmV0dXJuIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4LlVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCB0eXBlOiAke3R5cGVvZiBrZXl9YCk7XG4gICAgfVxufVxuZnVuY3Rpb24gZW5jb2RlQnlUeXBlKGtleSkge1xuICAgIHN3aXRjaCAodHlwZW9mIGtleSkge1xuICAgICAgICBjYXNlIFwic3RyaW5nXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHRydW5jYXRlZCA9IGtleS5zdWJzdHJpbmcoMCwgTUFYX1NUUklOR19DSEFSUyk7XG4gICAgICAgICAgICByZXR1cm4gd3JpdGVTdHJpbmdGb3JCaW5hcnlFbmNvZGluZyh0cnVuY2F0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJudW1iZXJcIjoge1xuICAgICAgICAgICAgcmV0dXJuIHdyaXRlTnVtYmVyRm9yQmluYXJ5RW5jb2RpbmdCaWdJbnQoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiYm9vbGVhblwiOiB7XG4gICAgICAgICAgICBjb25zdCBwcmVmaXggPSBrZXkgPyBCeXRlUHJlZml4LlRydWUgOiBCeXRlUHJlZml4LkZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIGhleFN0cmluZ1RvVWludDhBcnJheShwcmVmaXgpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJvYmplY3RcIjpcbiAgICAgICAgICAgIGlmIChrZXkgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguTnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguVW5kZWZpbmVkKTtcbiAgICAgICAgY2FzZSBcInVuZGVmaW5lZFwiOlxuICAgICAgICAgICAgcmV0dXJuIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4LlVuZGVmaW5lZCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdHlwZTogJHt0eXBlb2Yga2V5fWApO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXYxLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hashing/v2.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashV2PartitionKey: () => (/* binding */ hashV2PartitionKey),\n/* harmony export */   reverse: () => (/* binding */ reverse)\n/* harmony export */ });\n/* harmony import */ var _encoding_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encoding/number.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/number.js\");\n/* harmony import */ var _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoding/prefix.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/encoding/prefix.js\");\n/* harmony import */ var _murmurHash_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./murmurHash.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/murmurHash.js\");\n/* harmony import */ var _uint8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../uint8.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nfunction hashV2PartitionKey(partitionKey) {\n    // Create a single Uint8Array from the concatenated prefixes for each partition key value.\n    const toHash = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.concatUint8Arrays)(partitionKey.map(prefixKeyByType));\n    // Compute the 128-bit hash. This returns a hex string.\n    const hash = _murmurHash_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].x64.hash128(toHash);\n    // Convert the hex string hash to a Uint8Array and reverse it.\n    const reverseBuff = reverse((0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(hash));\n    // Mask the first byte as required.\n    reverseBuff[0] &= 0x3f;\n    // Convert the reversed buffer back to a hex string, uppercase it, and return.\n    return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayToHex)(reverseBuff).toUpperCase();\n}\nfunction prefixKeyByType(key) {\n    let bytes;\n    switch (typeof key) {\n        case \"string\": {\n            // For strings, concatenate:\n            // - The hex prefix for String\n            // - The UTF-8 bytes for the key (using Uint8Array.from should work for string iterables; alternatively use an encoder)\n            // - The hex prefix for Infinity\n            bytes = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.concatUint8Arrays)([\n                (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.String),\n                new TextEncoder().encode(key),\n                (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.Infinity),\n            ]);\n            return bytes;\n        }\n        case \"number\": {\n            const numberBytes = (0,_encoding_number_js__WEBPACK_IMPORTED_MODULE_0__.doubleToByteArrayBigInt)(key);\n            bytes = (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.concatUint8Arrays)([(0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.Number), numberBytes]);\n            return bytes;\n        }\n        case \"boolean\": {\n            const prefix = key ? _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.True : _encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.False;\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(prefix);\n        }\n        case \"object\": {\n            if (key === null) {\n                return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.Null);\n            }\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.Undefined);\n        }\n        case \"undefined\": {\n            return (0,_uint8_js__WEBPACK_IMPORTED_MODULE_3__.hexStringToUint8Array)(_encoding_prefix_js__WEBPACK_IMPORTED_MODULE_1__.BytePrefix.Undefined);\n        }\n        default:\n            throw new Error(`Unexpected type: ${typeof key}`);\n    }\n}\nfunction reverse(buff) {\n    // Replace Uint8Array.allocUnsafe(buff.length) with new Uint8Array(buff.length)\n    const uint8array = new Uint8Array(buff.length);\n    for (let i = 0, j = buff.length - 1; i <= j; ++i, --j) {\n        uint8array[i] = buff[j];\n        uint8array[j] = buff[i];\n    }\n    return uint8array;\n}\n//# sourceMappingURL=v2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL3YyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDK0Q7QUFDYjtBQUNUO0FBQytDO0FBQ2pGO0FBQ1A7QUFDQSxtQkFBbUIsNERBQWlCO0FBQ3BDO0FBQ0EsaUJBQWlCLHNEQUFVO0FBQzNCO0FBQ0EsZ0NBQWdDLGdFQUFxQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLDBEQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0dBQXNHO0FBQ3RHO0FBQ0Esb0JBQW9CLDREQUFpQjtBQUNyQyxnQkFBZ0IsZ0VBQXFCLENBQUMsMkRBQVU7QUFDaEQ7QUFDQSxnQkFBZ0IsZ0VBQXFCLENBQUMsMkRBQVU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNEVBQXVCO0FBQ3ZELG9CQUFvQiw0REFBaUIsRUFBRSxnRUFBcUIsQ0FBQywyREFBVTtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsMkRBQVUsUUFBUSwyREFBVTtBQUM3RCxtQkFBbUIsZ0VBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnRUFBcUIsQ0FBQywyREFBVTtBQUN2RDtBQUNBLG1CQUFtQixnRUFBcUIsQ0FBQywyREFBVTtBQUNuRDtBQUNBO0FBQ0EsbUJBQW1CLGdFQUFxQixDQUFDLDJEQUFVO0FBQ25EO0FBQ0E7QUFDQSxnREFBZ0QsV0FBVztBQUMzRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EseUNBQXlDLFFBQVE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oYXNoaW5nL3YyLmpzPzlhOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBkb3VibGVUb0J5dGVBcnJheUJpZ0ludCB9IGZyb20gXCIuL2VuY29kaW5nL251bWJlci5qc1wiO1xuaW1wb3J0IHsgQnl0ZVByZWZpeCB9IGZyb20gXCIuL2VuY29kaW5nL3ByZWZpeC5qc1wiO1xuaW1wb3J0IE11cm11ckhhc2ggZnJvbSBcIi4vbXVybXVySGFzaC5qc1wiO1xuaW1wb3J0IHsgY29uY2F0VWludDhBcnJheXMsIGhleFN0cmluZ1RvVWludDhBcnJheSwgdWludDhBcnJheVRvSGV4IH0gZnJvbSBcIi4uL3VpbnQ4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gaGFzaFYyUGFydGl0aW9uS2V5KHBhcnRpdGlvbktleSkge1xuICAgIC8vIENyZWF0ZSBhIHNpbmdsZSBVaW50OEFycmF5IGZyb20gdGhlIGNvbmNhdGVuYXRlZCBwcmVmaXhlcyBmb3IgZWFjaCBwYXJ0aXRpb24ga2V5IHZhbHVlLlxuICAgIGNvbnN0IHRvSGFzaCA9IGNvbmNhdFVpbnQ4QXJyYXlzKHBhcnRpdGlvbktleS5tYXAocHJlZml4S2V5QnlUeXBlKSk7XG4gICAgLy8gQ29tcHV0ZSB0aGUgMTI4LWJpdCBoYXNoLiBUaGlzIHJldHVybnMgYSBoZXggc3RyaW5nLlxuICAgIGNvbnN0IGhhc2ggPSBNdXJtdXJIYXNoLng2NC5oYXNoMTI4KHRvSGFzaCk7XG4gICAgLy8gQ29udmVydCB0aGUgaGV4IHN0cmluZyBoYXNoIHRvIGEgVWludDhBcnJheSBhbmQgcmV2ZXJzZSBpdC5cbiAgICBjb25zdCByZXZlcnNlQnVmZiA9IHJldmVyc2UoaGV4U3RyaW5nVG9VaW50OEFycmF5KGhhc2gpKTtcbiAgICAvLyBNYXNrIHRoZSBmaXJzdCBieXRlIGFzIHJlcXVpcmVkLlxuICAgIHJldmVyc2VCdWZmWzBdICY9IDB4M2Y7XG4gICAgLy8gQ29udmVydCB0aGUgcmV2ZXJzZWQgYnVmZmVyIGJhY2sgdG8gYSBoZXggc3RyaW5nLCB1cHBlcmNhc2UgaXQsIGFuZCByZXR1cm4uXG4gICAgcmV0dXJuIHVpbnQ4QXJyYXlUb0hleChyZXZlcnNlQnVmZikudG9VcHBlckNhc2UoKTtcbn1cbmZ1bmN0aW9uIHByZWZpeEtleUJ5VHlwZShrZXkpIHtcbiAgICBsZXQgYnl0ZXM7XG4gICAgc3dpdGNoICh0eXBlb2Yga2V5KSB7XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjoge1xuICAgICAgICAgICAgLy8gRm9yIHN0cmluZ3MsIGNvbmNhdGVuYXRlOlxuICAgICAgICAgICAgLy8gLSBUaGUgaGV4IHByZWZpeCBmb3IgU3RyaW5nXG4gICAgICAgICAgICAvLyAtIFRoZSBVVEYtOCBieXRlcyBmb3IgdGhlIGtleSAodXNpbmcgVWludDhBcnJheS5mcm9tIHNob3VsZCB3b3JrIGZvciBzdHJpbmcgaXRlcmFibGVzOyBhbHRlcm5hdGl2ZWx5IHVzZSBhbiBlbmNvZGVyKVxuICAgICAgICAgICAgLy8gLSBUaGUgaGV4IHByZWZpeCBmb3IgSW5maW5pdHlcbiAgICAgICAgICAgIGJ5dGVzID0gY29uY2F0VWludDhBcnJheXMoW1xuICAgICAgICAgICAgICAgIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4LlN0cmluZyksXG4gICAgICAgICAgICAgICAgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGtleSksXG4gICAgICAgICAgICAgICAgaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguSW5maW5pdHkpLFxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIm51bWJlclwiOiB7XG4gICAgICAgICAgICBjb25zdCBudW1iZXJCeXRlcyA9IGRvdWJsZVRvQnl0ZUFycmF5QmlnSW50KGtleSk7XG4gICAgICAgICAgICBieXRlcyA9IGNvbmNhdFVpbnQ4QXJyYXlzKFtoZXhTdHJpbmdUb1VpbnQ4QXJyYXkoQnl0ZVByZWZpeC5OdW1iZXIpLCBudW1iZXJCeXRlc10pO1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJib29sZWFuXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHByZWZpeCA9IGtleSA/IEJ5dGVQcmVmaXguVHJ1ZSA6IEJ5dGVQcmVmaXguRmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gaGV4U3RyaW5nVG9VaW50OEFycmF5KHByZWZpeCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIm9iamVjdFwiOiB7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4Lk51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGhleFN0cmluZ1RvVWludDhBcnJheShCeXRlUHJlZml4LlVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcInVuZGVmaW5lZFwiOiB7XG4gICAgICAgICAgICByZXR1cm4gaGV4U3RyaW5nVG9VaW50OEFycmF5KEJ5dGVQcmVmaXguVW5kZWZpbmVkKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHR5cGU6ICR7dHlwZW9mIGtleX1gKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcmV2ZXJzZShidWZmKSB7XG4gICAgLy8gUmVwbGFjZSBVaW50OEFycmF5LmFsbG9jVW5zYWZlKGJ1ZmYubGVuZ3RoKSB3aXRoIG5ldyBVaW50OEFycmF5KGJ1ZmYubGVuZ3RoKVxuICAgIGNvbnN0IHVpbnQ4YXJyYXkgPSBuZXcgVWludDhBcnJheShidWZmLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDAsIGogPSBidWZmLmxlbmd0aCAtIDE7IGkgPD0gajsgKytpLCAtLWopIHtcbiAgICAgICAgdWludDhhcnJheVtpXSA9IGJ1ZmZbal07XG4gICAgICAgIHVpbnQ4YXJyYXlbal0gPSBidWZmW2ldO1xuICAgIH1cbiAgICByZXR1cm4gdWludDhhcnJheTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXYyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hashing/v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/headers.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/headers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateHeaders: () => (/* binding */ generateHeaders)\n/* harmony export */ });\n/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hmac.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hmac.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nasync function generateHeaders(masterKey, method, resourceType = _common_index_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.none, resourceId = \"\", date = new Date()) {\n    if (masterKey.startsWith(\"type=sas&\")) {\n        return {\n            [_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Authorization]: encodeURIComponent(masterKey),\n            [_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.XDate]: date.toUTCString(),\n        };\n    }\n    const sig = await signature(masterKey, method, resourceType, resourceId, date);\n    return {\n        [_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.Authorization]: sig,\n        [_common_index_js__WEBPACK_IMPORTED_MODULE_1__.Constants.HttpHeaders.XDate]: date.toUTCString(),\n    };\n}\nasync function signature(masterKey, method, resourceType, resourceId = \"\", date = new Date()) {\n    const type = \"master\";\n    const version = \"1.0\";\n    const text = method.toLowerCase() +\n        \"\\n\" +\n        resourceType.toLowerCase() +\n        \"\\n\" +\n        resourceId +\n        \"\\n\" +\n        date.toUTCString().toLowerCase() +\n        \"\\n\" +\n        \"\" +\n        \"\\n\";\n    const signed = await (0,_hmac_js__WEBPACK_IMPORTED_MODULE_0__.hmac)(masterKey, text);\n    return encodeURIComponent(\"type=\" + type + \"&ver=\" + version + \"&sig=\" + signed);\n}\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDaUM7QUFDNEI7QUFDdEQsaUVBQWlFLDBEQUFZO0FBQ3BGO0FBQ0E7QUFDQSxhQUFhLHVEQUFTO0FBQ3RCLGFBQWEsdURBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHVEQUFTO0FBQ2xCLFNBQVMsdURBQVM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDhDQUFJO0FBQzdCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvaGVhZGVycy5qcz83ZDBlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgaG1hYyB9IGZyb20gXCIuL2htYWMuanNcIjtcbmltcG9ydCB7IFJlc291cmNlVHlwZSwgQ29uc3RhbnRzIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlSGVhZGVycyhtYXN0ZXJLZXksIG1ldGhvZCwgcmVzb3VyY2VUeXBlID0gUmVzb3VyY2VUeXBlLm5vbmUsIHJlc291cmNlSWQgPSBcIlwiLCBkYXRlID0gbmV3IERhdGUoKSkge1xuICAgIGlmIChtYXN0ZXJLZXkuc3RhcnRzV2l0aChcInR5cGU9c2FzJlwiKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgW0NvbnN0YW50cy5IdHRwSGVhZGVycy5BdXRob3JpemF0aW9uXTogZW5jb2RlVVJJQ29tcG9uZW50KG1hc3RlcktleSksXG4gICAgICAgICAgICBbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlhEYXRlXTogZGF0ZS50b1VUQ1N0cmluZygpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBzaWcgPSBhd2FpdCBzaWduYXR1cmUobWFzdGVyS2V5LCBtZXRob2QsIHJlc291cmNlVHlwZSwgcmVzb3VyY2VJZCwgZGF0ZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgW0NvbnN0YW50cy5IdHRwSGVhZGVycy5BdXRob3JpemF0aW9uXTogc2lnLFxuICAgICAgICBbQ29uc3RhbnRzLkh0dHBIZWFkZXJzLlhEYXRlXTogZGF0ZS50b1VUQ1N0cmluZygpLFxuICAgIH07XG59XG5hc3luYyBmdW5jdGlvbiBzaWduYXR1cmUobWFzdGVyS2V5LCBtZXRob2QsIHJlc291cmNlVHlwZSwgcmVzb3VyY2VJZCA9IFwiXCIsIGRhdGUgPSBuZXcgRGF0ZSgpKSB7XG4gICAgY29uc3QgdHlwZSA9IFwibWFzdGVyXCI7XG4gICAgY29uc3QgdmVyc2lvbiA9IFwiMS4wXCI7XG4gICAgY29uc3QgdGV4dCA9IG1ldGhvZC50b0xvd2VyQ2FzZSgpICtcbiAgICAgICAgXCJcXG5cIiArXG4gICAgICAgIHJlc291cmNlVHlwZS50b0xvd2VyQ2FzZSgpICtcbiAgICAgICAgXCJcXG5cIiArXG4gICAgICAgIHJlc291cmNlSWQgK1xuICAgICAgICBcIlxcblwiICtcbiAgICAgICAgZGF0ZS50b1VUQ1N0cmluZygpLnRvTG93ZXJDYXNlKCkgK1xuICAgICAgICBcIlxcblwiICtcbiAgICAgICAgXCJcIiArXG4gICAgICAgIFwiXFxuXCI7XG4gICAgY29uc3Qgc2lnbmVkID0gYXdhaXQgaG1hYyhtYXN0ZXJLZXksIHRleHQpO1xuICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoXCJ0eXBlPVwiICsgdHlwZSArIFwiJnZlcj1cIiArIHZlcnNpb24gKyBcIiZzaWc9XCIgKyBzaWduZWQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hmac.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/hmac.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hmac: () => (/* binding */ hmac)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nasync function hmac(key, message) {\n    return (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac)(\"sha256\", Buffer.from(key, \"base64\")).update(message).digest(\"base64\");\n}\n//# sourceMappingURL=hmac.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9obWFjLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUN5QztBQUNsQztBQUNQLFdBQVcsdURBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvaG1hYy5qcz9hYWI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlSG1hYyB9IGZyb20gXCJub2RlOmNyeXB0b1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhtYWMoa2V5LCBtZXNzYWdlKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhtYWMoXCJzaGEyNTZcIiwgQnVmZmVyLmZyb20oa2V5LCBcImJhc2U2NFwiKSkudXBkYXRlKG1lc3NhZ2UpLmRpZ2VzdChcImJhc2U2NFwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhtYWMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/hmac.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/nonStreamingOrderByMap.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/nonStreamingOrderByMap.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NonStreamingOrderByMap: () => (/* binding */ NonStreamingOrderByMap)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Stores the most favourable distinct result from a set of nonStreamingOrderBy results.\n */\nclass NonStreamingOrderByMap {\n    map;\n    compareFn;\n    constructor(compareFn) {\n        this.compareFn = compareFn;\n        this.map = new Map();\n    }\n    set(key, value) {\n        if (!this.map.has(key)) {\n            // If the key is not present in the map, add it.\n            this.map.set(key, value);\n        }\n        else {\n            // If the key is present in the map, compare the similarity score of the new value with the old value. Keep the more favourable one.\n            const oldValue = this.map.get(key);\n            if (this.replaceResults(oldValue, value)) {\n                this.map.set(key, value);\n            }\n        }\n    }\n    get(key) {\n        if (!this.map.has(key))\n            return undefined;\n        return this.map.get(key);\n    }\n    /**\n     * Returns all the values in the map and resets the map.\n     */\n    getAllValuesAndReset() {\n        const res = [];\n        for (const [key, value] of this.map) {\n            res.push(value);\n            this.map.delete(key);\n        }\n        return res;\n    }\n    replaceResults(res1, res2) {\n        const res = this.compareFn(res1, res2);\n        if (res < 0)\n            return true;\n        return false;\n    }\n    size() {\n        return this.map.size;\n    }\n}\n//# sourceMappingURL=nonStreamingOrderByMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9ub25TdHJlYW1pbmdPcmRlckJ5TWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvbm9uU3RyZWFtaW5nT3JkZXJCeU1hcC5qcz82YWU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBTdG9yZXMgdGhlIG1vc3QgZmF2b3VyYWJsZSBkaXN0aW5jdCByZXN1bHQgZnJvbSBhIHNldCBvZiBub25TdHJlYW1pbmdPcmRlckJ5IHJlc3VsdHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBOb25TdHJlYW1pbmdPcmRlckJ5TWFwIHtcbiAgICBtYXA7XG4gICAgY29tcGFyZUZuO1xuICAgIGNvbnN0cnVjdG9yKGNvbXBhcmVGbikge1xuICAgICAgICB0aGlzLmNvbXBhcmVGbiA9IGNvbXBhcmVGbjtcbiAgICAgICAgdGhpcy5tYXAgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgIGlmICghdGhpcy5tYXAuaGFzKGtleSkpIHtcbiAgICAgICAgICAgIC8vIElmIHRoZSBrZXkgaXMgbm90IHByZXNlbnQgaW4gdGhlIG1hcCwgYWRkIGl0LlxuICAgICAgICAgICAgdGhpcy5tYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gSWYgdGhlIGtleSBpcyBwcmVzZW50IGluIHRoZSBtYXAsIGNvbXBhcmUgdGhlIHNpbWlsYXJpdHkgc2NvcmUgb2YgdGhlIG5ldyB2YWx1ZSB3aXRoIHRoZSBvbGQgdmFsdWUuIEtlZXAgdGhlIG1vcmUgZmF2b3VyYWJsZSBvbmUuXG4gICAgICAgICAgICBjb25zdCBvbGRWYWx1ZSA9IHRoaXMubWFwLmdldChrZXkpO1xuICAgICAgICAgICAgaWYgKHRoaXMucmVwbGFjZVJlc3VsdHMob2xkVmFsdWUsIHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubWFwLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQoa2V5KSB7XG4gICAgICAgIGlmICghdGhpcy5tYXAuaGFzKGtleSkpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KGtleSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYWxsIHRoZSB2YWx1ZXMgaW4gdGhlIG1hcCBhbmQgcmVzZXRzIHRoZSBtYXAuXG4gICAgICovXG4gICAgZ2V0QWxsVmFsdWVzQW5kUmVzZXQoKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzLm1hcCkge1xuICAgICAgICAgICAgcmVzLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5tYXAuZGVsZXRlKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgcmVwbGFjZVJlc3VsdHMocmVzMSwgcmVzMikge1xuICAgICAgICBjb25zdCByZXMgPSB0aGlzLmNvbXBhcmVGbihyZXMxLCByZXMyKTtcbiAgICAgICAgaWYgKHJlcyA8IDApXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuc2l6ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub25TdHJlYW1pbmdPcmRlckJ5TWFwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/nonStreamingOrderByMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/offers.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/offers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateOffer: () => (/* binding */ validateOffer)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction validateOffer(body) {\n    if (body.throughput) {\n        if (body.maxThroughput) {\n            console.log(\"should be erroring\");\n            throw new Error(\"Cannot specify `throughput` with `maxThroughput`\");\n        }\n        if (body.autoUpgradePolicy) {\n            throw new Error(\"Cannot specify autoUpgradePolicy with throughput. Use `maxThroughput` instead\");\n        }\n    }\n}\n//# sourceMappingURL=offers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9vZmZlcnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL29mZmVycy5qcz9kNDc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlT2ZmZXIoYm9keSkge1xuICAgIGlmIChib2R5LnRocm91Z2hwdXQpIHtcbiAgICAgICAgaWYgKGJvZHkubWF4VGhyb3VnaHB1dCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJzaG91bGQgYmUgZXJyb3JpbmdcIik7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc3BlY2lmeSBgdGhyb3VnaHB1dGAgd2l0aCBgbWF4VGhyb3VnaHB1dGBcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJvZHkuYXV0b1VwZ3JhZGVQb2xpY3kpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBzcGVjaWZ5IGF1dG9VcGdyYWRlUG9saWN5IHdpdGggdGhyb3VnaHB1dC4gVXNlIGBtYXhUaHJvdWdocHV0YCBpbnN0ZWFkXCIpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2ZmZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/offers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/patch.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/patch.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PatchOperationType: () => (/* binding */ PatchOperationType)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst PatchOperationType = {\n    add: \"add\",\n    replace: \"replace\",\n    remove: \"remove\",\n    set: \"set\",\n    incr: \"incr\",\n};\n//# sourceMappingURL=patch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9wYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL3BhdGNoLmpzP2M4NzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5leHBvcnQgY29uc3QgUGF0Y2hPcGVyYXRpb25UeXBlID0ge1xuICAgIGFkZDogXCJhZGRcIixcbiAgICByZXBsYWNlOiBcInJlcGxhY2VcIixcbiAgICByZW1vdmU6IFwicmVtb3ZlXCIsXG4gICAgc2V0OiBcInNldFwiLFxuICAgIGluY3I6IFwiaW5jclwiLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/patch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/strings.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/strings.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNonEmptyString: () => (/* binding */ isNonEmptyString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction isNonEmptyString(variable) {\n    return typeof variable === \"string\" && variable.trim().length > 0;\n}\n//# sourceMappingURL=strings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9zdHJpbmdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29zbW9zL2Rpc3QvZXNtL3V0aWxzL3N0cmluZ3MuanM/ZWUxMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBmdW5jdGlvbiBpc05vbkVtcHR5U3RyaW5nKHZhcmlhYmxlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YXJpYWJsZSA9PT0gXCJzdHJpbmdcIiAmJiB2YXJpYWJsZS50cmltKCkubGVuZ3RoID4gMDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/strings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/supportedQueryFeaturesBuilder.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/supportedQueryFeaturesBuilder.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supportedQueryFeaturesBuilder: () => (/* binding */ supportedQueryFeaturesBuilder)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/common/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nfunction supportedQueryFeaturesBuilder(options) {\n    const allFeatures = Object.keys(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.QueryFeature);\n    const exclude = [];\n    if (options.disableNonStreamingOrderByQuery) {\n        exclude.push(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.QueryFeature.NonStreamingOrderBy);\n    }\n    if (options.disableHybridSearchQueryPlanOptimization) {\n        exclude.push(_common_index_js__WEBPACK_IMPORTED_MODULE_0__.QueryFeature.HybridSearchSkipOrderByRewrite);\n    }\n    return allFeatures.filter((feature) => !exclude.includes(feature)).join(\",\");\n}\n//# sourceMappingURL=supportedQueryFeaturesBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9zdXBwb3J0ZWRRdWVyeUZlYXR1cmVzQnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDa0Q7QUFDM0M7QUFDUCxvQ0FBb0MsMERBQVk7QUFDaEQ7QUFDQTtBQUNBLHFCQUFxQiwwREFBWTtBQUNqQztBQUNBO0FBQ0EscUJBQXFCLDBEQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy9zdXBwb3J0ZWRRdWVyeUZlYXR1cmVzQnVpbGRlci5qcz9jY2I5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgUXVlcnlGZWF0dXJlIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHN1cHBvcnRlZFF1ZXJ5RmVhdHVyZXNCdWlsZGVyKG9wdGlvbnMpIHtcbiAgICBjb25zdCBhbGxGZWF0dXJlcyA9IE9iamVjdC5rZXlzKFF1ZXJ5RmVhdHVyZSk7XG4gICAgY29uc3QgZXhjbHVkZSA9IFtdO1xuICAgIGlmIChvcHRpb25zLmRpc2FibGVOb25TdHJlYW1pbmdPcmRlckJ5UXVlcnkpIHtcbiAgICAgICAgZXhjbHVkZS5wdXNoKFF1ZXJ5RmVhdHVyZS5Ob25TdHJlYW1pbmdPcmRlckJ5KTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuZGlzYWJsZUh5YnJpZFNlYXJjaFF1ZXJ5UGxhbk9wdGltaXphdGlvbikge1xuICAgICAgICBleGNsdWRlLnB1c2goUXVlcnlGZWF0dXJlLkh5YnJpZFNlYXJjaFNraXBPcmRlckJ5UmV3cml0ZSk7XG4gICAgfVxuICAgIHJldHVybiBhbGxGZWF0dXJlcy5maWx0ZXIoKGZlYXR1cmUpID0+ICFleGNsdWRlLmluY2x1ZGVzKGZlYXR1cmUpKS5qb2luKFwiLFwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1cHBvcnRlZFF1ZXJ5RmVhdHVyZXNCdWlsZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/supportedQueryFeaturesBuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/time.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentTimestampInMs: () => (/* binding */ getCurrentTimestampInMs),\n/* harmony export */   startBackgroundTask: () => (/* binding */ startBackgroundTask)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @hidden\n * Utility function to get currentTime in UTC milliseconds.\n * @returns\n */\nfunction getCurrentTimestampInMs() {\n    return Date.now();\n}\n/**\n * @hidden\n * Utility function to start a background task that runs at specified intervals.\n * @param action - A function that returns a Promise, representing the task to be executed.\n * @param intervalMs - The interval in milliseconds at which the task should run.\n * @returns A NodeJS.Timeout object representing the timer for the background task.\n */\nfunction startBackgroundTask(action, intervalMs) {\n    const timer = setInterval(() => {\n        (async () => {\n            await action();\n        })();\n    }, intervalMs);\n    // Unref the timer if available to prevent it from keeping the Node.js event loop alive\n    if (timer.unref && typeof timer.unref === \"function\") {\n        timer.unref();\n    }\n    return timer;\n}\n//# sourceMappingURL=time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy90aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvdGltZS5qcz9lMmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBAaGlkZGVuXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIHRvIGdldCBjdXJyZW50VGltZSBpbiBVVEMgbWlsbGlzZWNvbmRzLlxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEN1cnJlbnRUaW1lc3RhbXBJbk1zKCkge1xuICAgIHJldHVybiBEYXRlLm5vdygpO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIHRvIHN0YXJ0IGEgYmFja2dyb3VuZCB0YXNrIHRoYXQgcnVucyBhdCBzcGVjaWZpZWQgaW50ZXJ2YWxzLlxuICogQHBhcmFtIGFjdGlvbiAtIEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgUHJvbWlzZSwgcmVwcmVzZW50aW5nIHRoZSB0YXNrIHRvIGJlIGV4ZWN1dGVkLlxuICogQHBhcmFtIGludGVydmFsTXMgLSBUaGUgaW50ZXJ2YWwgaW4gbWlsbGlzZWNvbmRzIGF0IHdoaWNoIHRoZSB0YXNrIHNob3VsZCBydW4uXG4gKiBAcmV0dXJucyBBIE5vZGVKUy5UaW1lb3V0IG9iamVjdCByZXByZXNlbnRpbmcgdGhlIHRpbWVyIGZvciB0aGUgYmFja2dyb3VuZCB0YXNrLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RhcnRCYWNrZ3JvdW5kVGFzayhhY3Rpb24sIGludGVydmFsTXMpIHtcbiAgICBjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGF3YWl0IGFjdGlvbigpO1xuICAgICAgICB9KSgpO1xuICAgIH0sIGludGVydmFsTXMpO1xuICAgIC8vIFVucmVmIHRoZSB0aW1lciBpZiBhdmFpbGFibGUgdG8gcHJldmVudCBpdCBmcm9tIGtlZXBpbmcgdGhlIE5vZGUuanMgZXZlbnQgbG9vcCBhbGl2ZVxuICAgIGlmICh0aW1lci51bnJlZiAmJiB0eXBlb2YgdGltZXIudW5yZWYgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB0aW1lci51bnJlZigpO1xuICAgIH1cbiAgICByZXR1cm4gdGltZXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/time.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertNotUndefined: () => (/* binding */ assertNotUndefined),\n/* harmony export */   isNonePartitionKeyValue: () => (/* binding */ isNonePartitionKeyValue),\n/* harmony export */   isNullPartitionKeyValue: () => (/* binding */ isNullPartitionKeyValue),\n/* harmony export */   isPartitionKey: () => (/* binding */ isPartitionKey),\n/* harmony export */   isPrefixPartitionKey: () => (/* binding */ isPrefixPartitionKey),\n/* harmony export */   isPrimitivePartitionKeyValue: () => (/* binding */ isPrimitivePartitionKeyValue),\n/* harmony export */   isWellDefinedPartitionKeyValue: () => (/* binding */ isWellDefinedPartitionKeyValue)\n/* harmony export */ });\n/* harmony import */ var _documents_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../documents/index.js */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/documents/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Utility function to avoid writing boilder plate code while checking for\n * undefined values. It throws Error if the input value is undefined.\n * @param value - Value which is potentially undefined.\n * @param msg - Error Message to throw if value is undefined.\n * @returns\n */\nfunction assertNotUndefined(value, msg) {\n    if (value !== undefined) {\n        return value;\n    }\n    throw new Error(msg || \"Unexpected 'undefined' value encountered\");\n}\n/**\n * Check for value being PrimitivePartitionKeyValue.\n * @internal\n */\nfunction isPrimitivePartitionKeyValue(value) {\n    return (isWellDefinedPartitionKeyValue(value) ||\n        isNonePartitionKeyValue(value) ||\n        isNullPartitionKeyValue(value));\n}\n/**\n * Check for value being string, number or boolean.\n * @internal\n */\nfunction isWellDefinedPartitionKeyValue(value) {\n    return typeof value === \"string\" || typeof value === \"boolean\" || typeof value === \"number\";\n}\n/**\n * Check for value being NonePartitionKeyType.\n * @internal\n */\nfunction isNonePartitionKeyValue(value) {\n    return value !== undefined && JSON.stringify(value) === JSON.stringify(_documents_index_js__WEBPACK_IMPORTED_MODULE_0__.NonePartitionKeyLiteral);\n}\n/**\n * Check for value being NullPartitionKeyType.\n * @internal\n */\nfunction isNullPartitionKeyValue(value) {\n    return value === _documents_index_js__WEBPACK_IMPORTED_MODULE_0__.NullPartitionKeyLiteral;\n}\n/**\n * Verify validity of partition key.\n * @internal\n */\nfunction isPartitionKey(partitionKey) {\n    return isPrimitivePartitionKeyValue(partitionKey) || Array.isArray(partitionKey);\n}\n/**\n * Check for value being PrefixPartitionKey.\n * @internal\n */\nfunction isPrefixPartitionKey(partitionKey, partitionKeyDefinition) {\n    return (partitionKeyDefinition &&\n        partitionKeyDefinition.paths &&\n        partitionKeyDefinition.kind === _documents_index_js__WEBPACK_IMPORTED_MODULE_0__.PartitionKeyKind.MultiHash &&\n        Array.isArray(partitionKey) &&\n        partitionKey.length < partitionKeyDefinition.paths.length);\n}\n//# sourceMappingURL=typeChecks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy90eXBlQ2hlY2tzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM0RztBQUM1RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDJFQUEyRSx3RUFBdUI7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLHdFQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSx3Q0FBd0MsaUVBQWdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy90eXBlQ2hlY2tzLmpzPzM2NjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBOb25lUGFydGl0aW9uS2V5TGl0ZXJhbCwgTnVsbFBhcnRpdGlvbktleUxpdGVyYWwsIFBhcnRpdGlvbktleUtpbmQsIH0gZnJvbSBcIi4uL2RvY3VtZW50cy9pbmRleC5qc1wiO1xuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIHRvIGF2b2lkIHdyaXRpbmcgYm9pbGRlciBwbGF0ZSBjb2RlIHdoaWxlIGNoZWNraW5nIGZvclxuICogdW5kZWZpbmVkIHZhbHVlcy4gSXQgdGhyb3dzIEVycm9yIGlmIHRoZSBpbnB1dCB2YWx1ZSBpcyB1bmRlZmluZWQuXG4gKiBAcGFyYW0gdmFsdWUgLSBWYWx1ZSB3aGljaCBpcyBwb3RlbnRpYWxseSB1bmRlZmluZWQuXG4gKiBAcGFyYW0gbXNnIC0gRXJyb3IgTWVzc2FnZSB0byB0aHJvdyBpZiB2YWx1ZSBpcyB1bmRlZmluZWQuXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Tm90VW5kZWZpbmVkKHZhbHVlLCBtc2cpIHtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihtc2cgfHwgXCJVbmV4cGVjdGVkICd1bmRlZmluZWQnIHZhbHVlIGVuY291bnRlcmVkXCIpO1xufVxuLyoqXG4gKiBDaGVjayBmb3IgdmFsdWUgYmVpbmcgUHJpbWl0aXZlUGFydGl0aW9uS2V5VmFsdWUuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJpbWl0aXZlUGFydGl0aW9uS2V5VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gKGlzV2VsbERlZmluZWRQYXJ0aXRpb25LZXlWYWx1ZSh2YWx1ZSkgfHxcbiAgICAgICAgaXNOb25lUGFydGl0aW9uS2V5VmFsdWUodmFsdWUpIHx8XG4gICAgICAgIGlzTnVsbFBhcnRpdGlvbktleVZhbHVlKHZhbHVlKSk7XG59XG4vKipcbiAqIENoZWNrIGZvciB2YWx1ZSBiZWluZyBzdHJpbmcsIG51bWJlciBvciBib29sZWFuLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1dlbGxEZWZpbmVkUGFydGl0aW9uS2V5VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJib29sZWFuXCIgfHwgdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiO1xufVxuLyoqXG4gKiBDaGVjayBmb3IgdmFsdWUgYmVpbmcgTm9uZVBhcnRpdGlvbktleVR5cGUuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTm9uZVBhcnRpdGlvbktleVZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgSlNPTi5zdHJpbmdpZnkodmFsdWUpID09PSBKU09OLnN0cmluZ2lmeShOb25lUGFydGl0aW9uS2V5TGl0ZXJhbCk7XG59XG4vKipcbiAqIENoZWNrIGZvciB2YWx1ZSBiZWluZyBOdWxsUGFydGl0aW9uS2V5VHlwZS5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNOdWxsUGFydGl0aW9uS2V5VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IE51bGxQYXJ0aXRpb25LZXlMaXRlcmFsO1xufVxuLyoqXG4gKiBWZXJpZnkgdmFsaWRpdHkgb2YgcGFydGl0aW9uIGtleS5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNQYXJ0aXRpb25LZXkocGFydGl0aW9uS2V5KSB7XG4gICAgcmV0dXJuIGlzUHJpbWl0aXZlUGFydGl0aW9uS2V5VmFsdWUocGFydGl0aW9uS2V5KSB8fCBBcnJheS5pc0FycmF5KHBhcnRpdGlvbktleSk7XG59XG4vKipcbiAqIENoZWNrIGZvciB2YWx1ZSBiZWluZyBQcmVmaXhQYXJ0aXRpb25LZXkuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJlZml4UGFydGl0aW9uS2V5KHBhcnRpdGlvbktleSwgcGFydGl0aW9uS2V5RGVmaW5pdGlvbikge1xuICAgIHJldHVybiAocGFydGl0aW9uS2V5RGVmaW5pdGlvbiAmJlxuICAgICAgICBwYXJ0aXRpb25LZXlEZWZpbml0aW9uLnBhdGhzICYmXG4gICAgICAgIHBhcnRpdGlvbktleURlZmluaXRpb24ua2luZCA9PT0gUGFydGl0aW9uS2V5S2luZC5NdWx0aUhhc2ggJiZcbiAgICAgICAgQXJyYXkuaXNBcnJheShwYXJ0aXRpb25LZXkpICYmXG4gICAgICAgIHBhcnRpdGlvbktleS5sZW5ndGggPCBwYXJ0aXRpb25LZXlEZWZpbml0aW9uLnBhdGhzLmxlbmd0aCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlQ2hlY2tzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/typeChecks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/cosmos/dist/esm/utils/uint8.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatUint8Arrays: () => (/* binding */ concatUint8Arrays),\n/* harmony export */   hexStringToUint8Array: () => (/* binding */ hexStringToUint8Array),\n/* harmony export */   uint8ArrayToHex: () => (/* binding */ uint8ArrayToHex)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction hexStringToUint8Array(hex) {\n    const arr = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < hex.length; i += 2) {\n        arr[i / 2] = parseInt(hex.substr(i, 2), 16);\n    }\n    return arr;\n}\nfunction uint8ArrayToHex(arr) {\n    return Array.from(arr)\n        .map((byte) => (\"00\" + byte.toString(16)).slice(-2))\n        .join(\"\");\n}\nfunction concatUint8Arrays(arrays) {\n    const totalLength = arrays.reduce((sum, arr) => sum + arr.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\n//# sourceMappingURL=uint8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Nvc21vcy9kaXN0L2VzbS91dGlscy91aW50OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3Ntb3MvZGlzdC9lc20vdXRpbHMvdWludDguanM/ZTk1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBmdW5jdGlvbiBoZXhTdHJpbmdUb1VpbnQ4QXJyYXkoaGV4KSB7XG4gICAgY29uc3QgYXJyID0gbmV3IFVpbnQ4QXJyYXkoaGV4Lmxlbmd0aCAvIDIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGV4Lmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgIGFycltpIC8gMl0gPSBwYXJzZUludChoZXguc3Vic3RyKGksIDIpLCAxNik7XG4gICAgfVxuICAgIHJldHVybiBhcnI7XG59XG5leHBvcnQgZnVuY3Rpb24gdWludDhBcnJheVRvSGV4KGFycikge1xuICAgIHJldHVybiBBcnJheS5mcm9tKGFycilcbiAgICAgICAgLm1hcCgoYnl0ZSkgPT4gKFwiMDBcIiArIGJ5dGUudG9TdHJpbmcoMTYpKS5zbGljZSgtMikpXG4gICAgICAgIC5qb2luKFwiXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdFVpbnQ4QXJyYXlzKGFycmF5cykge1xuICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gYXJyYXlzLnJlZHVjZSgoc3VtLCBhcnIpID0+IHN1bSArIGFyci5sZW5ndGgsIDApO1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KHRvdGFsTGVuZ3RoKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBmb3IgKGNvbnN0IGFyciBvZiBhcnJheXMpIHtcbiAgICAgICAgcmVzdWx0LnNldChhcnIsIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSBhcnIubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWludDguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/cosmos/dist/esm/utils/uint8.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-common/dist/esm/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/keyvault-common/dist/esm/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyVaultAuthenticationPolicy: () => (/* reexport safe */ _keyVaultAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultAuthenticationPolicy),\n/* harmony export */   keyVaultAuthenticationPolicyName: () => (/* reexport safe */ _keyVaultAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultAuthenticationPolicyName),\n/* harmony export */   parseKeyVaultIdentifier: () => (/* reexport safe */ _parseKeyVaultIdentifier_js__WEBPACK_IMPORTED_MODULE_1__.parseKeyVaultIdentifier)\n/* harmony export */ });\n/* harmony import */ var _keyVaultAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyVaultAuthenticationPolicy.js */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/keyVaultAuthenticationPolicy.js\");\n/* harmony import */ var _parseKeyVaultIdentifier_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parseKeyVaultIdentifier.js */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/parseKeyVaultIdentifier.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWNvbW1vbi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDa0Q7QUFDTDtBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1jb21tb24vZGlzdC9lc20vaW5kZXguanM/Mzc3NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCAqIGZyb20gXCIuL2tleVZhdWx0QXV0aGVudGljYXRpb25Qb2xpY3kuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlS2V5VmF1bHRJZGVudGlmaWVyLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-common/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-common/dist/esm/keyVaultAuthenticationPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-common/dist/esm/keyVaultAuthenticationPolicy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyVaultAuthenticationPolicy: () => (/* binding */ keyVaultAuthenticationPolicy),\n/* harmony export */   keyVaultAuthenticationPolicyName: () => (/* binding */ keyVaultAuthenticationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _parseWWWAuthenticate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseWWWAuthenticate.js */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/parseWWWAuthenticate.js\");\n/* harmony import */ var _tokenCycler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokenCycler.js */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/tokenCycler.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/logger.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nfunction verifyChallengeResource(scope, request) {\n    let scopeAsUrl;\n    try {\n        scopeAsUrl = new URL(scope);\n    }\n    catch (e) {\n        throw new Error(`The challenge contains invalid scope '${scope}'`);\n    }\n    const requestUrl = new URL(request.url);\n    if (!requestUrl.hostname.endsWith(`.${scopeAsUrl.hostname}`)) {\n        throw new Error(`The challenge resource '${scopeAsUrl.hostname}' does not match the requested domain. Set disableChallengeResourceVerification to true in your client options to disable. See https://aka.ms/azsdk/blog/vault-uri for more information.`);\n    }\n}\n/**\n * Name of the Key Vault authentication policy.\n */\nconst keyVaultAuthenticationPolicyName = \"keyVaultAuthenticationPolicy\";\n/**\n * A custom implementation of the bearer-token authentication policy that handles Key Vault and CAE challenges.\n *\n * Key Vault supports other authentication schemes, but we ensure challenge authentication\n * is used by first sending a copy of the request, without authorization or content.\n *\n * when the challenge is received, it will be authenticated and used to send the original\n * request with authorization.\n *\n * Following the first request of a client, follow-up requests will get the cached token\n * if possible.\n *\n */\nfunction keyVaultAuthenticationPolicy(credential, options = {}) {\n    const { disableChallengeResourceVerification } = options;\n    let challengeState = { status: \"none\" };\n    const getAccessToken = (0,_tokenCycler_js__WEBPACK_IMPORTED_MODULE_1__.createTokenCycler)(credential);\n    function requestToOptions(request) {\n        return {\n            abortSignal: request.abortSignal,\n            requestOptions: {\n                timeout: request.timeout > 0 ? request.timeout : undefined,\n            },\n            tracingOptions: request.tracingOptions,\n        };\n    }\n    async function authorizeRequest(request) {\n        const requestOptions = requestToOptions(request);\n        switch (challengeState.status) {\n            case \"none\":\n                challengeState = {\n                    status: \"started\",\n                    originalBody: request.body,\n                };\n                request.body = null;\n                break;\n            case \"started\":\n                break; // Retry, we should not overwrite the original body\n            case \"complete\": {\n                const token = await getAccessToken(challengeState.scopes, Object.assign(Object.assign({}, requestOptions), { enableCae: true, tenantId: challengeState.tenantId }));\n                if (token) {\n                    request.headers.set(\"authorization\", `Bearer ${token.token}`);\n                }\n                break;\n            }\n        }\n    }\n    async function handleChallenge(request, response, next) {\n        // If status is not 401, this is a no-op\n        if (response.status !== 401) {\n            return response;\n        }\n        if (request.body === null && challengeState.status === \"started\") {\n            // Reset the original body before doing anything else.\n            // Note: If successful status will be \"complete\", otherwise \"none\" will\n            // restart the process.\n            request.body = challengeState.originalBody;\n        }\n        const getTokenOptions = requestToOptions(request);\n        const challenge = response.headers.get(\"WWW-Authenticate\");\n        if (!challenge) {\n            _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warning(\"keyVaultAuthentication policy encountered a 401 response without a corresponding WWW-Authenticate header. This is unexpected. Not handling the 401 response.\");\n            return response;\n        }\n        const parsedChallenge = (0,_parseWWWAuthenticate_js__WEBPACK_IMPORTED_MODULE_0__.parseWWWAuthenticateHeader)(challenge);\n        const scope = parsedChallenge.resource\n            ? parsedChallenge.resource + \"/.default\"\n            : parsedChallenge.scope;\n        if (!scope) {\n            // Cannot handle this kind of challenge here (if scope is not present, may be a CAE challenge)\n            return response;\n        }\n        if (!disableChallengeResourceVerification) {\n            verifyChallengeResource(scope, request);\n        }\n        const accessToken = await getAccessToken([scope], Object.assign(Object.assign({}, getTokenOptions), { enableCae: true, tenantId: parsedChallenge.tenantId }));\n        if (!accessToken) {\n            // No access token provided, treat as no-op\n            return response;\n        }\n        request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n        challengeState = {\n            status: \"complete\",\n            scopes: [scope],\n            tenantId: parsedChallenge.tenantId,\n        };\n        // We have a token now, so try send the request again\n        return next(request);\n    }\n    async function handleCaeChallenge(request, response, next) {\n        // Cannot handle CAE challenge if a regular challenge has not been completed first\n        if (challengeState.status !== \"complete\") {\n            return response;\n        }\n        // If status is not 401, this is a no-op\n        if (response.status !== 401) {\n            return response;\n        }\n        const getTokenOptions = requestToOptions(request);\n        const challenge = response.headers.get(\"WWW-Authenticate\");\n        if (!challenge) {\n            return response;\n        }\n        const { claims: base64EncodedClaims, error } = (0,_parseWWWAuthenticate_js__WEBPACK_IMPORTED_MODULE_0__.parseWWWAuthenticateHeader)(challenge);\n        if (error !== \"insufficient_claims\" || base64EncodedClaims === undefined) {\n            return response;\n        }\n        const claims = atob(base64EncodedClaims);\n        const accessToken = await getAccessToken(challengeState.scopes, Object.assign(Object.assign({}, getTokenOptions), { enableCae: true, tenantId: challengeState.tenantId, claims }));\n        request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n        return next(request);\n    }\n    async function sendRequest(request, next) {\n        // Add token if possible\n        await authorizeRequest(request);\n        // Try send request (first attempt)\n        let response = await next(request);\n        // Handle standard challenge if present\n        response = await handleChallenge(request, response, next);\n        // Handle CAE challenge if present\n        response = await handleCaeChallenge(request, response, next);\n        return response;\n    }\n    return {\n        name: keyVaultAuthenticationPolicyName,\n        sendRequest,\n    };\n}\n//# sourceMappingURL=keyVaultAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-common/dist/esm/keyVaultAuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-common/dist/esm/logger.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/keyvault-common/dist/esm/logger.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"keyvault-common\");\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWNvbW1vbi9kaXN0L2VzbS9sb2dnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQzVDLGVBQWUsaUVBQWtCO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWNvbW1vbi9kaXN0L2VzbS9sb2dnZXIuanM/ZDQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG5leHBvcnQgY29uc3QgbG9nZ2VyID0gY3JlYXRlQ2xpZW50TG9nZ2VyKFwia2V5dmF1bHQtY29tbW9uXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-common/dist/esm/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-common/dist/esm/parseKeyVaultIdentifier.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-common/dist/esm/parseKeyVaultIdentifier.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseKeyVaultIdentifier: () => (/* binding */ parseKeyVaultIdentifier)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Parses a Key Vault identifier into its components.\n *\n * @param collection - The collection of the Key Vault identifier.\n * @param identifier - The Key Vault identifier to be parsed.\n */\nfunction parseKeyVaultIdentifier(collection, identifier) {\n    if (typeof collection !== \"string\" || !(collection = collection.trim())) {\n        throw new Error(\"Invalid collection argument\");\n    }\n    if (typeof identifier !== \"string\" || !(identifier = identifier.trim())) {\n        throw new Error(\"Invalid identifier argument\");\n    }\n    let baseUri;\n    try {\n        baseUri = new URL(identifier);\n    }\n    catch (e) {\n        throw new Error(`Invalid ${collection} identifier: ${identifier}. Not a valid URI`);\n    }\n    // Path is of the form '/collection/name[/version]'\n    const segments = (baseUri.pathname || \"\").split(\"/\");\n    if (segments.length !== 3 && segments.length !== 4) {\n        throw new Error(`Invalid ${collection} identifier: ${identifier}. Bad number of segments: ${segments.length}`);\n    }\n    if (collection !== segments[1]) {\n        throw new Error(`Invalid ${collection} identifier: ${identifier}. segment [1] should be \"${collection}\", found \"${segments[1]}\"`);\n    }\n    const vaultUrl = `${baseUri.protocol}//${baseUri.host}`;\n    const name = segments[2];\n    const version = segments.length === 4 ? segments[3] : undefined;\n    return {\n        vaultUrl,\n        name,\n        version,\n    };\n}\n//# sourceMappingURL=parseKeyVaultIdentifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWNvbW1vbi9kaXN0L2VzbS9wYXJzZUtleVZhdWx0SWRlbnRpZmllci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxZQUFZLGNBQWMsV0FBVztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxZQUFZLGNBQWMsV0FBVyw0QkFBNEIsZ0JBQWdCO0FBQ3BIO0FBQ0E7QUFDQSxtQ0FBbUMsWUFBWSxjQUFjLFdBQVcsMkJBQTJCLFdBQVcsWUFBWSxZQUFZO0FBQ3RJO0FBQ0Esd0JBQXdCLGlCQUFpQixJQUFJLGFBQWE7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWNvbW1vbi9kaXN0L2VzbS9wYXJzZUtleVZhdWx0SWRlbnRpZmllci5qcz83Njg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuLyoqXG4gKiBQYXJzZXMgYSBLZXkgVmF1bHQgaWRlbnRpZmllciBpbnRvIGl0cyBjb21wb25lbnRzLlxuICpcbiAqIEBwYXJhbSBjb2xsZWN0aW9uIC0gVGhlIGNvbGxlY3Rpb24gb2YgdGhlIEtleSBWYXVsdCBpZGVudGlmaWVyLlxuICogQHBhcmFtIGlkZW50aWZpZXIgLSBUaGUgS2V5IFZhdWx0IGlkZW50aWZpZXIgdG8gYmUgcGFyc2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VLZXlWYXVsdElkZW50aWZpZXIoY29sbGVjdGlvbiwgaWRlbnRpZmllcikge1xuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbiAhPT0gXCJzdHJpbmdcIiB8fCAhKGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uLnRyaW0oKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb2xsZWN0aW9uIGFyZ3VtZW50XCIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGlkZW50aWZpZXIgIT09IFwic3RyaW5nXCIgfHwgIShpZGVudGlmaWVyID0gaWRlbnRpZmllci50cmltKCkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaWRlbnRpZmllciBhcmd1bWVudFwiKTtcbiAgICB9XG4gICAgbGV0IGJhc2VVcmk7XG4gICAgdHJ5IHtcbiAgICAgICAgYmFzZVVyaSA9IG5ldyBVUkwoaWRlbnRpZmllcik7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCAke2NvbGxlY3Rpb259IGlkZW50aWZpZXI6ICR7aWRlbnRpZmllcn0uIE5vdCBhIHZhbGlkIFVSSWApO1xuICAgIH1cbiAgICAvLyBQYXRoIGlzIG9mIHRoZSBmb3JtICcvY29sbGVjdGlvbi9uYW1lWy92ZXJzaW9uXSdcbiAgICBjb25zdCBzZWdtZW50cyA9IChiYXNlVXJpLnBhdGhuYW1lIHx8IFwiXCIpLnNwbGl0KFwiL1wiKTtcbiAgICBpZiAoc2VnbWVudHMubGVuZ3RoICE9PSAzICYmIHNlZ21lbnRzLmxlbmd0aCAhPT0gNCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgJHtjb2xsZWN0aW9ufSBpZGVudGlmaWVyOiAke2lkZW50aWZpZXJ9LiBCYWQgbnVtYmVyIG9mIHNlZ21lbnRzOiAke3NlZ21lbnRzLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgaWYgKGNvbGxlY3Rpb24gIT09IHNlZ21lbnRzWzFdKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCAke2NvbGxlY3Rpb259IGlkZW50aWZpZXI6ICR7aWRlbnRpZmllcn0uIHNlZ21lbnQgWzFdIHNob3VsZCBiZSBcIiR7Y29sbGVjdGlvbn1cIiwgZm91bmQgXCIke3NlZ21lbnRzWzFdfVwiYCk7XG4gICAgfVxuICAgIGNvbnN0IHZhdWx0VXJsID0gYCR7YmFzZVVyaS5wcm90b2NvbH0vLyR7YmFzZVVyaS5ob3N0fWA7XG4gICAgY29uc3QgbmFtZSA9IHNlZ21lbnRzWzJdO1xuICAgIGNvbnN0IHZlcnNpb24gPSBzZWdtZW50cy5sZW5ndGggPT09IDQgPyBzZWdtZW50c1szXSA6IHVuZGVmaW5lZDtcbiAgICByZXR1cm4ge1xuICAgICAgICB2YXVsdFVybCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdmVyc2lvbixcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2VLZXlWYXVsdElkZW50aWZpZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-common/dist/esm/parseKeyVaultIdentifier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-common/dist/esm/parseWWWAuthenticate.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-common/dist/esm/parseWWWAuthenticate.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseWWWAuthenticateHeader: () => (/* binding */ parseWWWAuthenticateHeader)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst validWWWAuthenticateProperties = [\n    \"authorization\",\n    \"authorization_url\",\n    \"resource\",\n    \"scope\",\n    \"tenantId\",\n    \"claims\",\n    \"error\",\n];\n/**\n * Parses an WWW-Authenticate response header.\n * This transforms a string value like:\n * `Bearer authorization=\"https://some.url/tenantId\", resource=\"https://some.url\"`\n * into an object like:\n * `{ authorization: \"https://some.url/tenantId\", resource: \"https://some.url\" }`\n * @param headerValue - String value in the WWW-Authenticate header\n */\nfunction parseWWWAuthenticateHeader(headerValue) {\n    const pairDelimiter = /,? +/;\n    const parsed = headerValue.split(pairDelimiter).reduce((kvPairs, p) => {\n        if (p.match(/\\w=\"/)) {\n            // 'sampleKey=\"sample_value\"' -> [sampleKey, \"sample_value\"] -> { sampleKey: sample_value }\n            const [key, ...value] = p.split(\"=\");\n            if (validWWWAuthenticateProperties.includes(key)) {\n                // The values will be wrapped in quotes, which need to be stripped out.\n                return Object.assign(Object.assign({}, kvPairs), { [key]: value.join(\"=\").slice(1, -1) });\n            }\n        }\n        return kvPairs;\n    }, {});\n    // Finally, we pull the tenantId from the authorization header to support multi-tenant authentication.\n    if (parsed.authorization) {\n        try {\n            const tenantId = new URL(parsed.authorization).pathname.substring(1);\n            if (tenantId) {\n                parsed.tenantId = tenantId;\n            }\n        }\n        catch (_) {\n            throw new Error(`The challenge authorization URI '${parsed.authorization}' is invalid.`);\n        }\n    }\n    return parsed;\n}\n//# sourceMappingURL=parseWWWAuthenticate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWNvbW1vbi9kaXN0L2VzbS9wYXJzZVdXV0F1dGhlbnRpY2F0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDBFQUEwRTtBQUNoRjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSw4RUFBOEU7QUFDOUU7QUFDQTtBQUNBO0FBQ0EscURBQXFELGNBQWMscUNBQXFDO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxxQkFBcUI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1jb21tb24vZGlzdC9lc20vcGFyc2VXV1dBdXRoZW50aWNhdGUuanM/Njg2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmNvbnN0IHZhbGlkV1dXQXV0aGVudGljYXRlUHJvcGVydGllcyA9IFtcbiAgICBcImF1dGhvcml6YXRpb25cIixcbiAgICBcImF1dGhvcml6YXRpb25fdXJsXCIsXG4gICAgXCJyZXNvdXJjZVwiLFxuICAgIFwic2NvcGVcIixcbiAgICBcInRlbmFudElkXCIsXG4gICAgXCJjbGFpbXNcIixcbiAgICBcImVycm9yXCIsXG5dO1xuLyoqXG4gKiBQYXJzZXMgYW4gV1dXLUF1dGhlbnRpY2F0ZSByZXNwb25zZSBoZWFkZXIuXG4gKiBUaGlzIHRyYW5zZm9ybXMgYSBzdHJpbmcgdmFsdWUgbGlrZTpcbiAqIGBCZWFyZXIgYXV0aG9yaXphdGlvbj1cImh0dHBzOi8vc29tZS51cmwvdGVuYW50SWRcIiwgcmVzb3VyY2U9XCJodHRwczovL3NvbWUudXJsXCJgXG4gKiBpbnRvIGFuIG9iamVjdCBsaWtlOlxuICogYHsgYXV0aG9yaXphdGlvbjogXCJodHRwczovL3NvbWUudXJsL3RlbmFudElkXCIsIHJlc291cmNlOiBcImh0dHBzOi8vc29tZS51cmxcIiB9YFxuICogQHBhcmFtIGhlYWRlclZhbHVlIC0gU3RyaW5nIHZhbHVlIGluIHRoZSBXV1ctQXV0aGVudGljYXRlIGhlYWRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VXV1dBdXRoZW50aWNhdGVIZWFkZXIoaGVhZGVyVmFsdWUpIHtcbiAgICBjb25zdCBwYWlyRGVsaW1pdGVyID0gLyw/ICsvO1xuICAgIGNvbnN0IHBhcnNlZCA9IGhlYWRlclZhbHVlLnNwbGl0KHBhaXJEZWxpbWl0ZXIpLnJlZHVjZSgoa3ZQYWlycywgcCkgPT4ge1xuICAgICAgICBpZiAocC5tYXRjaCgvXFx3PVwiLykpIHtcbiAgICAgICAgICAgIC8vICdzYW1wbGVLZXk9XCJzYW1wbGVfdmFsdWVcIicgLT4gW3NhbXBsZUtleSwgXCJzYW1wbGVfdmFsdWVcIl0gLT4geyBzYW1wbGVLZXk6IHNhbXBsZV92YWx1ZSB9XG4gICAgICAgICAgICBjb25zdCBba2V5LCAuLi52YWx1ZV0gPSBwLnNwbGl0KFwiPVwiKTtcbiAgICAgICAgICAgIGlmICh2YWxpZFdXV0F1dGhlbnRpY2F0ZVByb3BlcnRpZXMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIC8vIFRoZSB2YWx1ZXMgd2lsbCBiZSB3cmFwcGVkIGluIHF1b3Rlcywgd2hpY2ggbmVlZCB0byBiZSBzdHJpcHBlZCBvdXQuXG4gICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwga3ZQYWlycyksIHsgW2tleV06IHZhbHVlLmpvaW4oXCI9XCIpLnNsaWNlKDEsIC0xKSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ga3ZQYWlycztcbiAgICB9LCB7fSk7XG4gICAgLy8gRmluYWxseSwgd2UgcHVsbCB0aGUgdGVuYW50SWQgZnJvbSB0aGUgYXV0aG9yaXphdGlvbiBoZWFkZXIgdG8gc3VwcG9ydCBtdWx0aS10ZW5hbnQgYXV0aGVudGljYXRpb24uXG4gICAgaWYgKHBhcnNlZC5hdXRob3JpemF0aW9uKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB0ZW5hbnRJZCA9IG5ldyBVUkwocGFyc2VkLmF1dGhvcml6YXRpb24pLnBhdGhuYW1lLnN1YnN0cmluZygxKTtcbiAgICAgICAgICAgIGlmICh0ZW5hbnRJZCkge1xuICAgICAgICAgICAgICAgIHBhcnNlZC50ZW5hbnRJZCA9IHRlbmFudElkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBjaGFsbGVuZ2UgYXV0aG9yaXphdGlvbiBVUkkgJyR7cGFyc2VkLmF1dGhvcml6YXRpb259JyBpcyBpbnZhbGlkLmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwYXJzZWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZVdXV0F1dGhlbnRpY2F0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-common/dist/esm/parseWWWAuthenticate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-common/dist/esm/tokenCycler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/keyvault-common/dist/esm/tokenCycler.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CYCLER_OPTIONS: () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   createTokenCycler: () => (/* binding */ createTokenCycler)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            if (cycler.isRefreshing) {\n                return false;\n            }\n            if ((token === null || token === void 0 ? void 0 : token.refreshAfterTimestamp) && token.refreshAfterTimestamp < Date.now()) {\n                return true;\n            }\n            return ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now();\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-common/dist/esm/tokenCycler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst SDK_VERSION = \"4.10.0\";\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2NvbnN0YW50cy5qcz82ZjExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IGNvbnN0IFNES19WRVJTSU9OID0gXCI0LjEwLjBcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClient.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptographyClient: () => (/* binding */ CryptographyClient)\n/* harmony export */ });\n/* harmony import */ var _keysModels_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keysModels.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/keysModels.js\");\n/* harmony import */ var _cryptography_remoteCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cryptography/remoteCryptographyProvider.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/remoteCryptographyProvider.js\");\n/* harmony import */ var _cryptography_crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cryptography/crypto.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/crypto.js\");\n/* harmony import */ var _cryptography_rsaCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cryptography/rsaCryptographyProvider.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/rsaCryptographyProvider.js\");\n/* harmony import */ var _cryptography_aesCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cryptography/aesCryptographyProvider.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/aesCryptographyProvider.js\");\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n/**\n * A client used to perform cryptographic operations on an Azure Key vault key\n * or a local {@link JsonWebKey}.\n */\nclass CryptographyClient {\n    /**\n     * Internal constructor implementation for either local or Key Vault backed keys.\n     * @param key - The key to use during cryptography tasks.\n     * @param credential - Teh credential to use when constructing a Key Vault Cryptography client.\n     */\n    constructor(key, credential, pipelineOptions = {}) {\n        if (typeof key === \"string\") {\n            // Key URL for remote-local operations.\n            this.key = {\n                kind: \"identifier\",\n                value: key,\n            };\n            this.remoteProvider = new _cryptography_remoteCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_1__.RemoteCryptographyProvider(key, credential, pipelineOptions);\n        }\n        else if (\"name\" in key) {\n            // KeyVault key for remote-local operations.\n            this.key = {\n                kind: \"KeyVaultKey\",\n                value: key,\n            };\n            this.remoteProvider = new _cryptography_remoteCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_1__.RemoteCryptographyProvider(key, credential, pipelineOptions);\n        }\n        else {\n            // JsonWebKey for local-only operations.\n            this.key = {\n                kind: \"JsonWebKey\",\n                value: key,\n            };\n        }\n    }\n    /**\n     * The base URL to the vault. If a local {@link JsonWebKey} is used vaultUrl will be empty.\n     */\n    get vaultUrl() {\n        var _a;\n        return ((_a = this.remoteProvider) === null || _a === void 0 ? void 0 : _a.vaultUrl) || \"\";\n    }\n    /**\n     * The ID of the key used to perform cryptographic operations for the client.\n     */\n    get keyID() {\n        if (this.key.kind === \"identifier\" || this.key.kind === \"remoteOnlyIdentifier\") {\n            return this.key.value;\n        }\n        else if (this.key.kind === \"KeyVaultKey\") {\n            return this.key.value.id;\n        }\n        else {\n            return this.key.value.kid;\n        }\n    }\n    encrypt(...args) {\n        const [parameters, options] = this.disambiguateEncryptArguments(args);\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.encrypt\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.Encrypt);\n            this.initializeIV(parameters);\n            const provider = await this.getProvider(\"encrypt\", parameters.algorithm, updatedOptions);\n            try {\n                return provider.encrypt(parameters, updatedOptions);\n            }\n            catch (error) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.encrypt(parameters, updatedOptions);\n                }\n                throw error;\n            }\n        });\n    }\n    initializeIV(parameters) {\n        // For AES-GCM the service **must** generate the IV, so we only populate it for AES-CBC\n        const algorithmsRequiringIV = [\n            \"A128CBC\",\n            \"A128CBCPAD\",\n            \"A192CBC\",\n            \"A192CBCPAD\",\n            \"A256CBC\",\n            \"A256CBCPAD\",\n        ];\n        if (parameters.algorithm in algorithmsRequiringIV) {\n            try {\n                const cbcParams = parameters;\n                if (!cbcParams.iv) {\n                    cbcParams.iv = (0,_cryptography_crypto_js__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(16);\n                }\n            }\n            catch (e) {\n                throw new Error(`Unable to initialize IV for algorithm ${parameters.algorithm}. You may pass a valid IV to avoid this error. Error: ${e.message}`);\n            }\n        }\n    }\n    /**\n     * Standardizes the arguments of multiple overloads into a single shape.\n     * @param args - The encrypt arguments\n     */\n    disambiguateEncryptArguments(args) {\n        if (typeof args[0] === \"string\") {\n            // Sample shape: [\"RSA1_5\", buffer, options]\n            return [\n                {\n                    algorithm: args[0],\n                    plaintext: args[1],\n                },\n                args[2] || {},\n            ];\n        }\n        else {\n            // Sample shape: [{ algorithm: \"RSA1_5\", plaintext: buffer }, options]\n            return [args[0], (args[1] || {})];\n        }\n    }\n    decrypt(...args) {\n        const [parameters, options] = this.disambiguateDecryptArguments(args);\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.decrypt\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.Decrypt);\n            const provider = await this.getProvider(\"decrypt\", parameters.algorithm, updatedOptions);\n            try {\n                return provider.decrypt(parameters, updatedOptions);\n            }\n            catch (error) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.decrypt(parameters, updatedOptions);\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Standardizes the arguments of multiple overloads into a single shape.\n     * @param args - The decrypt arguments\n     */\n    disambiguateDecryptArguments(args) {\n        if (typeof args[0] === \"string\") {\n            // Sample shape: [\"RSA1_5\", encryptedBuffer, options]\n            return [\n                {\n                    algorithm: args[0],\n                    ciphertext: args[1],\n                },\n                args[2] || {},\n            ];\n        }\n        else {\n            // Sample shape: [{ algorithm: \"RSA1_5\", ciphertext: encryptedBuffer }, options]\n            return [args[0], (args[1] || {})];\n        }\n    }\n    /**\n     * Wraps the given key using the specified cryptography algorithm\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleWrapKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient, CryptographyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const myKey = await client.createKey(\"MyKey\", \"RSA\");\n     * const cryptographyClient = new CryptographyClient(myKey, credential);\n     *\n     * const wrapResult = await cryptographyClient.wrapKey(\"RSA-OAEP\", Buffer.from(\"My Key\"));\n     * console.log(\"wrap result:\", wrapResult.result);\n     * ```\n     * @param algorithm - The encryption algorithm to use to wrap the given key.\n     * @param key - The key to wrap.\n     * @param options - Additional options.\n     */\n    wrapKey(algorithm, key, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.wrapKey\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.WrapKey);\n            const provider = await this.getProvider(\"wrapKey\", algorithm, updatedOptions);\n            try {\n                return provider.wrapKey(algorithm, key, updatedOptions);\n            }\n            catch (err) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.wrapKey(algorithm, key, options);\n                }\n                throw err;\n            }\n        });\n    }\n    /**\n     * Unwraps the given wrapped key using the specified cryptography algorithm\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleUnwrapKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient, CryptographyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const myKey = await client.createKey(\"MyKey\", \"RSA\");\n     * const cryptographyClient = new CryptographyClient(myKey, credential);\n     *\n     * const wrapResult = await cryptographyClient.wrapKey(\"RSA-OAEP\", Buffer.from(\"My Key\"));\n     * console.log(\"wrap result:\", wrapResult.result);\n     *\n     * const unwrapResult = await cryptographyClient.unwrapKey(\"RSA-OAEP\", wrapResult.result);\n     * console.log(\"unwrap result: \", unwrapResult.result);\n     * ```\n     * @param algorithm - The decryption algorithm to use to unwrap the key.\n     * @param encryptedKey - The encrypted key to unwrap.\n     * @param options - Additional options.\n     */\n    unwrapKey(algorithm, encryptedKey, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.unwrapKey\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.UnwrapKey);\n            const provider = await this.getProvider(\"unwrapKey\", algorithm, updatedOptions);\n            try {\n                return provider.unwrapKey(algorithm, encryptedKey, updatedOptions);\n            }\n            catch (err) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.unwrapKey(algorithm, encryptedKey, options);\n                }\n                throw err;\n            }\n        });\n    }\n    /**\n     * Cryptographically sign the digest of a message\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleSign\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient, CryptographyClient } from \"@azure/keyvault-keys\";\n     * import { createHash } from \"node:crypto\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * let myKey = await client.createKey(\"MyKey\", \"RSA\");\n     * const cryptographyClient = new CryptographyClient(myKey, credential);\n     *\n     * const signatureValue = \"MySignature\";\n     * const hash = createHash(\"sha256\");\n     *\n     * const digest = hash.update(signatureValue).digest();\n     * console.log(\"digest: \", digest);\n     *\n     * const signResult = await cryptographyClient.sign(\"RS256\", digest);\n     * console.log(\"sign result: \", signResult.result);\n     * ```\n     * @param algorithm - The signing algorithm to use.\n     * @param digest - The digest of the data to sign.\n     * @param options - Additional options.\n     */\n    sign(algorithm, digest, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.sign\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.Sign);\n            const provider = await this.getProvider(\"sign\", algorithm, updatedOptions);\n            try {\n                return provider.sign(algorithm, digest, updatedOptions);\n            }\n            catch (err) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.sign(algorithm, digest, updatedOptions);\n                }\n                throw err;\n            }\n        });\n    }\n    /**\n     * Verify the signed message digest\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleVerify\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient, CryptographyClient } from \"@azure/keyvault-keys\";\n     * import { createHash } from \"node:crypto\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const myKey = await client.createKey(\"MyKey\", \"RSA\");\n     * const cryptographyClient = new CryptographyClient(myKey, credential);\n     *\n     * const hash = createHash(\"sha256\");\n     * hash.update(\"My Message\");\n     * const digest = hash.digest();\n     *\n     * const signResult = await cryptographyClient.sign(\"RS256\", digest);\n     * console.log(\"sign result: \", signResult.result);\n     *\n     * const verifyResult = await cryptographyClient.verify(\"RS256\", digest, signResult.result);\n     * console.log(\"verify result: \", verifyResult.result);\n     * ```\n     * @param algorithm - The signing algorithm to use to verify with.\n     * @param digest - The digest to verify.\n     * @param signature - The signature to verify the digest against.\n     * @param options - Additional options.\n     */\n    verify(algorithm, digest, signature, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.verify\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.Verify);\n            const provider = await this.getProvider(\"verify\", algorithm, updatedOptions);\n            try {\n                return provider.verify(algorithm, digest, signature, updatedOptions);\n            }\n            catch (err) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.verify(algorithm, digest, signature, updatedOptions);\n                }\n                throw err;\n            }\n        });\n    }\n    /**\n     * Cryptographically sign a block of data\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleSignData\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient, CryptographyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const myKey = await client.createKey(\"MyKey\", \"RSA\");\n     * const cryptographyClient = new CryptographyClient(myKey, credential);\n     *\n     * const signResult = await cryptographyClient.signData(\"RS256\", Buffer.from(\"My Message\"));\n     * console.log(\"sign result: \", signResult.result);\n     * ```\n     * @param algorithm - The signing algorithm to use.\n     * @param data - The data to sign.\n     * @param options - Additional options.\n     */\n    signData(algorithm, data, \n    // eslint-disable-next-line @azure/azure-sdk/ts-naming-options\n    options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.signData\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.Sign);\n            const provider = await this.getProvider(\"signData\", algorithm, updatedOptions);\n            try {\n                return provider.signData(algorithm, data, updatedOptions);\n            }\n            catch (err) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.signData(algorithm, data, options);\n                }\n                throw err;\n            }\n        });\n    }\n    /**\n     * Verify the signed block of data\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleVerifyData\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient, CryptographyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const myKey = await client.createKey(\"MyKey\", \"RSA\");\n     * const cryptographyClient = new CryptographyClient(myKey, credential);\n     *\n     * const buffer = Buffer.from(\"My Message\");\n     *\n     * const signResult = await cryptographyClient.signData(\"RS256\", buffer);\n     * console.log(\"sign result: \", signResult.result);\n     *\n     * const verifyResult = await cryptographyClient.verifyData(\"RS256\", buffer, signResult.result);\n     * console.log(\"verify result: \", verifyResult.result);\n     * ```\n     * @param algorithm - The algorithm to use to verify with.\n     * @param data - The signed block of data to verify.\n     * @param signature - The signature to verify the block against.\n     * @param options - Additional options.\n     */\n    verifyData(algorithm, data, signature, \n    // eslint-disable-next-line @azure/azure-sdk/ts-naming-options\n    options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"CryptographyClient.verifyData\", options, async (updatedOptions) => {\n            this.ensureValid(await this.fetchKey(updatedOptions), _keysModels_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyOperations.Verify);\n            const provider = await this.getProvider(\"verifyData\", algorithm, updatedOptions);\n            try {\n                return provider.verifyData(algorithm, data, signature, updatedOptions);\n            }\n            catch (err) {\n                if (this.remoteProvider) {\n                    return this.remoteProvider.verifyData(algorithm, data, signature, updatedOptions);\n                }\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieves the {@link JsonWebKey} from the Key Vault, if possible. Returns undefined if the key could not be retrieved due to insufficient permissions.\n     * @param options - The additional options.\n     */\n    async getKeyMaterial(options) {\n        const key = await this.fetchKey(options);\n        switch (key.kind) {\n            case \"JsonWebKey\":\n                return key.value;\n            case \"KeyVaultKey\":\n                return key.value.key;\n            default:\n                return undefined;\n        }\n    }\n    /**\n     * Returns the underlying key used for cryptographic operations.\n     * If needed, attempts to fetch the key from KeyVault and exchanges the ID for the actual key.\n     * @param options - The additional options.\n     */\n    async fetchKey(options) {\n        if (this.key.kind === \"identifier\") {\n            // Exchange the identifier with the actual key when needed\n            let key;\n            try {\n                key = await this.remoteProvider.getKey(options);\n            }\n            catch (e) {\n                if ((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_6__.isRestError)(e) && e.statusCode === 403) {\n                    // If we don't have permission to get the key, we'll fall back to using the remote provider.\n                    // Marking the key as a remoteOnlyIdentifier will ensure that we don't attempt to fetch the key again.\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.verbose(`Permission denied to get key ${this.key.value}. Falling back to remote operation.`);\n                    this.key = { kind: \"remoteOnlyIdentifier\", value: this.key.value };\n                }\n                else {\n                    throw e;\n                }\n            }\n            if (key) {\n                this.key = { kind: \"KeyVaultKey\", value: key };\n            }\n        }\n        return this.key;\n    }\n    /**\n     * Gets the provider that support this algorithm and operation.\n     * The available providers are ordered by priority such that the first provider that supports this\n     * operation is the one we should use.\n     * @param operation - The {@link KeyOperation}.\n     * @param algorithm - The algorithm to use.\n     */\n    async getProvider(operation, algorithm, options) {\n        if (!this.providers) {\n            const keyMaterial = await this.getKeyMaterial(options);\n            this.providers = [];\n            // Add local crypto providers as needed\n            if (keyMaterial) {\n                this.providers.push(new _cryptography_rsaCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_3__.RsaCryptographyProvider(keyMaterial), new _cryptography_aesCryptographyProvider_js__WEBPACK_IMPORTED_MODULE_4__.AesCryptographyProvider(keyMaterial));\n            }\n            // If the remote provider exists, we're in hybrid-mode. Otherwise we're in local-only mode.\n            // If we're in hybrid mode the remote provider is used as a catch-all and should be last in the list.\n            if (this.remoteProvider) {\n                this.providers.push(this.remoteProvider);\n            }\n        }\n        const providers = this.providers.filter((p) => p.isSupported(algorithm, operation));\n        if (providers.length === 0) {\n            throw new Error(`Unable to support operation: \"${operation}\" with algorithm: \"${algorithm}\" ${this.key.kind === \"JsonWebKey\" ? \"using a local JsonWebKey\" : \"\"}`);\n        }\n        // Return the first provider that supports this request\n        return providers[0];\n    }\n    ensureValid(key, operation) {\n        var _a;\n        if (key.kind === \"KeyVaultKey\") {\n            const keyOps = key.value.keyOperations;\n            const { notBefore, expiresOn } = key.value.properties;\n            const now = new Date();\n            // Check KeyVault Key Expiration\n            if (notBefore && now < notBefore) {\n                throw new Error(`Key ${key.value.id} can't be used before ${notBefore.toISOString()}`);\n            }\n            if (expiresOn && now > expiresOn) {\n                throw new Error(`Key ${key.value.id} expired at ${expiresOn.toISOString()}`);\n            }\n            // Check Key operations\n            if (operation && keyOps && !(keyOps === null || keyOps === void 0 ? void 0 : keyOps.includes(operation))) {\n                throw new Error(`Operation ${operation} is not supported on key ${key.value.id}`);\n            }\n        }\n        else if (key.kind === \"JsonWebKey\") {\n            // Check JsonWebKey Key operations\n            if (operation && key.value.keyOps && !((_a = key.value.keyOps) === null || _a === void 0 ? void 0 : _a.includes(operation))) {\n                throw new Error(`Operation ${operation} is not supported on key ${key.value.kid}`);\n            }\n        }\n    }\n}\n//# sourceMappingURL=cryptographyClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClientModels.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClientModels.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownEncryptionAlgorithms: () => (/* reexport safe */ _generated_models_index_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyEncryptionAlgorithm),\n/* harmony export */   KnownKeyCurveNames: () => (/* reexport safe */ _generated_models_index_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyCurveName),\n/* harmony export */   KnownKeyExportEncryptionAlgorithm: () => (/* reexport safe */ _generated_models_index_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyEncryptionAlgorithm),\n/* harmony export */   KnownKeyTypes: () => (/* reexport safe */ _generated_models_index_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyType),\n/* harmony export */   KnownSignatureAlgorithms: () => (/* reexport safe */ _generated_models_index_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeySignatureAlgorithm)\n/* harmony export */ });\n/* harmony import */ var _generated_models_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/models/index.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=cryptographyClientModels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5Q2xpZW50TW9kZWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDc1U7QUFDaE07QUFDdEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUva2V5dmF1bHQta2V5cy9kaXN0L2VzbS9jcnlwdG9ncmFwaHlDbGllbnRNb2RlbHMuanM/MzEyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IEtub3duSnNvbldlYktleUN1cnZlTmFtZSBhcyBLbm93bktleUN1cnZlTmFtZXMsIEtub3duSnNvbldlYktleVNpZ25hdHVyZUFsZ29yaXRobSBhcyBLbm93blNpZ25hdHVyZUFsZ29yaXRobXMsIEtub3duSnNvbldlYktleUVuY3J5cHRpb25BbGdvcml0aG0gYXMgS25vd25FbmNyeXB0aW9uQWxnb3JpdGhtcywgS25vd25Kc29uV2ViS2V5VHlwZSBhcyBLbm93bktleVR5cGVzLCBLbm93bktleUVuY3J5cHRpb25BbGdvcml0aG0gYXMgS25vd25LZXlFeHBvcnRFbmNyeXB0aW9uQWxnb3JpdGhtLCB9IGZyb20gXCIuL2dlbmVyYXRlZC9tb2RlbHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IEtub3duRW5jcnlwdGlvbkFsZ29yaXRobXMsIEtub3duS2V5Q3VydmVOYW1lcywgS25vd25LZXlFeHBvcnRFbmNyeXB0aW9uQWxnb3JpdGhtLCBLbm93bktleVR5cGVzLCBLbm93blNpZ25hdHVyZUFsZ29yaXRobXMsIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG9ncmFwaHlDbGllbnRNb2RlbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClientModels.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/aesCryptographyProvider.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptography/aesCryptographyProvider.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AesCryptographyProvider: () => (/* binding */ AesCryptographyProvider)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var _models_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/models.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * An AES cryptography provider supporting AES algorithms.\n * @internal\n */\nclass AesCryptographyProvider {\n    constructor(key) {\n        /**\n         * The set of algorithms this provider supports.\n         * For AES encryption, the values include the underlying algorithm used in crypto\n         * as well as the key size in bytes.\n         *\n         * We start with support for A[SIZE]CBCPAD which uses the PKCS padding (the default padding scheme in node crypto)\n         */\n        this.supportedAlgorithms = {\n            A128CBCPAD: {\n                algorithm: \"aes-128-cbc\",\n                keySizeInBytes: 128 >> 3,\n            },\n            A192CBCPAD: {\n                algorithm: \"aes-192-cbc\",\n                keySizeInBytes: 192 >> 3,\n            },\n            A256CBCPAD: {\n                algorithm: \"aes-256-cbc\",\n                keySizeInBytes: 256 >> 3,\n            },\n        };\n        this.supportedOperations = [\"encrypt\", \"decrypt\"];\n        this.key = key;\n    }\n    encrypt(encryptParameters, _options) {\n        const { algorithm, keySizeInBytes } = this.supportedAlgorithms[encryptParameters.algorithm];\n        const iv = encryptParameters.iv || node_crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes(16);\n        this.ensureValid(keySizeInBytes);\n        const cipher = node_crypto__WEBPACK_IMPORTED_MODULE_0__.createCipheriv(algorithm, this.key.k.subarray(0, keySizeInBytes), iv);\n        let encrypted = cipher.update(Buffer.from(encryptParameters.plaintext));\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\n        return Promise.resolve({\n            algorithm: encryptParameters.algorithm,\n            result: encrypted,\n            iv: iv,\n        });\n    }\n    decrypt(decryptParameters, _options) {\n        const { algorithm, keySizeInBytes } = this.supportedAlgorithms[decryptParameters.algorithm];\n        this.ensureValid(keySizeInBytes);\n        const decipher = node_crypto__WEBPACK_IMPORTED_MODULE_0__.createDecipheriv(algorithm, this.key.k.subarray(0, keySizeInBytes), decryptParameters.iv);\n        let dec = decipher.update(Buffer.from(decryptParameters.ciphertext));\n        dec = Buffer.concat([dec, decipher.final()]);\n        return Promise.resolve({\n            algorithm: decryptParameters.algorithm,\n            result: dec,\n        });\n    }\n    isSupported(algorithm, operation) {\n        if (!this.key.k) {\n            return false;\n        }\n        if (!Object.keys(this.supportedAlgorithms).includes(algorithm)) {\n            return false;\n        }\n        if (!this.supportedOperations.includes(operation)) {\n            return false;\n        }\n        return true;\n    }\n    wrapKey(_algorithm, _keyToWrap, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_1__.LocalCryptographyUnsupportedError(\"Wrapping a key using a local JsonWebKey is not supported for AES.\");\n    }\n    unwrapKey(_algorithm, _encryptedKey, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_1__.LocalCryptographyUnsupportedError(\"Unwrapping a key using a local JsonWebKey is not supported for AES.\");\n    }\n    sign(_algorithm, _digest, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_1__.LocalCryptographyUnsupportedError(\"Signing using a local JsonWebKey is not supported for AES.\");\n    }\n    signData(_algorithm, _data, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_1__.LocalCryptographyUnsupportedError(\"Signing using a local JsonWebKey is not supported for AES.\");\n    }\n    verify(_algorithm, _digest, _signature, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_1__.LocalCryptographyUnsupportedError(\"Verifying using a local JsonWebKey is not supported for AES.\");\n    }\n    verifyData(_algorithm, _data, _signature, _updatedOptions) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_1__.LocalCryptographyUnsupportedError(\"Verifying using a local JsonWebKey is not supported for AES.\");\n    }\n    ensureValid(keySizeInBytes) {\n        var _a, _b;\n        if (this.key &&\n            ((_a = this.key.kty) === null || _a === void 0 ? void 0 : _a.toUpperCase()) !== \"OCT\" &&\n            ((_b = this.key.kty) === null || _b === void 0 ? void 0 : _b.toUpperCase()) !== \"OCT-HSM\") {\n            throw new Error(\"Key type does not match the key type oct or oct-hsm\");\n        }\n        if (!this.key.k) {\n            throw new Error(\"Symmetric key is required\");\n        }\n        if (this.key.k.length < keySizeInBytes) {\n            throw new Error(`Key must be at least ${keySizeInBytes << 3} bits`);\n        }\n    }\n}\n//# sourceMappingURL=aesCryptographyProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L2Flc0NyeXB0b2dyYXBoeVByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDc0M7QUFDMEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEJBQTRCO0FBQzVDLDJDQUEyQyxvREFBa0I7QUFDN0Q7QUFDQSx1QkFBdUIsdURBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsZ0JBQWdCLDRCQUE0QjtBQUM1QztBQUNBLHlCQUF5Qix5REFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QscUJBQXFCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L2Flc0NyeXB0b2dyYXBoeVByb3ZpZGVyLmpzP2YzZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgKiBhcyBjcnlwdG8gZnJvbSBcIm5vZGU6Y3J5cHRvXCI7XG5pbXBvcnQgeyBMb2NhbENyeXB0b2dyYXBoeVVuc3VwcG9ydGVkRXJyb3IgfSBmcm9tIFwiLi9tb2RlbHMuanNcIjtcbi8qKlxuICogQW4gQUVTIGNyeXB0b2dyYXBoeSBwcm92aWRlciBzdXBwb3J0aW5nIEFFUyBhbGdvcml0aG1zLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBBZXNDcnlwdG9ncmFwaHlQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3Ioa2V5KSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgc2V0IG9mIGFsZ29yaXRobXMgdGhpcyBwcm92aWRlciBzdXBwb3J0cy5cbiAgICAgICAgICogRm9yIEFFUyBlbmNyeXB0aW9uLCB0aGUgdmFsdWVzIGluY2x1ZGUgdGhlIHVuZGVybHlpbmcgYWxnb3JpdGhtIHVzZWQgaW4gY3J5cHRvXG4gICAgICAgICAqIGFzIHdlbGwgYXMgdGhlIGtleSBzaXplIGluIGJ5dGVzLlxuICAgICAgICAgKlxuICAgICAgICAgKiBXZSBzdGFydCB3aXRoIHN1cHBvcnQgZm9yIEFbU0laRV1DQkNQQUQgd2hpY2ggdXNlcyB0aGUgUEtDUyBwYWRkaW5nICh0aGUgZGVmYXVsdCBwYWRkaW5nIHNjaGVtZSBpbiBub2RlIGNyeXB0bylcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc3VwcG9ydGVkQWxnb3JpdGhtcyA9IHtcbiAgICAgICAgICAgIEExMjhDQkNQQUQ6IHtcbiAgICAgICAgICAgICAgICBhbGdvcml0aG06IFwiYWVzLTEyOC1jYmNcIixcbiAgICAgICAgICAgICAgICBrZXlTaXplSW5CeXRlczogMTI4ID4+IDMsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQTE5MkNCQ1BBRDoge1xuICAgICAgICAgICAgICAgIGFsZ29yaXRobTogXCJhZXMtMTkyLWNiY1wiLFxuICAgICAgICAgICAgICAgIGtleVNpemVJbkJ5dGVzOiAxOTIgPj4gMyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBBMjU2Q0JDUEFEOiB7XG4gICAgICAgICAgICAgICAgYWxnb3JpdGhtOiBcImFlcy0yNTYtY2JjXCIsXG4gICAgICAgICAgICAgICAga2V5U2l6ZUluQnl0ZXM6IDI1NiA+PiAzLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zdXBwb3J0ZWRPcGVyYXRpb25zID0gW1wiZW5jcnlwdFwiLCBcImRlY3J5cHRcIl07XG4gICAgICAgIHRoaXMua2V5ID0ga2V5O1xuICAgIH1cbiAgICBlbmNyeXB0KGVuY3J5cHRQYXJhbWV0ZXJzLCBfb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGFsZ29yaXRobSwga2V5U2l6ZUluQnl0ZXMgfSA9IHRoaXMuc3VwcG9ydGVkQWxnb3JpdGhtc1tlbmNyeXB0UGFyYW1ldGVycy5hbGdvcml0aG1dO1xuICAgICAgICBjb25zdCBpdiA9IGVuY3J5cHRQYXJhbWV0ZXJzLml2IHx8IGNyeXB0by5yYW5kb21CeXRlcygxNik7XG4gICAgICAgIHRoaXMuZW5zdXJlVmFsaWQoa2V5U2l6ZUluQnl0ZXMpO1xuICAgICAgICBjb25zdCBjaXBoZXIgPSBjcnlwdG8uY3JlYXRlQ2lwaGVyaXYoYWxnb3JpdGhtLCB0aGlzLmtleS5rLnN1YmFycmF5KDAsIGtleVNpemVJbkJ5dGVzKSwgaXYpO1xuICAgICAgICBsZXQgZW5jcnlwdGVkID0gY2lwaGVyLnVwZGF0ZShCdWZmZXIuZnJvbShlbmNyeXB0UGFyYW1ldGVycy5wbGFpbnRleHQpKTtcbiAgICAgICAgZW5jcnlwdGVkID0gQnVmZmVyLmNvbmNhdChbZW5jcnlwdGVkLCBjaXBoZXIuZmluYWwoKV0pO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgIGFsZ29yaXRobTogZW5jcnlwdFBhcmFtZXRlcnMuYWxnb3JpdGhtLFxuICAgICAgICAgICAgcmVzdWx0OiBlbmNyeXB0ZWQsXG4gICAgICAgICAgICBpdjogaXYsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBkZWNyeXB0KGRlY3J5cHRQYXJhbWV0ZXJzLCBfb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGFsZ29yaXRobSwga2V5U2l6ZUluQnl0ZXMgfSA9IHRoaXMuc3VwcG9ydGVkQWxnb3JpdGhtc1tkZWNyeXB0UGFyYW1ldGVycy5hbGdvcml0aG1dO1xuICAgICAgICB0aGlzLmVuc3VyZVZhbGlkKGtleVNpemVJbkJ5dGVzKTtcbiAgICAgICAgY29uc3QgZGVjaXBoZXIgPSBjcnlwdG8uY3JlYXRlRGVjaXBoZXJpdihhbGdvcml0aG0sIHRoaXMua2V5Lmsuc3ViYXJyYXkoMCwga2V5U2l6ZUluQnl0ZXMpLCBkZWNyeXB0UGFyYW1ldGVycy5pdik7XG4gICAgICAgIGxldCBkZWMgPSBkZWNpcGhlci51cGRhdGUoQnVmZmVyLmZyb20oZGVjcnlwdFBhcmFtZXRlcnMuY2lwaGVydGV4dCkpO1xuICAgICAgICBkZWMgPSBCdWZmZXIuY29uY2F0KFtkZWMsIGRlY2lwaGVyLmZpbmFsKCldKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICBhbGdvcml0aG06IGRlY3J5cHRQYXJhbWV0ZXJzLmFsZ29yaXRobSxcbiAgICAgICAgICAgIHJlc3VsdDogZGVjLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgaXNTdXBwb3J0ZWQoYWxnb3JpdGhtLCBvcGVyYXRpb24pIHtcbiAgICAgICAgaWYgKCF0aGlzLmtleS5rKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFPYmplY3Qua2V5cyh0aGlzLnN1cHBvcnRlZEFsZ29yaXRobXMpLmluY2x1ZGVzKGFsZ29yaXRobSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuc3VwcG9ydGVkT3BlcmF0aW9ucy5pbmNsdWRlcyhvcGVyYXRpb24pKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHdyYXBLZXkoX2FsZ29yaXRobSwgX2tleVRvV3JhcCwgX29wdGlvbnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IExvY2FsQ3J5cHRvZ3JhcGh5VW5zdXBwb3J0ZWRFcnJvcihcIldyYXBwaW5nIGEga2V5IHVzaW5nIGEgbG9jYWwgSnNvbldlYktleSBpcyBub3Qgc3VwcG9ydGVkIGZvciBBRVMuXCIpO1xuICAgIH1cbiAgICB1bndyYXBLZXkoX2FsZ29yaXRobSwgX2VuY3J5cHRlZEtleSwgX29wdGlvbnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IExvY2FsQ3J5cHRvZ3JhcGh5VW5zdXBwb3J0ZWRFcnJvcihcIlVud3JhcHBpbmcgYSBrZXkgdXNpbmcgYSBsb2NhbCBKc29uV2ViS2V5IGlzIG5vdCBzdXBwb3J0ZWQgZm9yIEFFUy5cIik7XG4gICAgfVxuICAgIHNpZ24oX2FsZ29yaXRobSwgX2RpZ2VzdCwgX29wdGlvbnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IExvY2FsQ3J5cHRvZ3JhcGh5VW5zdXBwb3J0ZWRFcnJvcihcIlNpZ25pbmcgdXNpbmcgYSBsb2NhbCBKc29uV2ViS2V5IGlzIG5vdCBzdXBwb3J0ZWQgZm9yIEFFUy5cIik7XG4gICAgfVxuICAgIHNpZ25EYXRhKF9hbGdvcml0aG0sIF9kYXRhLCBfb3B0aW9ucykge1xuICAgICAgICB0aHJvdyBuZXcgTG9jYWxDcnlwdG9ncmFwaHlVbnN1cHBvcnRlZEVycm9yKFwiU2lnbmluZyB1c2luZyBhIGxvY2FsIEpzb25XZWJLZXkgaXMgbm90IHN1cHBvcnRlZCBmb3IgQUVTLlwiKTtcbiAgICB9XG4gICAgdmVyaWZ5KF9hbGdvcml0aG0sIF9kaWdlc3QsIF9zaWduYXR1cmUsIF9vcHRpb25zKSB7XG4gICAgICAgIHRocm93IG5ldyBMb2NhbENyeXB0b2dyYXBoeVVuc3VwcG9ydGVkRXJyb3IoXCJWZXJpZnlpbmcgdXNpbmcgYSBsb2NhbCBKc29uV2ViS2V5IGlzIG5vdCBzdXBwb3J0ZWQgZm9yIEFFUy5cIik7XG4gICAgfVxuICAgIHZlcmlmeURhdGEoX2FsZ29yaXRobSwgX2RhdGEsIF9zaWduYXR1cmUsIF91cGRhdGVkT3B0aW9ucykge1xuICAgICAgICB0aHJvdyBuZXcgTG9jYWxDcnlwdG9ncmFwaHlVbnN1cHBvcnRlZEVycm9yKFwiVmVyaWZ5aW5nIHVzaW5nIGEgbG9jYWwgSnNvbldlYktleSBpcyBub3Qgc3VwcG9ydGVkIGZvciBBRVMuXCIpO1xuICAgIH1cbiAgICBlbnN1cmVWYWxpZChrZXlTaXplSW5CeXRlcykge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAodGhpcy5rZXkgJiZcbiAgICAgICAgICAgICgoX2EgPSB0aGlzLmtleS5rdHkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b1VwcGVyQ2FzZSgpKSAhPT0gXCJPQ1RcIiAmJlxuICAgICAgICAgICAgKChfYiA9IHRoaXMua2V5Lmt0eSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnRvVXBwZXJDYXNlKCkpICE9PSBcIk9DVC1IU01cIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiS2V5IHR5cGUgZG9lcyBub3QgbWF0Y2ggdGhlIGtleSB0eXBlIG9jdCBvciBvY3QtaHNtXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5rZXkuaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3ltbWV0cmljIGtleSBpcyByZXF1aXJlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5rZXkuay5sZW5ndGggPCBrZXlTaXplSW5CeXRlcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBLZXkgbXVzdCBiZSBhdCBsZWFzdCAke2tleVNpemVJbkJ5dGVzIDw8IDN9IGJpdHNgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFlc0NyeXB0b2dyYXBoeVByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/aesCryptographyProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/conversions.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptography/conversions.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertJWKtoPEM: () => (/* binding */ convertJWKtoPEM)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n * Encodes a length of a packet in DER format\n */\nfunction encodeLength(length) {\n    if (length <= 127) {\n        return Uint8Array.of(length);\n    }\n    else if (length < 256) {\n        return Uint8Array.of(0x81, length);\n    }\n    else if (length < 65536) {\n        return Uint8Array.of(0x82, length >> 8, length & 0xff);\n    }\n    else {\n        throw new Error(\"Unsupported length to encode\");\n    }\n}\n/**\n * @internal\n * Encodes a buffer for DER, as sets the id to the given id\n */\nfunction encodeBuffer(buffer, bufferId) {\n    if (buffer.length === 0) {\n        return buffer;\n    }\n    let result = new Uint8Array(buffer);\n    // If the high bit is set, prepend a 0\n    if (result[0] & 0x80) {\n        const array = new Uint8Array(result.length + 1);\n        array[0] = 0;\n        array.set(result, 1);\n        result = array;\n    }\n    // Prepend the DER header for this buffer\n    const encodedLength = encodeLength(result.length);\n    const totalLength = 1 + encodedLength.length + result.length;\n    const outputBuffer = new Uint8Array(totalLength);\n    outputBuffer[0] = bufferId;\n    outputBuffer.set(encodedLength, 1);\n    outputBuffer.set(result, 1 + encodedLength.length);\n    return outputBuffer;\n}\nfunction makeSequence(encodedParts) {\n    const totalLength = encodedParts.reduce((sum, part) => sum + part.length, 0);\n    const sequence = new Uint8Array(totalLength);\n    for (let i = 0; i < encodedParts.length; i++) {\n        const previousLength = i > 0 ? encodedParts[i - 1].length : 0;\n        sequence.set(encodedParts[i], previousLength);\n    }\n    const full_encoded = encodeBuffer(sequence, 0x30); // SEQUENCE\n    return Buffer.from(full_encoded).toString(\"base64\");\n}\n/**\n * Fill in the PEM with 64 character lines as per RFC:\n *\n * \"To represent the encapsulated text of a PEM message, the encoding\n * function's output is delimited into text lines (using local\n * conventions), with each line except the last containing exactly 64\n * printable characters and the final line containing 64 or fewer\n * printable characters.\"\n */\nfunction formatBase64Sequence(base64Sequence) {\n    const lines = base64Sequence.match(/.{1,64}/g);\n    let result = \"\";\n    if (lines) {\n        for (const line of lines) {\n            result += line;\n            result += \"\\n\";\n        }\n    }\n    else {\n        throw new Error(\"Could not create correct PEM\");\n    }\n    return result;\n}\n/**\n * @internal\n * Encode a JWK to PEM format. To do so, it internally repackages the JWK as a DER\n * that is then encoded as a PEM.\n */\nfunction convertJWKtoPEM(key) {\n    let result = \"\";\n    if (key.n && key.e) {\n        const parts = [key.n, key.e];\n        const encodedParts = parts.map((part) => encodeBuffer(part, 0x2)); // INTEGER\n        const base64Sequence = makeSequence(encodedParts);\n        result += \"-----BEGIN RSA PUBLIC KEY-----\\n\";\n        result += formatBase64Sequence(base64Sequence);\n        result += \"-----END RSA PUBLIC KEY-----\\n\";\n    }\n    if (!result.length) {\n        throw new Error(\"Unsupported key format for local operations\");\n    }\n    return result.slice(0, -1); // Removing the last new line\n}\n//# sourceMappingURL=conversions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L2NvbnZlcnNpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseUJBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsS0FBSztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwyRUFBMkU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L2NvbnZlcnNpb25zLmpzP2E3YTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4vKipcbiAqIEBpbnRlcm5hbFxuICogRW5jb2RlcyBhIGxlbmd0aCBvZiBhIHBhY2tldCBpbiBERVIgZm9ybWF0XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUxlbmd0aChsZW5ndGgpIHtcbiAgICBpZiAobGVuZ3RoIDw9IDEyNykge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5vZihsZW5ndGgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChsZW5ndGggPCAyNTYpIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkub2YoMHg4MSwgbGVuZ3RoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAobGVuZ3RoIDwgNjU1MzYpIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkub2YoMHg4MiwgbGVuZ3RoID4+IDgsIGxlbmd0aCAmIDB4ZmYpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgbGVuZ3RoIHRvIGVuY29kZVwiKTtcbiAgICB9XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICogRW5jb2RlcyBhIGJ1ZmZlciBmb3IgREVSLCBhcyBzZXRzIHRoZSBpZCB0byB0aGUgZ2l2ZW4gaWRcbiAqL1xuZnVuY3Rpb24gZW5jb2RlQnVmZmVyKGJ1ZmZlciwgYnVmZmVySWQpIHtcbiAgICBpZiAoYnVmZmVyLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgIH1cbiAgICBsZXQgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKTtcbiAgICAvLyBJZiB0aGUgaGlnaCBiaXQgaXMgc2V0LCBwcmVwZW5kIGEgMFxuICAgIGlmIChyZXN1bHRbMF0gJiAweDgwKSB7XG4gICAgICAgIGNvbnN0IGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkocmVzdWx0Lmxlbmd0aCArIDEpO1xuICAgICAgICBhcnJheVswXSA9IDA7XG4gICAgICAgIGFycmF5LnNldChyZXN1bHQsIDEpO1xuICAgICAgICByZXN1bHQgPSBhcnJheTtcbiAgICB9XG4gICAgLy8gUHJlcGVuZCB0aGUgREVSIGhlYWRlciBmb3IgdGhpcyBidWZmZXJcbiAgICBjb25zdCBlbmNvZGVkTGVuZ3RoID0gZW5jb2RlTGVuZ3RoKHJlc3VsdC5sZW5ndGgpO1xuICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gMSArIGVuY29kZWRMZW5ndGgubGVuZ3RoICsgcmVzdWx0Lmxlbmd0aDtcbiAgICBjb25zdCBvdXRwdXRCdWZmZXIgPSBuZXcgVWludDhBcnJheSh0b3RhbExlbmd0aCk7XG4gICAgb3V0cHV0QnVmZmVyWzBdID0gYnVmZmVySWQ7XG4gICAgb3V0cHV0QnVmZmVyLnNldChlbmNvZGVkTGVuZ3RoLCAxKTtcbiAgICBvdXRwdXRCdWZmZXIuc2V0KHJlc3VsdCwgMSArIGVuY29kZWRMZW5ndGgubGVuZ3RoKTtcbiAgICByZXR1cm4gb3V0cHV0QnVmZmVyO1xufVxuZnVuY3Rpb24gbWFrZVNlcXVlbmNlKGVuY29kZWRQYXJ0cykge1xuICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gZW5jb2RlZFBhcnRzLnJlZHVjZSgoc3VtLCBwYXJ0KSA9PiBzdW0gKyBwYXJ0Lmxlbmd0aCwgMCk7XG4gICAgY29uc3Qgc2VxdWVuY2UgPSBuZXcgVWludDhBcnJheSh0b3RhbExlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbmNvZGVkUGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgcHJldmlvdXNMZW5ndGggPSBpID4gMCA/IGVuY29kZWRQYXJ0c1tpIC0gMV0ubGVuZ3RoIDogMDtcbiAgICAgICAgc2VxdWVuY2Uuc2V0KGVuY29kZWRQYXJ0c1tpXSwgcHJldmlvdXNMZW5ndGgpO1xuICAgIH1cbiAgICBjb25zdCBmdWxsX2VuY29kZWQgPSBlbmNvZGVCdWZmZXIoc2VxdWVuY2UsIDB4MzApOyAvLyBTRVFVRU5DRVxuICAgIHJldHVybiBCdWZmZXIuZnJvbShmdWxsX2VuY29kZWQpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuLyoqXG4gKiBGaWxsIGluIHRoZSBQRU0gd2l0aCA2NCBjaGFyYWN0ZXIgbGluZXMgYXMgcGVyIFJGQzpcbiAqXG4gKiBcIlRvIHJlcHJlc2VudCB0aGUgZW5jYXBzdWxhdGVkIHRleHQgb2YgYSBQRU0gbWVzc2FnZSwgdGhlIGVuY29kaW5nXG4gKiBmdW5jdGlvbidzIG91dHB1dCBpcyBkZWxpbWl0ZWQgaW50byB0ZXh0IGxpbmVzICh1c2luZyBsb2NhbFxuICogY29udmVudGlvbnMpLCB3aXRoIGVhY2ggbGluZSBleGNlcHQgdGhlIGxhc3QgY29udGFpbmluZyBleGFjdGx5IDY0XG4gKiBwcmludGFibGUgY2hhcmFjdGVycyBhbmQgdGhlIGZpbmFsIGxpbmUgY29udGFpbmluZyA2NCBvciBmZXdlclxuICogcHJpbnRhYmxlIGNoYXJhY3RlcnMuXCJcbiAqL1xuZnVuY3Rpb24gZm9ybWF0QmFzZTY0U2VxdWVuY2UoYmFzZTY0U2VxdWVuY2UpIHtcbiAgICBjb25zdCBsaW5lcyA9IGJhc2U2NFNlcXVlbmNlLm1hdGNoKC8uezEsNjR9L2cpO1xuICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgIGlmIChsaW5lcykge1xuICAgICAgICBmb3IgKGNvbnN0IGxpbmUgb2YgbGluZXMpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBsaW5lO1xuICAgICAgICAgICAgcmVzdWx0ICs9IFwiXFxuXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBjcmVhdGUgY29ycmVjdCBQRU1cIik7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICogRW5jb2RlIGEgSldLIHRvIFBFTSBmb3JtYXQuIFRvIGRvIHNvLCBpdCBpbnRlcm5hbGx5IHJlcGFja2FnZXMgdGhlIEpXSyBhcyBhIERFUlxuICogdGhhdCBpcyB0aGVuIGVuY29kZWQgYXMgYSBQRU0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SldLdG9QRU0oa2V5KSB7XG4gICAgbGV0IHJlc3VsdCA9IFwiXCI7XG4gICAgaWYgKGtleS5uICYmIGtleS5lKSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gW2tleS5uLCBrZXkuZV07XG4gICAgICAgIGNvbnN0IGVuY29kZWRQYXJ0cyA9IHBhcnRzLm1hcCgocGFydCkgPT4gZW5jb2RlQnVmZmVyKHBhcnQsIDB4MikpOyAvLyBJTlRFR0VSXG4gICAgICAgIGNvbnN0IGJhc2U2NFNlcXVlbmNlID0gbWFrZVNlcXVlbmNlKGVuY29kZWRQYXJ0cyk7XG4gICAgICAgIHJlc3VsdCArPSBcIi0tLS0tQkVHSU4gUlNBIFBVQkxJQyBLRVktLS0tLVxcblwiO1xuICAgICAgICByZXN1bHQgKz0gZm9ybWF0QmFzZTY0U2VxdWVuY2UoYmFzZTY0U2VxdWVuY2UpO1xuICAgICAgICByZXN1bHQgKz0gXCItLS0tLUVORCBSU0EgUFVCTElDIEtFWS0tLS0tXFxuXCI7XG4gICAgfVxuICAgIGlmICghcmVzdWx0Lmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBrZXkgZm9ybWF0IGZvciBsb2NhbCBvcGVyYXRpb25zXCIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0LnNsaWNlKDAsIC0xKTsgLy8gUmVtb3ZpbmcgdGhlIGxhc3QgbmV3IGxpbmVcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnZlcnNpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/conversions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/crypto.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptography/crypto.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHash: () => (/* binding */ createHash),\n/* harmony export */   createVerify: () => (/* binding */ createVerify),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n * Mapping between signature algorithms and their corresponding hash algorithms. Externally used for testing.\n **/\nconst algorithmToHashAlgorithm = {\n    ES256: \"SHA256\",\n    ES256K: \"SHA256\",\n    PS256: \"SHA256\",\n    RS256: \"SHA256\",\n    ES384: \"SHA384\",\n    PS384: \"SHA384\",\n    RS384: \"SHA384\",\n    ES512: \"SHA512\",\n    PS512: \"SHA512\",\n    RS512: \"SHA512\",\n};\n/**\n * @internal\n * Use the platform-local hashing functionality\n */\nasync function createHash(algorithm, data) {\n    const hashAlgorithm = algorithmToHashAlgorithm[algorithm];\n    if (!hashAlgorithm) {\n        throw new Error(`Invalid algorithm ${algorithm} passed to createHash. Supported algorithms: ${Object.keys(algorithmToHashAlgorithm).join(\", \")}`);\n    }\n    const hash = (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(hashAlgorithm);\n    hash.update(Buffer.from(data));\n    const digest = hash.digest();\n    return digest;\n}\n/**\n * @internal\n * Use the platform-local verify functionality\n */\nfunction createVerify(algorithm, data) {\n    const verifyAlgorithm = algorithmToHashAlgorithm[algorithm];\n    if (!verifyAlgorithm) {\n        throw new Error(`Invalid algorithm ${algorithm} passed to createHash. Supported algorithms: ${Object.keys(algorithmToHashAlgorithm).join(\", \")}`);\n    }\n    const verifier = (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createVerify)(verifyAlgorithm);\n    verifier.update(Buffer.from(data));\n    verifier.end();\n    return verifier;\n}\n/**\n * @internal\n * Use the platform-local randomBytes functionality\n */\nfunction randomBytes(length) {\n    return (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(length);\n}\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L2NyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNvSTtBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsNkNBQTZDLFdBQVcsOENBQThDLGlEQUFpRDtBQUN2SjtBQUNBLGlCQUFpQix1REFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZDQUE2QyxXQUFXLDhDQUE4QyxpREFBaUQ7QUFDdko7QUFDQSxxQkFBcUIseURBQWtCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsd0RBQWlCO0FBQzVCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUva2V5dmF1bHQta2V5cy9kaXN0L2VzbS9jcnlwdG9ncmFwaHkvY3J5cHRvLmpzP2FmMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIYXNoIGFzIGNyeXB0b0NyZWF0ZUhhc2gsIGNyZWF0ZVZlcmlmeSBhcyBjcnlwdG9DcmVhdGVWZXJpZnksIHJhbmRvbUJ5dGVzIGFzIGNyeXB0b1JhbmRvbUJ5dGVzLCB9IGZyb20gXCJub2RlOmNyeXB0b1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIE1hcHBpbmcgYmV0d2VlbiBzaWduYXR1cmUgYWxnb3JpdGhtcyBhbmQgdGhlaXIgY29ycmVzcG9uZGluZyBoYXNoIGFsZ29yaXRobXMuIEV4dGVybmFsbHkgdXNlZCBmb3IgdGVzdGluZy5cbiAqKi9cbmNvbnN0IGFsZ29yaXRobVRvSGFzaEFsZ29yaXRobSA9IHtcbiAgICBFUzI1NjogXCJTSEEyNTZcIixcbiAgICBFUzI1Nks6IFwiU0hBMjU2XCIsXG4gICAgUFMyNTY6IFwiU0hBMjU2XCIsXG4gICAgUlMyNTY6IFwiU0hBMjU2XCIsXG4gICAgRVMzODQ6IFwiU0hBMzg0XCIsXG4gICAgUFMzODQ6IFwiU0hBMzg0XCIsXG4gICAgUlMzODQ6IFwiU0hBMzg0XCIsXG4gICAgRVM1MTI6IFwiU0hBNTEyXCIsXG4gICAgUFM1MTI6IFwiU0hBNTEyXCIsXG4gICAgUlM1MTI6IFwiU0hBNTEyXCIsXG59O1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIFVzZSB0aGUgcGxhdGZvcm0tbG9jYWwgaGFzaGluZyBmdW5jdGlvbmFsaXR5XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVIYXNoKGFsZ29yaXRobSwgZGF0YSkge1xuICAgIGNvbnN0IGhhc2hBbGdvcml0aG0gPSBhbGdvcml0aG1Ub0hhc2hBbGdvcml0aG1bYWxnb3JpdGhtXTtcbiAgICBpZiAoIWhhc2hBbGdvcml0aG0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGFsZ29yaXRobSAke2FsZ29yaXRobX0gcGFzc2VkIHRvIGNyZWF0ZUhhc2guIFN1cHBvcnRlZCBhbGdvcml0aG1zOiAke09iamVjdC5rZXlzKGFsZ29yaXRobVRvSGFzaEFsZ29yaXRobSkuam9pbihcIiwgXCIpfWApO1xuICAgIH1cbiAgICBjb25zdCBoYXNoID0gY3J5cHRvQ3JlYXRlSGFzaChoYXNoQWxnb3JpdGhtKTtcbiAgICBoYXNoLnVwZGF0ZShCdWZmZXIuZnJvbShkYXRhKSk7XG4gICAgY29uc3QgZGlnZXN0ID0gaGFzaC5kaWdlc3QoKTtcbiAgICByZXR1cm4gZGlnZXN0O1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIFVzZSB0aGUgcGxhdGZvcm0tbG9jYWwgdmVyaWZ5IGZ1bmN0aW9uYWxpdHlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVZlcmlmeShhbGdvcml0aG0sIGRhdGEpIHtcbiAgICBjb25zdCB2ZXJpZnlBbGdvcml0aG0gPSBhbGdvcml0aG1Ub0hhc2hBbGdvcml0aG1bYWxnb3JpdGhtXTtcbiAgICBpZiAoIXZlcmlmeUFsZ29yaXRobSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYWxnb3JpdGhtICR7YWxnb3JpdGhtfSBwYXNzZWQgdG8gY3JlYXRlSGFzaC4gU3VwcG9ydGVkIGFsZ29yaXRobXM6ICR7T2JqZWN0LmtleXMoYWxnb3JpdGhtVG9IYXNoQWxnb3JpdGhtKS5qb2luKFwiLCBcIil9YCk7XG4gICAgfVxuICAgIGNvbnN0IHZlcmlmaWVyID0gY3J5cHRvQ3JlYXRlVmVyaWZ5KHZlcmlmeUFsZ29yaXRobSk7XG4gICAgdmVyaWZpZXIudXBkYXRlKEJ1ZmZlci5mcm9tKGRhdGEpKTtcbiAgICB2ZXJpZmllci5lbmQoKTtcbiAgICByZXR1cm4gdmVyaWZpZXI7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICogVXNlIHRoZSBwbGF0Zm9ybS1sb2NhbCByYW5kb21CeXRlcyBmdW5jdGlvbmFsaXR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21CeXRlcyhsZW5ndGgpIHtcbiAgICByZXR1cm4gY3J5cHRvUmFuZG9tQnl0ZXMobGVuZ3RoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyeXB0by5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/crypto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/models.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptography/models.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalCryptographyUnsupportedError: () => (/* binding */ LocalCryptographyUnsupportedError)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nclass LocalCryptographyUnsupportedError extends Error {\n}\n//# sourceMappingURL=models.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L21vZGVscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9tb2RlbHMuanM/NjgyMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCBjbGFzcyBMb2NhbENyeXB0b2dyYXBoeVVuc3VwcG9ydGVkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2RlbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/models.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/remoteCryptographyProvider.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptography/remoteCryptographyProvider.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoteCryptographyProvider: () => (/* binding */ RemoteCryptographyProvider)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/constants.js\");\n/* harmony import */ var _generated_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/index.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/index.js\");\n/* harmony import */ var _identifier_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../identifier.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/identifier.js\");\n/* harmony import */ var _keysModels_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../keysModels.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/keysModels.js\");\n/* harmony import */ var _transformations_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../transformations.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/transformations.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./crypto.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/crypto.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/log.js\");\n/* harmony import */ var _azure_keyvault_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/keyvault-common */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/index.js\");\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../tracing.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The remote cryptography provider is used to run crypto operations against KeyVault.\n * @internal\n */\nclass RemoteCryptographyProvider {\n    constructor(key, credential, pipelineOptions = {}) {\n        var _a;\n        this.key = key;\n        let keyId;\n        if (typeof key === \"string\") {\n            keyId = key;\n        }\n        else {\n            keyId = key.id;\n        }\n        try {\n            const parsed = (0,_identifier_js__WEBPACK_IMPORTED_MODULE_2__.parseKeyVaultKeyIdentifier)(keyId);\n            if (parsed.name === \"\") {\n                throw new Error(\"Could not find 'name' of key in key URL\");\n            }\n            if (!parsed.vaultUrl || parsed.vaultUrl === \"\") {\n                throw new Error(\"Could not find 'vaultUrl' of key in key URL\");\n            }\n            this.vaultUrl = parsed.vaultUrl;\n            this.name = parsed.name;\n            this.version = (_a = parsed.version) !== null && _a !== void 0 ? _a : \"\";\n            this.client = getOrInitializeClient(this.vaultUrl, credential, pipelineOptions);\n        }\n        catch (err) {\n            _log_js__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n            throw new Error(`${keyId} is not a valid Key Vault key ID`);\n        }\n    }\n    // The remote client supports all algorithms and all operations.\n    isSupported(_algorithm, _operation) {\n        return true;\n    }\n    encrypt(encryptParameters, options = {}) {\n        const { algorithm, plaintext } = encryptParameters, params = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__rest)(encryptParameters, [\"algorithm\", \"plaintext\"]);\n        const requestOptions = Object.assign(Object.assign({}, options), params);\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.encrypt\", requestOptions, async (updatedOptions) => {\n            const result = await this.client.encrypt(this.name, this.version, {\n                algorithm,\n                value: plaintext,\n                aad: \"additionalAuthenticatedData\" in encryptParameters\n                    ? encryptParameters.additionalAuthenticatedData\n                    : undefined,\n                iv: \"iv\" in encryptParameters ? encryptParameters.iv : undefined,\n            }, updatedOptions);\n            return {\n                algorithm: encryptParameters.algorithm,\n                result: result.result,\n                keyID: this.getKeyID(),\n                additionalAuthenticatedData: result.additionalAuthenticatedData,\n                authenticationTag: result.authenticationTag,\n                iv: result.iv,\n            };\n        });\n    }\n    decrypt(decryptParameters, options = {}) {\n        const { algorithm, ciphertext } = decryptParameters, params = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__rest)(decryptParameters, [\"algorithm\", \"ciphertext\"]);\n        const requestOptions = Object.assign(Object.assign({}, options), params);\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.decrypt\", requestOptions, async (updatedOptions) => {\n            const result = await this.client.decrypt(this.name, this.version, {\n                algorithm,\n                value: ciphertext,\n                aad: \"additionalAuthenticatedData\" in decryptParameters\n                    ? decryptParameters.additionalAuthenticatedData\n                    : undefined,\n                iv: \"iv\" in decryptParameters ? decryptParameters.iv : undefined,\n                tag: \"authenticationTag\" in decryptParameters\n                    ? decryptParameters.authenticationTag\n                    : undefined,\n            }, updatedOptions);\n            return {\n                result: result.result,\n                keyID: this.getKeyID(),\n                algorithm,\n            };\n        });\n    }\n    wrapKey(algorithm, keyToWrap, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.wrapKey\", options, async (updatedOptions) => {\n            const result = await this.client.wrapKey(this.name, this.version, {\n                algorithm,\n                value: keyToWrap,\n            }, updatedOptions);\n            return {\n                result: result.result,\n                algorithm,\n                keyID: this.getKeyID(),\n            };\n        });\n    }\n    unwrapKey(algorithm, encryptedKey, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.unwrapKey\", options, async (updatedOptions) => {\n            const result = await this.client.unwrapKey(this.name, this.version, {\n                algorithm,\n                value: encryptedKey,\n            }, updatedOptions);\n            return {\n                result: result.result,\n                algorithm,\n                keyID: this.getKeyID(),\n            };\n        });\n    }\n    sign(algorithm, digest, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.sign\", options, async (updatedOptions) => {\n            const result = await this.client.sign(this.name, this.version, {\n                algorithm,\n                value: digest,\n            }, updatedOptions);\n            return { result: result.result, algorithm, keyID: this.getKeyID() };\n        });\n    }\n    verifyData(algorithm, data, signature, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.verifyData\", options, async (updatedOptions) => {\n            const hash = await (0,_crypto_js__WEBPACK_IMPORTED_MODULE_5__.createHash)(algorithm, data);\n            return this.verify(algorithm, hash, signature, updatedOptions);\n        });\n    }\n    verify(algorithm, digest, signature, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.verify\", options, async (updatedOptions) => {\n            const response = await this.client.verify(this.name, this.version, {\n                algorithm,\n                digest,\n                signature,\n            }, updatedOptions);\n            return {\n                result: response.value ? response.value : false,\n                keyID: this.getKeyID(),\n            };\n        });\n    }\n    signData(algorithm, data, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.signData\", options, async (updatedOptions) => {\n            const digest = await (0,_crypto_js__WEBPACK_IMPORTED_MODULE_5__.createHash)(algorithm, data);\n            const result = await this.client.sign(this.name, this.version, {\n                algorithm,\n                value: digest,\n            }, updatedOptions);\n            return { result: result.result, algorithm, keyID: this.getKeyID() };\n        });\n    }\n    /**\n     * The ID of the key used to perform cryptographic operations for the client.\n     */\n    get keyId() {\n        return this.getKeyID();\n    }\n    /**\n     * Gets the {@link KeyVaultKey} used for cryptography operations, fetching it\n     * from KeyVault if necessary.\n     * @param options - Additional options.\n     */\n    getKey(options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_8__.tracingClient.withSpan(\"RemoteCryptographyProvider.getKey\", options, async (updatedOptions) => {\n            if (typeof this.key === \"string\") {\n                if (!this.name || this.name === \"\") {\n                    throw new Error(\"getKey requires a key with a name\");\n                }\n                const response = await this.client.getKey(this.name, options && options.version ? options.version : this.version ? this.version : \"\", updatedOptions);\n                this.key = (0,_transformations_js__WEBPACK_IMPORTED_MODULE_4__.getKeyFromKeyBundle)(response);\n            }\n            return this.key;\n        });\n    }\n    /**\n     * Attempts to retrieve the ID of the key.\n     */\n    getKeyID() {\n        let kid;\n        if (typeof this.key !== \"string\") {\n            kid = this.key.id;\n        }\n        else {\n            kid = this.key;\n        }\n        return kid;\n    }\n}\n/**\n * A helper method to either get the passed down generated client or initialize a new one.\n * An already constructed generated client may be passed down from {@link KeyClient} in which case we should reuse it.\n *\n * @internal\n * @param credential - The credential to use when initializing a new client.\n * @param options - The options for constructing a client or the underlying client if one already exists.\n * @returns - A generated client instance\n */\nfunction getOrInitializeClient(vaultUrl, credential, options) {\n    if (options.generatedClient) {\n        return options.generatedClient;\n    }\n    const libInfo = `azsdk-js-keyvault-keys/${_constants_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION}`;\n    const userAgentOptions = options.userAgentOptions;\n    options.userAgentOptions = {\n        userAgentPrefix: userAgentOptions && userAgentOptions.userAgentPrefix\n            ? `${userAgentOptions.userAgentPrefix} ${libInfo}`\n            : libInfo,\n    };\n    const internalPipelineOptions = Object.assign(Object.assign({}, options), { apiVersion: options.serviceVersion || _keysModels_js__WEBPACK_IMPORTED_MODULE_3__.LATEST_API_VERSION, loggingOptions: {\n            logger: _log_js__WEBPACK_IMPORTED_MODULE_6__.logger.info,\n            additionalAllowedHeaderNames: [\n                \"x-ms-keyvault-region\",\n                \"x-ms-keyvault-network-info\",\n                \"x-ms-keyvault-service-version\",\n            ],\n        } });\n    const client = new _generated_index_js__WEBPACK_IMPORTED_MODULE_1__.KeyVaultClient(vaultUrl, credential, internalPipelineOptions);\n    client.pipeline.removePolicy({ name: _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_9__.bearerTokenAuthenticationPolicyName });\n    client.pipeline.addPolicy((0,_azure_keyvault_common__WEBPACK_IMPORTED_MODULE_7__.keyVaultAuthenticationPolicy)(credential, options));\n    // Workaround for: https://github.com/Azure/azure-sdk-for-js/issues/31843\n    client.pipeline.addPolicy({\n        name: \"ContentTypePolicy\",\n        sendRequest(request, next) {\n            var _a;\n            const contentType = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n            if (contentType.startsWith(\"application/json\")) {\n                request.headers.set(\"Content-Type\", \"application/json\");\n            }\n            return next(request);\n        },\n    });\n    return client;\n}\n//# sourceMappingURL=remoteCryptographyProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/remoteCryptographyProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/rsaCryptographyProvider.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/cryptography/rsaCryptographyProvider.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RsaCryptographyProvider: () => (/* binding */ RsaCryptographyProvider)\n/* harmony export */ });\n/* harmony import */ var constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! constants */ \"constants\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crypto.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/crypto.js\");\n/* harmony import */ var _conversions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conversions.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/conversions.js\");\n/* harmony import */ var _models_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./models.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/models.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\n\n/**\n * An RSA cryptography provider supporting RSA algorithms.\n */\nclass RsaCryptographyProvider {\n    constructor(key) {\n        /**\n         * The set of algorithms this provider supports\n         */\n        this.applicableAlgorithms = [\n            \"RSA1_5\",\n            \"RSA-OAEP\",\n            \"PS256\",\n            \"RS256\",\n            \"PS384\",\n            \"RS384\",\n            \"PS512\",\n            \"RS512\",\n        ];\n        /**\n         * The set of operations this provider supports\n         */\n        this.applicableOperations = [\n            \"encrypt\",\n            \"wrapKey\",\n            \"verifyData\",\n        ];\n        /**\n         * Mapping between signature algorithms and their corresponding hash algorithms. Externally used for testing.\n         * @internal\n         */\n        this.signatureAlgorithmToHashAlgorithm = {\n            PS256: \"SHA256\",\n            RS256: \"SHA256\",\n            PS384: \"SHA384\",\n            RS384: \"SHA384\",\n            PS512: \"SHA512\",\n            RS512: \"SHA512\",\n        };\n        this.key = key;\n    }\n    isSupported(algorithm, operation) {\n        return (this.applicableAlgorithms.includes(algorithm) && this.applicableOperations.includes(operation));\n    }\n    encrypt(encryptParameters, _options) {\n        this.ensureValid();\n        const keyPEM = (0,_conversions_js__WEBPACK_IMPORTED_MODULE_3__.convertJWKtoPEM)(this.key);\n        const padding = encryptParameters.algorithm === \"RSA1_5\" ? constants__WEBPACK_IMPORTED_MODULE_0__.RSA_PKCS1_PADDING : constants__WEBPACK_IMPORTED_MODULE_0__.RSA_PKCS1_OAEP_PADDING;\n        return Promise.resolve({\n            algorithm: encryptParameters.algorithm,\n            keyID: this.key.kid,\n            result: (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.publicEncrypt)({ key: keyPEM, padding: padding }, Buffer.from(encryptParameters.plaintext)),\n        });\n    }\n    decrypt(_decryptParameters, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_4__.LocalCryptographyUnsupportedError(\"Decrypting using a local JsonWebKey is not supported.\");\n    }\n    wrapKey(algorithm, keyToWrap, _options) {\n        this.ensureValid();\n        const keyPEM = (0,_conversions_js__WEBPACK_IMPORTED_MODULE_3__.convertJWKtoPEM)(this.key);\n        const padding = algorithm === \"RSA1_5\" ? constants__WEBPACK_IMPORTED_MODULE_0__.RSA_PKCS1_PADDING : constants__WEBPACK_IMPORTED_MODULE_0__.RSA_PKCS1_OAEP_PADDING;\n        return Promise.resolve({\n            algorithm: algorithm,\n            result: (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.publicEncrypt)({ key: keyPEM, padding }, Buffer.from(keyToWrap)),\n            keyID: this.key.kid,\n        });\n    }\n    unwrapKey(_algorithm, _encryptedKey, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_4__.LocalCryptographyUnsupportedError(\"Unwrapping a key using a local JsonWebKey is not supported.\");\n    }\n    sign(_algorithm, _digest, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_4__.LocalCryptographyUnsupportedError(\"Signing a digest using a local JsonWebKey is not supported.\");\n    }\n    signData(_algorithm, _data, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_4__.LocalCryptographyUnsupportedError(\"Signing a block of data using a local JsonWebKey is not supported.\");\n    }\n    async verify(_algorithm, _digest, _signature, _options) {\n        throw new _models_js__WEBPACK_IMPORTED_MODULE_4__.LocalCryptographyUnsupportedError(\"Verifying a digest using a local JsonWebKey is not supported.\");\n    }\n    verifyData(algorithm, data, signature, _options) {\n        this.ensureValid();\n        const keyPEM = (0,_conversions_js__WEBPACK_IMPORTED_MODULE_3__.convertJWKtoPEM)(this.key);\n        const verifier = (0,_crypto_js__WEBPACK_IMPORTED_MODULE_2__.createVerify)(algorithm, data);\n        return Promise.resolve({\n            result: verifier.verify(keyPEM, Buffer.from(signature)),\n            keyID: this.key.kid,\n        });\n    }\n    ensureValid() {\n        var _a, _b;\n        if (this.key &&\n            ((_a = this.key.kty) === null || _a === void 0 ? void 0 : _a.toUpperCase()) !== \"RSA\" &&\n            ((_b = this.key.kty) === null || _b === void 0 ? void 0 : _b.toUpperCase()) !== \"RSA-HSM\") {\n            throw new Error(\"Key type does not match the algorithm RSA\");\n        }\n    }\n}\n//# sourceMappingURL=rsaCryptographyProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L3JzYUNyeXB0b2dyYXBoeVByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDc0U7QUFDMUI7QUFDRDtBQUNRO0FBQ2E7QUFDaEU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdFQUFlO0FBQ3RDLG1FQUFtRSx3REFBaUIsR0FBRyw2REFBc0I7QUFDN0c7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBEQUFhLEdBQUcsK0JBQStCO0FBQ25FLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFpQztBQUNuRDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsZ0VBQWU7QUFDdEMsaURBQWlELHdEQUFpQixHQUFHLDZEQUFzQjtBQUMzRjtBQUNBO0FBQ0Esb0JBQW9CLDBEQUFhLEdBQUcsc0JBQXNCO0FBQzFEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IseUVBQWlDO0FBQ25EO0FBQ0E7QUFDQSxrQkFBa0IseUVBQWlDO0FBQ25EO0FBQ0E7QUFDQSxrQkFBa0IseUVBQWlDO0FBQ25EO0FBQ0E7QUFDQSxrQkFBa0IseUVBQWlDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnRUFBZTtBQUN0Qyx5QkFBeUIsd0RBQVk7QUFDckM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUva2V5dmF1bHQta2V5cy9kaXN0L2VzbS9jcnlwdG9ncmFwaHkvcnNhQ3J5cHRvZ3JhcGh5UHJvdmlkZXIuanM/YjFmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IFJTQV9QS0NTMV9PQUVQX1BBRERJTkcsIFJTQV9QS0NTMV9QQURESU5HIH0gZnJvbSBcImNvbnN0YW50c1wiO1xuaW1wb3J0IHsgcHVibGljRW5jcnlwdCB9IGZyb20gXCJub2RlOmNyeXB0b1wiO1xuaW1wb3J0IHsgY3JlYXRlVmVyaWZ5IH0gZnJvbSBcIi4vY3J5cHRvLmpzXCI7XG5pbXBvcnQgeyBjb252ZXJ0SldLdG9QRU0gfSBmcm9tIFwiLi9jb252ZXJzaW9ucy5qc1wiO1xuaW1wb3J0IHsgTG9jYWxDcnlwdG9ncmFwaHlVbnN1cHBvcnRlZEVycm9yIH0gZnJvbSBcIi4vbW9kZWxzLmpzXCI7XG4vKipcbiAqIEFuIFJTQSBjcnlwdG9ncmFwaHkgcHJvdmlkZXIgc3VwcG9ydGluZyBSU0EgYWxnb3JpdGhtcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFJzYUNyeXB0b2dyYXBoeVByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihrZXkpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBzZXQgb2YgYWxnb3JpdGhtcyB0aGlzIHByb3ZpZGVyIHN1cHBvcnRzXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFwcGxpY2FibGVBbGdvcml0aG1zID0gW1xuICAgICAgICAgICAgXCJSU0ExXzVcIixcbiAgICAgICAgICAgIFwiUlNBLU9BRVBcIixcbiAgICAgICAgICAgIFwiUFMyNTZcIixcbiAgICAgICAgICAgIFwiUlMyNTZcIixcbiAgICAgICAgICAgIFwiUFMzODRcIixcbiAgICAgICAgICAgIFwiUlMzODRcIixcbiAgICAgICAgICAgIFwiUFM1MTJcIixcbiAgICAgICAgICAgIFwiUlM1MTJcIixcbiAgICAgICAgXTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBzZXQgb2Ygb3BlcmF0aW9ucyB0aGlzIHByb3ZpZGVyIHN1cHBvcnRzXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFwcGxpY2FibGVPcGVyYXRpb25zID0gW1xuICAgICAgICAgICAgXCJlbmNyeXB0XCIsXG4gICAgICAgICAgICBcIndyYXBLZXlcIixcbiAgICAgICAgICAgIFwidmVyaWZ5RGF0YVwiLFxuICAgICAgICBdO1xuICAgICAgICAvKipcbiAgICAgICAgICogTWFwcGluZyBiZXR3ZWVuIHNpZ25hdHVyZSBhbGdvcml0aG1zIGFuZCB0aGVpciBjb3JyZXNwb25kaW5nIGhhc2ggYWxnb3JpdGhtcy4gRXh0ZXJuYWxseSB1c2VkIGZvciB0ZXN0aW5nLlxuICAgICAgICAgKiBAaW50ZXJuYWxcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2lnbmF0dXJlQWxnb3JpdGhtVG9IYXNoQWxnb3JpdGhtID0ge1xuICAgICAgICAgICAgUFMyNTY6IFwiU0hBMjU2XCIsXG4gICAgICAgICAgICBSUzI1NjogXCJTSEEyNTZcIixcbiAgICAgICAgICAgIFBTMzg0OiBcIlNIQTM4NFwiLFxuICAgICAgICAgICAgUlMzODQ6IFwiU0hBMzg0XCIsXG4gICAgICAgICAgICBQUzUxMjogXCJTSEE1MTJcIixcbiAgICAgICAgICAgIFJTNTEyOiBcIlNIQTUxMlwiLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmtleSA9IGtleTtcbiAgICB9XG4gICAgaXNTdXBwb3J0ZWQoYWxnb3JpdGhtLCBvcGVyYXRpb24pIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmFwcGxpY2FibGVBbGdvcml0aG1zLmluY2x1ZGVzKGFsZ29yaXRobSkgJiYgdGhpcy5hcHBsaWNhYmxlT3BlcmF0aW9ucy5pbmNsdWRlcyhvcGVyYXRpb24pKTtcbiAgICB9XG4gICAgZW5jcnlwdChlbmNyeXB0UGFyYW1ldGVycywgX29wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5lbnN1cmVWYWxpZCgpO1xuICAgICAgICBjb25zdCBrZXlQRU0gPSBjb252ZXJ0SldLdG9QRU0odGhpcy5rZXkpO1xuICAgICAgICBjb25zdCBwYWRkaW5nID0gZW5jcnlwdFBhcmFtZXRlcnMuYWxnb3JpdGhtID09PSBcIlJTQTFfNVwiID8gUlNBX1BLQ1MxX1BBRERJTkcgOiBSU0FfUEtDUzFfT0FFUF9QQURESU5HO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgIGFsZ29yaXRobTogZW5jcnlwdFBhcmFtZXRlcnMuYWxnb3JpdGhtLFxuICAgICAgICAgICAga2V5SUQ6IHRoaXMua2V5LmtpZCxcbiAgICAgICAgICAgIHJlc3VsdDogcHVibGljRW5jcnlwdCh7IGtleToga2V5UEVNLCBwYWRkaW5nOiBwYWRkaW5nIH0sIEJ1ZmZlci5mcm9tKGVuY3J5cHRQYXJhbWV0ZXJzLnBsYWludGV4dCkpLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZGVjcnlwdChfZGVjcnlwdFBhcmFtZXRlcnMsIF9vcHRpb25zKSB7XG4gICAgICAgIHRocm93IG5ldyBMb2NhbENyeXB0b2dyYXBoeVVuc3VwcG9ydGVkRXJyb3IoXCJEZWNyeXB0aW5nIHVzaW5nIGEgbG9jYWwgSnNvbldlYktleSBpcyBub3Qgc3VwcG9ydGVkLlwiKTtcbiAgICB9XG4gICAgd3JhcEtleShhbGdvcml0aG0sIGtleVRvV3JhcCwgX29wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5lbnN1cmVWYWxpZCgpO1xuICAgICAgICBjb25zdCBrZXlQRU0gPSBjb252ZXJ0SldLdG9QRU0odGhpcy5rZXkpO1xuICAgICAgICBjb25zdCBwYWRkaW5nID0gYWxnb3JpdGhtID09PSBcIlJTQTFfNVwiID8gUlNBX1BLQ1MxX1BBRERJTkcgOiBSU0FfUEtDUzFfT0FFUF9QQURESU5HO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgIGFsZ29yaXRobTogYWxnb3JpdGhtLFxuICAgICAgICAgICAgcmVzdWx0OiBwdWJsaWNFbmNyeXB0KHsga2V5OiBrZXlQRU0sIHBhZGRpbmcgfSwgQnVmZmVyLmZyb20oa2V5VG9XcmFwKSksXG4gICAgICAgICAgICBrZXlJRDogdGhpcy5rZXkua2lkLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdW53cmFwS2V5KF9hbGdvcml0aG0sIF9lbmNyeXB0ZWRLZXksIF9vcHRpb25zKSB7XG4gICAgICAgIHRocm93IG5ldyBMb2NhbENyeXB0b2dyYXBoeVVuc3VwcG9ydGVkRXJyb3IoXCJVbndyYXBwaW5nIGEga2V5IHVzaW5nIGEgbG9jYWwgSnNvbldlYktleSBpcyBub3Qgc3VwcG9ydGVkLlwiKTtcbiAgICB9XG4gICAgc2lnbihfYWxnb3JpdGhtLCBfZGlnZXN0LCBfb3B0aW9ucykge1xuICAgICAgICB0aHJvdyBuZXcgTG9jYWxDcnlwdG9ncmFwaHlVbnN1cHBvcnRlZEVycm9yKFwiU2lnbmluZyBhIGRpZ2VzdCB1c2luZyBhIGxvY2FsIEpzb25XZWJLZXkgaXMgbm90IHN1cHBvcnRlZC5cIik7XG4gICAgfVxuICAgIHNpZ25EYXRhKF9hbGdvcml0aG0sIF9kYXRhLCBfb3B0aW9ucykge1xuICAgICAgICB0aHJvdyBuZXcgTG9jYWxDcnlwdG9ncmFwaHlVbnN1cHBvcnRlZEVycm9yKFwiU2lnbmluZyBhIGJsb2NrIG9mIGRhdGEgdXNpbmcgYSBsb2NhbCBKc29uV2ViS2V5IGlzIG5vdCBzdXBwb3J0ZWQuXCIpO1xuICAgIH1cbiAgICBhc3luYyB2ZXJpZnkoX2FsZ29yaXRobSwgX2RpZ2VzdCwgX3NpZ25hdHVyZSwgX29wdGlvbnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IExvY2FsQ3J5cHRvZ3JhcGh5VW5zdXBwb3J0ZWRFcnJvcihcIlZlcmlmeWluZyBhIGRpZ2VzdCB1c2luZyBhIGxvY2FsIEpzb25XZWJLZXkgaXMgbm90IHN1cHBvcnRlZC5cIik7XG4gICAgfVxuICAgIHZlcmlmeURhdGEoYWxnb3JpdGhtLCBkYXRhLCBzaWduYXR1cmUsIF9vcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZW5zdXJlVmFsaWQoKTtcbiAgICAgICAgY29uc3Qga2V5UEVNID0gY29udmVydEpXS3RvUEVNKHRoaXMua2V5KTtcbiAgICAgICAgY29uc3QgdmVyaWZpZXIgPSBjcmVhdGVWZXJpZnkoYWxnb3JpdGhtLCBkYXRhKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICByZXN1bHQ6IHZlcmlmaWVyLnZlcmlmeShrZXlQRU0sIEJ1ZmZlci5mcm9tKHNpZ25hdHVyZSkpLFxuICAgICAgICAgICAga2V5SUQ6IHRoaXMua2V5LmtpZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVuc3VyZVZhbGlkKCkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAodGhpcy5rZXkgJiZcbiAgICAgICAgICAgICgoX2EgPSB0aGlzLmtleS5rdHkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b1VwcGVyQ2FzZSgpKSAhPT0gXCJSU0FcIiAmJlxuICAgICAgICAgICAgKChfYiA9IHRoaXMua2V5Lmt0eSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnRvVXBwZXJDYXNlKCkpICE9PSBcIlJTQS1IU01cIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiS2V5IHR5cGUgZG9lcyBub3QgbWF0Y2ggdGhlIGFsZ29yaXRobSBSU0FcIik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yc2FDcnlwdG9ncmFwaHlQcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptography/rsaCryptographyProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/api/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   backupKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.backupKey),\n/* harmony export */   createKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.createKey),\n/* harmony export */   createKeyVault: () => (/* reexport safe */ _keyVaultContext_js__WEBPACK_IMPORTED_MODULE_0__.createKeyVault),\n/* harmony export */   decrypt: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.decrypt),\n/* harmony export */   deleteKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.deleteKey),\n/* harmony export */   encrypt: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.encrypt),\n/* harmony export */   getDeletedKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getDeletedKey),\n/* harmony export */   getDeletedKeys: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getDeletedKeys),\n/* harmony export */   getKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getKey),\n/* harmony export */   getKeyAttestation: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyAttestation),\n/* harmony export */   getKeyRotationPolicy: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyRotationPolicy),\n/* harmony export */   getKeyVersions: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyVersions),\n/* harmony export */   getKeys: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeys),\n/* harmony export */   getRandomBytes: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.getRandomBytes),\n/* harmony export */   importKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.importKey),\n/* harmony export */   purgeDeletedKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.purgeDeletedKey),\n/* harmony export */   recoverDeletedKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.recoverDeletedKey),\n/* harmony export */   release: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.release),\n/* harmony export */   restoreKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.restoreKey),\n/* harmony export */   rotateKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.rotateKey),\n/* harmony export */   sign: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.sign),\n/* harmony export */   unwrapKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.unwrapKey),\n/* harmony export */   updateKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.updateKey),\n/* harmony export */   updateKeyRotationPolicy: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.updateKeyRotationPolicy),\n/* harmony export */   verify: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.verify),\n/* harmony export */   wrapKey: () => (/* reexport safe */ _operations_js__WEBPACK_IMPORTED_MODULE_1__.wrapKey)\n/* harmony export */ });\n/* harmony import */ var _keyVaultContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyVaultContext.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/keyVaultContext.js\");\n/* harmony import */ var _operations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operations.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/operations.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL2FwaS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUN1RDtBQUM0UztBQUNuVyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2dlbmVyYXRlZC9hcGkvaW5kZXguanM/YTUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmV4cG9ydCB7IGNyZWF0ZUtleVZhdWx0LCB9IGZyb20gXCIuL2tleVZhdWx0Q29udGV4dC5qc1wiO1xuZXhwb3J0IHsgZ2V0S2V5QXR0ZXN0YXRpb24sIGdldFJhbmRvbUJ5dGVzLCB1cGRhdGVLZXlSb3RhdGlvblBvbGljeSwgZ2V0S2V5Um90YXRpb25Qb2xpY3ksIHJlY292ZXJEZWxldGVkS2V5LCBwdXJnZURlbGV0ZWRLZXksIGdldERlbGV0ZWRLZXksIGdldERlbGV0ZWRLZXlzLCByZWxlYXNlLCB1bndyYXBLZXksIHdyYXBLZXksIHZlcmlmeSwgc2lnbiwgZGVjcnlwdCwgZW5jcnlwdCwgcmVzdG9yZUtleSwgYmFja3VwS2V5LCBnZXRLZXlzLCBnZXRLZXlWZXJzaW9ucywgZ2V0S2V5LCB1cGRhdGVLZXksIGRlbGV0ZUtleSwgaW1wb3J0S2V5LCByb3RhdGVLZXksIGNyZWF0ZUtleSwgfSBmcm9tIFwiLi9vcGVyYXRpb25zLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/keyVaultContext.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/api/keyVaultContext.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createKeyVault: () => (/* binding */ createKeyVault)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/logger.js\");\n/* harmony import */ var _azure_rest_core_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure-rest/core-client */ \"(rsc)/./node_modules/@azure-rest/core-client/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/** The key vault client performs cryptographic key operations and vault operations against the Key Vault service. */\nfunction createKeyVault(endpointParam, credential, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const endpointUrl = (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUrl) !== null && _b !== void 0 ? _b : String(endpointParam);\n    const prefixFromOptions = (_c = options === null || options === void 0 ? void 0 : options.userAgentOptions) === null || _c === void 0 ? void 0 : _c.userAgentPrefix;\n    const userAgentInfo = `azsdk-js-keyvault-keys/1.0.0-beta.1`;\n    const userAgentPrefix = prefixFromOptions\n        ? `${prefixFromOptions} azsdk-js-api ${userAgentInfo}`\n        : `azsdk-js-api ${userAgentInfo}`;\n    const _j = Object.assign(Object.assign({}, options), { userAgentOptions: { userAgentPrefix }, loggingOptions: { logger: (_e = (_d = options.loggingOptions) === null || _d === void 0 ? void 0 : _d.logger) !== null && _e !== void 0 ? _e : _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.info }, credentials: {\n            scopes: (_g = (_f = options.credentials) === null || _f === void 0 ? void 0 : _f.scopes) !== null && _g !== void 0 ? _g : [\n                \"https://vault.azure.net/.default\",\n            ],\n        } }), { apiVersion: _ } = _j, updatedOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_j, [\"apiVersion\"]);\n    const clientContext = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_1__.getClient)(endpointUrl, credential, updatedOptions);\n    clientContext.pipeline.removePolicy({ name: \"ApiVersionPolicy\" });\n    const apiVersion = (_h = options.apiVersion) !== null && _h !== void 0 ? _h : \"7.6\";\n    clientContext.pipeline.addPolicy({\n        name: \"ClientApiVersionPolicy\",\n        sendRequest: (req, next) => {\n            // Use the apiVersion defined in request url directly\n            // Append one if there is no apiVersion and we have one at client options\n            const url = new URL(req.url);\n            if (!url.searchParams.get(\"api-version\")) {\n                req.url = `${req.url}${Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"}api-version=${apiVersion}`;\n            }\n            return next(req);\n        },\n    });\n    return Object.assign(Object.assign({}, clientContext), { apiVersion });\n}\n//# sourceMappingURL=keyVaultContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL2FwaS9rZXlWYXVsdENvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDTztBQUNjO0FBQ3BEO0FBQ08sK0RBQStEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQixlQUFlLGNBQWM7QUFDN0QsMEJBQTBCLGNBQWM7QUFDeEMsNkNBQTZDLGNBQWMsb0JBQW9CLGlCQUFpQixvQkFBb0IsNkhBQTZILDhDQUFNLE9BQU87QUFDOVA7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLLGdCQUFnQix1QkFBdUIsNkNBQU07QUFDN0QsMEJBQTBCLGtFQUFTO0FBQ25DLDBDQUEwQywwQkFBMEI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRLEVBQUUsMkRBQTJELGNBQWMsV0FBVztBQUMzSDtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCx5Q0FBeUMsb0JBQW9CLFlBQVk7QUFDekU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2dlbmVyYXRlZC9hcGkva2V5VmF1bHRDb250ZXh0LmpzPzFjNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBfX3Jlc3QgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gXCIuLi9sb2dnZXIuanNcIjtcbmltcG9ydCB7IGdldENsaWVudCB9IGZyb20gXCJAYXp1cmUtcmVzdC9jb3JlLWNsaWVudFwiO1xuLyoqIFRoZSBrZXkgdmF1bHQgY2xpZW50IHBlcmZvcm1zIGNyeXB0b2dyYXBoaWMga2V5IG9wZXJhdGlvbnMgYW5kIHZhdWx0IG9wZXJhdGlvbnMgYWdhaW5zdCB0aGUgS2V5IFZhdWx0IHNlcnZpY2UuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlS2V5VmF1bHQoZW5kcG9pbnRQYXJhbSwgY3JlZGVudGlhbCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgICBjb25zdCBlbmRwb2ludFVybCA9IChfYiA9IChfYSA9IG9wdGlvbnMuZW5kcG9pbnQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG9wdGlvbnMuYmFzZVVybCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogU3RyaW5nKGVuZHBvaW50UGFyYW0pO1xuICAgIGNvbnN0IHByZWZpeEZyb21PcHRpb25zID0gKF9jID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnVzZXJBZ2VudE9wdGlvbnMpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy51c2VyQWdlbnRQcmVmaXg7XG4gICAgY29uc3QgdXNlckFnZW50SW5mbyA9IGBhenNkay1qcy1rZXl2YXVsdC1rZXlzLzEuMC4wLWJldGEuMWA7XG4gICAgY29uc3QgdXNlckFnZW50UHJlZml4ID0gcHJlZml4RnJvbU9wdGlvbnNcbiAgICAgICAgPyBgJHtwcmVmaXhGcm9tT3B0aW9uc30gYXpzZGstanMtYXBpICR7dXNlckFnZW50SW5mb31gXG4gICAgICAgIDogYGF6c2RrLWpzLWFwaSAke3VzZXJBZ2VudEluZm99YDtcbiAgICBjb25zdCBfaiA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgdXNlckFnZW50T3B0aW9uczogeyB1c2VyQWdlbnRQcmVmaXggfSwgbG9nZ2luZ09wdGlvbnM6IHsgbG9nZ2VyOiAoX2UgPSAoX2QgPSBvcHRpb25zLmxvZ2dpbmdPcHRpb25zKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QubG9nZ2VyKSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiBsb2dnZXIuaW5mbyB9LCBjcmVkZW50aWFsczoge1xuICAgICAgICAgICAgc2NvcGVzOiAoX2cgPSAoX2YgPSBvcHRpb25zLmNyZWRlbnRpYWxzKSA9PT0gbnVsbCB8fCBfZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Yuc2NvcGVzKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiBbXG4gICAgICAgICAgICAgICAgXCJodHRwczovL3ZhdWx0LmF6dXJlLm5ldC8uZGVmYXVsdFwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSB9KSwgeyBhcGlWZXJzaW9uOiBfIH0gPSBfaiwgdXBkYXRlZE9wdGlvbnMgPSBfX3Jlc3QoX2osIFtcImFwaVZlcnNpb25cIl0pO1xuICAgIGNvbnN0IGNsaWVudENvbnRleHQgPSBnZXRDbGllbnQoZW5kcG9pbnRVcmwsIGNyZWRlbnRpYWwsIHVwZGF0ZWRPcHRpb25zKTtcbiAgICBjbGllbnRDb250ZXh0LnBpcGVsaW5lLnJlbW92ZVBvbGljeSh7IG5hbWU6IFwiQXBpVmVyc2lvblBvbGljeVwiIH0pO1xuICAgIGNvbnN0IGFwaVZlcnNpb24gPSAoX2ggPSBvcHRpb25zLmFwaVZlcnNpb24pICE9PSBudWxsICYmIF9oICE9PSB2b2lkIDAgPyBfaCA6IFwiNy42XCI7XG4gICAgY2xpZW50Q29udGV4dC5waXBlbGluZS5hZGRQb2xpY3koe1xuICAgICAgICBuYW1lOiBcIkNsaWVudEFwaVZlcnNpb25Qb2xpY3lcIixcbiAgICAgICAgc2VuZFJlcXVlc3Q6IChyZXEsIG5leHQpID0+IHtcbiAgICAgICAgICAgIC8vIFVzZSB0aGUgYXBpVmVyc2lvbiBkZWZpbmVkIGluIHJlcXVlc3QgdXJsIGRpcmVjdGx5XG4gICAgICAgICAgICAvLyBBcHBlbmQgb25lIGlmIHRoZXJlIGlzIG5vIGFwaVZlcnNpb24gYW5kIHdlIGhhdmUgb25lIGF0IGNsaWVudCBvcHRpb25zXG4gICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpO1xuICAgICAgICAgICAgaWYgKCF1cmwuc2VhcmNoUGFyYW1zLmdldChcImFwaS12ZXJzaW9uXCIpKSB7XG4gICAgICAgICAgICAgICAgcmVxLnVybCA9IGAke3JlcS51cmx9JHtBcnJheS5mcm9tKHVybC5zZWFyY2hQYXJhbXMua2V5cygpKS5sZW5ndGggPiAwID8gXCImXCIgOiBcIj9cIn1hcGktdmVyc2lvbj0ke2FwaVZlcnNpb259YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgY2xpZW50Q29udGV4dCksIHsgYXBpVmVyc2lvbiB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleVZhdWx0Q29udGV4dC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/keyVaultContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/operations.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/api/operations.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _backupKeyDeserialize: () => (/* binding */ _backupKeyDeserialize),\n/* harmony export */   _backupKeySend: () => (/* binding */ _backupKeySend),\n/* harmony export */   _createKeyDeserialize: () => (/* binding */ _createKeyDeserialize),\n/* harmony export */   _createKeySend: () => (/* binding */ _createKeySend),\n/* harmony export */   _decryptDeserialize: () => (/* binding */ _decryptDeserialize),\n/* harmony export */   _decryptSend: () => (/* binding */ _decryptSend),\n/* harmony export */   _deleteKeyDeserialize: () => (/* binding */ _deleteKeyDeserialize),\n/* harmony export */   _deleteKeySend: () => (/* binding */ _deleteKeySend),\n/* harmony export */   _encryptDeserialize: () => (/* binding */ _encryptDeserialize),\n/* harmony export */   _encryptSend: () => (/* binding */ _encryptSend),\n/* harmony export */   _getDeletedKeyDeserialize: () => (/* binding */ _getDeletedKeyDeserialize),\n/* harmony export */   _getDeletedKeySend: () => (/* binding */ _getDeletedKeySend),\n/* harmony export */   _getDeletedKeysDeserialize: () => (/* binding */ _getDeletedKeysDeserialize),\n/* harmony export */   _getDeletedKeysSend: () => (/* binding */ _getDeletedKeysSend),\n/* harmony export */   _getKeyAttestationDeserialize: () => (/* binding */ _getKeyAttestationDeserialize),\n/* harmony export */   _getKeyAttestationSend: () => (/* binding */ _getKeyAttestationSend),\n/* harmony export */   _getKeyDeserialize: () => (/* binding */ _getKeyDeserialize),\n/* harmony export */   _getKeyRotationPolicyDeserialize: () => (/* binding */ _getKeyRotationPolicyDeserialize),\n/* harmony export */   _getKeyRotationPolicySend: () => (/* binding */ _getKeyRotationPolicySend),\n/* harmony export */   _getKeySend: () => (/* binding */ _getKeySend),\n/* harmony export */   _getKeyVersionsDeserialize: () => (/* binding */ _getKeyVersionsDeserialize),\n/* harmony export */   _getKeyVersionsSend: () => (/* binding */ _getKeyVersionsSend),\n/* harmony export */   _getKeysDeserialize: () => (/* binding */ _getKeysDeserialize),\n/* harmony export */   _getKeysSend: () => (/* binding */ _getKeysSend),\n/* harmony export */   _getRandomBytesDeserialize: () => (/* binding */ _getRandomBytesDeserialize),\n/* harmony export */   _getRandomBytesSend: () => (/* binding */ _getRandomBytesSend),\n/* harmony export */   _importKeyDeserialize: () => (/* binding */ _importKeyDeserialize),\n/* harmony export */   _importKeySend: () => (/* binding */ _importKeySend),\n/* harmony export */   _purgeDeletedKeyDeserialize: () => (/* binding */ _purgeDeletedKeyDeserialize),\n/* harmony export */   _purgeDeletedKeySend: () => (/* binding */ _purgeDeletedKeySend),\n/* harmony export */   _recoverDeletedKeyDeserialize: () => (/* binding */ _recoverDeletedKeyDeserialize),\n/* harmony export */   _recoverDeletedKeySend: () => (/* binding */ _recoverDeletedKeySend),\n/* harmony export */   _releaseDeserialize: () => (/* binding */ _releaseDeserialize),\n/* harmony export */   _releaseSend: () => (/* binding */ _releaseSend),\n/* harmony export */   _restoreKeyDeserialize: () => (/* binding */ _restoreKeyDeserialize),\n/* harmony export */   _restoreKeySend: () => (/* binding */ _restoreKeySend),\n/* harmony export */   _rotateKeyDeserialize: () => (/* binding */ _rotateKeyDeserialize),\n/* harmony export */   _rotateKeySend: () => (/* binding */ _rotateKeySend),\n/* harmony export */   _signDeserialize: () => (/* binding */ _signDeserialize),\n/* harmony export */   _signSend: () => (/* binding */ _signSend),\n/* harmony export */   _unwrapKeyDeserialize: () => (/* binding */ _unwrapKeyDeserialize),\n/* harmony export */   _unwrapKeySend: () => (/* binding */ _unwrapKeySend),\n/* harmony export */   _updateKeyDeserialize: () => (/* binding */ _updateKeyDeserialize),\n/* harmony export */   _updateKeyRotationPolicyDeserialize: () => (/* binding */ _updateKeyRotationPolicyDeserialize),\n/* harmony export */   _updateKeyRotationPolicySend: () => (/* binding */ _updateKeyRotationPolicySend),\n/* harmony export */   _updateKeySend: () => (/* binding */ _updateKeySend),\n/* harmony export */   _verifyDeserialize: () => (/* binding */ _verifyDeserialize),\n/* harmony export */   _verifySend: () => (/* binding */ _verifySend),\n/* harmony export */   _wrapKeyDeserialize: () => (/* binding */ _wrapKeyDeserialize),\n/* harmony export */   _wrapKeySend: () => (/* binding */ _wrapKeySend),\n/* harmony export */   backupKey: () => (/* binding */ backupKey),\n/* harmony export */   createKey: () => (/* binding */ createKey),\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   deleteKey: () => (/* binding */ deleteKey),\n/* harmony export */   encrypt: () => (/* binding */ encrypt),\n/* harmony export */   getDeletedKey: () => (/* binding */ getDeletedKey),\n/* harmony export */   getDeletedKeys: () => (/* binding */ getDeletedKeys),\n/* harmony export */   getKey: () => (/* binding */ getKey),\n/* harmony export */   getKeyAttestation: () => (/* binding */ getKeyAttestation),\n/* harmony export */   getKeyRotationPolicy: () => (/* binding */ getKeyRotationPolicy),\n/* harmony export */   getKeyVersions: () => (/* binding */ getKeyVersions),\n/* harmony export */   getKeys: () => (/* binding */ getKeys),\n/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes),\n/* harmony export */   importKey: () => (/* binding */ importKey),\n/* harmony export */   purgeDeletedKey: () => (/* binding */ purgeDeletedKey),\n/* harmony export */   recoverDeletedKey: () => (/* binding */ recoverDeletedKey),\n/* harmony export */   release: () => (/* binding */ release),\n/* harmony export */   restoreKey: () => (/* binding */ restoreKey),\n/* harmony export */   rotateKey: () => (/* binding */ rotateKey),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   unwrapKey: () => (/* binding */ unwrapKey),\n/* harmony export */   updateKey: () => (/* binding */ updateKey),\n/* harmony export */   updateKeyRotationPolicy: () => (/* binding */ updateKeyRotationPolicy),\n/* harmony export */   verify: () => (/* binding */ verify),\n/* harmony export */   wrapKey: () => (/* binding */ wrapKey)\n/* harmony export */ });\n/* harmony import */ var _models_models_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/models.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/models.js\");\n/* harmony import */ var _static_helpers_pagingHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../static-helpers/pagingHelpers.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/pagingHelpers.js\");\n/* harmony import */ var _static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../static-helpers/urlTemplate.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/urlTemplate.js\");\n/* harmony import */ var _azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure-rest/core-client */ \"(rsc)/./node_modules/@azure-rest/core-client/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n\nfunction _getKeyAttestationSend(context, keyName, keyVersion, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/attestation{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getKeyAttestationDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** The get key attestation operation returns the key along with its attestation blob. This operation requires the keys/get permission. */\nasync function getKeyAttestation(context, keyName, keyVersion, options = { requestOptions: {} }) {\n    const result = await _getKeyAttestationSend(context, keyName, keyVersion, options);\n    return _getKeyAttestationDeserialize(result);\n}\nfunction _getRandomBytesSend(context, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/rng{?api%2Dversion}\", {\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.getRandomBytesRequestSerializer)(parameters) }));\n}\nasync function _getRandomBytesDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.randomBytesDeserializer)(result.body);\n}\n/** Get the requested number of bytes containing random values from a managed HSM. */\nasync function getRandomBytes(context, parameters, options = { requestOptions: {} }) {\n    const result = await _getRandomBytesSend(context, parameters, options);\n    return _getRandomBytesDeserialize(result);\n}\nfunction _updateKeyRotationPolicySend(context, keyName, keyRotationPolicy, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/rotationpolicy{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .put(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyRotationPolicySerializer)(keyRotationPolicy) }));\n}\nasync function _updateKeyRotationPolicyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyRotationPolicyDeserializer)(result.body);\n}\n/** Set specified members in the key policy. Leave others as undefined. This operation requires the keys/update permission. */\nasync function updateKeyRotationPolicy(context, keyName, keyRotationPolicy, options = { requestOptions: {} }) {\n    const result = await _updateKeyRotationPolicySend(context, keyName, keyRotationPolicy, options);\n    return _updateKeyRotationPolicyDeserialize(result);\n}\nfunction _getKeyRotationPolicySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/rotationpolicy{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getKeyRotationPolicyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyRotationPolicyDeserializer)(result.body);\n}\n/** The GetKeyRotationPolicy operation returns the specified key policy resources in the specified key vault. This operation requires the keys/get permission. */\nasync function getKeyRotationPolicy(context, keyName, options = { requestOptions: {} }) {\n    const result = await _getKeyRotationPolicySend(context, keyName, options);\n    return _getKeyRotationPolicyDeserialize(result);\n}\nfunction _recoverDeletedKeySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/deletedkeys/{key-name}/recover{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _recoverDeletedKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission. */\nasync function recoverDeletedKey(context, keyName, options = { requestOptions: {} }) {\n    const result = await _recoverDeletedKeySend(context, keyName, options);\n    return _recoverDeletedKeyDeserialize(result);\n}\nfunction _purgeDeletedKeySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/deletedkeys/{key-name}{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .delete(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _purgeDeletedKeyDeserialize(result) {\n    const expectedStatuses = [\"204\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return;\n}\n/** The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission. */\nasync function purgeDeletedKey(context, keyName, options = { requestOptions: {} }) {\n    const result = await _purgeDeletedKeySend(context, keyName, options);\n    return _purgeDeletedKeyDeserialize(result);\n}\nfunction _getDeletedKeySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/deletedkeys/{key-name}{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getDeletedKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.deletedKeyBundleDeserializer)(result.body);\n}\n/** The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission. */\nasync function getDeletedKey(context, keyName, options = { requestOptions: {} }) {\n    const result = await _getDeletedKeySend(context, keyName, options);\n    return _getDeletedKeyDeserialize(result);\n}\nfunction _getDeletedKeysSend(context, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/deletedkeys{?api%2Dversion,maxresults}\", {\n        \"api%2Dversion\": context.apiVersion,\n        maxresults: options === null || options === void 0 ? void 0 : options.maxresults,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getDeletedKeysDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__._deletedKeyListResultDeserializer)(result.body);\n}\n/** Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission. */\nfunction getDeletedKeys(context, options = { requestOptions: {} }) {\n    return (0,_static_helpers_pagingHelpers_js__WEBPACK_IMPORTED_MODULE_1__.buildPagedAsyncIterator)(context, () => _getDeletedKeysSend(context, options), _getDeletedKeysDeserialize, [\"200\"], { itemName: \"value\", nextLinkName: \"nextLink\" });\n}\nfunction _releaseSend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/release{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyReleaseParametersSerializer)(parameters) }));\n}\nasync function _releaseDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyReleaseResultDeserializer)(result.body);\n}\n/** The release key operation is applicable to all key types. The target key must be marked exportable. This operation requires the keys/release permission. */\nasync function release(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _releaseSend(context, keyName, keyVersion, parameters, options);\n    return _releaseDeserialize(result);\n}\nfunction _unwrapKeySend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/unwrapkey{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationsParametersSerializer)(parameters) }));\n}\nasync function _unwrapKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationResultDeserializer)(result.body);\n}\n/** The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission. */\nasync function unwrapKey(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _unwrapKeySend(context, keyName, keyVersion, parameters, options);\n    return _unwrapKeyDeserialize(result);\n}\nfunction _wrapKeySend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/wrapkey{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationsParametersSerializer)(parameters) }));\n}\nasync function _wrapKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationResultDeserializer)(result.body);\n}\n/** The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission. */\nasync function wrapKey(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _wrapKeySend(context, keyName, keyVersion, parameters, options);\n    return _wrapKeyDeserialize(result);\n}\nfunction _verifySend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/verify{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVerifyParametersSerializer)(parameters) }));\n}\nasync function _verifyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVerifyResultDeserializer)(result.body);\n}\n/** The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission. */\nasync function verify(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _verifySend(context, keyName, keyVersion, parameters, options);\n    return _verifyDeserialize(result);\n}\nfunction _signSend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/sign{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keySignParametersSerializer)(parameters) }));\n}\nasync function _signDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationResultDeserializer)(result.body);\n}\n/** The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission. */\nasync function sign(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _signSend(context, keyName, keyVersion, parameters, options);\n    return _signDeserialize(result);\n}\nfunction _decryptSend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/decrypt{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationsParametersSerializer)(parameters) }));\n}\nasync function _decryptDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationResultDeserializer)(result.body);\n}\n/** The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission. Microsoft recommends not to use CBC algorithms for decryption without first ensuring the integrity of the ciphertext using an HMAC, for example. See https://learn.microsoft.com/dotnet/standard/security/vulnerabilities-cbc-mode for more information. */\nasync function decrypt(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _decryptSend(context, keyName, keyVersion, parameters, options);\n    return _decryptDeserialize(result);\n}\nfunction _encryptSend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}/encrypt{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationsParametersSerializer)(parameters) }));\n}\nasync function _encryptDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyOperationResultDeserializer)(result.body);\n}\n/** The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encrypt permission. */\nasync function encrypt(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _encryptSend(context, keyName, keyVersion, parameters, options);\n    return _encryptDeserialize(result);\n}\nfunction _restoreKeySend(context, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/restore{?api%2Dversion}\", {\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyRestoreParametersSerializer)(parameters) }));\n}\nasync function _restoreKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission. */\nasync function restoreKey(context, parameters, options = { requestOptions: {} }) {\n    const result = await _restoreKeySend(context, parameters, options);\n    return _restoreKeyDeserialize(result);\n}\nfunction _backupKeySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/backup{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _backupKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.backupKeyResultDeserializer)(result.body);\n}\n/** The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission. */\nasync function backupKey(context, keyName, options = { requestOptions: {} }) {\n    const result = await _backupKeySend(context, keyName, options);\n    return _backupKeyDeserialize(result);\n}\nfunction _getKeysSend(context, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys{?api%2Dversion,maxresults}\", {\n        \"api%2Dversion\": context.apiVersion,\n        maxresults: options === null || options === void 0 ? void 0 : options.maxresults,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getKeysDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__._keyListResultDeserializer)(result.body);\n}\n/** Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission. */\nfunction getKeys(context, options = { requestOptions: {} }) {\n    return (0,_static_helpers_pagingHelpers_js__WEBPACK_IMPORTED_MODULE_1__.buildPagedAsyncIterator)(context, () => _getKeysSend(context, options), _getKeysDeserialize, [\"200\"], { itemName: \"value\", nextLinkName: \"nextLink\" });\n}\nfunction _getKeyVersionsSend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/versions{?api%2Dversion,maxresults}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n        maxresults: options === null || options === void 0 ? void 0 : options.maxresults,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getKeyVersionsDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__._keyListResultDeserializer)(result.body);\n}\n/** The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission. */\nfunction getKeyVersions(context, keyName, options = { requestOptions: {} }) {\n    return (0,_static_helpers_pagingHelpers_js__WEBPACK_IMPORTED_MODULE_1__.buildPagedAsyncIterator)(context, () => _getKeyVersionsSend(context, keyName, options), _getKeyVersionsDeserialize, [\"200\"], { itemName: \"value\", nextLinkName: \"nextLink\" });\n}\nfunction _getKeySend(context, keyName, keyVersion, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _getKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission. */\nasync function getKey(context, keyName, keyVersion, options = { requestOptions: {} }) {\n    const result = await _getKeySend(context, keyName, keyVersion, options);\n    return _getKeyDeserialize(result);\n}\nfunction _updateKeySend(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/{key-version}{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"key-version\": keyVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .patch(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyUpdateParametersSerializer)(parameters) }));\n}\nasync function _updateKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission. */\nasync function updateKey(context, keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _updateKeySend(context, keyName, keyVersion, parameters, options);\n    return _updateKeyDeserialize(result);\n}\nfunction _deleteKeySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .delete(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _deleteKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.deletedKeyBundleDeserializer)(result.body);\n}\n/** The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission. */\nasync function deleteKey(context, keyName, options = { requestOptions: {} }) {\n    const result = await _deleteKeySend(context, keyName, options);\n    return _deleteKeyDeserialize(result);\n}\nfunction _importKeySend(context, keyName, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .put(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyImportParametersSerializer)(parameters) }));\n}\nasync function _importKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission. */\nasync function importKey(context, keyName, parameters, options = { requestOptions: {} }) {\n    const result = await _importKeySend(context, keyName, parameters, options);\n    return _importKeyDeserialize(result);\n}\nfunction _rotateKeySend(context, keyName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/rotate{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nasync function _rotateKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** The operation will rotate the key based on the key policy. It requires the keys/rotate permission. */\nasync function rotateKey(context, keyName, options = { requestOptions: {} }) {\n    const result = await _rotateKeySend(context, keyName, options);\n    return _rotateKeyDeserialize(result);\n}\nfunction _createKeySend(context, keyName, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = (0,_static_helpers_urlTemplate_js__WEBPACK_IMPORTED_MODULE_2__.expandUrlTemplate)(\"/keys/{key-name}/create{?api%2Dversion}\", {\n        \"key-name\": keyName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.operationOptionsToRequestParameters)(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyCreateParametersSerializer)(parameters) }));\n}\nasync function _createKeyDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_3__.createRestError)(result);\n        error.details = (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyVaultErrorDeserializer)(result.body);\n        throw error;\n    }\n    return (0,_models_models_js__WEBPACK_IMPORTED_MODULE_0__.keyBundleDeserializer)(result.body);\n}\n/** The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission. */\nasync function createKey(context, keyName, parameters, options = { requestOptions: {} }) {\n    const result = await _createKeySend(context, keyName, parameters, options);\n    return _createKeyDeserialize(result);\n}\n//# sourceMappingURL=operations.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/operations.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyVaultClient: () => (/* reexport safe */ _keyVaultClient_js__WEBPACK_IMPORTED_MODULE_0__.KeyVaultClient),\n/* harmony export */   KnownDeletionRecoveryLevel: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownDeletionRecoveryLevel),\n/* harmony export */   KnownJsonWebKeyCurveName: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownJsonWebKeyCurveName),\n/* harmony export */   KnownJsonWebKeyEncryptionAlgorithm: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownJsonWebKeyEncryptionAlgorithm),\n/* harmony export */   KnownJsonWebKeyOperation: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownJsonWebKeyOperation),\n/* harmony export */   KnownJsonWebKeySignatureAlgorithm: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownJsonWebKeySignatureAlgorithm),\n/* harmony export */   KnownJsonWebKeyType: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownJsonWebKeyType),\n/* harmony export */   KnownKeyEncryptionAlgorithm: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownKeyEncryptionAlgorithm),\n/* harmony export */   KnownVersions: () => (/* reexport safe */ _models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownVersions)\n/* harmony export */ });\n/* harmony import */ var _keyVaultClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyVaultClient.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/keyVaultClient.js\");\n/* harmony import */ var _models_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models/index.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUN1TTtBQUM1UCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2dlbmVyYXRlZC9pbmRleC5qcz9jYWZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgS2V5VmF1bHRDbGllbnQgfSBmcm9tIFwiLi9rZXlWYXVsdENsaWVudC5qc1wiO1xuZXhwb3J0IHsgS25vd25Kc29uV2ViS2V5VHlwZSwgS25vd25Kc29uV2ViS2V5T3BlcmF0aW9uLCBLbm93bkRlbGV0aW9uUmVjb3ZlcnlMZXZlbCwgS25vd25Kc29uV2ViS2V5Q3VydmVOYW1lLCBLbm93bkpzb25XZWJLZXlFbmNyeXB0aW9uQWxnb3JpdGhtLCBLbm93bkpzb25XZWJLZXlTaWduYXR1cmVBbGdvcml0aG0sIEtub3duS2V5RW5jcnlwdGlvbkFsZ29yaXRobSwgS25vd25WZXJzaW9ucywgfSBmcm9tIFwiLi9tb2RlbHMvaW5kZXguanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/keyVaultClient.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/keyVaultClient.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyVaultClient: () => (/* binding */ KeyVaultClient)\n/* harmony export */ });\n/* harmony import */ var _api_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/index.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/index.js\");\n/* harmony import */ var _api_operations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/operations.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/api/operations.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nclass KeyVaultClient {\n    /** The key vault client performs cryptographic key operations and vault operations against the Key Vault service. */\n    constructor(endpointParam, credential, options = {}) {\n        var _a;\n        const prefixFromOptions = (_a = options === null || options === void 0 ? void 0 : options.userAgentOptions) === null || _a === void 0 ? void 0 : _a.userAgentPrefix;\n        const userAgentPrefix = prefixFromOptions\n            ? `${prefixFromOptions} azsdk-js-client`\n            : `azsdk-js-client`;\n        this._client = (0,_api_index_js__WEBPACK_IMPORTED_MODULE_0__.createKeyVault)(endpointParam, credential, Object.assign(Object.assign({}, options), { userAgentOptions: { userAgentPrefix } }));\n        this.pipeline = this._client.pipeline;\n    }\n    /** The get key attestation operation returns the key along with its attestation blob. This operation requires the keys/get permission. */\n    getKeyAttestation(keyName, keyVersion, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyAttestation)(this._client, keyName, keyVersion, options);\n    }\n    /** Get the requested number of bytes containing random values from a managed HSM. */\n    getRandomBytes(parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getRandomBytes)(this._client, parameters, options);\n    }\n    /** Set specified members in the key policy. Leave others as undefined. This operation requires the keys/update permission. */\n    updateKeyRotationPolicy(keyName, keyRotationPolicy, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.updateKeyRotationPolicy)(this._client, keyName, keyRotationPolicy, options);\n    }\n    /** The GetKeyRotationPolicy operation returns the specified key policy resources in the specified key vault. This operation requires the keys/get permission. */\n    getKeyRotationPolicy(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyRotationPolicy)(this._client, keyName, options);\n    }\n    /** The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission. */\n    recoverDeletedKey(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.recoverDeletedKey)(this._client, keyName, options);\n    }\n    /** The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission. */\n    purgeDeletedKey(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.purgeDeletedKey)(this._client, keyName, options);\n    }\n    /** The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission. */\n    getDeletedKey(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getDeletedKey)(this._client, keyName, options);\n    }\n    /** Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission. */\n    getDeletedKeys(options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getDeletedKeys)(this._client, options);\n    }\n    /** The release key operation is applicable to all key types. The target key must be marked exportable. This operation requires the keys/release permission. */\n    release(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.release)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission. */\n    unwrapKey(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.unwrapKey)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission. */\n    wrapKey(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.wrapKey)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission. */\n    verify(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.verify)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission. */\n    sign(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.sign)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission. Microsoft recommends not to use CBC algorithms for decryption without first ensuring the integrity of the ciphertext using an HMAC, for example. See https://learn.microsoft.com/dotnet/standard/security/vulnerabilities-cbc-mode for more information. */\n    decrypt(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.decrypt)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encrypt permission. */\n    encrypt(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.encrypt)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission. */\n    restoreKey(parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.restoreKey)(this._client, parameters, options);\n    }\n    /** The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission. */\n    backupKey(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.backupKey)(this._client, keyName, options);\n    }\n    /** Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission. */\n    getKeys(options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeys)(this._client, options);\n    }\n    /** The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission. */\n    getKeyVersions(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyVersions)(this._client, keyName, options);\n    }\n    /** The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission. */\n    getKey(keyName, keyVersion, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.getKey)(this._client, keyName, keyVersion, options);\n    }\n    /** In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission. */\n    updateKey(keyName, keyVersion, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.updateKey)(this._client, keyName, keyVersion, parameters, options);\n    }\n    /** The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission. */\n    deleteKey(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.deleteKey)(this._client, keyName, options);\n    }\n    /** The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission. */\n    importKey(keyName, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.importKey)(this._client, keyName, parameters, options);\n    }\n    /** The operation will rotate the key based on the key policy. It requires the keys/rotate permission. */\n    rotateKey(keyName, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.rotateKey)(this._client, keyName, options);\n    }\n    /** The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission. */\n    createKey(keyName, parameters, options = { requestOptions: {} }) {\n        return (0,_api_operations_js__WEBPACK_IMPORTED_MODULE_1__.createKey)(this._client, keyName, parameters, options);\n    }\n}\n//# sourceMappingURL=keyVaultClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL2tleVZhdWx0Q2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDc1Q7QUFDaFc7QUFDUDtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQW1CO0FBQ3BDO0FBQ0EsdUJBQXVCLDZEQUFjLDBEQUEwRCxjQUFjLG9CQUFvQixtQkFBbUI7QUFDcEo7QUFDQTtBQUNBO0FBQ0EsdURBQXVELG9CQUFvQjtBQUMzRSxlQUFlLHFFQUFpQjtBQUNoQztBQUNBO0FBQ0EsMkNBQTJDLG9CQUFvQjtBQUMvRCxlQUFlLGtFQUFjO0FBQzdCO0FBQ0E7QUFDQSxvRUFBb0Usb0JBQW9CO0FBQ3hGLGVBQWUsMkVBQXVCO0FBQ3RDO0FBQ0E7QUFDQSw4Q0FBOEMsb0JBQW9CO0FBQ2xFLGVBQWUsd0VBQW9CO0FBQ25DO0FBQ0E7QUFDQSwyQ0FBMkMsb0JBQW9CO0FBQy9ELGVBQWUscUVBQWlCO0FBQ2hDO0FBQ0E7QUFDQSx5Q0FBeUMsb0JBQW9CO0FBQzdELGVBQWUsbUVBQWU7QUFDOUI7QUFDQTtBQUNBLHVDQUF1QyxvQkFBb0I7QUFDM0QsZUFBZSxpRUFBYTtBQUM1QjtBQUNBO0FBQ0EsK0JBQStCLG9CQUFvQjtBQUNuRCxlQUFlLGtFQUFjO0FBQzdCO0FBQ0E7QUFDQSx5REFBeUQsb0JBQW9CO0FBQzdFLGVBQWUsMkRBQU87QUFDdEI7QUFDQTtBQUNBLDJEQUEyRCxvQkFBb0I7QUFDL0UsZUFBZSw2REFBUztBQUN4QjtBQUNBO0FBQ0EseURBQXlELG9CQUFvQjtBQUM3RSxlQUFlLDJEQUFPO0FBQ3RCO0FBQ0E7QUFDQSx3REFBd0Qsb0JBQW9CO0FBQzVFLGVBQWUsMERBQU07QUFDckI7QUFDQTtBQUNBLHNEQUFzRCxvQkFBb0I7QUFDMUUsZUFBZSx3REFBSTtBQUNuQjtBQUNBLDBMQUEwTDtBQUMxTCx5REFBeUQsb0JBQW9CO0FBQzdFLGVBQWUsMkRBQU87QUFDdEI7QUFDQTtBQUNBLHlEQUF5RCxvQkFBb0I7QUFDN0UsZUFBZSwyREFBTztBQUN0QjtBQUNBO0FBQ0EsdUNBQXVDLG9CQUFvQjtBQUMzRCxlQUFlLDhEQUFVO0FBQ3pCO0FBQ0EsOHJCQUE4ckI7QUFDOXJCLG1DQUFtQyxvQkFBb0I7QUFDdkQsZUFBZSw2REFBUztBQUN4QjtBQUNBO0FBQ0Esd0JBQXdCLG9CQUFvQjtBQUM1QyxlQUFlLDJEQUFPO0FBQ3RCO0FBQ0E7QUFDQSx3Q0FBd0Msb0JBQW9CO0FBQzVELGVBQWUsa0VBQWM7QUFDN0I7QUFDQTtBQUNBLDRDQUE0QyxvQkFBb0I7QUFDaEUsZUFBZSwwREFBTTtBQUNyQjtBQUNBO0FBQ0EsMkRBQTJELG9CQUFvQjtBQUMvRSxlQUFlLDZEQUFTO0FBQ3hCO0FBQ0E7QUFDQSxtQ0FBbUMsb0JBQW9CO0FBQ3ZELGVBQWUsNkRBQVM7QUFDeEI7QUFDQTtBQUNBLCtDQUErQyxvQkFBb0I7QUFDbkUsZUFBZSw2REFBUztBQUN4QjtBQUNBO0FBQ0EsbUNBQW1DLG9CQUFvQjtBQUN2RCxlQUFlLDZEQUFTO0FBQ3hCO0FBQ0E7QUFDQSwrQ0FBK0Msb0JBQW9CO0FBQ25FLGVBQWUsNkRBQVM7QUFDeEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL2tleVZhdWx0Q2xpZW50LmpzPzJjMGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVLZXlWYXVsdCwgfSBmcm9tIFwiLi9hcGkvaW5kZXguanNcIjtcbmltcG9ydCB7IGdldEtleUF0dGVzdGF0aW9uLCBnZXRSYW5kb21CeXRlcywgdXBkYXRlS2V5Um90YXRpb25Qb2xpY3ksIGdldEtleVJvdGF0aW9uUG9saWN5LCByZWNvdmVyRGVsZXRlZEtleSwgcHVyZ2VEZWxldGVkS2V5LCBnZXREZWxldGVkS2V5LCBnZXREZWxldGVkS2V5cywgcmVsZWFzZSwgdW53cmFwS2V5LCB3cmFwS2V5LCB2ZXJpZnksIHNpZ24sIGRlY3J5cHQsIGVuY3J5cHQsIHJlc3RvcmVLZXksIGJhY2t1cEtleSwgZ2V0S2V5cywgZ2V0S2V5VmVyc2lvbnMsIGdldEtleSwgdXBkYXRlS2V5LCBkZWxldGVLZXksIGltcG9ydEtleSwgcm90YXRlS2V5LCBjcmVhdGVLZXksIH0gZnJvbSBcIi4vYXBpL29wZXJhdGlvbnMuanNcIjtcbmV4cG9ydCBjbGFzcyBLZXlWYXVsdENsaWVudCB7XG4gICAgLyoqIFRoZSBrZXkgdmF1bHQgY2xpZW50IHBlcmZvcm1zIGNyeXB0b2dyYXBoaWMga2V5IG9wZXJhdGlvbnMgYW5kIHZhdWx0IG9wZXJhdGlvbnMgYWdhaW5zdCB0aGUgS2V5IFZhdWx0IHNlcnZpY2UuICovXG4gICAgY29uc3RydWN0b3IoZW5kcG9pbnRQYXJhbSwgY3JlZGVudGlhbCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgcHJlZml4RnJvbU9wdGlvbnMgPSAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudXNlckFnZW50T3B0aW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnVzZXJBZ2VudFByZWZpeDtcbiAgICAgICAgY29uc3QgdXNlckFnZW50UHJlZml4ID0gcHJlZml4RnJvbU9wdGlvbnNcbiAgICAgICAgICAgID8gYCR7cHJlZml4RnJvbU9wdGlvbnN9IGF6c2RrLWpzLWNsaWVudGBcbiAgICAgICAgICAgIDogYGF6c2RrLWpzLWNsaWVudGA7XG4gICAgICAgIHRoaXMuX2NsaWVudCA9IGNyZWF0ZUtleVZhdWx0KGVuZHBvaW50UGFyYW0sIGNyZWRlbnRpYWwsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgdXNlckFnZW50T3B0aW9uczogeyB1c2VyQWdlbnRQcmVmaXggfSB9KSk7XG4gICAgICAgIHRoaXMucGlwZWxpbmUgPSB0aGlzLl9jbGllbnQucGlwZWxpbmU7XG4gICAgfVxuICAgIC8qKiBUaGUgZ2V0IGtleSBhdHRlc3RhdGlvbiBvcGVyYXRpb24gcmV0dXJucyB0aGUga2V5IGFsb25nIHdpdGggaXRzIGF0dGVzdGF0aW9uIGJsb2IuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL2dldCBwZXJtaXNzaW9uLiAqL1xuICAgIGdldEtleUF0dGVzdGF0aW9uKGtleU5hbWUsIGtleVZlcnNpb24sIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBnZXRLZXlBdHRlc3RhdGlvbih0aGlzLl9jbGllbnQsIGtleU5hbWUsIGtleVZlcnNpb24sIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKiogR2V0IHRoZSByZXF1ZXN0ZWQgbnVtYmVyIG9mIGJ5dGVzIGNvbnRhaW5pbmcgcmFuZG9tIHZhbHVlcyBmcm9tIGEgbWFuYWdlZCBIU00uICovXG4gICAgZ2V0UmFuZG9tQnl0ZXMocGFyYW1ldGVycywgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIGdldFJhbmRvbUJ5dGVzKHRoaXMuX2NsaWVudCwgcGFyYW1ldGVycywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBTZXQgc3BlY2lmaWVkIG1lbWJlcnMgaW4gdGhlIGtleSBwb2xpY3kuIExlYXZlIG90aGVycyBhcyB1bmRlZmluZWQuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3VwZGF0ZSBwZXJtaXNzaW9uLiAqL1xuICAgIHVwZGF0ZUtleVJvdGF0aW9uUG9saWN5KGtleU5hbWUsIGtleVJvdGF0aW9uUG9saWN5LCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gdXBkYXRlS2V5Um90YXRpb25Qb2xpY3kodGhpcy5fY2xpZW50LCBrZXlOYW1lLCBrZXlSb3RhdGlvblBvbGljeSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgR2V0S2V5Um90YXRpb25Qb2xpY3kgb3BlcmF0aW9uIHJldHVybnMgdGhlIHNwZWNpZmllZCBrZXkgcG9saWN5IHJlc291cmNlcyBpbiB0aGUgc3BlY2lmaWVkIGtleSB2YXVsdC4gVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvZ2V0IHBlcm1pc3Npb24uICovXG4gICAgZ2V0S2V5Um90YXRpb25Qb2xpY3koa2V5TmFtZSwgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIGdldEtleVJvdGF0aW9uUG9saWN5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgUmVjb3ZlciBEZWxldGVkIEtleSBvcGVyYXRpb24gaXMgYXBwbGljYWJsZSBmb3IgZGVsZXRlZCBrZXlzIGluIHNvZnQtZGVsZXRlIGVuYWJsZWQgdmF1bHRzLiBJdCByZWNvdmVycyB0aGUgZGVsZXRlZCBrZXkgYmFjayB0byBpdHMgbGF0ZXN0IHZlcnNpb24gdW5kZXIgL2tleXMuIEFuIGF0dGVtcHQgdG8gcmVjb3ZlciBhbiBub24tZGVsZXRlZCBrZXkgd2lsbCByZXR1cm4gYW4gZXJyb3IuIENvbnNpZGVyIHRoaXMgdGhlIGludmVyc2Ugb2YgdGhlIGRlbGV0ZSBvcGVyYXRpb24gb24gc29mdC1kZWxldGUgZW5hYmxlZCB2YXVsdHMuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3JlY292ZXIgcGVybWlzc2lvbi4gKi9cbiAgICByZWNvdmVyRGVsZXRlZEtleShrZXlOYW1lLCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gcmVjb3ZlckRlbGV0ZWRLZXkodGhpcy5fY2xpZW50LCBrZXlOYW1lLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqIFRoZSBQdXJnZSBEZWxldGVkIEtleSBvcGVyYXRpb24gaXMgYXBwbGljYWJsZSBmb3Igc29mdC1kZWxldGUgZW5hYmxlZCB2YXVsdHMuIFdoaWxlIHRoZSBvcGVyYXRpb24gY2FuIGJlIGludm9rZWQgb24gYW55IHZhdWx0LCBpdCB3aWxsIHJldHVybiBhbiBlcnJvciBpZiBpbnZva2VkIG9uIGEgbm9uIHNvZnQtZGVsZXRlIGVuYWJsZWQgdmF1bHQuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3B1cmdlIHBlcm1pc3Npb24uICovXG4gICAgcHVyZ2VEZWxldGVkS2V5KGtleU5hbWUsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBwdXJnZURlbGV0ZWRLZXkodGhpcy5fY2xpZW50LCBrZXlOYW1lLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqIFRoZSBHZXQgRGVsZXRlZCBLZXkgb3BlcmF0aW9uIGlzIGFwcGxpY2FibGUgZm9yIHNvZnQtZGVsZXRlIGVuYWJsZWQgdmF1bHRzLiBXaGlsZSB0aGUgb3BlcmF0aW9uIGNhbiBiZSBpbnZva2VkIG9uIGFueSB2YXVsdCwgaXQgd2lsbCByZXR1cm4gYW4gZXJyb3IgaWYgaW52b2tlZCBvbiBhIG5vbiBzb2Z0LWRlbGV0ZSBlbmFibGVkIHZhdWx0LiBUaGlzIG9wZXJhdGlvbiByZXF1aXJlcyB0aGUga2V5cy9nZXQgcGVybWlzc2lvbi4gKi9cbiAgICBnZXREZWxldGVkS2V5KGtleU5hbWUsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBnZXREZWxldGVkS2V5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBSZXRyaWV2ZXMgYSBsaXN0IG9mIHRoZSBrZXlzIGluIHRoZSBLZXkgVmF1bHQgYXMgSlNPTiBXZWIgS2V5IHN0cnVjdHVyZXMgdGhhdCBjb250YWluIHRoZSBwdWJsaWMgcGFydCBvZiBhIGRlbGV0ZWQga2V5LiBUaGlzIG9wZXJhdGlvbiBpbmNsdWRlcyBkZWxldGlvbi1zcGVjaWZpYyBpbmZvcm1hdGlvbi4gVGhlIEdldCBEZWxldGVkIEtleXMgb3BlcmF0aW9uIGlzIGFwcGxpY2FibGUgZm9yIHZhdWx0cyBlbmFibGVkIGZvciBzb2Z0LWRlbGV0ZS4gV2hpbGUgdGhlIG9wZXJhdGlvbiBjYW4gYmUgaW52b2tlZCBvbiBhbnkgdmF1bHQsIGl0IHdpbGwgcmV0dXJuIGFuIGVycm9yIGlmIGludm9rZWQgb24gYSBub24gc29mdC1kZWxldGUgZW5hYmxlZCB2YXVsdC4gVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvbGlzdCBwZXJtaXNzaW9uLiAqL1xuICAgIGdldERlbGV0ZWRLZXlzKG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBnZXREZWxldGVkS2V5cyh0aGlzLl9jbGllbnQsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKiogVGhlIHJlbGVhc2Uga2V5IG9wZXJhdGlvbiBpcyBhcHBsaWNhYmxlIHRvIGFsbCBrZXkgdHlwZXMuIFRoZSB0YXJnZXQga2V5IG11c3QgYmUgbWFya2VkIGV4cG9ydGFibGUuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3JlbGVhc2UgcGVybWlzc2lvbi4gKi9cbiAgICByZWxlYXNlKGtleU5hbWUsIGtleVZlcnNpb24sIHBhcmFtZXRlcnMsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiByZWxlYXNlKHRoaXMuX2NsaWVudCwga2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgVU5XUkFQIG9wZXJhdGlvbiBzdXBwb3J0cyBkZWNyeXB0aW9uIG9mIGEgc3ltbWV0cmljIGtleSB1c2luZyB0aGUgdGFyZ2V0IGtleSBlbmNyeXB0aW9uIGtleS4gVGhpcyBvcGVyYXRpb24gaXMgdGhlIHJldmVyc2Ugb2YgdGhlIFdSQVAgb3BlcmF0aW9uLiBUaGUgVU5XUkFQIG9wZXJhdGlvbiBhcHBsaWVzIHRvIGFzeW1tZXRyaWMgYW5kIHN5bW1ldHJpYyBrZXlzIHN0b3JlZCBpbiBBenVyZSBLZXkgVmF1bHQgc2luY2UgaXQgdXNlcyB0aGUgcHJpdmF0ZSBwb3J0aW9uIG9mIHRoZSBrZXkuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3Vud3JhcEtleSBwZXJtaXNzaW9uLiAqL1xuICAgIHVud3JhcEtleShrZXlOYW1lLCBrZXlWZXJzaW9uLCBwYXJhbWV0ZXJzLCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gdW53cmFwS2V5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgV1JBUCBvcGVyYXRpb24gc3VwcG9ydHMgZW5jcnlwdGlvbiBvZiBhIHN5bW1ldHJpYyBrZXkgdXNpbmcgYSBrZXkgZW5jcnlwdGlvbiBrZXkgdGhhdCBoYXMgcHJldmlvdXNseSBiZWVuIHN0b3JlZCBpbiBhbiBBenVyZSBLZXkgVmF1bHQuIFRoZSBXUkFQIG9wZXJhdGlvbiBpcyBvbmx5IHN0cmljdGx5IG5lY2Vzc2FyeSBmb3Igc3ltbWV0cmljIGtleXMgc3RvcmVkIGluIEF6dXJlIEtleSBWYXVsdCBzaW5jZSBwcm90ZWN0aW9uIHdpdGggYW4gYXN5bW1ldHJpYyBrZXkgY2FuIGJlIHBlcmZvcm1lZCB1c2luZyB0aGUgcHVibGljIHBvcnRpb24gb2YgdGhlIGtleS4gVGhpcyBvcGVyYXRpb24gaXMgc3VwcG9ydGVkIGZvciBhc3ltbWV0cmljIGtleXMgYXMgYSBjb252ZW5pZW5jZSBmb3IgY2FsbGVycyB0aGF0IGhhdmUgYSBrZXktcmVmZXJlbmNlIGJ1dCBkbyBub3QgaGF2ZSBhY2Nlc3MgdG8gdGhlIHB1YmxpYyBrZXkgbWF0ZXJpYWwuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3dyYXBLZXkgcGVybWlzc2lvbi4gKi9cbiAgICB3cmFwS2V5KGtleU5hbWUsIGtleVZlcnNpb24sIHBhcmFtZXRlcnMsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiB3cmFwS2V5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgVkVSSUZZIG9wZXJhdGlvbiBpcyBhcHBsaWNhYmxlIHRvIHN5bW1ldHJpYyBrZXlzIHN0b3JlZCBpbiBBenVyZSBLZXkgVmF1bHQuIFZFUklGWSBpcyBub3Qgc3RyaWN0bHkgbmVjZXNzYXJ5IGZvciBhc3ltbWV0cmljIGtleXMgc3RvcmVkIGluIEF6dXJlIEtleSBWYXVsdCBzaW5jZSBzaWduYXR1cmUgdmVyaWZpY2F0aW9uIGNhbiBiZSBwZXJmb3JtZWQgdXNpbmcgdGhlIHB1YmxpYyBwb3J0aW9uIG9mIHRoZSBrZXkgYnV0IHRoaXMgb3BlcmF0aW9uIGlzIHN1cHBvcnRlZCBhcyBhIGNvbnZlbmllbmNlIGZvciBjYWxsZXJzIHRoYXQgb25seSBoYXZlIGEga2V5LXJlZmVyZW5jZSBhbmQgbm90IHRoZSBwdWJsaWMgcG9ydGlvbiBvZiB0aGUga2V5LiBUaGlzIG9wZXJhdGlvbiByZXF1aXJlcyB0aGUga2V5cy92ZXJpZnkgcGVybWlzc2lvbi4gKi9cbiAgICB2ZXJpZnkoa2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIHZlcmlmeSh0aGlzLl9jbGllbnQsIGtleU5hbWUsIGtleVZlcnNpb24sIHBhcmFtZXRlcnMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKiogVGhlIFNJR04gb3BlcmF0aW9uIGlzIGFwcGxpY2FibGUgdG8gYXN5bW1ldHJpYyBhbmQgc3ltbWV0cmljIGtleXMgc3RvcmVkIGluIEF6dXJlIEtleSBWYXVsdCBzaW5jZSB0aGlzIG9wZXJhdGlvbiB1c2VzIHRoZSBwcml2YXRlIHBvcnRpb24gb2YgdGhlIGtleS4gVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvc2lnbiBwZXJtaXNzaW9uLiAqL1xuICAgIHNpZ24oa2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIHNpZ24odGhpcy5fY2xpZW50LCBrZXlOYW1lLCBrZXlWZXJzaW9uLCBwYXJhbWV0ZXJzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqIFRoZSBERUNSWVBUIG9wZXJhdGlvbiBkZWNyeXB0cyBhIHdlbGwtZm9ybWVkIGJsb2NrIG9mIGNpcGhlcnRleHQgdXNpbmcgdGhlIHRhcmdldCBlbmNyeXB0aW9uIGtleSBhbmQgc3BlY2lmaWVkIGFsZ29yaXRobS4gVGhpcyBvcGVyYXRpb24gaXMgdGhlIHJldmVyc2Ugb2YgdGhlIEVOQ1JZUFQgb3BlcmF0aW9uOyBvbmx5IGEgc2luZ2xlIGJsb2NrIG9mIGRhdGEgbWF5IGJlIGRlY3J5cHRlZCwgdGhlIHNpemUgb2YgdGhpcyBibG9jayBpcyBkZXBlbmRlbnQgb24gdGhlIHRhcmdldCBrZXkgYW5kIHRoZSBhbGdvcml0aG0gdG8gYmUgdXNlZC4gVGhlIERFQ1JZUFQgb3BlcmF0aW9uIGFwcGxpZXMgdG8gYXN5bW1ldHJpYyBhbmQgc3ltbWV0cmljIGtleXMgc3RvcmVkIGluIEF6dXJlIEtleSBWYXVsdCBzaW5jZSBpdCB1c2VzIHRoZSBwcml2YXRlIHBvcnRpb24gb2YgdGhlIGtleS4gVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvZGVjcnlwdCBwZXJtaXNzaW9uLiBNaWNyb3NvZnQgcmVjb21tZW5kcyBub3QgdG8gdXNlIENCQyBhbGdvcml0aG1zIGZvciBkZWNyeXB0aW9uIHdpdGhvdXQgZmlyc3QgZW5zdXJpbmcgdGhlIGludGVncml0eSBvZiB0aGUgY2lwaGVydGV4dCB1c2luZyBhbiBITUFDLCBmb3IgZXhhbXBsZS4gU2VlIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9kb3RuZXQvc3RhbmRhcmQvc2VjdXJpdHkvdnVsbmVyYWJpbGl0aWVzLWNiYy1tb2RlIGZvciBtb3JlIGluZm9ybWF0aW9uLiAqL1xuICAgIGRlY3J5cHQoa2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIGRlY3J5cHQodGhpcy5fY2xpZW50LCBrZXlOYW1lLCBrZXlWZXJzaW9uLCBwYXJhbWV0ZXJzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqIFRoZSBFTkNSWVBUIG9wZXJhdGlvbiBlbmNyeXB0cyBhbiBhcmJpdHJhcnkgc2VxdWVuY2Ugb2YgYnl0ZXMgdXNpbmcgYW4gZW5jcnlwdGlvbiBrZXkgdGhhdCBpcyBzdG9yZWQgaW4gQXp1cmUgS2V5IFZhdWx0LiBOb3RlIHRoYXQgdGhlIEVOQ1JZUFQgb3BlcmF0aW9uIG9ubHkgc3VwcG9ydHMgYSBzaW5nbGUgYmxvY2sgb2YgZGF0YSwgdGhlIHNpemUgb2Ygd2hpY2ggaXMgZGVwZW5kZW50IG9uIHRoZSB0YXJnZXQga2V5IGFuZCB0aGUgZW5jcnlwdGlvbiBhbGdvcml0aG0gdG8gYmUgdXNlZC4gVGhlIEVOQ1JZUFQgb3BlcmF0aW9uIGlzIG9ubHkgc3RyaWN0bHkgbmVjZXNzYXJ5IGZvciBzeW1tZXRyaWMga2V5cyBzdG9yZWQgaW4gQXp1cmUgS2V5IFZhdWx0IHNpbmNlIHByb3RlY3Rpb24gd2l0aCBhbiBhc3ltbWV0cmljIGtleSBjYW4gYmUgcGVyZm9ybWVkIHVzaW5nIHB1YmxpYyBwb3J0aW9uIG9mIHRoZSBrZXkuIFRoaXMgb3BlcmF0aW9uIGlzIHN1cHBvcnRlZCBmb3IgYXN5bW1ldHJpYyBrZXlzIGFzIGEgY29udmVuaWVuY2UgZm9yIGNhbGxlcnMgdGhhdCBoYXZlIGEga2V5LXJlZmVyZW5jZSBidXQgZG8gbm90IGhhdmUgYWNjZXNzIHRvIHRoZSBwdWJsaWMga2V5IG1hdGVyaWFsLiBUaGlzIG9wZXJhdGlvbiByZXF1aXJlcyB0aGUga2V5cy9lbmNyeXB0IHBlcm1pc3Npb24uICovXG4gICAgZW5jcnlwdChrZXlOYW1lLCBrZXlWZXJzaW9uLCBwYXJhbWV0ZXJzLCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gZW5jcnlwdCh0aGlzLl9jbGllbnQsIGtleU5hbWUsIGtleVZlcnNpb24sIHBhcmFtZXRlcnMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKiogSW1wb3J0cyBhIHByZXZpb3VzbHkgYmFja2VkIHVwIGtleSBpbnRvIEF6dXJlIEtleSBWYXVsdCwgcmVzdG9yaW5nIHRoZSBrZXksIGl0cyBrZXkgaWRlbnRpZmllciwgYXR0cmlidXRlcyBhbmQgYWNjZXNzIGNvbnRyb2wgcG9saWNpZXMuIFRoZSBSRVNUT1JFIG9wZXJhdGlvbiBtYXkgYmUgdXNlZCB0byBpbXBvcnQgYSBwcmV2aW91c2x5IGJhY2tlZCB1cCBrZXkuIEluZGl2aWR1YWwgdmVyc2lvbnMgb2YgYSBrZXkgY2Fubm90IGJlIHJlc3RvcmVkLiBUaGUga2V5IGlzIHJlc3RvcmVkIGluIGl0cyBlbnRpcmV0eSB3aXRoIHRoZSBzYW1lIGtleSBuYW1lIGFzIGl0IGhhZCB3aGVuIGl0IHdhcyBiYWNrZWQgdXAuIElmIHRoZSBrZXkgbmFtZSBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSB0YXJnZXQgS2V5IFZhdWx0LCB0aGUgUkVTVE9SRSBvcGVyYXRpb24gd2lsbCBiZSByZWplY3RlZC4gV2hpbGUgdGhlIGtleSBuYW1lIGlzIHJldGFpbmVkIGR1cmluZyByZXN0b3JlLCB0aGUgZmluYWwga2V5IGlkZW50aWZpZXIgd2lsbCBjaGFuZ2UgaWYgdGhlIGtleSBpcyByZXN0b3JlZCB0byBhIGRpZmZlcmVudCB2YXVsdC4gUmVzdG9yZSB3aWxsIHJlc3RvcmUgYWxsIHZlcnNpb25zIGFuZCBwcmVzZXJ2ZSB2ZXJzaW9uIGlkZW50aWZpZXJzLiBUaGUgUkVTVE9SRSBvcGVyYXRpb24gaXMgc3ViamVjdCB0byBzZWN1cml0eSBjb25zdHJhaW50czogVGhlIHRhcmdldCBLZXkgVmF1bHQgbXVzdCBiZSBvd25lZCBieSB0aGUgc2FtZSBNaWNyb3NvZnQgQXp1cmUgU3Vic2NyaXB0aW9uIGFzIHRoZSBzb3VyY2UgS2V5IFZhdWx0IFRoZSB1c2VyIG11c3QgaGF2ZSBSRVNUT1JFIHBlcm1pc3Npb24gaW4gdGhlIHRhcmdldCBLZXkgVmF1bHQuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3Jlc3RvcmUgcGVybWlzc2lvbi4gKi9cbiAgICByZXN0b3JlS2V5KHBhcmFtZXRlcnMsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiByZXN0b3JlS2V5KHRoaXMuX2NsaWVudCwgcGFyYW1ldGVycywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgS2V5IEJhY2t1cCBvcGVyYXRpb24gZXhwb3J0cyBhIGtleSBmcm9tIEF6dXJlIEtleSBWYXVsdCBpbiBhIHByb3RlY3RlZCBmb3JtLiBOb3RlIHRoYXQgdGhpcyBvcGVyYXRpb24gZG9lcyBOT1QgcmV0dXJuIGtleSBtYXRlcmlhbCBpbiBhIGZvcm0gdGhhdCBjYW4gYmUgdXNlZCBvdXRzaWRlIHRoZSBBenVyZSBLZXkgVmF1bHQgc3lzdGVtLCB0aGUgcmV0dXJuZWQga2V5IG1hdGVyaWFsIGlzIGVpdGhlciBwcm90ZWN0ZWQgdG8gYSBBenVyZSBLZXkgVmF1bHQgSFNNIG9yIHRvIEF6dXJlIEtleSBWYXVsdCBpdHNlbGYuIFRoZSBpbnRlbnQgb2YgdGhpcyBvcGVyYXRpb24gaXMgdG8gYWxsb3cgYSBjbGllbnQgdG8gR0VORVJBVEUgYSBrZXkgaW4gb25lIEF6dXJlIEtleSBWYXVsdCBpbnN0YW5jZSwgQkFDS1VQIHRoZSBrZXksIGFuZCB0aGVuIFJFU1RPUkUgaXQgaW50byBhbm90aGVyIEF6dXJlIEtleSBWYXVsdCBpbnN0YW5jZS4gVGhlIEJBQ0tVUCBvcGVyYXRpb24gbWF5IGJlIHVzZWQgdG8gZXhwb3J0LCBpbiBwcm90ZWN0ZWQgZm9ybSwgYW55IGtleSB0eXBlIGZyb20gQXp1cmUgS2V5IFZhdWx0LiBJbmRpdmlkdWFsIHZlcnNpb25zIG9mIGEga2V5IGNhbm5vdCBiZSBiYWNrZWQgdXAuIEJBQ0tVUCAvIFJFU1RPUkUgY2FuIGJlIHBlcmZvcm1lZCB3aXRoaW4gZ2VvZ3JhcGhpY2FsIGJvdW5kYXJpZXMgb25seTsgbWVhbmluZyB0aGF0IGEgQkFDS1VQIGZyb20gb25lIGdlb2dyYXBoaWNhbCBhcmVhIGNhbm5vdCBiZSByZXN0b3JlZCB0byBhbm90aGVyIGdlb2dyYXBoaWNhbCBhcmVhLiBGb3IgZXhhbXBsZSwgYSBiYWNrdXAgZnJvbSB0aGUgVVMgZ2VvZ3JhcGhpY2FsIGFyZWEgY2Fubm90IGJlIHJlc3RvcmVkIGluIGFuIEVVIGdlb2dyYXBoaWNhbCBhcmVhLiBUaGlzIG9wZXJhdGlvbiByZXF1aXJlcyB0aGUga2V5L2JhY2t1cCBwZXJtaXNzaW9uLiAqL1xuICAgIGJhY2t1cEtleShrZXlOYW1lLCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gYmFja3VwS2V5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBSZXRyaWV2ZXMgYSBsaXN0IG9mIHRoZSBrZXlzIGluIHRoZSBLZXkgVmF1bHQgYXMgSlNPTiBXZWIgS2V5IHN0cnVjdHVyZXMgdGhhdCBjb250YWluIHRoZSBwdWJsaWMgcGFydCBvZiBhIHN0b3JlZCBrZXkuIFRoZSBMSVNUIG9wZXJhdGlvbiBpcyBhcHBsaWNhYmxlIHRvIGFsbCBrZXkgdHlwZXMsIGhvd2V2ZXIgb25seSB0aGUgYmFzZSBrZXkgaWRlbnRpZmllciwgYXR0cmlidXRlcywgYW5kIHRhZ3MgYXJlIHByb3ZpZGVkIGluIHRoZSByZXNwb25zZS4gSW5kaXZpZHVhbCB2ZXJzaW9ucyBvZiBhIGtleSBhcmUgbm90IGxpc3RlZCBpbiB0aGUgcmVzcG9uc2UuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL2xpc3QgcGVybWlzc2lvbi4gKi9cbiAgICBnZXRLZXlzKG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBnZXRLZXlzKHRoaXMuX2NsaWVudCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgZnVsbCBrZXkgaWRlbnRpZmllciwgYXR0cmlidXRlcywgYW5kIHRhZ3MgYXJlIHByb3ZpZGVkIGluIHRoZSByZXNwb25zZS4gVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvbGlzdCBwZXJtaXNzaW9uLiAqL1xuICAgIGdldEtleVZlcnNpb25zKGtleU5hbWUsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBnZXRLZXlWZXJzaW9ucyh0aGlzLl9jbGllbnQsIGtleU5hbWUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKiogVGhlIGdldCBrZXkgb3BlcmF0aW9uIGlzIGFwcGxpY2FibGUgdG8gYWxsIGtleSB0eXBlcy4gSWYgdGhlIHJlcXVlc3RlZCBrZXkgaXMgc3ltbWV0cmljLCB0aGVuIG5vIGtleSBtYXRlcmlhbCBpcyByZWxlYXNlZCBpbiB0aGUgcmVzcG9uc2UuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL2dldCBwZXJtaXNzaW9uLiAqL1xuICAgIGdldEtleShrZXlOYW1lLCBrZXlWZXJzaW9uLCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gZ2V0S2V5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwga2V5VmVyc2lvbiwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBJbiBvcmRlciB0byBwZXJmb3JtIHRoaXMgb3BlcmF0aW9uLCB0aGUga2V5IG11c3QgYWxyZWFkeSBleGlzdCBpbiB0aGUgS2V5IFZhdWx0LiBOb3RlOiBUaGUgY3J5cHRvZ3JhcGhpYyBtYXRlcmlhbCBvZiBhIGtleSBpdHNlbGYgY2Fubm90IGJlIGNoYW5nZWQuIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL3VwZGF0ZSBwZXJtaXNzaW9uLiAqL1xuICAgIHVwZGF0ZUtleShrZXlOYW1lLCBrZXlWZXJzaW9uLCBwYXJhbWV0ZXJzLCBvcHRpb25zID0geyByZXF1ZXN0T3B0aW9uczoge30gfSkge1xuICAgICAgICByZXR1cm4gdXBkYXRlS2V5KHRoaXMuX2NsaWVudCwga2V5TmFtZSwga2V5VmVyc2lvbiwgcGFyYW1ldGVycywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKiBUaGUgZGVsZXRlIGtleSBvcGVyYXRpb24gY2Fubm90IGJlIHVzZWQgdG8gcmVtb3ZlIGluZGl2aWR1YWwgdmVyc2lvbnMgb2YgYSBrZXkuIFRoaXMgb3BlcmF0aW9uIHJlbW92ZXMgdGhlIGNyeXB0b2dyYXBoaWMgbWF0ZXJpYWwgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXksIHdoaWNoIG1lYW5zIHRoZSBrZXkgaXMgbm90IHVzYWJsZSBmb3IgU2lnbi9WZXJpZnksIFdyYXAvVW53cmFwIG9yIEVuY3J5cHQvRGVjcnlwdCBvcGVyYXRpb25zLiBUaGlzIG9wZXJhdGlvbiByZXF1aXJlcyB0aGUga2V5cy9kZWxldGUgcGVybWlzc2lvbi4gKi9cbiAgICBkZWxldGVLZXkoa2V5TmFtZSwgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIGRlbGV0ZUtleSh0aGlzLl9jbGllbnQsIGtleU5hbWUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKiogVGhlIGltcG9ydCBrZXkgb3BlcmF0aW9uIG1heSBiZSB1c2VkIHRvIGltcG9ydCBhbnkga2V5IHR5cGUgaW50byBhbiBBenVyZSBLZXkgVmF1bHQuIElmIHRoZSBuYW1lZCBrZXkgYWxyZWFkeSBleGlzdHMsIEF6dXJlIEtleSBWYXVsdCBjcmVhdGVzIGEgbmV3IHZlcnNpb24gb2YgdGhlIGtleS4gVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvaW1wb3J0IHBlcm1pc3Npb24uICovXG4gICAgaW1wb3J0S2V5KGtleU5hbWUsIHBhcmFtZXRlcnMsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiBpbXBvcnRLZXkodGhpcy5fY2xpZW50LCBrZXlOYW1lLCBwYXJhbWV0ZXJzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqIFRoZSBvcGVyYXRpb24gd2lsbCByb3RhdGUgdGhlIGtleSBiYXNlZCBvbiB0aGUga2V5IHBvbGljeS4gSXQgcmVxdWlyZXMgdGhlIGtleXMvcm90YXRlIHBlcm1pc3Npb24uICovXG4gICAgcm90YXRlS2V5KGtleU5hbWUsIG9wdGlvbnMgPSB7IHJlcXVlc3RPcHRpb25zOiB7fSB9KSB7XG4gICAgICAgIHJldHVybiByb3RhdGVLZXkodGhpcy5fY2xpZW50LCBrZXlOYW1lLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqIFRoZSBjcmVhdGUga2V5IG9wZXJhdGlvbiBjYW4gYmUgdXNlZCB0byBjcmVhdGUgYW55IGtleSB0eXBlIGluIEF6dXJlIEtleSBWYXVsdC4gSWYgdGhlIG5hbWVkIGtleSBhbHJlYWR5IGV4aXN0cywgQXp1cmUgS2V5IFZhdWx0IGNyZWF0ZXMgYSBuZXcgdmVyc2lvbiBvZiB0aGUga2V5LiBJdCByZXF1aXJlcyB0aGUga2V5cy9jcmVhdGUgcGVybWlzc2lvbi4gKi9cbiAgICBjcmVhdGVLZXkoa2V5TmFtZSwgcGFyYW1ldGVycywgb3B0aW9ucyA9IHsgcmVxdWVzdE9wdGlvbnM6IHt9IH0pIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUtleSh0aGlzLl9jbGllbnQsIGtleU5hbWUsIHBhcmFtZXRlcnMsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleVZhdWx0Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/keyVaultClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/logger.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/logger.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"keyvault-keys\");\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDNUMsZUFBZSxpRUFBa0I7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUva2V5dmF1bHQta2V5cy9kaXN0L2VzbS9nZW5lcmF0ZWQvbG9nZ2VyLmpzP2YwYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcImtleXZhdWx0LWtleXNcIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/models/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownDeletionRecoveryLevel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownDeletionRecoveryLevel),\n/* harmony export */   KnownJsonWebKeyCurveName: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyCurveName),\n/* harmony export */   KnownJsonWebKeyEncryptionAlgorithm: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyEncryptionAlgorithm),\n/* harmony export */   KnownJsonWebKeyOperation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyOperation),\n/* harmony export */   KnownJsonWebKeySignatureAlgorithm: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeySignatureAlgorithm),\n/* harmony export */   KnownJsonWebKeyType: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownJsonWebKeyType),\n/* harmony export */   KnownKeyEncryptionAlgorithm: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownKeyEncryptionAlgorithm),\n/* harmony export */   KnownVersions: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_0__.KnownVersions)\n/* harmony export */ });\n/* harmony import */ var _models_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/models.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL21vZGVscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NQO0FBQ3RQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vZ2VuZXJhdGVkL21vZGVscy9pbmRleC5qcz9mMTViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuZXhwb3J0IHsgS25vd25Kc29uV2ViS2V5VHlwZSwgS25vd25Kc29uV2ViS2V5T3BlcmF0aW9uLCBLbm93bkRlbGV0aW9uUmVjb3ZlcnlMZXZlbCwgS25vd25Kc29uV2ViS2V5Q3VydmVOYW1lLCBLbm93bkpzb25XZWJLZXlFbmNyeXB0aW9uQWxnb3JpdGhtLCBLbm93bkpzb25XZWJLZXlTaWduYXR1cmVBbGdvcml0aG0sIEtub3duS2V5RW5jcnlwdGlvbkFsZ29yaXRobSwgS25vd25WZXJzaW9ucywgfSBmcm9tIFwiLi9tb2RlbHMuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/models.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/models/models.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownDeletionRecoveryLevel: () => (/* binding */ KnownDeletionRecoveryLevel),\n/* harmony export */   KnownJsonWebKeyCurveName: () => (/* binding */ KnownJsonWebKeyCurveName),\n/* harmony export */   KnownJsonWebKeyEncryptionAlgorithm: () => (/* binding */ KnownJsonWebKeyEncryptionAlgorithm),\n/* harmony export */   KnownJsonWebKeyOperation: () => (/* binding */ KnownJsonWebKeyOperation),\n/* harmony export */   KnownJsonWebKeySignatureAlgorithm: () => (/* binding */ KnownJsonWebKeySignatureAlgorithm),\n/* harmony export */   KnownJsonWebKeyType: () => (/* binding */ KnownJsonWebKeyType),\n/* harmony export */   KnownKeyEncryptionAlgorithm: () => (/* binding */ KnownKeyEncryptionAlgorithm),\n/* harmony export */   KnownVersions: () => (/* binding */ KnownVersions),\n/* harmony export */   _deletedKeyListResultDeserializer: () => (/* binding */ _deletedKeyListResultDeserializer),\n/* harmony export */   _keyListResultDeserializer: () => (/* binding */ _keyListResultDeserializer),\n/* harmony export */   _keyVaultErrorErrorDeserializer: () => (/* binding */ _keyVaultErrorErrorDeserializer),\n/* harmony export */   backupKeyResultDeserializer: () => (/* binding */ backupKeyResultDeserializer),\n/* harmony export */   deletedKeyBundleDeserializer: () => (/* binding */ deletedKeyBundleDeserializer),\n/* harmony export */   deletedKeyItemArrayDeserializer: () => (/* binding */ deletedKeyItemArrayDeserializer),\n/* harmony export */   deletedKeyItemDeserializer: () => (/* binding */ deletedKeyItemDeserializer),\n/* harmony export */   getRandomBytesRequestSerializer: () => (/* binding */ getRandomBytesRequestSerializer),\n/* harmony export */   jsonWebKeyDeserializer: () => (/* binding */ jsonWebKeyDeserializer),\n/* harmony export */   jsonWebKeySerializer: () => (/* binding */ jsonWebKeySerializer),\n/* harmony export */   keyAttestationDeserializer: () => (/* binding */ keyAttestationDeserializer),\n/* harmony export */   keyAttributesDeserializer: () => (/* binding */ keyAttributesDeserializer),\n/* harmony export */   keyAttributesSerializer: () => (/* binding */ keyAttributesSerializer),\n/* harmony export */   keyBundleDeserializer: () => (/* binding */ keyBundleDeserializer),\n/* harmony export */   keyCreateParametersSerializer: () => (/* binding */ keyCreateParametersSerializer),\n/* harmony export */   keyImportParametersSerializer: () => (/* binding */ keyImportParametersSerializer),\n/* harmony export */   keyItemArrayDeserializer: () => (/* binding */ keyItemArrayDeserializer),\n/* harmony export */   keyItemDeserializer: () => (/* binding */ keyItemDeserializer),\n/* harmony export */   keyOperationResultDeserializer: () => (/* binding */ keyOperationResultDeserializer),\n/* harmony export */   keyOperationsParametersSerializer: () => (/* binding */ keyOperationsParametersSerializer),\n/* harmony export */   keyReleaseParametersSerializer: () => (/* binding */ keyReleaseParametersSerializer),\n/* harmony export */   keyReleasePolicyDeserializer: () => (/* binding */ keyReleasePolicyDeserializer),\n/* harmony export */   keyReleasePolicySerializer: () => (/* binding */ keyReleasePolicySerializer),\n/* harmony export */   keyReleaseResultDeserializer: () => (/* binding */ keyReleaseResultDeserializer),\n/* harmony export */   keyRestoreParametersSerializer: () => (/* binding */ keyRestoreParametersSerializer),\n/* harmony export */   keyRotationPolicyAttributesDeserializer: () => (/* binding */ keyRotationPolicyAttributesDeserializer),\n/* harmony export */   keyRotationPolicyAttributesSerializer: () => (/* binding */ keyRotationPolicyAttributesSerializer),\n/* harmony export */   keyRotationPolicyDeserializer: () => (/* binding */ keyRotationPolicyDeserializer),\n/* harmony export */   keyRotationPolicySerializer: () => (/* binding */ keyRotationPolicySerializer),\n/* harmony export */   keySignParametersSerializer: () => (/* binding */ keySignParametersSerializer),\n/* harmony export */   keyUpdateParametersSerializer: () => (/* binding */ keyUpdateParametersSerializer),\n/* harmony export */   keyVaultErrorDeserializer: () => (/* binding */ keyVaultErrorDeserializer),\n/* harmony export */   keyVerifyParametersSerializer: () => (/* binding */ keyVerifyParametersSerializer),\n/* harmony export */   keyVerifyResultDeserializer: () => (/* binding */ keyVerifyResultDeserializer),\n/* harmony export */   lifetimeActionsArrayDeserializer: () => (/* binding */ lifetimeActionsArrayDeserializer),\n/* harmony export */   lifetimeActionsArraySerializer: () => (/* binding */ lifetimeActionsArraySerializer),\n/* harmony export */   lifetimeActionsDeserializer: () => (/* binding */ lifetimeActionsDeserializer),\n/* harmony export */   lifetimeActionsSerializer: () => (/* binding */ lifetimeActionsSerializer),\n/* harmony export */   lifetimeActionsTriggerDeserializer: () => (/* binding */ lifetimeActionsTriggerDeserializer),\n/* harmony export */   lifetimeActionsTriggerSerializer: () => (/* binding */ lifetimeActionsTriggerSerializer),\n/* harmony export */   lifetimeActionsTypeDeserializer: () => (/* binding */ lifetimeActionsTypeDeserializer),\n/* harmony export */   lifetimeActionsTypeSerializer: () => (/* binding */ lifetimeActionsTypeSerializer),\n/* harmony export */   randomBytesDeserializer: () => (/* binding */ randomBytesDeserializer)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nfunction keyCreateParametersSerializer(item) {\n    return {\n        kty: item[\"kty\"],\n        key_size: item[\"keySize\"],\n        public_exponent: item[\"publicExponent\"],\n        key_ops: !item[\"keyOps\"]\n            ? item[\"keyOps\"]\n            : item[\"keyOps\"].map((p) => {\n                return p;\n            }),\n        attributes: !item[\"keyAttributes\"]\n            ? item[\"keyAttributes\"]\n            : keyAttributesSerializer(item[\"keyAttributes\"]),\n        tags: item[\"tags\"],\n        crv: item[\"curve\"],\n        release_policy: !item[\"releasePolicy\"]\n            ? item[\"releasePolicy\"]\n            : keyReleasePolicySerializer(item[\"releasePolicy\"]),\n    };\n}\n/** JsonWebKey Key Type (kty), as defined in https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40. */\nvar KnownJsonWebKeyType;\n(function (KnownJsonWebKeyType) {\n    /** Elliptic Curve. */\n    KnownJsonWebKeyType[\"EC\"] = \"EC\";\n    /** Elliptic Curve with a private key which is stored in the HSM. */\n    KnownJsonWebKeyType[\"ECHSM\"] = \"EC-HSM\";\n    /** RSA (https://tools.ietf.org/html/rfc3447) */\n    KnownJsonWebKeyType[\"RSA\"] = \"RSA\";\n    /** RSA with a private key which is stored in the HSM. */\n    KnownJsonWebKeyType[\"RSAHSM\"] = \"RSA-HSM\";\n    /** Octet sequence (used to represent symmetric keys) */\n    KnownJsonWebKeyType[\"Oct\"] = \"oct\";\n    /** Octet sequence (used to represent symmetric keys) which is stored the HSM. */\n    KnownJsonWebKeyType[\"OctHSM\"] = \"oct-HSM\";\n})(KnownJsonWebKeyType || (KnownJsonWebKeyType = {}));\n/** JSON web key operations. For more information, see JsonWebKeyOperation. */\nvar KnownJsonWebKeyOperation;\n(function (KnownJsonWebKeyOperation) {\n    /** Indicates that the key can be used to encrypt. */\n    KnownJsonWebKeyOperation[\"Encrypt\"] = \"encrypt\";\n    /** Indicates that the key can be used to decrypt. */\n    KnownJsonWebKeyOperation[\"Decrypt\"] = \"decrypt\";\n    /** Indicates that the key can be used to sign. */\n    KnownJsonWebKeyOperation[\"Sign\"] = \"sign\";\n    /** Indicates that the key can be used to verify. */\n    KnownJsonWebKeyOperation[\"Verify\"] = \"verify\";\n    /** Indicates that the key can be used to wrap another key. */\n    KnownJsonWebKeyOperation[\"WrapKey\"] = \"wrapKey\";\n    /** Indicates that the key can be used to unwrap another key. */\n    KnownJsonWebKeyOperation[\"UnwrapKey\"] = \"unwrapKey\";\n    /** Indicates that the key can be imported during creation. */\n    KnownJsonWebKeyOperation[\"Import\"] = \"import\";\n    /** Indicates that the private component of the key can be exported. */\n    KnownJsonWebKeyOperation[\"Export\"] = \"export\";\n})(KnownJsonWebKeyOperation || (KnownJsonWebKeyOperation = {}));\nfunction keyAttributesSerializer(item) {\n    return {\n        enabled: item[\"enabled\"],\n        nbf: !item[\"notBefore\"]\n            ? item[\"notBefore\"]\n            : (item[\"notBefore\"].getTime() / 1000) | 0,\n        exp: !item[\"expires\"]\n            ? item[\"expires\"]\n            : (item[\"expires\"].getTime() / 1000) | 0,\n        exportable: item[\"exportable\"],\n    };\n}\nfunction keyAttributesDeserializer(item) {\n    return {\n        enabled: item[\"enabled\"],\n        notBefore: !item[\"nbf\"] ? item[\"nbf\"] : new Date(item[\"nbf\"] * 1000),\n        expires: !item[\"exp\"] ? item[\"exp\"] : new Date(item[\"exp\"] * 1000),\n        created: !item[\"created\"]\n            ? item[\"created\"]\n            : new Date(item[\"created\"] * 1000),\n        updated: !item[\"updated\"]\n            ? item[\"updated\"]\n            : new Date(item[\"updated\"] * 1000),\n        recoverableDays: item[\"recoverableDays\"],\n        recoveryLevel: item[\"recoveryLevel\"],\n        exportable: item[\"exportable\"],\n        hsmPlatform: item[\"hsmPlatform\"],\n        attestation: !item[\"attestation\"]\n            ? item[\"attestation\"]\n            : keyAttestationDeserializer(item[\"attestation\"]),\n    };\n}\n/** Reflects the deletion recovery level currently in effect for certificates in the current vault. If it contains 'Purgeable', the certificate can be permanently deleted by a privileged user; otherwise, only the system can purge the certificate, at the end of the retention interval. */\nvar KnownDeletionRecoveryLevel;\n(function (KnownDeletionRecoveryLevel) {\n    /** Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.) */\n    KnownDeletionRecoveryLevel[\"Purgeable\"] = \"Purgeable\";\n    /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered */\n    KnownDeletionRecoveryLevel[\"RecoverablePurgeable\"] = \"Recoverable+Purgeable\";\n    /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered */\n    KnownDeletionRecoveryLevel[\"Recoverable\"] = \"Recoverable\";\n    /** Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered */\n    KnownDeletionRecoveryLevel[\"RecoverableProtectedSubscription\"] = \"Recoverable+ProtectedSubscription\";\n    /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7 <= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled. */\n    KnownDeletionRecoveryLevel[\"CustomizedRecoverablePurgeable\"] = \"CustomizedRecoverable+Purgeable\";\n    /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7 <= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available. */\n    KnownDeletionRecoveryLevel[\"CustomizedRecoverable\"] = \"CustomizedRecoverable\";\n    /** Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7 <= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled. */\n    KnownDeletionRecoveryLevel[\"CustomizedRecoverableProtectedSubscription\"] = \"CustomizedRecoverable+ProtectedSubscription\";\n})(KnownDeletionRecoveryLevel || (KnownDeletionRecoveryLevel = {}));\nfunction keyAttestationDeserializer(item) {\n    return {\n        certificatePemFile: !item[\"certificatePemFile\"]\n            ? item[\"certificatePemFile\"]\n            : typeof item[\"certificatePemFile\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"certificatePemFile\"], \"base64url\")\n                : item[\"certificatePemFile\"],\n        privateKeyAttestation: !item[\"privateKeyAttestation\"]\n            ? item[\"privateKeyAttestation\"]\n            : typeof item[\"privateKeyAttestation\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"privateKeyAttestation\"], \"base64url\")\n                : item[\"privateKeyAttestation\"],\n        publicKeyAttestation: !item[\"publicKeyAttestation\"]\n            ? item[\"publicKeyAttestation\"]\n            : typeof item[\"publicKeyAttestation\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"publicKeyAttestation\"], \"base64url\")\n                : item[\"publicKeyAttestation\"],\n        version: item[\"version\"],\n    };\n}\n/** Elliptic curve name. For valid values, see JsonWebKeyCurveName. */\nvar KnownJsonWebKeyCurveName;\n(function (KnownJsonWebKeyCurveName) {\n    /** The NIST P-256 elliptic curve, AKA SECG curve SECP256R1. */\n    KnownJsonWebKeyCurveName[\"P256\"] = \"P-256\";\n    /** The NIST P-384 elliptic curve, AKA SECG curve SECP384R1. */\n    KnownJsonWebKeyCurveName[\"P384\"] = \"P-384\";\n    /** The NIST P-521 elliptic curve, AKA SECG curve SECP521R1. */\n    KnownJsonWebKeyCurveName[\"P521\"] = \"P-521\";\n    /** The SECG SECP256K1 elliptic curve. */\n    KnownJsonWebKeyCurveName[\"P256K\"] = \"P-256K\";\n})(KnownJsonWebKeyCurveName || (KnownJsonWebKeyCurveName = {}));\nfunction keyReleasePolicySerializer(item) {\n    return {\n        contentType: item[\"contentType\"],\n        immutable: item[\"immutable\"],\n        data: !item[\"encodedPolicy\"]\n            ? item[\"encodedPolicy\"]\n            : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"encodedPolicy\"], \"base64url\"),\n    };\n}\nfunction keyReleasePolicyDeserializer(item) {\n    return {\n        contentType: item[\"contentType\"],\n        immutable: item[\"immutable\"],\n        encodedPolicy: !item[\"data\"]\n            ? item[\"data\"]\n            : typeof item[\"data\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"data\"], \"base64url\")\n                : item[\"data\"],\n    };\n}\nfunction keyBundleDeserializer(item) {\n    return {\n        key: !item[\"key\"] ? item[\"key\"] : jsonWebKeyDeserializer(item[\"key\"]),\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : keyAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        managed: item[\"managed\"],\n        releasePolicy: !item[\"release_policy\"]\n            ? item[\"release_policy\"]\n            : keyReleasePolicyDeserializer(item[\"release_policy\"]),\n    };\n}\nfunction jsonWebKeySerializer(item) {\n    return {\n        kid: item[\"kid\"],\n        kty: item[\"kty\"],\n        key_ops: !item[\"keyOps\"]\n            ? item[\"keyOps\"]\n            : item[\"keyOps\"].map((p) => {\n                return p;\n            }),\n        n: !item[\"n\"] ? item[\"n\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"n\"], \"base64url\"),\n        e: !item[\"e\"] ? item[\"e\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"e\"], \"base64url\"),\n        d: !item[\"d\"] ? item[\"d\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"d\"], \"base64url\"),\n        dp: !item[\"dp\"] ? item[\"dp\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"dp\"], \"base64url\"),\n        dq: !item[\"dq\"] ? item[\"dq\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"dq\"], \"base64url\"),\n        qi: !item[\"qi\"] ? item[\"qi\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"qi\"], \"base64url\"),\n        p: !item[\"p\"] ? item[\"p\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"p\"], \"base64url\"),\n        q: !item[\"q\"] ? item[\"q\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"q\"], \"base64url\"),\n        k: !item[\"k\"] ? item[\"k\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"k\"], \"base64url\"),\n        key_hsm: !item[\"t\"]\n            ? item[\"t\"]\n            : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"t\"], \"base64url\"),\n        crv: item[\"crv\"],\n        x: !item[\"x\"] ? item[\"x\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"x\"], \"base64url\"),\n        y: !item[\"y\"] ? item[\"y\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"y\"], \"base64url\"),\n    };\n}\nfunction jsonWebKeyDeserializer(item) {\n    return {\n        kid: item[\"kid\"],\n        kty: item[\"kty\"],\n        keyOps: !item[\"key_ops\"]\n            ? item[\"key_ops\"]\n            : item[\"key_ops\"].map((p) => {\n                return p;\n            }),\n        n: !item[\"n\"]\n            ? item[\"n\"]\n            : typeof item[\"n\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"n\"], \"base64url\")\n                : item[\"n\"],\n        e: !item[\"e\"]\n            ? item[\"e\"]\n            : typeof item[\"e\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"e\"], \"base64url\")\n                : item[\"e\"],\n        d: !item[\"d\"]\n            ? item[\"d\"]\n            : typeof item[\"d\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"d\"], \"base64url\")\n                : item[\"d\"],\n        dp: !item[\"dp\"]\n            ? item[\"dp\"]\n            : typeof item[\"dp\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"dp\"], \"base64url\")\n                : item[\"dp\"],\n        dq: !item[\"dq\"]\n            ? item[\"dq\"]\n            : typeof item[\"dq\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"dq\"], \"base64url\")\n                : item[\"dq\"],\n        qi: !item[\"qi\"]\n            ? item[\"qi\"]\n            : typeof item[\"qi\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"qi\"], \"base64url\")\n                : item[\"qi\"],\n        p: !item[\"p\"]\n            ? item[\"p\"]\n            : typeof item[\"p\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"p\"], \"base64url\")\n                : item[\"p\"],\n        q: !item[\"q\"]\n            ? item[\"q\"]\n            : typeof item[\"q\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"q\"], \"base64url\")\n                : item[\"q\"],\n        k: !item[\"k\"]\n            ? item[\"k\"]\n            : typeof item[\"k\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"k\"], \"base64url\")\n                : item[\"k\"],\n        t: !item[\"key_hsm\"]\n            ? item[\"key_hsm\"]\n            : typeof item[\"key_hsm\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"key_hsm\"], \"base64url\")\n                : item[\"key_hsm\"],\n        crv: item[\"crv\"],\n        x: !item[\"x\"]\n            ? item[\"x\"]\n            : typeof item[\"x\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"x\"], \"base64url\")\n                : item[\"x\"],\n        y: !item[\"y\"]\n            ? item[\"y\"]\n            : typeof item[\"y\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"y\"], \"base64url\")\n                : item[\"y\"],\n    };\n}\nfunction keyVaultErrorDeserializer(item) {\n    return {\n        error: !item[\"error\"]\n            ? item[\"error\"]\n            : _keyVaultErrorErrorDeserializer(item[\"error\"]),\n    };\n}\nfunction _keyVaultErrorErrorDeserializer(item) {\n    return {\n        code: item[\"code\"],\n        message: item[\"message\"],\n        innerError: !item[\"innererror\"]\n            ? item[\"innererror\"]\n            : _keyVaultErrorErrorDeserializer(item[\"innererror\"]),\n    };\n}\nfunction keyImportParametersSerializer(item) {\n    return {\n        Hsm: item[\"hsm\"],\n        key: jsonWebKeySerializer(item[\"key\"]),\n        attributes: !item[\"keyAttributes\"]\n            ? item[\"keyAttributes\"]\n            : keyAttributesSerializer(item[\"keyAttributes\"]),\n        tags: item[\"tags\"],\n        release_policy: !item[\"releasePolicy\"]\n            ? item[\"releasePolicy\"]\n            : keyReleasePolicySerializer(item[\"releasePolicy\"]),\n    };\n}\nfunction deletedKeyBundleDeserializer(item) {\n    return {\n        key: !item[\"key\"] ? item[\"key\"] : jsonWebKeyDeserializer(item[\"key\"]),\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : keyAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        managed: item[\"managed\"],\n        releasePolicy: !item[\"release_policy\"]\n            ? item[\"release_policy\"]\n            : keyReleasePolicyDeserializer(item[\"release_policy\"]),\n        recoveryId: item[\"recoveryId\"],\n        scheduledPurgeDate: !item[\"scheduledPurgeDate\"]\n            ? item[\"scheduledPurgeDate\"]\n            : new Date(item[\"scheduledPurgeDate\"] * 1000),\n        deletedDate: !item[\"deletedDate\"]\n            ? item[\"deletedDate\"]\n            : new Date(item[\"deletedDate\"] * 1000),\n    };\n}\nfunction keyUpdateParametersSerializer(item) {\n    return {\n        key_ops: !item[\"keyOps\"]\n            ? item[\"keyOps\"]\n            : item[\"keyOps\"].map((p) => {\n                return p;\n            }),\n        attributes: !item[\"keyAttributes\"]\n            ? item[\"keyAttributes\"]\n            : keyAttributesSerializer(item[\"keyAttributes\"]),\n        tags: item[\"tags\"],\n        release_policy: !item[\"releasePolicy\"]\n            ? item[\"releasePolicy\"]\n            : keyReleasePolicySerializer(item[\"releasePolicy\"]),\n    };\n}\nfunction _keyListResultDeserializer(item) {\n    return {\n        value: !item[\"value\"]\n            ? item[\"value\"]\n            : keyItemArrayDeserializer(item[\"value\"]),\n        nextLink: item[\"nextLink\"],\n    };\n}\nfunction keyItemArrayDeserializer(result) {\n    return result.map((item) => {\n        return keyItemDeserializer(item);\n    });\n}\nfunction keyItemDeserializer(item) {\n    return {\n        kid: item[\"kid\"],\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : keyAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        managed: item[\"managed\"],\n    };\n}\nfunction backupKeyResultDeserializer(item) {\n    return {\n        value: !item[\"value\"]\n            ? item[\"value\"]\n            : typeof item[\"value\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"value\"], \"base64url\")\n                : item[\"value\"],\n    };\n}\nfunction keyRestoreParametersSerializer(item) {\n    return { value: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"keyBundleBackup\"], \"base64url\") };\n}\nfunction keyOperationsParametersSerializer(item) {\n    return {\n        alg: item[\"algorithm\"],\n        value: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"value\"], \"base64url\"),\n        iv: !item[\"iv\"] ? item[\"iv\"] : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"iv\"], \"base64url\"),\n        aad: !item[\"aad\"]\n            ? item[\"aad\"]\n            : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"aad\"], \"base64url\"),\n        tag: !item[\"tag\"]\n            ? item[\"tag\"]\n            : (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"tag\"], \"base64url\"),\n    };\n}\n/** An algorithm used for encryption and decryption. */\nvar KnownJsonWebKeyEncryptionAlgorithm;\n(function (KnownJsonWebKeyEncryptionAlgorithm) {\n    /** [Not recommended] RSAES using Optimal Asymmetric Encryption Padding (OAEP), as described in https://tools.ietf.org/html/rfc3447, with the default parameters specified by RFC 3447 in Section A.2.1. Those default parameters are using a hash function of SHA-1 and a mask generation function of MGF1 with SHA-1. Microsoft recommends using RSA_OAEP_256 or stronger algorithms for enhanced security. Microsoft does *not* recommend RSA_OAEP, which is included solely for backwards compatibility. RSA_OAEP utilizes SHA1, which has known collision problems. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"RSAOaep\"] = \"RSA-OAEP\";\n    /** RSAES using Optimal Asymmetric Encryption Padding with a hash function of SHA-256 and a mask generation function of MGF1 with SHA-256. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"RSAOaep256\"] = \"RSA-OAEP-256\";\n    /** [Not recommended] RSAES-PKCS1-V1_5 key encryption, as described in https://tools.ietf.org/html/rfc3447. Microsoft recommends using RSA_OAEP_256 or stronger algorithms for enhanced security. Microsoft does *not* recommend RSA_1_5, which is included solely for backwards compatibility. Cryptographic standards no longer consider RSA with the PKCS#1 v1.5 padding scheme secure for encryption. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"RSA15\"] = \"RSA1_5\";\n    /** 128-bit AES-GCM. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A128GCM\"] = \"A128GCM\";\n    /** 192-bit AES-GCM. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A192GCM\"] = \"A192GCM\";\n    /** 256-bit AES-GCM. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A256GCM\"] = \"A256GCM\";\n    /** 128-bit AES key wrap. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A128KW\"] = \"A128KW\";\n    /** 192-bit AES key wrap. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A192KW\"] = \"A192KW\";\n    /** 256-bit AES key wrap. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A256KW\"] = \"A256KW\";\n    /** 128-bit AES-CBC. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A128CBC\"] = \"A128CBC\";\n    /** 192-bit AES-CBC. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A192CBC\"] = \"A192CBC\";\n    /** 256-bit AES-CBC. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A256CBC\"] = \"A256CBC\";\n    /** 128-bit AES-CBC with PKCS padding. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A128Cbcpad\"] = \"A128CBCPAD\";\n    /** 192-bit AES-CBC with PKCS padding. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A192Cbcpad\"] = \"A192CBCPAD\";\n    /** 256-bit AES-CBC with PKCS padding. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"A256Cbcpad\"] = \"A256CBCPAD\";\n    /** CKM AES key wrap. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"CkmAesKeyWrap\"] = \"CKM_AES_KEY_WRAP\";\n    /** CKM AES key wrap with padding. */\n    KnownJsonWebKeyEncryptionAlgorithm[\"CkmAesKeyWrapPad\"] = \"CKM_AES_KEY_WRAP_PAD\";\n})(KnownJsonWebKeyEncryptionAlgorithm || (KnownJsonWebKeyEncryptionAlgorithm = {}));\nfunction keyOperationResultDeserializer(item) {\n    return {\n        kid: item[\"kid\"],\n        result: !item[\"value\"]\n            ? item[\"value\"]\n            : typeof item[\"value\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"value\"], \"base64url\")\n                : item[\"value\"],\n        iv: !item[\"iv\"]\n            ? item[\"iv\"]\n            : typeof item[\"iv\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"iv\"], \"base64url\")\n                : item[\"iv\"],\n        authenticationTag: !item[\"tag\"]\n            ? item[\"tag\"]\n            : typeof item[\"tag\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"tag\"], \"base64url\")\n                : item[\"tag\"],\n        additionalAuthenticatedData: !item[\"aad\"]\n            ? item[\"aad\"]\n            : typeof item[\"aad\"] === \"string\"\n                ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"aad\"], \"base64url\")\n                : item[\"aad\"],\n    };\n}\nfunction keySignParametersSerializer(item) {\n    return {\n        alg: item[\"algorithm\"],\n        value: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"value\"], \"base64url\"),\n    };\n}\n/** The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. */\nvar KnownJsonWebKeySignatureAlgorithm;\n(function (KnownJsonWebKeySignatureAlgorithm) {\n    /** RSASSA-PSS using SHA-256 and MGF1 with SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"PS256\"] = \"PS256\";\n    /** RSASSA-PSS using SHA-384 and MGF1 with SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"PS384\"] = \"PS384\";\n    /** RSASSA-PSS using SHA-512 and MGF1 with SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"PS512\"] = \"PS512\";\n    /** RSASSA-PKCS1-v1_5 using SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"RS256\"] = \"RS256\";\n    /** RSASSA-PKCS1-v1_5 using SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"RS384\"] = \"RS384\";\n    /** RSASSA-PKCS1-v1_5 using SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"RS512\"] = \"RS512\";\n    /** HMAC using SHA-256, as described in  https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"HS256\"] = \"HS256\";\n    /** HMAC using SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"HS384\"] = \"HS384\";\n    /** HMAC using SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"HS512\"] = \"HS512\";\n    /** Reserved */\n    KnownJsonWebKeySignatureAlgorithm[\"Rsnull\"] = \"RSNULL\";\n    /** ECDSA using P-256 and SHA-256, as described in https://tools.ietf.org/html/rfc7518. */\n    KnownJsonWebKeySignatureAlgorithm[\"ES256\"] = \"ES256\";\n    /** ECDSA using P-384 and SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"ES384\"] = \"ES384\";\n    /** ECDSA using P-521 and SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"ES512\"] = \"ES512\";\n    /** ECDSA using P-256K and SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n    KnownJsonWebKeySignatureAlgorithm[\"ES256K\"] = \"ES256K\";\n})(KnownJsonWebKeySignatureAlgorithm || (KnownJsonWebKeySignatureAlgorithm = {}));\nfunction keyVerifyParametersSerializer(item) {\n    return {\n        alg: item[\"algorithm\"],\n        digest: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"digest\"], \"base64url\"),\n        value: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToString)(item[\"signature\"], \"base64url\"),\n    };\n}\nfunction keyVerifyResultDeserializer(item) {\n    return {\n        value: item[\"value\"],\n    };\n}\nfunction keyReleaseParametersSerializer(item) {\n    return {\n        target: item[\"targetAttestationToken\"],\n        nonce: item[\"nonce\"],\n        enc: item[\"enc\"],\n    };\n}\n/** The encryption algorithm to use to protected the exported key material */\nvar KnownKeyEncryptionAlgorithm;\n(function (KnownKeyEncryptionAlgorithm) {\n    /** The CKM_RSA_AES_KEY_WRAP key wrap mechanism. */\n    KnownKeyEncryptionAlgorithm[\"CkmRsaAesKeyWrap\"] = \"CKM_RSA_AES_KEY_WRAP\";\n    /** The RSA_AES_KEY_WRAP_256 key wrap mechanism. */\n    KnownKeyEncryptionAlgorithm[\"RsaAesKeyWrap256\"] = \"RSA_AES_KEY_WRAP_256\";\n    /** The RSA_AES_KEY_WRAP_384 key wrap mechanism. */\n    KnownKeyEncryptionAlgorithm[\"RsaAesKeyWrap384\"] = \"RSA_AES_KEY_WRAP_384\";\n})(KnownKeyEncryptionAlgorithm || (KnownKeyEncryptionAlgorithm = {}));\nfunction keyReleaseResultDeserializer(item) {\n    return {\n        value: item[\"value\"],\n    };\n}\nfunction _deletedKeyListResultDeserializer(item) {\n    return {\n        value: !item[\"value\"]\n            ? item[\"value\"]\n            : deletedKeyItemArrayDeserializer(item[\"value\"]),\n        nextLink: item[\"nextLink\"],\n    };\n}\nfunction deletedKeyItemArrayDeserializer(result) {\n    return result.map((item) => {\n        return deletedKeyItemDeserializer(item);\n    });\n}\nfunction deletedKeyItemDeserializer(item) {\n    return {\n        kid: item[\"kid\"],\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : keyAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        managed: item[\"managed\"],\n        recoveryId: item[\"recoveryId\"],\n        scheduledPurgeDate: !item[\"scheduledPurgeDate\"]\n            ? item[\"scheduledPurgeDate\"]\n            : new Date(item[\"scheduledPurgeDate\"] * 1000),\n        deletedDate: !item[\"deletedDate\"]\n            ? item[\"deletedDate\"]\n            : new Date(item[\"deletedDate\"] * 1000),\n    };\n}\nfunction keyRotationPolicySerializer(item) {\n    return {\n        lifetimeActions: !item[\"lifetimeActions\"]\n            ? item[\"lifetimeActions\"]\n            : lifetimeActionsArraySerializer(item[\"lifetimeActions\"]),\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : keyRotationPolicyAttributesSerializer(item[\"attributes\"]),\n    };\n}\nfunction keyRotationPolicyDeserializer(item) {\n    return {\n        id: item[\"id\"],\n        lifetimeActions: !item[\"lifetimeActions\"]\n            ? item[\"lifetimeActions\"]\n            : lifetimeActionsArrayDeserializer(item[\"lifetimeActions\"]),\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : keyRotationPolicyAttributesDeserializer(item[\"attributes\"]),\n    };\n}\nfunction lifetimeActionsArraySerializer(result) {\n    return result.map((item) => {\n        return lifetimeActionsSerializer(item);\n    });\n}\nfunction lifetimeActionsArrayDeserializer(result) {\n    return result.map((item) => {\n        return lifetimeActionsDeserializer(item);\n    });\n}\nfunction lifetimeActionsSerializer(item) {\n    return {\n        trigger: !item[\"trigger\"]\n            ? item[\"trigger\"]\n            : lifetimeActionsTriggerSerializer(item[\"trigger\"]),\n        action: !item[\"action\"]\n            ? item[\"action\"]\n            : lifetimeActionsTypeSerializer(item[\"action\"]),\n    };\n}\nfunction lifetimeActionsDeserializer(item) {\n    return {\n        trigger: !item[\"trigger\"]\n            ? item[\"trigger\"]\n            : lifetimeActionsTriggerDeserializer(item[\"trigger\"]),\n        action: !item[\"action\"]\n            ? item[\"action\"]\n            : lifetimeActionsTypeDeserializer(item[\"action\"]),\n    };\n}\nfunction lifetimeActionsTriggerSerializer(item) {\n    return {\n        timeAfterCreate: item[\"timeAfterCreate\"],\n        timeBeforeExpiry: item[\"timeBeforeExpiry\"],\n    };\n}\nfunction lifetimeActionsTriggerDeserializer(item) {\n    return {\n        timeAfterCreate: item[\"timeAfterCreate\"],\n        timeBeforeExpiry: item[\"timeBeforeExpiry\"],\n    };\n}\nfunction lifetimeActionsTypeSerializer(item) {\n    return { type: item[\"type\"] };\n}\nfunction lifetimeActionsTypeDeserializer(item) {\n    return {\n        type: item[\"type\"],\n    };\n}\nfunction keyRotationPolicyAttributesSerializer(item) {\n    return { expiryTime: item[\"expiryTime\"] };\n}\nfunction keyRotationPolicyAttributesDeserializer(item) {\n    return {\n        expiryTime: item[\"expiryTime\"],\n        created: !item[\"created\"]\n            ? item[\"created\"]\n            : new Date(item[\"created\"] * 1000),\n        updated: !item[\"updated\"]\n            ? item[\"updated\"]\n            : new Date(item[\"updated\"] * 1000),\n    };\n}\nfunction getRandomBytesRequestSerializer(item) {\n    return { count: item[\"count\"] };\n}\nfunction randomBytesDeserializer(item) {\n    return {\n        value: typeof item[\"value\"] === \"string\"\n            ? (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(item[\"value\"], \"base64url\")\n            : item[\"value\"],\n    };\n}\n/** The available API versions. */\nvar KnownVersions;\n(function (KnownVersions) {\n    /** The 7.5 API version. */\n    KnownVersions[\"V75\"] = \"7.5\";\n    /** The 7.6-preview.2 API version. */\n    KnownVersions[\"V76Preview2\"] = \"7.6-preview.2\";\n    /** The 7.6 API version. */\n    KnownVersions[\"V76\"] = \"7.6\";\n})(KnownVersions || (KnownVersions = {}));\n//# sourceMappingURL=models.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/models.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/pagingHelpers.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/pagingHelpers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPagedAsyncIterator: () => (/* binding */ buildPagedAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _azure_rest_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure-rest/core-client */ \"(rsc)/./node_modules/@azure-rest/core-client/dist/esm/index.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\n/**\n * Helper to paginate results in a generic way and return a PagedAsyncIterableIterator\n */\nfunction buildPagedAsyncIterator(client, getInitialResponse, processResponseBody, expectedStatuses, options = {}) {\n    var _a, _b;\n    const itemName = (_a = options.itemName) !== null && _a !== void 0 ? _a : \"value\";\n    const nextLinkName = (_b = options.nextLinkName) !== null && _b !== void 0 ? _b : \"nextLink\";\n    const pagedResult = {\n        getPage: async (pageLink) => {\n            const result = pageLink === undefined\n                ? await getInitialResponse()\n                : await client.pathUnchecked(pageLink).get();\n            checkPagingRequest(result, expectedStatuses);\n            const results = await processResponseBody(result);\n            const nextLink = getNextLink(results, nextLinkName);\n            const values = getElements(results, itemName);\n            return {\n                page: values,\n                nextPageLink: nextLink,\n            };\n        },\n        byPage: (settings) => {\n            const { continuationToken } = settings !== null && settings !== void 0 ? settings : {};\n            return getPageAsyncIterator(pagedResult, {\n                pageLink: continuationToken,\n            });\n        },\n    };\n    return getPagedAsyncIterator(pagedResult);\n}\n/**\n * returns an async iterator that iterates over results. It also has a `byPage`\n * method that returns pages of items at once.\n *\n * @param pagedResult - an object that specifies how to get pages.\n * @returns a paged async iterator that iterates over results.\n */\nfunction getPagedAsyncIterator(pagedResult) {\n    var _a;\n    const iter = getItemAsyncIterator(pagedResult);\n    return {\n        next() {\n            return iter.next();\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        byPage: (_a = pagedResult === null || pagedResult === void 0 ? void 0 : pagedResult.byPage) !== null && _a !== void 0 ? _a : ((settings) => {\n            const { continuationToken } = settings !== null && settings !== void 0 ? settings : {};\n            return getPageAsyncIterator(pagedResult, {\n                pageLink: continuationToken,\n            });\n        }),\n    };\n}\nfunction getItemAsyncIterator(pagedResult) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__asyncGenerator)(this, arguments, function* getItemAsyncIterator_1() {\n        var _a, e_1, _b, _c;\n        const pages = getPageAsyncIterator(pagedResult);\n        try {\n            for (var _d = true, pages_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__asyncValues)(pages), pages_1_1; pages_1_1 = yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(pages_1.next()), _a = pages_1_1.done, !_a; _d = true) {\n                _c = pages_1_1.value;\n                _d = false;\n                const page = _c;\n                yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__asyncValues)(page)));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = pages_1.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(_b.call(pages_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n}\nfunction getPageAsyncIterator(pagedResult_1) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__asyncGenerator)(this, arguments, function* getPageAsyncIterator_1(pagedResult, options = {}) {\n        const { pageLink } = options;\n        let response = yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(pagedResult.getPage(pageLink !== null && pageLink !== void 0 ? pageLink : pagedResult.firstPageLink));\n        if (!response) {\n            return yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(void 0);\n        }\n        let result = response.page;\n        result.continuationToken = response.nextPageLink;\n        yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(result);\n        while (response.nextPageLink) {\n            response = yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(pagedResult.getPage(response.nextPageLink));\n            if (!response) {\n                return yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(void 0);\n            }\n            result = response.page;\n            result.continuationToken = response.nextPageLink;\n            yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__await)(result);\n        }\n    });\n}\n/**\n * Gets for the value of nextLink in the body\n */\nfunction getNextLink(body, nextLinkName) {\n    if (!nextLinkName) {\n        return undefined;\n    }\n    const nextLink = body[nextLinkName];\n    if (typeof nextLink !== \"string\" &&\n        typeof nextLink !== \"undefined\" &&\n        nextLink !== null) {\n        throw new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(`Body Property ${nextLinkName} should be a string or undefined or null but got ${typeof nextLink}`);\n    }\n    if (nextLink === null) {\n        return undefined;\n    }\n    return nextLink;\n}\n/**\n * Gets the elements of the current request in the body.\n */\nfunction getElements(body, itemName) {\n    const value = body[itemName];\n    if (!Array.isArray(value)) {\n        throw new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(`Couldn't paginate response\\n Body doesn't contain an array property with name: ${itemName}`);\n    }\n    return value !== null && value !== void 0 ? value : [];\n}\n/**\n * Checks if a request failed\n */\nfunction checkPagingRequest(response, expectedStatuses) {\n    if (!expectedStatuses.includes(response.status)) {\n        throw (0,_azure_rest_core_client__WEBPACK_IMPORTED_MODULE_0__.createRestError)(`Pagination failed with unexpected statusCode ${response.status}`, response);\n    }\n}\n//# sourceMappingURL=pagingHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/pagingHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/urlTemplate.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/urlTemplate.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   expandUrlTemplate: () => (/* binding */ expandUrlTemplate)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// ---------------------\n// helpers\n// ---------------------\nfunction encodeComponent(val, reserved, op) {\n    return (reserved !== null && reserved !== void 0 ? reserved : op === \"+\") || op === \"#\"\n        ? encodeReservedComponent(val)\n        : encodeRFC3986URIComponent(val);\n}\nfunction encodeReservedComponent(str) {\n    return str\n        .split(/(%[0-9A-Fa-f]{2})/g)\n        .map((part) => (!/%[0-9A-Fa-f]/.test(part) ? encodeURI(part) : part))\n        .join(\"\");\n}\nfunction encodeRFC3986URIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n}\nfunction isDefined(val) {\n    return val !== undefined && val !== null;\n}\nfunction getNamedAndIfEmpty(op) {\n    return [\n        !!op && [\";\", \"?\", \"&\"].includes(op),\n        !!op && [\"?\", \"&\"].includes(op) ? \"=\" : \"\",\n    ];\n}\nfunction getFirstOrSep(op, isFirst = false) {\n    if (isFirst) {\n        return !op || op === \"+\" ? \"\" : op;\n    }\n    else if (!op || op === \"+\" || op === \"#\") {\n        return \",\";\n    }\n    else if (op === \"?\") {\n        return \"&\";\n    }\n    else {\n        return op;\n    }\n}\nfunction getExpandedValue(option) {\n    let isFirst = option.isFirst;\n    const { op, varName, varValue: value, reserved } = option;\n    const vals = [];\n    const [named, ifEmpty] = getNamedAndIfEmpty(op);\n    if (Array.isArray(value)) {\n        for (const val of value.filter(isDefined)) {\n            // prepare the following parts: separator, varName, value\n            vals.push(`${getFirstOrSep(op, isFirst)}`);\n            if (named && varName) {\n                vals.push(`${encodeURIComponent(varName)}`);\n                val === \"\" ? vals.push(ifEmpty) : vals.push(\"=\");\n            }\n            vals.push(encodeComponent(val, reserved, op));\n            isFirst = false;\n        }\n    }\n    else if (typeof value === \"object\") {\n        for (const key of Object.keys(value)) {\n            const val = value[key];\n            if (!isDefined(val)) {\n                continue;\n            }\n            // prepare the following parts: separator, key, value\n            vals.push(`${getFirstOrSep(op, isFirst)}`);\n            if (key) {\n                vals.push(`${encodeURIComponent(key)}`);\n                named && val === \"\" ? vals.push(ifEmpty) : vals.push(\"=\");\n            }\n            vals.push(encodeComponent(val, reserved, op));\n            isFirst = false;\n        }\n    }\n    return vals.join(\"\");\n}\nfunction getNonExpandedValue(option) {\n    const { op, varName, varValue: value, isFirst, reserved } = option;\n    const vals = [];\n    const first = getFirstOrSep(op, isFirst);\n    const [named, ifEmpty] = getNamedAndIfEmpty(op);\n    if (named && varName) {\n        vals.push(encodeComponent(varName, reserved, op));\n        if (value === \"\") {\n            if (!ifEmpty) {\n                vals.push(ifEmpty);\n            }\n            return !vals.join(\"\") ? undefined : `${first}${vals.join(\"\")}`;\n        }\n        vals.push(\"=\");\n    }\n    const items = [];\n    if (Array.isArray(value)) {\n        for (const val of value.filter(isDefined)) {\n            items.push(encodeComponent(val, reserved, op));\n        }\n    }\n    else if (typeof value === \"object\") {\n        for (const key of Object.keys(value)) {\n            if (!isDefined(value[key])) {\n                continue;\n            }\n            items.push(encodeRFC3986URIComponent(key));\n            items.push(encodeComponent(value[key], reserved, op));\n        }\n    }\n    vals.push(items.join(\",\"));\n    return !vals.join(\",\") ? undefined : `${first}${vals.join(\"\")}`;\n}\nfunction getVarValue(option) {\n    const { op, varName, modifier, isFirst, reserved, varValue: value } = option;\n    if (!isDefined(value)) {\n        return undefined;\n    }\n    else if ([\"string\", \"number\", \"boolean\"].includes(typeof value)) {\n        let val = value.toString();\n        const [named, ifEmpty] = getNamedAndIfEmpty(op);\n        const vals = [getFirstOrSep(op, isFirst)];\n        if (named && varName) {\n            // No need to encode varName considering it is already encoded\n            vals.push(varName);\n            val === \"\" ? vals.push(ifEmpty) : vals.push(\"=\");\n        }\n        if (modifier && modifier !== \"*\") {\n            val = val.substring(0, parseInt(modifier, 10));\n        }\n        vals.push(encodeComponent(val, reserved, op));\n        return vals.join(\"\");\n    }\n    else if (modifier === \"*\") {\n        return getExpandedValue(option);\n    }\n    else {\n        return getNonExpandedValue(option);\n    }\n}\n// ---------------------------------------------------------------------------------------------------\n// This is an implementation of RFC 6570 URI Template: https://datatracker.ietf.org/doc/html/rfc6570.\n// ---------------------------------------------------------------------------------------------------\nfunction expandUrlTemplate(template, context, option) {\n    return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, (_, expr, text) => {\n        if (!expr) {\n            return encodeReservedComponent(text);\n        }\n        let op;\n        if ([\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"].includes(expr[0])) {\n            (op = expr[0]), (expr = expr.slice(1));\n        }\n        const varList = expr.split(/,/g);\n        const result = [];\n        for (const varSpec of varList) {\n            const varMatch = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(varSpec);\n            if (!varMatch || !varMatch[1]) {\n                continue;\n            }\n            const varValue = getVarValue({\n                isFirst: result.length === 0,\n                op,\n                varValue: context[varMatch[1]],\n                varName: varMatch[1],\n                modifier: varMatch[2] || varMatch[3],\n                reserved: option === null || option === void 0 ? void 0 : option.allowReserved,\n            });\n            if (varValue) {\n                result.push(varValue);\n            }\n        }\n        return result.join(\"\");\n    });\n}\n//# sourceMappingURL=urlTemplate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/static-helpers/urlTemplate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/identifier.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/identifier.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseKeyVaultKeyIdentifier: () => (/* binding */ parseKeyVaultKeyIdentifier)\n/* harmony export */ });\n/* harmony import */ var _azure_keyvault_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/keyvault-common */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Parses the given Key Vault Key Id. An example is:\n *\n *   https://<keyvault-name>.vault.azure.net/keys/<key-name>/<unique-version-id>\n *\n * On parsing the above Id, this function returns:\n *```ts snippet:ignore\n *   {\n *      sourceId: \"https://<keyvault-name>.vault.azure.net/keys/<key-name>/<unique-version-id>\",\n *      vaultUrl: \"https://<keyvault-name>.vault.azure.net\",\n *      version: \"<unique-version-id>\",\n *      name: \"<key-name>\"\n *   }\n *```\n * @param id - The Id of the Key Vault Key.\n */\nfunction parseKeyVaultKeyIdentifier(id) {\n    const urlParts = id.split(\"/\");\n    const collection = urlParts[3];\n    return Object.assign({ sourceId: id }, (0,_azure_keyvault_common__WEBPACK_IMPORTED_MODULE_0__.parseKeyVaultIdentifier)(collection, id));\n}\n//# sourceMappingURL=identifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vaWRlbnRpZmllci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwyQkFBMkIsY0FBYyxFQUFFLCtFQUF1QjtBQUNsRTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vaWRlbnRpZmllci5qcz85MmM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgcGFyc2VLZXlWYXVsdElkZW50aWZpZXIgfSBmcm9tIFwiQGF6dXJlL2tleXZhdWx0LWNvbW1vblwiO1xuLyoqXG4gKiBQYXJzZXMgdGhlIGdpdmVuIEtleSBWYXVsdCBLZXkgSWQuIEFuIGV4YW1wbGUgaXM6XG4gKlxuICogICBodHRwczovLzxrZXl2YXVsdC1uYW1lPi52YXVsdC5henVyZS5uZXQva2V5cy88a2V5LW5hbWU+Lzx1bmlxdWUtdmVyc2lvbi1pZD5cbiAqXG4gKiBPbiBwYXJzaW5nIHRoZSBhYm92ZSBJZCwgdGhpcyBmdW5jdGlvbiByZXR1cm5zOlxuICpgYGB0cyBzbmlwcGV0Omlnbm9yZVxuICogICB7XG4gKiAgICAgIHNvdXJjZUlkOiBcImh0dHBzOi8vPGtleXZhdWx0LW5hbWU+LnZhdWx0LmF6dXJlLm5ldC9rZXlzLzxrZXktbmFtZT4vPHVuaXF1ZS12ZXJzaW9uLWlkPlwiLFxuICogICAgICB2YXVsdFVybDogXCJodHRwczovLzxrZXl2YXVsdC1uYW1lPi52YXVsdC5henVyZS5uZXRcIixcbiAqICAgICAgdmVyc2lvbjogXCI8dW5pcXVlLXZlcnNpb24taWQ+XCIsXG4gKiAgICAgIG5hbWU6IFwiPGtleS1uYW1lPlwiXG4gKiAgIH1cbiAqYGBgXG4gKiBAcGFyYW0gaWQgLSBUaGUgSWQgb2YgdGhlIEtleSBWYXVsdCBLZXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUtleVZhdWx0S2V5SWRlbnRpZmllcihpZCkge1xuICAgIGNvbnN0IHVybFBhcnRzID0gaWQuc3BsaXQoXCIvXCIpO1xuICAgIGNvbnN0IGNvbGxlY3Rpb24gPSB1cmxQYXJ0c1szXTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IHNvdXJjZUlkOiBpZCB9LCBwYXJzZUtleVZhdWx0SWRlbnRpZmllcihjb2xsZWN0aW9uLCBpZCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWRlbnRpZmllci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/identifier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptographyClient: () => (/* reexport safe */ _cryptographyClient_js__WEBPACK_IMPORTED_MODULE_8__.CryptographyClient),\n/* harmony export */   KeyClient: () => (/* binding */ KeyClient),\n/* harmony export */   KnownDeletionRecoveryLevel: () => (/* reexport safe */ _generated_models_index_js__WEBPACK_IMPORTED_MODULE_1__.KnownDeletionRecoveryLevel),\n/* harmony export */   KnownEncryptionAlgorithms: () => (/* reexport safe */ _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownEncryptionAlgorithms),\n/* harmony export */   KnownKeyCurveNames: () => (/* reexport safe */ _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyCurveNames),\n/* harmony export */   KnownKeyExportEncryptionAlgorithm: () => (/* reexport safe */ _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyExportEncryptionAlgorithm),\n/* harmony export */   KnownKeyOperations: () => (/* reexport safe */ _keysModels_js__WEBPACK_IMPORTED_MODULE_7__.KnownKeyOperations),\n/* harmony export */   KnownKeyTypes: () => (/* reexport safe */ _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes),\n/* harmony export */   KnownSignatureAlgorithms: () => (/* reexport safe */ _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownSignatureAlgorithms),\n/* harmony export */   logger: () => (/* reexport safe */ _log_js__WEBPACK_IMPORTED_MODULE_0__.logger),\n/* harmony export */   parseKeyVaultKeyIdentifier: () => (/* reexport safe */ _identifier_js__WEBPACK_IMPORTED_MODULE_10__.parseKeyVaultKeyIdentifier)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/log.js\");\n/* harmony import */ var _generated_models_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/models/index.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/models/index.js\");\n/* harmony import */ var _generated_keyVaultClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/keyVaultClient.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/generated/keyVaultClient.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/constants.js\");\n/* harmony import */ var _azure_keyvault_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/keyvault-common */ \"(rsc)/./node_modules/@azure/keyvault-common/dist/esm/index.js\");\n/* harmony import */ var _lro_delete_poller_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lro/delete/poller.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/poller.js\");\n/* harmony import */ var _lro_recover_poller_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lro/recover/poller.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/poller.js\");\n/* harmony import */ var _keysModels_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./keysModels.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/keysModels.js\");\n/* harmony import */ var _cryptographyClient_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cryptographyClient.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClient.js\");\n/* harmony import */ var _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cryptographyClientModels.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/cryptographyClientModels.js\");\n/* harmony import */ var _identifier_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./identifier.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/identifier.js\");\n/* harmony import */ var _transformations_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transformations.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/transformations.js\");\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tracing.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/// <reference lib=\"esnext.asynciterable\" />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The KeyClient provides methods to manage {@link KeyVaultKey} in the\n * Azure Key Vault. The client supports creating, retrieving, updating,\n * deleting, purging, backing up, restoring and listing KeyVaultKeys. The\n * client also supports listing {@link DeletedKey} for a soft-delete enabled Azure Key\n * Vault.\n */\nclass KeyClient {\n    /**\n     * Creates an instance of KeyClient.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateClient\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * // Build the URL to reach your key vault\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`; // or `https://${vaultName}.managedhsm.azure.net` for managed HSM.\n     *\n     * // Lastly, create our keys client and connect to the service\n     * const client = new KeyClient(url, credential);\n     * ```\n     * @param vaultUrl - the URL of the Key Vault. It should have this shape: `https://${your-key-vault-name}.vault.azure.net`. You should validate that this URL references a valid Key Vault or Managed HSM resource. See https://aka.ms/azsdk/blog/vault-uri for details.\n     * @param credential - An object that implements the `TokenCredential` interface used to authenticate requests to the service. Use the \\@azure/identity package to create a credential that suits your needs.\n     * @param pipelineOptions - Pipeline options used to configure Key Vault API requests. Omit this parameter to use the default pipeline configuration.\n     */\n    constructor(vaultUrl, credential, pipelineOptions = {}) {\n        this.vaultUrl = vaultUrl;\n        const libInfo = `azsdk-js-keyvault-keys/${_constants_js__WEBPACK_IMPORTED_MODULE_3__.SDK_VERSION}`;\n        const userAgentOptions = pipelineOptions.userAgentOptions;\n        pipelineOptions.userAgentOptions = {\n            userAgentPrefix: userAgentOptions && userAgentOptions.userAgentPrefix\n                ? `${userAgentOptions.userAgentPrefix} ${libInfo}`\n                : libInfo,\n        };\n        const internalPipelineOptions = Object.assign(Object.assign({}, pipelineOptions), { apiVersion: pipelineOptions.serviceVersion || _keysModels_js__WEBPACK_IMPORTED_MODULE_7__.LATEST_API_VERSION, loggingOptions: {\n                logger: _log_js__WEBPACK_IMPORTED_MODULE_0__.logger.info,\n                additionalAllowedHeaderNames: [\n                    \"x-ms-keyvault-region\",\n                    \"x-ms-keyvault-network-info\",\n                    \"x-ms-keyvault-service-version\",\n                ],\n            } });\n        this.credential = credential;\n        this.client = new _generated_keyVaultClient_js__WEBPACK_IMPORTED_MODULE_2__.KeyVaultClient(vaultUrl, credential, internalPipelineOptions);\n        this.client.pipeline.removePolicy({ name: _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_13__.bearerTokenAuthenticationPolicyName });\n        this.client.pipeline.addPolicy((0,_azure_keyvault_common__WEBPACK_IMPORTED_MODULE_4__.keyVaultAuthenticationPolicy)(credential, pipelineOptions));\n        // Workaround for: https://github.com/Azure/azure-sdk-for-js/issues/31843\n        this.client.pipeline.addPolicy({\n            name: \"ContentTypePolicy\",\n            sendRequest(request, next) {\n                var _a;\n                const contentType = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n                if (contentType.startsWith(\"application/json\")) {\n                    request.headers.set(\"Content-Type\", \"application/json\");\n                }\n                return next(request);\n            },\n        });\n    }\n    /**\n     * The create key operation can be used to create any key type in Azure Key Vault. If the named key\n     * already exists, Azure Key Vault creates a new version of the key. It requires the keys/create\n     * permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     * const result = await client.createKey(keyName, \"RSA\");\n     * console.log(\"result: \", result);\n     * ```\n     * Creates a new key, stores it, then returns key parameters and properties to the client.\n     * @param name - The name of the key.\n     * @param keyType - The type of the key. One of the following: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'.\n     * @param options - The optional parameters.\n     */\n    createKey(name, keyType, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(\"KeyClient.createKey\", options, async (updatedOptions) => {\n            const response = await this.client.createKey(name, {\n                kty: keyType,\n                curve: options === null || options === void 0 ? void 0 : options.curve,\n                keyAttributes: {\n                    enabled: options === null || options === void 0 ? void 0 : options.enabled,\n                    notBefore: options === null || options === void 0 ? void 0 : options.notBefore,\n                    expires: options === null || options === void 0 ? void 0 : options.expiresOn,\n                    exportable: options === null || options === void 0 ? void 0 : options.exportable,\n                },\n                keyOps: options === null || options === void 0 ? void 0 : options.keyOps,\n                keySize: options === null || options === void 0 ? void 0 : options.keySize,\n                releasePolicy: options === null || options === void 0 ? void 0 : options.releasePolicy,\n                tags: options === null || options === void 0 ? void 0 : options.tags,\n            }, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * The createEcKey method creates a new elliptic curve key in Azure Key Vault. If the named key\n     * already exists, Azure Key Vault creates a new version of the key. It requires the keys/create\n     * permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateEcKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     * const result = await client.createEcKey(keyName, { curve: \"P-256\" });\n     * console.log(\"result: \", result);\n     * ```\n     * Creates a new key, stores it, then returns key parameters and properties to the client.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    async createEcKey(name, options) {\n        const keyType = (options === null || options === void 0 ? void 0 : options.hsm) ? _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes.ECHSM : _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes.EC;\n        return this.createKey(name, keyType, options);\n    }\n    /**\n     * The createRSAKey method creates a new RSA key in Azure Key Vault. If the named key\n     * already exists, Azure Key Vault creates a new version of the key. It requires the keys/create\n     * permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateRsaKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     * const result = await client.createRsaKey(\"MyKey\", { keySize: 2048 });\n     * console.log(\"result: \", result);\n     * ```\n     * Creates a new key, stores it, then returns key parameters and properties to the client.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    async createRsaKey(name, options) {\n        const keyType = (options === null || options === void 0 ? void 0 : options.hsm) ? _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes.RSAHSM : _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes.RSA;\n        return this.createKey(name, keyType, options);\n    }\n    /**\n     * The createOctKey method creates a new OCT key in Azure Key Vault. If the named key\n     * already exists, Azure Key Vault creates a new version of the key. It requires the keys/create\n     * permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateOctKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     * const result = await client.createOctKey(\"MyKey\", { hsm: true });\n     * console.log(\"result: \", result);\n     * ```\n     * Creates a new key, stores it, then returns key parameters and properties to the client.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    async createOctKey(name, options) {\n        const keyType = (options === null || options === void 0 ? void 0 : options.hsm) ? _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes.OctHSM : _cryptographyClientModels_js__WEBPACK_IMPORTED_MODULE_9__.KnownKeyTypes.Oct;\n        return this.createKey(name, keyType, options);\n    }\n    /**\n     * The import key operation may be used to import any key type into an Azure Key Vault. If the\n     * named key already exists, Azure Key Vault creates a new version of the key. This operation\n     * requires the keys/import permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleImportKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const jsonWebKey = {\n     *   kty: \"RSA\",\n     *   kid: \"test-key-123\",\n     *   use: \"sig\",\n     *   alg: \"RS256\",\n     *   n: new Uint8Array([112, 34, 56, 98, 123, 244, 200, 99]),\n     *   e: new Uint8Array([1, 0, 1]),\n     *   d: new Uint8Array([45, 67, 89, 23, 144, 200, 76, 233]),\n     *   p: new Uint8Array([34, 89, 100, 77, 204, 56, 29, 77]),\n     *   q: new Uint8Array([78, 99, 201, 45, 188, 34, 67, 90]),\n     *   dp: new Uint8Array([23, 45, 78, 56, 200, 144, 32, 67]),\n     *   dq: new Uint8Array([12, 67, 89, 144, 99, 56, 23, 45]),\n     *   qi: new Uint8Array([78, 90, 45, 201, 34, 67, 120, 55]),\n     * };\n     *\n     * const result = await client.importKey(\"MyKey\", jsonWebKey);\n     * ```\n     * Imports an externally created key, stores it, and returns key parameters and properties\n     * to the client.\n     * @param name - Name for the imported key.\n     * @param key - The JSON web key.\n     * @param options - The optional parameters.\n     */\n    importKey(name, key, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.importKey`, options, async (updatedOptions) => {\n            const { enabled, notBefore, expiresOn: expires, exportable, releasePolicy, tags } = options;\n            const keyAttributes = {\n                enabled,\n                notBefore,\n                expires,\n                exportable,\n            };\n            const parameters = {\n                key,\n                hsm: options === null || options === void 0 ? void 0 : options.hardwareProtected,\n                keyAttributes,\n                releasePolicy,\n                tags,\n            };\n            const response = await this.client.importKey(name, parameters, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * Gets a {@link CryptographyClient} for the given key.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetCryptographyClient\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * // Get a cryptography client for a given key\n     * const cryptographyClient = client.getCryptographyClient(\"MyKey\");\n     * ```\n     * @param name - The name of the key used to perform cryptographic operations.\n     * @param version - Optional version of the key used to perform cryptographic operations.\n     * @returns - A {@link CryptographyClient} using the same options, credentials, and http client as this {@link KeyClient}\n     */\n    getCryptographyClient(keyName, options) {\n        const keyUrl = new URL([\"keys\", keyName, options === null || options === void 0 ? void 0 : options.keyVersion].filter(Boolean).join(\"/\"), this.vaultUrl);\n        // The goals of this method are discoverability and performance (by sharing a client and pipeline).\n        // The existing cryptography client does not accept a pipeline as an argument, nor does it expose it.\n        // In order to avoid publicly exposing the pipeline we will pass in the underlying client as an undocumented\n        // property to the constructor so that crypto providers downstream can use it.\n        const constructorOptions = {\n            generatedClient: this.client,\n        };\n        const cryptoClient = new _cryptographyClient_js__WEBPACK_IMPORTED_MODULE_8__.CryptographyClient(keyUrl.toString(), this.credential, constructorOptions);\n        return cryptoClient;\n    }\n    /**\n     * The delete operation applies to any key stored in Azure Key Vault. Individual versions\n     * of a key can not be deleted, only all versions of a given key at once.\n     *\n     * This function returns a Long Running Operation poller that allows you to wait indefinitely until the key is deleted.\n     *\n     * This operation requires the keys/delete permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleDeleteKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const poller = await client.beginDeleteKey(keyName);\n     * await poller.pollUntilDone();\n     * ```\n     * Deletes a key from a specified key vault.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    async beginDeleteKey(name, options = {}) {\n        const poller = new _lro_delete_poller_js__WEBPACK_IMPORTED_MODULE_5__.DeleteKeyPoller({\n            name,\n            client: this.client,\n            intervalInMs: options.intervalInMs,\n            resumeFrom: options.resumeFrom,\n            operationOptions: options,\n        });\n        // This will initialize the poller's operation (the deletion of the key).\n        await poller.poll();\n        return poller;\n    }\n    updateKeyProperties(...args) {\n        const [name, keyVersion, options] = this.disambiguateUpdateKeyPropertiesArgs(args);\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.updateKeyProperties`, options, async (updatedOptions) => {\n            const response = await this.client.updateKey(name, keyVersion, {\n                keyAttributes: {\n                    enabled: options === null || options === void 0 ? void 0 : options.enabled,\n                    notBefore: options === null || options === void 0 ? void 0 : options.notBefore,\n                    expires: options === null || options === void 0 ? void 0 : options.expiresOn,\n                },\n                keyOps: options === null || options === void 0 ? void 0 : options.keyOps,\n                releasePolicy: options === null || options === void 0 ? void 0 : options.releasePolicy,\n                tags: options === null || options === void 0 ? void 0 : options.tags,\n            }, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * Standardizes an overloaded arguments collection for the updateKeyProperties method.\n     *\n     * @param args - The arguments collection.\n     * @returns - The standardized arguments collection.\n     */\n    disambiguateUpdateKeyPropertiesArgs(args) {\n        if (typeof args[1] === \"string\") {\n            // [name, keyVersion, options?] => [name, keyVersion, options || {}]\n            return [args[0], args[1], args[2] || {}];\n        }\n        else {\n            // [name, options?] => [name , \"\", options || {}]\n            return [args[0], \"\", args[1] || {}];\n        }\n    }\n    /**\n     * The getKey method gets a specified key and is applicable to any key stored in Azure Key Vault.\n     * This operation requires the keys/get permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const latestKey = await client.getKey(keyName);\n     * console.log(`Latest version of the key ${keyName}: `, latestKey);\n     *\n     * const specificKey = await client.getKey(keyName, { version: latestKey.properties.version! });\n     * console.log(`The key ${keyName} at the version ${latestKey.properties.version!}: `, specificKey);\n     * ```\n     * Get a specified key from a given key vault.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    getKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.getKey`, options, async (updatedOptions) => {\n            const response = await this.client.getKey(name, options.version || \"\", updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * The getKeyAttestation method gets a specified key and its attestation blob and is applicable to any key stored in Azure Key Vault Managed HSM.\n     * This operation requires the keys/get permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetKeyAttestation\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT MANAGED HSM NAME>\";\n     * const url = `https://${vaultName}.managedhsm.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const latestKey = await client.getKeyAttestation(keyName);\n     * console.log(`Latest version of the key ${keyName}: `, latestKey);\n     *\n     * const specificKey = await client.getKeyAttestation(keyName, {\n     *   version: latestKey.properties.version!,\n     * });\n     * console.log(`The key ${keyName} at the version ${latestKey.properties.version!}: `, specificKey);\n     * ```\n     * Get a specified key from a given key vault.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    getKeyAttestation(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.getKeyAttestation`, options, async (updatedOptions) => {\n            var _a;\n            const response = await this.client.getKeyAttestation(name, (_a = updatedOptions.version) !== null && _a !== void 0 ? _a : \"\", updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * The getDeletedKey method returns the specified deleted key along with its properties.\n     * This operation requires the keys/get permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetDeletedKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * await client.getDeletedKey(keyName);\n     * ```\n     * Gets the specified deleted key.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    getDeletedKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.getDeletedKey`, options, async (updatedOptions) => {\n            const response = await this.client.getDeletedKey(name, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * The purge deleted key operation removes the key permanently, without the possibility of\n     * recovery. This operation can only be enabled on a soft-delete enabled vault. This operation\n     * requires the keys/purge permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSamplePurgeDeletedKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const deletePoller = await client.beginDeleteKey(keyName);\n     * await deletePoller.pollUntilDone();\n     *\n     * await client.purgeDeletedKey(keyName);\n     * ```\n     * Permanently deletes the specified key.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    purgeDeletedKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.purgeDeletedKey`, options, async (updatedOptions) => {\n            await this.client.purgeDeletedKey(name, updatedOptions);\n        });\n    }\n    /**\n     * Recovers the deleted key in the specified vault. This operation can only be performed on a\n     * soft-delete enabled vault.\n     *\n     * This function returns a Long Running Operation poller that allows you to wait indefinitely until the deleted key is recovered.\n     *\n     * This operation requires the keys/recover permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleRecoverDeletedKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const deletePoller = await client.beginDeleteKey(keyName);\n     * await deletePoller.pollUntilDone();\n     *\n     * const recoverPoller = await client.beginRecoverDeletedKey(keyName);\n     * const recoveredKey = await recoverPoller.pollUntilDone();\n     * ```\n     * Recovers the deleted key to the latest version.\n     * @param name - The name of the deleted key.\n     * @param options - The optional parameters.\n     */\n    async beginRecoverDeletedKey(name, options = {}) {\n        const poller = new _lro_recover_poller_js__WEBPACK_IMPORTED_MODULE_6__.RecoverDeletedKeyPoller({\n            name,\n            client: this.client,\n            intervalInMs: options.intervalInMs,\n            resumeFrom: options.resumeFrom,\n            operationOptions: options,\n        });\n        // This will initialize the poller's operation (the deletion of the key).\n        await poller.poll();\n        return poller;\n    }\n    /**\n     * Requests that a backup of the specified key be downloaded to the client. All versions of the\n     * key will be downloaded. This operation requires the keys/backup permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleBackupKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const backupContents = await client.backupKey(keyName);\n     * ```\n     * Backs up the specified key.\n     * @param name - The name of the key.\n     * @param options - The optional parameters.\n     */\n    backupKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.backupKey`, options, async (updatedOptions) => {\n            const response = await this.client.backupKey(name, updatedOptions);\n            return response.value;\n        });\n    }\n    /**\n     * Restores a backed up key, and all its versions, to a vault. This operation requires the\n     * keys/restore permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleRestoreKeyBackup\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const backupContents = await client.backupKey(keyName);\n     *\n     * const key = await client.restoreKeyBackup(backupContents);\n     * ```\n     * Restores a backed up key to a vault.\n     * @param backup - The backup blob associated with a key bundle.\n     * @param options - The optional parameters.\n     */\n    async restoreKeyBackup(backup, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(`KeyClient.restoreKeyBackup`, options, async (updatedOptions) => {\n            const response = await this.client.restoreKey({ keyBundleBackup: backup }, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * Gets the requested number of bytes containing random values from a managed HSM.\n     * This operation requires the managedHsm/rng permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetRandomBytes\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const bytes = await client.getRandomBytes(10);\n     * ```\n     * @param count - The number of bytes to generate between 1 and 128 inclusive.\n     * @param options - The optional parameters.\n     */\n    getRandomBytes(count, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(\"KeyClient.getRandomBytes\", options, async (updatedOptions) => {\n            const response = await this.client.getRandomBytes({ count }, updatedOptions);\n            return response.value;\n        });\n    }\n    /**\n     * Rotates the key based on the key policy by generating a new version of the key. This operation requires the keys/rotate permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleKeyRotation\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * // Set the key's automated rotation policy to rotate the key 30 days before expiry.\n     * const policy = await client.updateKeyRotationPolicy(keyName, {\n     *   lifetimeActions: [\n     *     {\n     *       action: \"Rotate\",\n     *       timeBeforeExpiry: \"P30D\",\n     *     },\n     *   ],\n     *   // You may also specify the duration after which any newly rotated key will expire.\n     *   // In this case, any new key versions will expire after 90 days.\n     *   expiresIn: \"P90D\",\n     * });\n     *\n     * // You can get the current key rotation policy of a given key by calling the getKeyRotationPolicy method.\n     * const currentPolicy = await client.getKeyRotationPolicy(keyName);\n     *\n     * // Finally, you can rotate a key on-demand by creating a new version of the given key.\n     * const rotatedKey = await client.rotateKey(keyName);\n     * ```\n     *\n     * @param name - The name of the key to rotate.\n     * @param options - The optional parameters.\n     */\n    rotateKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(\"KeyClient.rotateKey\", options, async (updatedOptions) => {\n            const key = await this.client.rotateKey(name, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyFromKeyBundle)(key);\n        });\n    }\n    /**\n     * Releases a key from a managed HSM.\n     *\n     * The release key operation is applicable to all key types. The operation requires the key to be marked exportable and the keys/release permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleReleaseKey\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const result = await client.releaseKey(\"myKey\", \"<attestation-target>\");\n     * ```\n     *\n     * @param name - The name of the key.\n     * @param targetAttestationToken - The attestation assertion for the target of the key release.\n     * @param options - The optional parameters.\n     */\n    releaseKey(name, targetAttestationToken, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(\"KeyClient.releaseKey\", options, async (updatedOptions) => {\n            const { nonce, algorithm } = updatedOptions, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__rest)(updatedOptions, [\"nonce\", \"algorithm\"]);\n            const result = await this.client.release(name, (options === null || options === void 0 ? void 0 : options.version) || \"\", {\n                targetAttestationToken,\n                enc: algorithm,\n                nonce,\n            }, rest);\n            return { value: result.value };\n        });\n    }\n    /**\n     * Gets the rotation policy of a Key Vault Key.\n     * By default, all keys have a policy that will notify 30 days before expiry.\n     *\n     * This operation requires the keys/get permission.\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetKeyRotationPolicy\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const result = await client.getKeyRotationPolicy(keyName);\n     * ```\n     *\n     * @param keyName - The name of the key.\n     * @param options - The optional parameters.\n     */\n    getKeyRotationPolicy(keyName, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(\"KeyClient.getKeyRotationPolicy\", options, async () => {\n            const policy = await this.client.getKeyRotationPolicy(keyName);\n            return _transformations_js__WEBPACK_IMPORTED_MODULE_11__.keyRotationTransformations.generatedToPublic(policy);\n        });\n    }\n    /**\n     * Updates the rotation policy of a Key Vault Key.\n     * This operation requires the keys/update permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleUpdateKeyRotationPolicy\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * const myPolicy = await client.getKeyRotationPolicy(keyName);\n     *\n     * const setPolicy = await client.updateKeyRotationPolicy(keyName, myPolicy);\n     * ```\n     *\n     * @param keyName - The name of the key.\n     * @param policyProperties - The {@link KeyRotationPolicyProperties} for the policy.\n     * @param options - The optional parameters.\n     */\n    updateKeyRotationPolicy(keyName, policy, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_12__.tracingClient.withSpan(\"KeyClient.updateKeyRotationPolicy\", options, async (updatedOptions) => {\n            const result = await this.client.updateKeyRotationPolicy(keyName, _transformations_js__WEBPACK_IMPORTED_MODULE_11__.keyRotationTransformations.propertiesToGenerated(policy), updatedOptions);\n            return _transformations_js__WEBPACK_IMPORTED_MODULE_11__.keyRotationTransformations.generatedToPublic(result);\n        });\n    }\n    /**\n     * Iterates all versions of the given key in the vault. The full key identifier, properties, and tags are provided\n     * in the response. This operation requires the keys/list permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleListKeys\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * for await (const keyProperties of client.listPropertiesOfKeys()) {\n     *   console.log(\"Key properties: \", keyProperties);\n     * }\n     *\n     * for await (const deletedKey of client.listDeletedKeys()) {\n     *   console.log(\"Deleted: \", deletedKey);\n     * }\n     *\n     * for await (const versionProperties of client.listPropertiesOfKeyVersions(keyName)) {\n     *   console.log(\"Version properties: \", versionProperties);\n     * }\n     * ```\n     * @param name - Name of the key to fetch versions for\n     * @param options - The optional parameters.\n     */\n    listPropertiesOfKeyVersions(name, options = {}) {\n        return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.mapPagedAsyncIterable)(options, (mappedOptions) => this.client.getKeyVersions(name, mappedOptions), _transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyPropertiesFromKeyItem);\n    }\n    /**\n     * Iterates the latest version of all keys in the vault.  The full key identifier and properties are provided\n     * in the response. No values are returned for the keys. This operations requires the keys/list permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleListKeys\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * for await (const keyProperties of client.listPropertiesOfKeys()) {\n     *   console.log(\"Key properties: \", keyProperties);\n     * }\n     *\n     * for await (const deletedKey of client.listDeletedKeys()) {\n     *   console.log(\"Deleted: \", deletedKey);\n     * }\n     *\n     * for await (const versionProperties of client.listPropertiesOfKeyVersions(keyName)) {\n     *   console.log(\"Version properties: \", versionProperties);\n     * }\n     * ```\n     * List all keys in the vault\n     * @param options - The optional parameters.\n     */\n    listPropertiesOfKeys(options = {}) {\n        return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.mapPagedAsyncIterable)(options, this.client.getKeys.bind(this.client), _transformations_js__WEBPACK_IMPORTED_MODULE_11__.getKeyPropertiesFromKeyItem);\n    }\n    /**\n     * Iterates the deleted keys in the vault.  The full key identifier and properties are provided\n     * in the response. No values are returned for the keys. This operations requires the keys/list permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleListKeys\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { KeyClient } from \"@azure/keyvault-keys\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new KeyClient(url, credential);\n     *\n     * const keyName = \"MyKeyName\";\n     *\n     * for await (const keyProperties of client.listPropertiesOfKeys()) {\n     *   console.log(\"Key properties: \", keyProperties);\n     * }\n     *\n     * for await (const deletedKey of client.listDeletedKeys()) {\n     *   console.log(\"Deleted: \", deletedKey);\n     * }\n     *\n     * for await (const versionProperties of client.listPropertiesOfKeyVersions(keyName)) {\n     *   console.log(\"Version properties: \", versionProperties);\n     * }\n     * ```\n     * List all keys in the vault\n     * @param options - The optional parameters.\n     */\n    listDeletedKeys(options = {}) {\n        return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_11__.mapPagedAsyncIterable)(options, this.client.getDeletedKeys.bind(this.client), _transformations_js__WEBPACK_IMPORTED_MODULE_11__.getDeletedKeyFromDeletedKeyItem);\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/keysModels.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/keysModels.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownKeyOperations: () => (/* binding */ KnownKeyOperations),\n/* harmony export */   LATEST_API_VERSION: () => (/* binding */ LATEST_API_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The latest supported Key Vault service API version\n */\nconst LATEST_API_VERSION = \"7.6\";\n/** Known values of {@link KeyOperation} that the service accepts. */\nvar KnownKeyOperations;\n(function (KnownKeyOperations) {\n    /** Key operation - encrypt */\n    KnownKeyOperations[\"Encrypt\"] = \"encrypt\";\n    /** Key operation - decrypt */\n    KnownKeyOperations[\"Decrypt\"] = \"decrypt\";\n    /** Key operation - sign */\n    KnownKeyOperations[\"Sign\"] = \"sign\";\n    /** Key operation - verify */\n    KnownKeyOperations[\"Verify\"] = \"verify\";\n    /** Key operation - wrapKey */\n    KnownKeyOperations[\"WrapKey\"] = \"wrapKey\";\n    /** Key operation - unwrapKey */\n    KnownKeyOperations[\"UnwrapKey\"] = \"unwrapKey\";\n    /** Key operation - import */\n    KnownKeyOperations[\"Import\"] = \"import\";\n})(KnownKeyOperations || (KnownKeyOperations = {}));\n//# sourceMappingURL=keysModels.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20va2V5c01vZGVscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHFCQUFxQixvQkFBb0I7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdEQUFnRDtBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2tleXNNb2RlbHMuanM/M2YwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbi8qKlxuICogVGhlIGxhdGVzdCBzdXBwb3J0ZWQgS2V5IFZhdWx0IHNlcnZpY2UgQVBJIHZlcnNpb25cbiAqL1xuZXhwb3J0IGNvbnN0IExBVEVTVF9BUElfVkVSU0lPTiA9IFwiNy42XCI7XG4vKiogS25vd24gdmFsdWVzIG9mIHtAbGluayBLZXlPcGVyYXRpb259IHRoYXQgdGhlIHNlcnZpY2UgYWNjZXB0cy4gKi9cbmV4cG9ydCB2YXIgS25vd25LZXlPcGVyYXRpb25zO1xuKGZ1bmN0aW9uIChLbm93bktleU9wZXJhdGlvbnMpIHtcbiAgICAvKiogS2V5IG9wZXJhdGlvbiAtIGVuY3J5cHQgKi9cbiAgICBLbm93bktleU9wZXJhdGlvbnNbXCJFbmNyeXB0XCJdID0gXCJlbmNyeXB0XCI7XG4gICAgLyoqIEtleSBvcGVyYXRpb24gLSBkZWNyeXB0ICovXG4gICAgS25vd25LZXlPcGVyYXRpb25zW1wiRGVjcnlwdFwiXSA9IFwiZGVjcnlwdFwiO1xuICAgIC8qKiBLZXkgb3BlcmF0aW9uIC0gc2lnbiAqL1xuICAgIEtub3duS2V5T3BlcmF0aW9uc1tcIlNpZ25cIl0gPSBcInNpZ25cIjtcbiAgICAvKiogS2V5IG9wZXJhdGlvbiAtIHZlcmlmeSAqL1xuICAgIEtub3duS2V5T3BlcmF0aW9uc1tcIlZlcmlmeVwiXSA9IFwidmVyaWZ5XCI7XG4gICAgLyoqIEtleSBvcGVyYXRpb24gLSB3cmFwS2V5ICovXG4gICAgS25vd25LZXlPcGVyYXRpb25zW1wiV3JhcEtleVwiXSA9IFwid3JhcEtleVwiO1xuICAgIC8qKiBLZXkgb3BlcmF0aW9uIC0gdW53cmFwS2V5ICovXG4gICAgS25vd25LZXlPcGVyYXRpb25zW1wiVW53cmFwS2V5XCJdID0gXCJ1bndyYXBLZXlcIjtcbiAgICAvKiogS2V5IG9wZXJhdGlvbiAtIGltcG9ydCAqL1xuICAgIEtub3duS2V5T3BlcmF0aW9uc1tcIkltcG9ydFwiXSA9IFwiaW1wb3J0XCI7XG59KShLbm93bktleU9wZXJhdGlvbnMgfHwgKEtub3duS2V5T3BlcmF0aW9ucyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlzTW9kZWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/keysModels.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/log.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/log.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"keyvault-keys\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbG9nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDTyxlQUFlLGlFQUFrQjtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2xvZy5qcz85YWRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50TG9nZ2VyIH0gZnJvbSBcIkBhenVyZS9sb2dnZXJcIjtcbi8qKlxuICogVGhlIFxcQGF6dXJlL2xvZ2dlciBjb25maWd1cmF0aW9uIGZvciB0aGlzIHBhY2thZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBjcmVhdGVDbGllbnRMb2dnZXIoXCJrZXl2YXVsdC1rZXlzXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/operation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/operation.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteKeyPollOperation: () => (/* binding */ DeleteKeyPollOperation)\n/* harmony export */ });\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tracing.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js\");\n/* harmony import */ var _transformations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transformations.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/transformations.js\");\n/* harmony import */ var _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../keyVaultKeyPoller.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass DeleteKeyPollOperation extends _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_2__.KeyVaultKeyPollOperation {\n    constructor(state, client, operationOptions = {}) {\n        super(state, { cancelMessage: \"Canceling the deletion of a key is not supported.\" });\n        this.state = state;\n        this.client = client;\n        this.operationOptions = operationOptions;\n    }\n    /**\n     * Sends a delete request for the given Key Vault Key's name to the Key Vault service.\n     * Since the Key Vault Key won't be immediately deleted, we have {@link beginDeleteKey}.\n     */\n    deleteKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_0__.tracingClient.withSpan(\"DeleteKeyPoller.deleteKey\", options, async (updatedOptions) => {\n            const response = await this.client.deleteKey(name, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * The getDeletedKey method returns the specified deleted key along with its properties.\n     * This operation requires the keys/get permission.\n     */\n    getDeletedKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_0__.tracingClient.withSpan(\"DeleteKeyPoller.getDeletedKey\", options, async (updatedOptions) => {\n            const response = await this.client.getDeletedKey(name, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * Reaches to the service and updates the delete key's poll operation.\n     */\n    async update(options = {}) {\n        const state = this.state;\n        const { name } = state;\n        if (options.abortSignal) {\n            this.operationOptions.abortSignal = options.abortSignal;\n        }\n        if (!state.isStarted) {\n            const deletedKey = await this.deleteKey(name, this.operationOptions);\n            state.isStarted = true;\n            state.result = deletedKey;\n            if (!deletedKey.properties.recoveryId) {\n                state.isCompleted = true;\n            }\n        }\n        if (!state.isCompleted) {\n            try {\n                state.result = await this.getDeletedKey(name, this.operationOptions);\n                state.isCompleted = true;\n            }\n            catch (error) {\n                if (error.statusCode === 403) {\n                    // At this point, the resource exists but the user doesn't have access to it.\n                    state.isCompleted = true;\n                }\n                else if (error.statusCode !== 404) {\n                    state.error = error;\n                    state.isCompleted = true;\n                    throw error;\n                }\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=operation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL2RlbGV0ZS9vcGVyYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDYztBQUNJO0FBQzVELHFDQUFxQywyRUFBd0I7QUFDcEUsb0RBQW9EO0FBQ3BELHVCQUF1QixvRUFBb0U7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLHFCQUFxQjtBQUMzRjtBQUNBLGdDQUFnQztBQUNoQyxlQUFlLHNEQUFhO0FBQzVCO0FBQ0EsbUJBQW1CLHdFQUFtQjtBQUN0QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyxlQUFlLHNEQUFhO0FBQzVCO0FBQ0EsbUJBQW1CLHdFQUFtQjtBQUN0QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSxnQkFBZ0IsT0FBTztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL2RlbGV0ZS9vcGVyYXRpb24uanM/YzRiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IHRyYWNpbmdDbGllbnQgfSBmcm9tIFwiLi4vLi4vdHJhY2luZy5qc1wiO1xuaW1wb3J0IHsgZ2V0S2V5RnJvbUtleUJ1bmRsZSB9IGZyb20gXCIuLi8uLi90cmFuc2Zvcm1hdGlvbnMuanNcIjtcbmltcG9ydCB7IEtleVZhdWx0S2V5UG9sbE9wZXJhdGlvbiB9IGZyb20gXCIuLi9rZXlWYXVsdEtleVBvbGxlci5qc1wiO1xuZXhwb3J0IGNsYXNzIERlbGV0ZUtleVBvbGxPcGVyYXRpb24gZXh0ZW5kcyBLZXlWYXVsdEtleVBvbGxPcGVyYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlLCBjbGllbnQsIG9wZXJhdGlvbk9wdGlvbnMgPSB7fSkge1xuICAgICAgICBzdXBlcihzdGF0ZSwgeyBjYW5jZWxNZXNzYWdlOiBcIkNhbmNlbGluZyB0aGUgZGVsZXRpb24gb2YgYSBrZXkgaXMgbm90IHN1cHBvcnRlZC5cIiB9KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5vcGVyYXRpb25PcHRpb25zID0gb3BlcmF0aW9uT3B0aW9ucztcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VuZHMgYSBkZWxldGUgcmVxdWVzdCBmb3IgdGhlIGdpdmVuIEtleSBWYXVsdCBLZXkncyBuYW1lIHRvIHRoZSBLZXkgVmF1bHQgc2VydmljZS5cbiAgICAgKiBTaW5jZSB0aGUgS2V5IFZhdWx0IEtleSB3b24ndCBiZSBpbW1lZGlhdGVseSBkZWxldGVkLCB3ZSBoYXZlIHtAbGluayBiZWdpbkRlbGV0ZUtleX0uXG4gICAgICovXG4gICAgZGVsZXRlS2V5KG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdHJhY2luZ0NsaWVudC53aXRoU3BhbihcIkRlbGV0ZUtleVBvbGxlci5kZWxldGVLZXlcIiwgb3B0aW9ucywgYXN5bmMgKHVwZGF0ZWRPcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50LmRlbGV0ZUtleShuYW1lLCB1cGRhdGVkT3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4gZ2V0S2V5RnJvbUtleUJ1bmRsZShyZXNwb25zZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZ2V0RGVsZXRlZEtleSBtZXRob2QgcmV0dXJucyB0aGUgc3BlY2lmaWVkIGRlbGV0ZWQga2V5IGFsb25nIHdpdGggaXRzIHByb3BlcnRpZXMuXG4gICAgICogVGhpcyBvcGVyYXRpb24gcmVxdWlyZXMgdGhlIGtleXMvZ2V0IHBlcm1pc3Npb24uXG4gICAgICovXG4gICAgZ2V0RGVsZXRlZEtleShuYW1lLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRyYWNpbmdDbGllbnQud2l0aFNwYW4oXCJEZWxldGVLZXlQb2xsZXIuZ2V0RGVsZXRlZEtleVwiLCBvcHRpb25zLCBhc3luYyAodXBkYXRlZE9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnQuZ2V0RGVsZXRlZEtleShuYW1lLCB1cGRhdGVkT3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4gZ2V0S2V5RnJvbUtleUJ1bmRsZShyZXNwb25zZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFjaGVzIHRvIHRoZSBzZXJ2aWNlIGFuZCB1cGRhdGVzIHRoZSBkZWxldGUga2V5J3MgcG9sbCBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgdXBkYXRlKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHsgbmFtZSB9ID0gc3RhdGU7XG4gICAgICAgIGlmIChvcHRpb25zLmFib3J0U2lnbmFsKSB7XG4gICAgICAgICAgICB0aGlzLm9wZXJhdGlvbk9wdGlvbnMuYWJvcnRTaWduYWwgPSBvcHRpb25zLmFib3J0U2lnbmFsO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc3RhdGUuaXNTdGFydGVkKSB7XG4gICAgICAgICAgICBjb25zdCBkZWxldGVkS2V5ID0gYXdhaXQgdGhpcy5kZWxldGVLZXkobmFtZSwgdGhpcy5vcGVyYXRpb25PcHRpb25zKTtcbiAgICAgICAgICAgIHN0YXRlLmlzU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICBzdGF0ZS5yZXN1bHQgPSBkZWxldGVkS2V5O1xuICAgICAgICAgICAgaWYgKCFkZWxldGVkS2V5LnByb3BlcnRpZXMucmVjb3ZlcnlJZCkge1xuICAgICAgICAgICAgICAgIHN0YXRlLmlzQ29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXN0YXRlLmlzQ29tcGxldGVkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHN0YXRlLnJlc3VsdCA9IGF3YWl0IHRoaXMuZ2V0RGVsZXRlZEtleShuYW1lLCB0aGlzLm9wZXJhdGlvbk9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHN0YXRlLmlzQ29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MDMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXQgdGhpcyBwb2ludCwgdGhlIHJlc291cmNlIGV4aXN0cyBidXQgdGhlIHVzZXIgZG9lc24ndCBoYXZlIGFjY2VzcyB0byBpdC5cbiAgICAgICAgICAgICAgICAgICAgc3RhdGUuaXNDb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChlcnJvci5zdGF0dXNDb2RlICE9PSA0MDQpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGUuZXJyb3IgPSBlcnJvcjtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGUuaXNDb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BlcmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/operation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/poller.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/poller.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteKeyPoller: () => (/* binding */ DeleteKeyPoller)\n/* harmony export */ });\n/* harmony import */ var _operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operation.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/operation.js\");\n/* harmony import */ var _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keyVaultKeyPoller.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Class that creates a poller that waits until a key finishes being deleted.\n */\nclass DeleteKeyPoller extends _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_1__.KeyVaultKeyPoller {\n    constructor(options) {\n        const { client, name, operationOptions, intervalInMs = 2000, resumeFrom } = options;\n        let state;\n        if (resumeFrom) {\n            state = JSON.parse(resumeFrom).state;\n        }\n        const operation = new _operation_js__WEBPACK_IMPORTED_MODULE_0__.DeleteKeyPollOperation(Object.assign(Object.assign({}, state), { name }), client, operationOptions);\n        super(operation);\n        this.intervalInMs = intervalInMs;\n    }\n}\n//# sourceMappingURL=poller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL2RlbGV0ZS9wb2xsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUN3RDtBQUNJO0FBQzVEO0FBQ0E7QUFDQTtBQUNPLDhCQUE4QixvRUFBaUI7QUFDdEQ7QUFDQSxnQkFBZ0Isa0VBQWtFO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlFQUFzQiwrQkFBK0IsWUFBWSxNQUFNO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8uL25vZGVfbW9kdWxlcy9AYXp1cmUva2V5dmF1bHQta2V5cy9kaXN0L2VzbS9scm8vZGVsZXRlL3BvbGxlci5qcz8wMmJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgRGVsZXRlS2V5UG9sbE9wZXJhdGlvbiB9IGZyb20gXCIuL29wZXJhdGlvbi5qc1wiO1xuaW1wb3J0IHsgS2V5VmF1bHRLZXlQb2xsZXIgfSBmcm9tIFwiLi4va2V5VmF1bHRLZXlQb2xsZXIuanNcIjtcbi8qKlxuICogQ2xhc3MgdGhhdCBjcmVhdGVzIGEgcG9sbGVyIHRoYXQgd2FpdHMgdW50aWwgYSBrZXkgZmluaXNoZXMgYmVpbmcgZGVsZXRlZC5cbiAqL1xuZXhwb3J0IGNsYXNzIERlbGV0ZUtleVBvbGxlciBleHRlbmRzIEtleVZhdWx0S2V5UG9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgY2xpZW50LCBuYW1lLCBvcGVyYXRpb25PcHRpb25zLCBpbnRlcnZhbEluTXMgPSAyMDAwLCByZXN1bWVGcm9tIH0gPSBvcHRpb25zO1xuICAgICAgICBsZXQgc3RhdGU7XG4gICAgICAgIGlmIChyZXN1bWVGcm9tKSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEpTT04ucGFyc2UocmVzdW1lRnJvbSkuc3RhdGU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uID0gbmV3IERlbGV0ZUtleVBvbGxPcGVyYXRpb24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSksIHsgbmFtZSB9KSwgY2xpZW50LCBvcGVyYXRpb25PcHRpb25zKTtcbiAgICAgICAgc3VwZXIob3BlcmF0aW9uKTtcbiAgICAgICAgdGhpcy5pbnRlcnZhbEluTXMgPSBpbnRlcnZhbEluTXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9sbGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/delete/poller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyVaultKeyPollOperation: () => (/* binding */ KeyVaultKeyPollOperation),\n/* harmony export */   KeyVaultKeyPoller: () => (/* binding */ KeyVaultKeyPoller)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _azure_core_lro__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-lro */ \"(rsc)/./node_modules/@azure/core-lro/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Common properties and methods of the Key Vault Key Pollers.\n */\nclass KeyVaultKeyPoller extends _azure_core_lro__WEBPACK_IMPORTED_MODULE_1__.Poller {\n    constructor() {\n        super(...arguments);\n        /**\n         * Defines how much time the poller is going to wait before making a new request to the service.\n         */\n        this.intervalInMs = 2000;\n    }\n    /**\n     * The method used by the poller to wait before attempting to update its operation.\n     */\n    async delay() {\n        return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.delay)(this.intervalInMs);\n    }\n}\n/**\n * Common properties and methods of the Key Vault Key Poller operations.\n */\nclass KeyVaultKeyPollOperation {\n    constructor(state, options = {}) {\n        this.state = state;\n        this.cancelMessage = \"\";\n        if (options.cancelMessage) {\n            this.cancelMessage = options.cancelMessage;\n        }\n    }\n    /**\n     * Meant to reach to the service and update the Poller operation.\n     */\n    async update() {\n        throw new Error(\"Operation not supported.\");\n    }\n    /**\n     * Meant to reach to the service and cancel the Poller operation.\n     */\n    async cancel() {\n        throw new Error(this.cancelMessage);\n    }\n    /**\n     * Serializes the Poller operation.\n     */\n    toString() {\n        return JSON.stringify({\n            state: this.state,\n        });\n    }\n}\n//# sourceMappingURL=keyVaultKeyPoller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL2tleVZhdWx0S2V5UG9sbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3lDO0FBQ0E7QUFDekM7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLG1EQUFNO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVEQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL2tleVZhdWx0S2V5UG9sbGVyLmpzP2I4NWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBkZWxheSB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBQb2xsZXIgfSBmcm9tIFwiQGF6dXJlL2NvcmUtbHJvXCI7XG4vKipcbiAqIENvbW1vbiBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIG9mIHRoZSBLZXkgVmF1bHQgS2V5IFBvbGxlcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBLZXlWYXVsdEtleVBvbGxlciBleHRlbmRzIFBvbGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGhvdyBtdWNoIHRpbWUgdGhlIHBvbGxlciBpcyBnb2luZyB0byB3YWl0IGJlZm9yZSBtYWtpbmcgYSBuZXcgcmVxdWVzdCB0byB0aGUgc2VydmljZS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaW50ZXJ2YWxJbk1zID0gMjAwMDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIG1ldGhvZCB1c2VkIGJ5IHRoZSBwb2xsZXIgdG8gd2FpdCBiZWZvcmUgYXR0ZW1wdGluZyB0byB1cGRhdGUgaXRzIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBkZWxheSgpIHtcbiAgICAgICAgcmV0dXJuIGRlbGF5KHRoaXMuaW50ZXJ2YWxJbk1zKTtcbiAgICB9XG59XG4vKipcbiAqIENvbW1vbiBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIG9mIHRoZSBLZXkgVmF1bHQgS2V5IFBvbGxlciBvcGVyYXRpb25zLlxuICovXG5leHBvcnQgY2xhc3MgS2V5VmF1bHRLZXlQb2xsT3BlcmF0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihzdGF0ZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgdGhpcy5jYW5jZWxNZXNzYWdlID0gXCJcIjtcbiAgICAgICAgaWYgKG9wdGlvbnMuY2FuY2VsTWVzc2FnZSkge1xuICAgICAgICAgICAgdGhpcy5jYW5jZWxNZXNzYWdlID0gb3B0aW9ucy5jYW5jZWxNZXNzYWdlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1lYW50IHRvIHJlYWNoIHRvIHRoZSBzZXJ2aWNlIGFuZCB1cGRhdGUgdGhlIFBvbGxlciBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgdXBkYXRlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJPcGVyYXRpb24gbm90IHN1cHBvcnRlZC5cIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1lYW50IHRvIHJlYWNoIHRvIHRoZSBzZXJ2aWNlIGFuZCBjYW5jZWwgdGhlIFBvbGxlciBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgY2FuY2VsKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IodGhpcy5jYW5jZWxNZXNzYWdlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VyaWFsaXplcyB0aGUgUG9sbGVyIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHN0YXRlOiB0aGlzLnN0YXRlLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlWYXVsdEtleVBvbGxlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/operation.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/operation.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RecoverDeletedKeyPollOperation: () => (/* binding */ RecoverDeletedKeyPollOperation)\n/* harmony export */ });\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tracing.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js\");\n/* harmony import */ var _transformations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transformations.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/transformations.js\");\n/* harmony import */ var _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../keyVaultKeyPoller.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n\nclass RecoverDeletedKeyPollOperation extends _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_2__.KeyVaultKeyPollOperation {\n    constructor(state, client, operationOptions = {}) {\n        super(state, { cancelMessage: \"Canceling the recovery of a deleted key is not supported.\" });\n        this.state = state;\n        this.client = client;\n        this.operationOptions = operationOptions;\n    }\n    /**\n     * The getKey method gets a specified key and is applicable to any key stored in Azure Key Vault.\n     * This operation requires the keys/get permission.\n     */\n    getKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_0__.tracingClient.withSpan(\"RecoverDeleteKeyPoller.getKey\", options, async (updatedOptions) => {\n            const response = await this.client.getKey(name, (updatedOptions === null || updatedOptions === void 0 ? void 0 : updatedOptions.version) || \"\", updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * Sends a request to recover a deleted Key Vault Key based on the given name.\n     * Since the Key Vault Key won't be immediately recover the deleted key, we have {@link beginRecoverDeletedKey}.\n     */\n    async recoverDeletedKey(name, options = {}) {\n        return _tracing_js__WEBPACK_IMPORTED_MODULE_0__.tracingClient.withSpan(\"RecoverDeletedKeyPoller.recoverDeleteKey\", options, async (updatedOptions) => {\n            const response = await this.client.recoverDeletedKey(name, updatedOptions);\n            return (0,_transformations_js__WEBPACK_IMPORTED_MODULE_1__.getKeyFromKeyBundle)(response);\n        });\n    }\n    /**\n     * Reaches to the service and updates the delete key's poll operation.\n     */\n    async update(options = {}) {\n        const state = this.state;\n        const { name } = state;\n        const operationOptions = this.operationOptions;\n        if (options.abortSignal) {\n            operationOptions.abortSignal = options.abortSignal;\n        }\n        if (!state.isStarted) {\n            try {\n                state.result = await this.getKey(name, operationOptions);\n                state.isCompleted = true;\n            }\n            catch (_a) {\n                // Nothing to do here.\n            }\n            if (!state.isCompleted) {\n                state.result = await this.recoverDeletedKey(name, operationOptions);\n                state.isStarted = true;\n            }\n        }\n        if (!state.isCompleted) {\n            try {\n                state.result = await this.getKey(name, operationOptions);\n                state.isCompleted = true;\n            }\n            catch (error) {\n                if (error.statusCode === 403) {\n                    // At this point, the resource exists but the user doesn't have access to it.\n                    state.isCompleted = true;\n                }\n                else if (error.statusCode !== 404) {\n                    state.error = error;\n                    state.isCompleted = true;\n                    throw error;\n                }\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=operation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL3JlY292ZXIvb3BlcmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2lEO0FBQ2M7QUFDSTtBQUM1RCw2Q0FBNkMsMkVBQXdCO0FBQzVFLG9EQUFvRDtBQUNwRCx1QkFBdUIsNEVBQTRFO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IsZUFBZSxzREFBYTtBQUM1QjtBQUNBLG1CQUFtQix3RUFBbUI7QUFDdEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRiw2QkFBNkI7QUFDbkg7QUFDQSw4Q0FBOEM7QUFDOUMsZUFBZSxzREFBYTtBQUM1QjtBQUNBLG1CQUFtQix3RUFBbUI7QUFDdEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL2xyby9yZWNvdmVyL29wZXJhdGlvbi5qcz8zNzBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuaW1wb3J0IHsgdHJhY2luZ0NsaWVudCB9IGZyb20gXCIuLi8uLi90cmFjaW5nLmpzXCI7XG5pbXBvcnQgeyBnZXRLZXlGcm9tS2V5QnVuZGxlIH0gZnJvbSBcIi4uLy4uL3RyYW5zZm9ybWF0aW9ucy5qc1wiO1xuaW1wb3J0IHsgS2V5VmF1bHRLZXlQb2xsT3BlcmF0aW9uIH0gZnJvbSBcIi4uL2tleVZhdWx0S2V5UG9sbGVyLmpzXCI7XG5leHBvcnQgY2xhc3MgUmVjb3ZlckRlbGV0ZWRLZXlQb2xsT3BlcmF0aW9uIGV4dGVuZHMgS2V5VmF1bHRLZXlQb2xsT3BlcmF0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihzdGF0ZSwgY2xpZW50LCBvcGVyYXRpb25PcHRpb25zID0ge30pIHtcbiAgICAgICAgc3VwZXIoc3RhdGUsIHsgY2FuY2VsTWVzc2FnZTogXCJDYW5jZWxpbmcgdGhlIHJlY292ZXJ5IG9mIGEgZGVsZXRlZCBrZXkgaXMgbm90IHN1cHBvcnRlZC5cIiB9KTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5vcGVyYXRpb25PcHRpb25zID0gb3BlcmF0aW9uT3B0aW9ucztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGdldEtleSBtZXRob2QgZ2V0cyBhIHNwZWNpZmllZCBrZXkgYW5kIGlzIGFwcGxpY2FibGUgdG8gYW55IGtleSBzdG9yZWQgaW4gQXp1cmUgS2V5IFZhdWx0LlxuICAgICAqIFRoaXMgb3BlcmF0aW9uIHJlcXVpcmVzIHRoZSBrZXlzL2dldCBwZXJtaXNzaW9uLlxuICAgICAqL1xuICAgIGdldEtleShuYW1lLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRyYWNpbmdDbGllbnQud2l0aFNwYW4oXCJSZWNvdmVyRGVsZXRlS2V5UG9sbGVyLmdldEtleVwiLCBvcHRpb25zLCBhc3luYyAodXBkYXRlZE9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5jbGllbnQuZ2V0S2V5KG5hbWUsICh1cGRhdGVkT3B0aW9ucyA9PT0gbnVsbCB8fCB1cGRhdGVkT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogdXBkYXRlZE9wdGlvbnMudmVyc2lvbikgfHwgXCJcIiwgdXBkYXRlZE9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIGdldEtleUZyb21LZXlCdW5kbGUocmVzcG9uc2UpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VuZHMgYSByZXF1ZXN0IHRvIHJlY292ZXIgYSBkZWxldGVkIEtleSBWYXVsdCBLZXkgYmFzZWQgb24gdGhlIGdpdmVuIG5hbWUuXG4gICAgICogU2luY2UgdGhlIEtleSBWYXVsdCBLZXkgd29uJ3QgYmUgaW1tZWRpYXRlbHkgcmVjb3ZlciB0aGUgZGVsZXRlZCBrZXksIHdlIGhhdmUge0BsaW5rIGJlZ2luUmVjb3ZlckRlbGV0ZWRLZXl9LlxuICAgICAqL1xuICAgIGFzeW5jIHJlY292ZXJEZWxldGVkS2V5KG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdHJhY2luZ0NsaWVudC53aXRoU3BhbihcIlJlY292ZXJEZWxldGVkS2V5UG9sbGVyLnJlY292ZXJEZWxldGVLZXlcIiwgb3B0aW9ucywgYXN5bmMgKHVwZGF0ZWRPcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50LnJlY292ZXJEZWxldGVkS2V5KG5hbWUsIHVwZGF0ZWRPcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiBnZXRLZXlGcm9tS2V5QnVuZGxlKHJlc3BvbnNlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWNoZXMgdG8gdGhlIHNlcnZpY2UgYW5kIHVwZGF0ZXMgdGhlIGRlbGV0ZSBrZXkncyBwb2xsIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyB1cGRhdGUob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgeyBuYW1lIH0gPSBzdGF0ZTtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uT3B0aW9ucyA9IHRoaXMub3BlcmF0aW9uT3B0aW9ucztcbiAgICAgICAgaWYgKG9wdGlvbnMuYWJvcnRTaWduYWwpIHtcbiAgICAgICAgICAgIG9wZXJhdGlvbk9wdGlvbnMuYWJvcnRTaWduYWwgPSBvcHRpb25zLmFib3J0U2lnbmFsO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc3RhdGUuaXNTdGFydGVkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHN0YXRlLnJlc3VsdCA9IGF3YWl0IHRoaXMuZ2V0S2V5KG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHN0YXRlLmlzQ29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgICAgIC8vIE5vdGhpbmcgdG8gZG8gaGVyZS5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghc3RhdGUuaXNDb21wbGV0ZWQpIHtcbiAgICAgICAgICAgICAgICBzdGF0ZS5yZXN1bHQgPSBhd2FpdCB0aGlzLnJlY292ZXJEZWxldGVkS2V5KG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHN0YXRlLmlzU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzdGF0ZS5pc0NvbXBsZXRlZCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzdGF0ZS5yZXN1bHQgPSBhd2FpdCB0aGlzLmdldEtleShuYW1lLCBvcGVyYXRpb25PcHRpb25zKTtcbiAgICAgICAgICAgICAgICBzdGF0ZS5pc0NvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3Iuc3RhdHVzQ29kZSA9PT0gNDAzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEF0IHRoaXMgcG9pbnQsIHRoZSByZXNvdXJjZSBleGlzdHMgYnV0IHRoZSB1c2VyIGRvZXNuJ3QgaGF2ZSBhY2Nlc3MgdG8gaXQuXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLmlzQ29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZXJyb3Iuc3RhdHVzQ29kZSAhPT0gNDA0KSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLmVycm9yID0gZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLmlzQ29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wZXJhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/operation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/poller.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/poller.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RecoverDeletedKeyPoller: () => (/* binding */ RecoverDeletedKeyPoller)\n/* harmony export */ });\n/* harmony import */ var _operation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operation.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/operation.js\");\n/* harmony import */ var _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keyVaultKeyPoller.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/keyVaultKeyPoller.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * Class that deletes a poller that waits until a key finishes being deleted\n */\nclass RecoverDeletedKeyPoller extends _keyVaultKeyPoller_js__WEBPACK_IMPORTED_MODULE_1__.KeyVaultKeyPoller {\n    constructor(options) {\n        const { client, name, operationOptions, intervalInMs = 2000, resumeFrom } = options;\n        let state;\n        if (resumeFrom) {\n            state = JSON.parse(resumeFrom).state;\n        }\n        const operation = new _operation_js__WEBPACK_IMPORTED_MODULE_0__.RecoverDeletedKeyPollOperation(Object.assign(Object.assign({}, state), { name }), client, operationOptions);\n        super(operation);\n        this.intervalInMs = intervalInMs;\n    }\n}\n//# sourceMappingURL=poller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL3JlY292ZXIvcG9sbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDZ0U7QUFDSjtBQUM1RDtBQUNBO0FBQ0E7QUFDTyxzQ0FBc0Msb0VBQWlCO0FBQzlEO0FBQ0EsZ0JBQWdCLGtFQUFrRTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5RUFBOEIsK0JBQStCLFlBQVksTUFBTTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbHV4eWx5ZmUvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vbHJvL3JlY292ZXIvcG9sbGVyLmpzPzJiOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5pbXBvcnQgeyBSZWNvdmVyRGVsZXRlZEtleVBvbGxPcGVyYXRpb24gfSBmcm9tIFwiLi9vcGVyYXRpb24uanNcIjtcbmltcG9ydCB7IEtleVZhdWx0S2V5UG9sbGVyIH0gZnJvbSBcIi4uL2tleVZhdWx0S2V5UG9sbGVyLmpzXCI7XG4vKipcbiAqIENsYXNzIHRoYXQgZGVsZXRlcyBhIHBvbGxlciB0aGF0IHdhaXRzIHVudGlsIGEga2V5IGZpbmlzaGVzIGJlaW5nIGRlbGV0ZWRcbiAqL1xuZXhwb3J0IGNsYXNzIFJlY292ZXJEZWxldGVkS2V5UG9sbGVyIGV4dGVuZHMgS2V5VmF1bHRLZXlQb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjbGllbnQsIG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMsIGludGVydmFsSW5NcyA9IDIwMDAsIHJlc3VtZUZyb20gfSA9IG9wdGlvbnM7XG4gICAgICAgIGxldCBzdGF0ZTtcbiAgICAgICAgaWYgKHJlc3VtZUZyb20pIHtcbiAgICAgICAgICAgIHN0YXRlID0gSlNPTi5wYXJzZShyZXN1bWVGcm9tKS5zdGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcGVyYXRpb24gPSBuZXcgUmVjb3ZlckRlbGV0ZWRLZXlQb2xsT3BlcmF0aW9uKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUpLCB7IG5hbWUgfSksIGNsaWVudCwgb3BlcmF0aW9uT3B0aW9ucyk7XG4gICAgICAgIHN1cGVyKG9wZXJhdGlvbik7XG4gICAgICAgIHRoaXMuaW50ZXJ2YWxJbk1zID0gaW50ZXJ2YWxJbk1zO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvbGxlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/lro/recover/poller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/tracing.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tracingClient: () => (/* binding */ tracingClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\nconst tracingClient = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n    namespace: \"Microsoft.KeyVault\",\n    packageName: \"@azure/keyvault-keys\",\n    packageVersion: _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n});\n//# sourceMappingURL=tracing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2tleXZhdWx0LWtleXMvZGlzdC9lc20vdHJhY2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQzBEO0FBQ2I7QUFDdEMsc0JBQXNCLHdFQUFtQjtBQUNoRDtBQUNBO0FBQ0Esb0JBQW9CLHNEQUFXO0FBQy9CLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9rZXl2YXVsdC1rZXlzL2Rpc3QvZXNtL3RyYWNpbmcuanM/MzlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYWNpbmdDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdHJhY2luZ1wiO1xuaW1wb3J0IHsgU0RLX1ZFUlNJT04gfSBmcm9tIFwiLi9jb25zdGFudHMuanNcIjtcbmV4cG9ydCBjb25zdCB0cmFjaW5nQ2xpZW50ID0gY3JlYXRlVHJhY2luZ0NsaWVudCh7XG4gICAgbmFtZXNwYWNlOiBcIk1pY3Jvc29mdC5LZXlWYXVsdFwiLFxuICAgIHBhY2thZ2VOYW1lOiBcIkBhenVyZS9rZXl2YXVsdC1rZXlzXCIsXG4gICAgcGFja2FnZVZlcnNpb246IFNES19WRVJTSU9OLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/tracing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/transformations.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/keyvault-keys/dist/esm/transformations.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDeletedKeyFromDeletedKeyItem: () => (/* binding */ getDeletedKeyFromDeletedKeyItem),\n/* harmony export */   getKeyFromKeyBundle: () => (/* binding */ getKeyFromKeyBundle),\n/* harmony export */   getKeyPropertiesFromKeyItem: () => (/* binding */ getKeyPropertiesFromKeyItem),\n/* harmony export */   keyRotationTransformations: () => (/* binding */ keyRotationTransformations),\n/* harmony export */   mapPagedAsyncIterable: () => (/* binding */ mapPagedAsyncIterable)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _identifier_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identifier.js */ \"(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/identifier.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n\n/**\n * @internal\n * Shapes the exposed {@link KeyVaultKey} based on either a received key bundle or deleted key bundle.\n */\nfunction getKeyFromKeyBundle(bundle) {\n    const keyBundle = bundle;\n    const deletedKeyBundle = bundle;\n    const parsedId = (0,_identifier_js__WEBPACK_IMPORTED_MODULE_0__.parseKeyVaultKeyIdentifier)(keyBundle.key.kid);\n    const attributes = keyBundle.attributes || {};\n    const resultObject = {\n        key: keyBundle.key,\n        id: keyBundle.key ? keyBundle.key.kid : undefined,\n        name: parsedId.name,\n        keyOperations: keyBundle.key ? keyBundle.key.keyOps : undefined,\n        keyType: keyBundle.key ? keyBundle.key.kty : undefined,\n        properties: {\n            tags: keyBundle.tags,\n            enabled: attributes.enabled,\n            notBefore: attributes.notBefore,\n            expiresOn: attributes.expires,\n            createdOn: attributes.created,\n            updatedOn: attributes.updated,\n            recoverableDays: attributes.recoverableDays,\n            recoveryLevel: attributes.recoveryLevel,\n            exportable: attributes.exportable,\n            releasePolicy: keyBundle.releasePolicy,\n            hsmPlatform: attributes.hsmPlatform,\n            vaultUrl: parsedId.vaultUrl,\n            version: parsedId.version,\n            name: parsedId.name,\n            managed: keyBundle.managed,\n            id: keyBundle.key ? keyBundle.key.kid : undefined,\n        },\n    };\n    if (deletedKeyBundle.recoveryId) {\n        resultObject.properties.recoveryId = deletedKeyBundle.recoveryId;\n        resultObject.properties.scheduledPurgeDate = deletedKeyBundle.scheduledPurgeDate;\n        resultObject.properties.deletedOn = deletedKeyBundle.deletedDate;\n    }\n    if (attributes.attestation) {\n        resultObject.properties.attestation = attributes.attestation;\n    }\n    return resultObject;\n}\n/**\n * @internal\n * Shapes the exposed {@link DeletedKey} based on a received KeyItem.\n */\nfunction getDeletedKeyFromDeletedKeyItem(keyItem) {\n    const commonProperties = getKeyPropertiesFromKeyItem(keyItem);\n    return {\n        key: {\n            kid: keyItem.kid,\n        },\n        id: keyItem.kid,\n        name: commonProperties.name,\n        properties: Object.assign(Object.assign({}, commonProperties), { recoveryId: keyItem.recoveryId, scheduledPurgeDate: keyItem.scheduledPurgeDate, deletedOn: keyItem.deletedDate }),\n    };\n}\n/**\n * @internal\n * Shapes the exposed {@link KeyProperties} based on a received KeyItem.\n */\nfunction getKeyPropertiesFromKeyItem(keyItem) {\n    const parsedId = (0,_identifier_js__WEBPACK_IMPORTED_MODULE_0__.parseKeyVaultKeyIdentifier)(keyItem.kid);\n    const attributes = keyItem.attributes || {};\n    const resultObject = {\n        createdOn: attributes.created,\n        enabled: attributes === null || attributes === void 0 ? void 0 : attributes.enabled,\n        expiresOn: attributes === null || attributes === void 0 ? void 0 : attributes.expires,\n        id: keyItem.kid,\n        managed: keyItem.managed,\n        name: parsedId.name,\n        notBefore: attributes === null || attributes === void 0 ? void 0 : attributes.notBefore,\n        recoverableDays: attributes === null || attributes === void 0 ? void 0 : attributes.recoverableDays,\n        recoveryLevel: attributes === null || attributes === void 0 ? void 0 : attributes.recoveryLevel,\n        hsmPlatform: attributes === null || attributes === void 0 ? void 0 : attributes.hsmPlatform,\n        tags: keyItem.tags,\n        updatedOn: attributes.updated,\n        vaultUrl: parsedId.vaultUrl,\n        version: parsedId.version,\n    };\n    return resultObject;\n}\nconst actionTypeCaseInsensitiveMapping = {\n    rotate: \"Rotate\",\n    notify: \"Notify\",\n};\nfunction getNormalizedActionType(caseInsensitiveActionType) {\n    const result = actionTypeCaseInsensitiveMapping[caseInsensitiveActionType.toLowerCase()];\n    if (result) {\n        return result;\n    }\n    throw new Error(`Unrecognized action type: ${caseInsensitiveActionType}`);\n}\n/**\n * @internal\n */\nconst keyRotationTransformations = {\n    propertiesToGenerated: function (parameters) {\n        var _a;\n        const policy = {\n            attributes: {\n                expiryTime: parameters.expiresIn,\n            },\n            lifetimeActions: (_a = parameters.lifetimeActions) === null || _a === void 0 ? void 0 : _a.map((action) => {\n                const generatedAction = {\n                    action: { type: action.action },\n                    trigger: {},\n                };\n                if (action.timeAfterCreate) {\n                    generatedAction.trigger.timeAfterCreate = action.timeAfterCreate;\n                }\n                if (action.timeBeforeExpiry) {\n                    generatedAction.trigger.timeBeforeExpiry = action.timeBeforeExpiry;\n                }\n                return generatedAction;\n            }),\n        };\n        return policy;\n    },\n    generatedToPublic(generated) {\n        var _a, _b, _c, _d;\n        const policy = {\n            id: generated.id,\n            createdOn: (_a = generated.attributes) === null || _a === void 0 ? void 0 : _a.created,\n            updatedOn: (_b = generated.attributes) === null || _b === void 0 ? void 0 : _b.updated,\n            expiresIn: (_c = generated.attributes) === null || _c === void 0 ? void 0 : _c.expiryTime,\n            lifetimeActions: (_d = generated.lifetimeActions) === null || _d === void 0 ? void 0 : _d.map((action) => {\n                var _a, _b;\n                return {\n                    action: getNormalizedActionType(action.action.type),\n                    timeAfterCreate: (_a = action.trigger) === null || _a === void 0 ? void 0 : _a.timeAfterCreate,\n                    timeBeforeExpiry: (_b = action.trigger) === null || _b === void 0 ? void 0 : _b.timeBeforeExpiry,\n                };\n            }),\n        };\n        return policy;\n    },\n};\n/**\n * A helper supporting compatibility between modular and legacy paged async iterables.\n *\n * Provides the following compatibility:\n * 1. Maps the values of the paged async iterable using the provided mapper function.\n * 2. Supports `maxPageSize` operation on the paged async iterable.\n *\n * TODO: move this to keyvault-common once everything is merged\n */\nfunction mapPagedAsyncIterable(options, operation, mapper) {\n    let iter = undefined;\n    return {\n        async next() {\n            iter !== null && iter !== void 0 ? iter : (iter = operation(Object.assign(Object.assign({}, options), { maxresults: undefined })));\n            const result = await iter.next();\n            return Object.assign(Object.assign({}, result), { value: result.value && mapper(result.value) });\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        byPage(settings) {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__asyncGenerator)(this, arguments, function* byPage_1() {\n                var _a, e_1, _b, _c;\n                // Pass the maxPageSize value to the underlying page operation\n                const iteratorByPage = operation(Object.assign(Object.assign({}, options), { maxresults: settings === null || settings === void 0 ? void 0 : settings.maxPageSize })).byPage(settings);\n                try {\n                    for (var _d = true, iteratorByPage_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__asyncValues)(iteratorByPage), iteratorByPage_1_1; iteratorByPage_1_1 = yield (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__await)(iteratorByPage_1.next()), _a = iteratorByPage_1_1.done, !_a; _d = true) {\n                        _c = iteratorByPage_1_1.value;\n                        _d = false;\n                        const page = _c;\n                        yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__await)(page.map(mapper));\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iteratorByPage_1.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__await)(_b.call(iteratorByPage_1));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            });\n        },\n    };\n}\n//# sourceMappingURL=transformations.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/keyvault-keys/dist/esm/transformations.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/logger/dist/esm/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureLogger: () => (/* binding */ AzureLogger),\n/* harmony export */   createClientLogger: () => (/* binding */ createClientLogger),\n/* harmony export */   getLogLevel: () => (/* binding */ getLogLevel),\n/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _typespec_ts_http_runtime_internal_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @typespec/ts-http-runtime/internal/logger */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/esm/logger/internal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nconst context = (0,_typespec_ts_http_runtime_internal_logger__WEBPACK_IMPORTED_MODULE_0__.createLoggerContext)({\n    logLevelEnvVarName: \"AZURE_LOG_LEVEL\",\n    namespace: \"azure\",\n});\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nconst AzureLogger = context.logger;\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nfunction setLogLevel(level) {\n    context.setLogLevel(level);\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return context.getLogLevel();\n}\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    return context.createClientLogger(namespace);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDZ0Y7QUFDaEYsZ0JBQWdCLDhGQUFtQjtBQUNuQztBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9sb2dnZXIvZGlzdC9lc20vaW5kZXguanM/ZDM0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUxvZ2dlckNvbnRleHQgfSBmcm9tIFwiQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9pbnRlcm5hbC9sb2dnZXJcIjtcbmNvbnN0IGNvbnRleHQgPSBjcmVhdGVMb2dnZXJDb250ZXh0KHtcbiAgICBsb2dMZXZlbEVudlZhck5hbWU6IFwiQVpVUkVfTE9HX0xFVkVMXCIsXG4gICAgbmFtZXNwYWNlOiBcImF6dXJlXCIsXG59KTtcbi8qKlxuICogVGhlIEF6dXJlTG9nZ2VyIHByb3ZpZGVzIGEgbWVjaGFuaXNtIGZvciBvdmVycmlkaW5nIHdoZXJlIGxvZ3MgYXJlIG91dHB1dCB0by5cbiAqIEJ5IGRlZmF1bHQsIGxvZ3MgYXJlIHNlbnQgdG8gc3RkZXJyLlxuICogT3ZlcnJpZGUgdGhlIGBsb2dgIG1ldGhvZCB0byByZWRpcmVjdCBsb2dzIHRvIGFub3RoZXIgbG9jYXRpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBBenVyZUxvZ2dlciA9IGNvbnRleHQubG9nZ2VyO1xuLyoqXG4gKiBJbW1lZGlhdGVseSBlbmFibGVzIGxvZ2dpbmcgYXQgdGhlIHNwZWNpZmllZCBsb2cgbGV2ZWwuIElmIG5vIGxldmVsIGlzIHNwZWNpZmllZCwgbG9nZ2luZyBpcyBkaXNhYmxlZC5cbiAqIEBwYXJhbSBsZXZlbCAtIFRoZSBsb2cgbGV2ZWwgdG8gZW5hYmxlIGZvciBsb2dnaW5nLlxuICogT3B0aW9ucyBmcm9tIG1vc3QgdmVyYm9zZSB0byBsZWFzdCB2ZXJib3NlIGFyZTpcbiAqIC0gdmVyYm9zZVxuICogLSBpbmZvXG4gKiAtIHdhcm5pbmdcbiAqIC0gZXJyb3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldExvZ0xldmVsKGxldmVsKSB7XG4gICAgY29udGV4dC5zZXRMb2dMZXZlbChsZXZlbCk7XG59XG4vKipcbiAqIFJldHJpZXZlcyB0aGUgY3VycmVudGx5IHNwZWNpZmllZCBsb2cgbGV2ZWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dMZXZlbCgpIHtcbiAgICByZXR1cm4gY29udGV4dC5nZXRMb2dMZXZlbCgpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgbG9nZ2VyIGZvciB1c2UgYnkgdGhlIEF6dXJlIFNES3MgdGhhdCBpbmhlcml0cyBmcm9tIGBBenVyZUxvZ2dlcmAuXG4gKiBAcGFyYW0gbmFtZXNwYWNlIC0gVGhlIG5hbWUgb2YgdGhlIFNESyBwYWNrYWdlLlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2xpZW50TG9nZ2VyKG5hbWVzcGFjZSkge1xuICAgIHJldHVybiBjb250ZXh0LmNyZWF0ZUNsaWVudExvZ2dlcihuYW1lc3BhY2UpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/logger/dist/esm/index.js\n");

/***/ })

};
;
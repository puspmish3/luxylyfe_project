"use strict";(()=>{var e={};e.id=716,e.ids=[716],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5819:e=>{e.exports=import("@azure/cosmos")},2929:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>l,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>p});var n=r(9303),i=r(8716),s=r(670),o=r(188),c=e([o]);o=(c.then?(await c)():c)[0];let u=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/logout/route",pathname:"/api/auth/logout",filename:"route",bundlePath:"app/api/auth/logout/route"},resolvedPagePath:"C:\\Users\\puspa\\OneDrive\\Documents\\Work\\luxylyfe_project\\app\\api\\auth\\logout\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:m}=u,y="/api/auth/logout/route";function l(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:p})}a()}catch(e){a(e)}})},188:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{POST:()=>o,dynamic:()=>c});var n=r(7070),i=r(4544),s=e([i]);i=(s.then?(await s)():s)[0];let c="force-dynamic";async function o(e){try{let t=e.cookies.get("auth-token")?.value;if(t)try{let e=await i.db.session.findUnique({token:t});e&&await i.db.session.delete({id:e.id})}catch(e){console.error("Failed to delete session:",e)}let r=n.NextResponse.json({message:"Logout successful"});return r.cookies.delete("auth-token"),r}catch(e){return console.error("Logout error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}a()}catch(e){a(e)}})},4544:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{db:()=>d});var n=r(5819),i=e([n]);n=(i.then?(await i)():i)[0];let l={endpoint:process.env.COSMOS_DB_ENDPOINT,key:process.env.COSMOS_DB_KEY,databaseId:process.env.COSMOS_DB_DATABASE_NAME||"luxylyfe-db"},u=null;function s(){return(function(){if(!u){if(!process.env.COSMOS_DB_ENDPOINT||!process.env.COSMOS_DB_KEY)throw Error("Cosmos DB configuration missing. Please set COSMOS_DB_ENDPOINT and COSMOS_DB_KEY in your environment.");u=new n.CosmosClient({endpoint:l.endpoint,key:l.key})}return u})().database(l.databaseId)}function o(){return Date.now().toString()+Math.random().toString(36).substr(2,9)}function c(e,t=!1){let r=new Date().toISOString();return t||(e.createdAt=r),e.updatedAt=r,e}let d={user:{async create(e){let t=s().container("users"),r={id:o(),...c(e)},{resource:a}=await t.items.create(r);return a},async findUnique(e){let t=s().container("users");if(e.email){let{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.email = @email",parameters:[{name:"@email",value:e.email}]}).fetchAll();return r[0]}return null},async findMany(e){let t=s().container("users");if(e?.role){let{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.role = @role",parameters:[{name:"@role",value:e.role}]}).fetchAll();return r.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())}let{resources:r}=await t.items.query("SELECT * FROM c").fetchAll();return r.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())},async update(e,t){let r=s().container("users"),a=await this.findUnique(e);if(!a)throw Error("User not found");let n={...a,...c(t,!0)},{resource:i}=await r.item(e.id,e.id).replace(n);return i},async delete(e){let t=s().container("users"),{resource:r}=await t.item(e.id,e.id).delete();return r},async count(e){let t=s().container("users");if(e?.role){let{resources:r}=await t.items.query({query:"SELECT VALUE COUNT(1) FROM c WHERE c.role = @role",parameters:[{name:"@role",value:e.role}]}).fetchAll();return r[0]||0}let{resources:r}=await t.items.query("SELECT VALUE COUNT(1) FROM c").fetchAll();return r[0]||0}},property:{async create(e){let t=s().container("properties"),r={id:o(),...c(e)},{resource:a}=await t.items.create(r);return a},async findUnique(e){let t=s().container("properties");if(e.id)try{let{resource:r}=await t.item(e.id,e.id).read();return r}catch(e){if(404===e.code)return null;throw e}if(e.propertyId){let{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.propertyId = @propertyId",parameters:[{name:"@propertyId",value:e.propertyId}]}).fetchAll();return r[0]}return null},async findMany(e){let t=s().container("properties"),r="SELECT * FROM c",a=[];if(e?.isAvailable!==void 0||e?.isFeature!==void 0){let t=[];void 0!==e.isAvailable&&(t.push("c.isAvailable = @isAvailable"),a.push({name:"@isAvailable",value:e.isAvailable})),void 0!==e.isFeature&&(t.push("c.isFeature = @isFeature"),a.push({name:"@isFeature",value:e.isFeature})),r+=" WHERE "+t.join(" AND ")}let{resources:n}=await t.items.query({query:r,parameters:a}).fetchAll();return n.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())},async update(e,t){let r=s().container("properties"),a=await this.findUnique(e);if(!a)throw Error("Property not found");let n={...a,...c(t,!0)},{resource:i}=await r.item(e.id,e.id).replace(n);return i},async delete(e){let t=s().container("properties"),{resource:r}=await t.item(e.id,e.id).delete();return r},async count(){let e=s().container("properties"),{resources:t}=await e.items.query("SELECT VALUE COUNT(1) FROM c").fetchAll();return t[0]||0}},session:{async create(e){let t=s().container("sessions"),r={id:o(),...e,createdAt:new Date().toISOString()},{resource:a}=await t.items.create(r);return a},async findUnique(e){let t=s().container("sessions");if(e.id)try{let{resource:r}=await t.item(e.id,e.id).read();return r}catch(e){if(404===e.code)return null;throw e}if(e.token){let{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.token = @token",parameters:[{name:"@token",value:e.token}]}).fetchAll();return r[0]}return null},async findMany(e){let t=s().container("sessions");if(e?.userId){let{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.userId = @userId",parameters:[{name:"@userId",value:e.userId}]}).fetchAll();return r.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())}let{resources:r}=await t.items.query("SELECT * FROM c").fetchAll();return r.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())},async delete(e){let t=s().container("sessions"),{resource:r}=await t.item(e.id,e.id).delete();return r},async count(){let e=s().container("sessions"),{resources:t}=await e.items.query("SELECT VALUE COUNT(1) FROM c").fetchAll();return t[0]||0}},loginAttempt:{async create(e){let t=s().container("login_attempts"),r={id:o(),...e,createdAt:new Date().toISOString()},{resource:a}=await t.items.create(r);return a},async findMany(e){let t=s().container("login_attempts");if(e?.email){let{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.email = @email",parameters:[{name:"@email",value:e.email}]}).fetchAll();return r.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())}let{resources:r}=await t.items.query("SELECT * FROM c").fetchAll();return r.sort((e,t)=>new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime())},async count(){let e=s().container("login_attempts"),{resources:t}=await e.items.query("SELECT VALUE COUNT(1) FROM c").fetchAll();return t[0]||0}},pageContent:{async create(e){let t=s().container("page_contents"),r={id:o(),...c(e)},{resource:a}=await t.items.create(r);return a},async findMany(e){let t=s().container("page_contents"),r="SELECT * FROM c",a=[];if(e?.pageType!==void 0||e?.isActive!==void 0){let t=[];void 0!==e.pageType&&(t.push("c.pageType = @pageType"),a.push({name:"@pageType",value:e.pageType})),void 0!==e.isActive&&(t.push("c.isActive = @isActive"),a.push({name:"@isActive",value:e.isActive})),r+=" WHERE "+t.join(" AND ")}let{resources:n}=await t.items.query({query:r,parameters:a}).fetchAll();return n.sort((e,t)=>{let r=e.order||0,a=t.order||0;return r!==a?r-a:new Date(t.createdAt||"").getTime()-new Date(e.createdAt||"").getTime()})},async count(){let e=s().container("page_contents"),{resources:t}=await e.items.query("SELECT VALUE COUNT(1) FROM c").fetchAll();return t[0]||0}},siteSettings:{async create(e){let t=s().container("site_settings"),r={id:o(),...c(e)},{resource:a}=await t.items.create(r);return a},async findUnique(e){let t=s().container("site_settings"),{resources:r}=await t.items.query({query:"SELECT * FROM c WHERE c.key = @key",parameters:[{name:"@key",value:e.key}]}).fetchAll();return r[0]},async findMany(){let e=s().container("site_settings"),{resources:t}=await e.items.query("SELECT * FROM c").fetchAll();return t.sort((e,t)=>(e.key||"").localeCompare(t.key||""))},async count(){let e=s().container("site_settings"),{resources:t}=await e.items.query("SELECT VALUE COUNT(1) FROM c").fetchAll();return t[0]||0}},async $disconnect(){}};a()}catch(e){a(e)}})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972],()=>r(2929));module.exports=a})();
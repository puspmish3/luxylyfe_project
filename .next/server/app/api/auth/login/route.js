"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/login/route";
exports.ids = ["app/api/auth/login/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "constants":
/*!****************************!*\
  !*** external "constants" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("constants");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node:https");

/***/ }),

/***/ "node:os":
/*!**************************!*\
  !*** external "node:os" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:os");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_puspa_OneDrive_Documents_Work_luxylyfe_project_app_api_auth_login_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/login/route.ts */ \"(rsc)/./app/api/auth/login/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/login/route\",\n        pathname: \"/api/auth/login\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/login/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\puspa\\\\OneDrive\\\\Documents\\\\Work\\\\luxylyfe_project\\\\app\\\\api\\\\auth\\\\login\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_puspa_OneDrive_Documents_Work_luxylyfe_project_app_api_auth_login_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/login/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGbG9naW4lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNwdXNwYSU1Q09uZURyaXZlJTVDRG9jdW1lbnRzJTVDV29yayU1Q2x1eHlseWZlX3Byb2plY3QlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3B1c3BhJTVDT25lRHJpdmUlNUNEb2N1bWVudHMlNUNXb3JrJTVDbHV4eWx5ZmVfcHJvamVjdCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDOEM7QUFDM0g7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sdXh5bHlmZS8/OTU5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxwdXNwYVxcXFxPbmVEcml2ZVxcXFxEb2N1bWVudHNcXFxcV29ya1xcXFxsdXh5bHlmZV9wcm9qZWN0XFxcXGFwcFxcXFxhcGlcXFxcYXV0aFxcXFxsb2dpblxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXV0aC9sb2dpbi9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvbG9naW5cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2F1dGgvbG9naW4vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxwdXNwYVxcXFxPbmVEcml2ZVxcXFxEb2N1bWVudHNcXFxcV29ya1xcXFxsdXh5bHlmZV9wcm9qZWN0XFxcXGFwcFxcXFxhcGlcXFxcYXV0aFxcXFxsb2dpblxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXV0aC9sb2dpbi9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/auth/login/route.ts":
/*!*************************************!*\
  !*** ./app/api/auth/login/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n\n\n\n// Force dynamic rendering\nconst dynamic = \"force-dynamic\";\nasync function POST(request) {\n    try {\n        console.log(\"=== LOGIN API CALLED ===\");\n        const { email, password } = await request.json();\n        console.log(\"Login attempt for:\", email);\n        // Validate input\n        if (!email || !password) {\n            console.log(\"Missing required fields\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Email and password are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Log login attempt for tracking\n        const clientIP = request.headers.get(\"x-forwarded-for\") || request.headers.get(\"x-real-ip\") || \"unknown\";\n        try {\n            await _lib_database__WEBPACK_IMPORTED_MODULE_1__.db.loginAttempt.create({\n                email,\n                ipAddress: clientIP,\n                success: false\n            });\n            console.log(\"Login attempt logged\");\n        } catch (error) {\n            console.error(\"Failed to log login attempt:\", error);\n        }\n        // Find user by email only (Cosmos DB implementation)\n        console.log(\"Looking up user by email:\", email);\n        const user = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.db.user.findUnique({\n            email\n        });\n        if (!user) {\n            console.log(\"User not found for email:\", email);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid credentials\"\n            }, {\n                status: 401\n            });\n        }\n        console.log(\"User found:\", user.email, \"Role in DB:\", user.role);\n        // Verify password\n        console.log(\"Verifying password...\");\n        const isValidPassword = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.verifyPassword)(password, user.password);\n        console.log(\"Password valid:\", isValidPassword);\n        if (!isValidPassword) {\n            console.log(\"Invalid password for user:\", email);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid credentials\"\n            }, {\n                status: 401\n            });\n        }\n        // Generate JWT token\n        console.log(\"=== Generating JWT token ===\");\n        const token = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.generateToken)({\n            userId: user.id,\n            email: user.email,\n            role: user.role\n        });\n        console.log(\"Token generated successfully, length:\", token.length);\n        // Create session with proper expiry\n        const expiresAt = new Date();\n        expiresAt.setHours(expiresAt.getHours() + 24) // 24 hour expiry\n        ;\n        console.log(\"=== Creating session ===\");\n        console.log(\"Current time:\", new Date().toISOString());\n        console.log(\"Session expires at:\", expiresAt.toISOString());\n        console.log(\"User ID for session:\", user.id);\n        const session = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.db.session.create({\n            userId: user.id,\n            token,\n            expiresAt: expiresAt.toISOString()\n        });\n        console.log(\"Session created successfully with ID:\", session.id);\n        // Prepare response\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Login successful\",\n            user: {\n                id: user.id,\n                email: user.email,\n                role: user.role,\n                name: user.name\n            },\n            sessionId: session.id,\n            expiresAt: expiresAt.toISOString()\n        });\n        // Set secure HTTP-only cookie\n        console.log(\"=== Setting secure cookie ===\");\n        response.cookies.set(\"auth-token\", token, {\n            httpOnly: true,\n            secure: \"development\" === \"production\",\n            sameSite: \"lax\",\n            maxAge: 60 * 60 * 24,\n            path: \"/\"\n        });\n        console.log(\"=== Login completed successfully ===\");\n        return response;\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\",\n            details: error instanceof Error ? error.message : String(error)\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/login/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isAdmin: () => (/* binding */ isAdmin),\n/* harmony export */   isMember: () => (/* binding */ isMember),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Password encryption utilities\nconst hashPassword = async (password)=>{\n    const saltRounds = parseInt(process.env.BCRYPT_ROUNDS || \"12\");\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(password, saltRounds);\n};\nconst verifyPassword = async (password, hashedPassword)=>{\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(password, hashedPassword);\n};\n// JWT utilities\nconst generateToken = (payload)=>{\n    const secret = process.env.JWT_SECRET;\n    if (!secret) {\n        throw new Error(\"JWT_SECRET is not defined\");\n    }\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign(payload, secret, {\n        expiresIn: \"24h\"\n    });\n};\nconst verifyToken = (token)=>{\n    const secret = process.env.JWT_SECRET;\n    if (!secret) {\n        throw new Error(\"JWT_SECRET is not defined\");\n    }\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, secret);\n};\n// User role validation\nconst isAdmin = (userRole)=>{\n    return userRole === \"ADMIN\";\n};\nconst isMember = (userRole)=>{\n    return userRole === \"MEMBER\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkI7QUFDQztBQUU5QixnQ0FBZ0M7QUFDekIsTUFBTUUsZUFBZSxPQUFPQztJQUNqQyxNQUFNQyxhQUFhQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGFBQWEsSUFBSTtJQUN6RCxPQUFPLE1BQU1SLHFEQUFXLENBQUNHLFVBQVVDO0FBQ3JDLEVBQUM7QUFFTSxNQUFNTSxpQkFBaUIsT0FBT1AsVUFBa0JRO0lBQ3JELE9BQU8sTUFBTVgsd0RBQWMsQ0FBQ0csVUFBVVE7QUFDeEMsRUFBQztBQUVELGdCQUFnQjtBQUNULE1BQU1FLGdCQUFnQixDQUFDQztJQUM1QixNQUFNQyxTQUFTVCxRQUFRQyxHQUFHLENBQUNTLFVBQVU7SUFDckMsSUFBSSxDQUFDRCxRQUFRO1FBQ1gsTUFBTSxJQUFJRSxNQUFNO0lBQ2xCO0lBQ0EsT0FBT2hCLHdEQUFRLENBQUNhLFNBQVNDLFFBQVE7UUFBRUksV0FBVztJQUFNO0FBQ3RELEVBQUM7QUFFTSxNQUFNQyxjQUFjLENBQUNDO0lBQzFCLE1BQU1OLFNBQVNULFFBQVFDLEdBQUcsQ0FBQ1MsVUFBVTtJQUNyQyxJQUFJLENBQUNELFFBQVE7UUFDWCxNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFDQSxPQUFPaEIsMERBQVUsQ0FBQ29CLE9BQU9OO0FBQzNCLEVBQUM7QUFFRCx1QkFBdUI7QUFDaEIsTUFBTVEsVUFBVSxDQUFDQztJQUN0QixPQUFPQSxhQUFhO0FBQ3RCLEVBQUM7QUFFTSxNQUFNQyxXQUFXLENBQUNEO0lBQ3ZCLE9BQU9BLGFBQWE7QUFDdEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2x1eHlseWZlLy4vbGliL2F1dGgudHM/YmY3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJ1xyXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcclxuXHJcbi8vIFBhc3N3b3JkIGVuY3J5cHRpb24gdXRpbGl0aWVzXHJcbmV4cG9ydCBjb25zdCBoYXNoUGFzc3dvcmQgPSBhc3luYyAocGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiA9PiB7XHJcbiAgY29uc3Qgc2FsdFJvdW5kcyA9IHBhcnNlSW50KHByb2Nlc3MuZW52LkJDUllQVF9ST1VORFMgfHwgJzEyJylcclxuICByZXR1cm4gYXdhaXQgYmNyeXB0Lmhhc2gocGFzc3dvcmQsIHNhbHRSb3VuZHMpXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB2ZXJpZnlQYXNzd29yZCA9IGFzeW5jIChwYXNzd29yZDogc3RyaW5nLCBoYXNoZWRQYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XHJcbiAgcmV0dXJuIGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBoYXNoZWRQYXNzd29yZClcclxufVxyXG5cclxuLy8gSldUIHV0aWxpdGllc1xyXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVUb2tlbiA9IChwYXlsb2FkOiBhbnkpOiBzdHJpbmcgPT4ge1xyXG4gIGNvbnN0IHNlY3JldCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVRcclxuICBpZiAoIXNlY3JldCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdKV1RfU0VDUkVUIGlzIG5vdCBkZWZpbmVkJylcclxuICB9XHJcbiAgcmV0dXJuIGp3dC5zaWduKHBheWxvYWQsIHNlY3JldCwgeyBleHBpcmVzSW46ICcyNGgnIH0pXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB2ZXJpZnlUb2tlbiA9ICh0b2tlbjogc3RyaW5nKTogYW55ID0+IHtcclxuICBjb25zdCBzZWNyZXQgPSBwcm9jZXNzLmVudi5KV1RfU0VDUkVUXHJcbiAgaWYgKCFzZWNyZXQpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignSldUX1NFQ1JFVCBpcyBub3QgZGVmaW5lZCcpXHJcbiAgfVxyXG4gIHJldHVybiBqd3QudmVyaWZ5KHRva2VuLCBzZWNyZXQpXHJcbn1cclxuXHJcbi8vIFVzZXIgcm9sZSB2YWxpZGF0aW9uXHJcbmV4cG9ydCBjb25zdCBpc0FkbWluID0gKHVzZXJSb2xlOiBzdHJpbmcpOiBib29sZWFuID0+IHtcclxuICByZXR1cm4gdXNlclJvbGUgPT09ICdBRE1JTidcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGlzTWVtYmVyID0gKHVzZXJSb2xlOiBzdHJpbmcpOiBib29sZWFuID0+IHtcclxuICByZXR1cm4gdXNlclJvbGUgPT09ICdNRU1CRVInXHJcbn1cclxuIl0sIm5hbWVzIjpbImJjcnlwdCIsImp3dCIsImhhc2hQYXNzd29yZCIsInBhc3N3b3JkIiwic2FsdFJvdW5kcyIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsIkJDUllQVF9ST1VORFMiLCJoYXNoIiwidmVyaWZ5UGFzc3dvcmQiLCJoYXNoZWRQYXNzd29yZCIsImNvbXBhcmUiLCJnZW5lcmF0ZVRva2VuIiwicGF5bG9hZCIsInNlY3JldCIsIkpXVF9TRUNSRVQiLCJFcnJvciIsInNpZ24iLCJleHBpcmVzSW4iLCJ2ZXJpZnlUb2tlbiIsInRva2VuIiwidmVyaWZ5IiwiaXNBZG1pbiIsInVzZXJSb2xlIiwiaXNNZW1iZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _azure_cosmos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/cosmos */ \"(rsc)/./node_modules/@azure/cosmos/dist/esm/index.js\");\n// Database Client - Cosmos DB Primary Implementation\n// This replaces Prisma and provides a unified interface for the application\n\n// Cosmos DB configuration\nconst cosmosConfig = {\n    endpoint: process.env.COSMOS_DB_ENDPOINT,\n    key: process.env.COSMOS_DB_KEY,\n    databaseId: process.env.COSMOS_DB_DATABASE_NAME || \"luxylyfe-db\"\n};\n// Create Cosmos DB client\nlet cosmosClientInstance = null;\nfunction getCosmosClient() {\n    if (!cosmosClientInstance) {\n        if (!process.env.COSMOS_DB_ENDPOINT || !process.env.COSMOS_DB_KEY) {\n            throw new Error(\"Cosmos DB configuration missing. Please set COSMOS_DB_ENDPOINT and COSMOS_DB_KEY in your environment.\");\n        }\n        cosmosClientInstance = new _azure_cosmos__WEBPACK_IMPORTED_MODULE_0__.CosmosClient({\n            endpoint: cosmosConfig.endpoint,\n            key: cosmosConfig.key\n        });\n    }\n    return cosmosClientInstance;\n}\n// Get database reference\nfunction getCosmosDatabase() {\n    const client = getCosmosClient();\n    return client.database(cosmosConfig.databaseId);\n}\n// Helper function to generate IDs\nfunction generateId() {\n    return Date.now().toString() + Math.random().toString(36).substr(2, 9);\n}\n// Helper function to handle timestamps\nfunction addTimestamps(data, isUpdate = false) {\n    const now = new Date().toISOString();\n    if (!isUpdate) {\n        data.createdAt = now;\n    }\n    data.updatedAt = now;\n    return data;\n}\n// Database client implementation\nconst db = {\n    // User operations\n    user: {\n        async create (data) {\n            const container = getCosmosDatabase().container(\"users\");\n            const user = {\n                id: generateId(),\n                ...addTimestamps(data)\n            };\n            const { resource } = await container.items.create(user);\n            return resource;\n        },\n        async findUnique (where) {\n            const container = getCosmosDatabase().container(\"users\");\n            if (where.email) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT * FROM c WHERE c.email = @email\",\n                    parameters: [\n                        {\n                            name: \"@email\",\n                            value: where.email\n                        }\n                    ]\n                }).fetchAll();\n                // Always return the first match (should be unique by email)\n                return resources[0];\n            }\n            return null;\n        },\n        async findMany (where) {\n            const container = getCosmosDatabase().container(\"users\");\n            if (where?.role) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT * FROM c WHERE c.role = @role\",\n                    parameters: [\n                        {\n                            name: \"@role\",\n                            value: where.role\n                        }\n                    ]\n                }).fetchAll();\n                // Sort on client side to avoid index issues\n                return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n            }\n            const { resources } = await container.items.query(\"SELECT * FROM c\").fetchAll();\n            // Sort on client side to avoid index issues\n            return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n        },\n        async update (where, data) {\n            const container = getCosmosDatabase().container(\"users\");\n            const existing = await this.findUnique(where);\n            if (!existing) throw new Error(\"User not found\");\n            const updated = {\n                ...existing,\n                ...addTimestamps(data, true)\n            };\n            const { resource } = await container.item(where.id, where.id).replace(updated);\n            return resource;\n        },\n        async delete (where) {\n            const container = getCosmosDatabase().container(\"users\");\n            const { resource } = await container.item(where.id, where.id).delete();\n            return resource;\n        },\n        async count (where) {\n            const container = getCosmosDatabase().container(\"users\");\n            if (where?.role) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT VALUE COUNT(1) FROM c WHERE c.role = @role\",\n                    parameters: [\n                        {\n                            name: \"@role\",\n                            value: where.role\n                        }\n                    ]\n                }).fetchAll();\n                return resources[0] || 0;\n            }\n            const { resources } = await container.items.query(\"SELECT VALUE COUNT(1) FROM c\").fetchAll();\n            return resources[0] || 0;\n        }\n    },\n    // Property operations\n    property: {\n        async create (data) {\n            const container = getCosmosDatabase().container(\"properties\");\n            const property = {\n                id: generateId(),\n                ...addTimestamps(data)\n            };\n            const { resource } = await container.items.create(property);\n            return resource;\n        },\n        async findUnique (where) {\n            const container = getCosmosDatabase().container(\"properties\");\n            if (where.id) {\n                try {\n                    const { resource } = await container.item(where.id, where.id).read();\n                    return resource;\n                } catch (error) {\n                    if (error.code === 404) return null;\n                    throw error;\n                }\n            }\n            if (where.propertyId) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT * FROM c WHERE c.propertyId = @propertyId\",\n                    parameters: [\n                        {\n                            name: \"@propertyId\",\n                            value: where.propertyId\n                        }\n                    ]\n                }).fetchAll();\n                return resources[0];\n            }\n            return null;\n        },\n        async findMany (where) {\n            const container = getCosmosDatabase().container(\"properties\");\n            let query = \"SELECT * FROM c\";\n            const parameters = [];\n            if (where?.isAvailable !== undefined || where?.isFeature !== undefined) {\n                const conditions = [];\n                if (where.isAvailable !== undefined) {\n                    conditions.push(\"c.isAvailable = @isAvailable\");\n                    parameters.push({\n                        name: \"@isAvailable\",\n                        value: where.isAvailable\n                    });\n                }\n                if (where.isFeature !== undefined) {\n                    conditions.push(\"c.isFeature = @isFeature\");\n                    parameters.push({\n                        name: \"@isFeature\",\n                        value: where.isFeature\n                    });\n                }\n                query += \" WHERE \" + conditions.join(\" AND \");\n            }\n            // Remove ORDER BY to avoid index issues - sort on client side\n            const { resources } = await container.items.query({\n                query,\n                parameters\n            }).fetchAll();\n            // Sort on client side to avoid index issues\n            return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n        },\n        async update (where, data) {\n            const container = getCosmosDatabase().container(\"properties\");\n            const existing = await this.findUnique(where);\n            if (!existing) throw new Error(\"Property not found\");\n            const updated = {\n                ...existing,\n                ...addTimestamps(data, true)\n            };\n            const { resource } = await container.item(where.id, where.id).replace(updated);\n            return resource;\n        },\n        async delete (where) {\n            const container = getCosmosDatabase().container(\"properties\");\n            const { resource } = await container.item(where.id, where.id).delete();\n            return resource;\n        },\n        async count () {\n            const container = getCosmosDatabase().container(\"properties\");\n            const { resources } = await container.items.query(\"SELECT VALUE COUNT(1) FROM c\").fetchAll();\n            return resources[0] || 0;\n        }\n    },\n    // Session operations\n    session: {\n        async create (data) {\n            const container = getCosmosDatabase().container(\"sessions\");\n            const session = {\n                id: generateId(),\n                ...data,\n                createdAt: new Date().toISOString()\n            };\n            const { resource } = await container.items.create(session);\n            return resource;\n        },\n        async findUnique (where) {\n            const container = getCosmosDatabase().container(\"sessions\");\n            if (where.id) {\n                try {\n                    const { resource } = await container.item(where.id, where.id).read();\n                    return resource;\n                } catch (error) {\n                    if (error.code === 404) return null;\n                    throw error;\n                }\n            }\n            if (where.token) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT * FROM c WHERE c.token = @token\",\n                    parameters: [\n                        {\n                            name: \"@token\",\n                            value: where.token\n                        }\n                    ]\n                }).fetchAll();\n                return resources[0];\n            }\n            return null;\n        },\n        async findMany (where) {\n            const container = getCosmosDatabase().container(\"sessions\");\n            if (where?.userId) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT * FROM c WHERE c.userId = @userId\",\n                    parameters: [\n                        {\n                            name: \"@userId\",\n                            value: where.userId\n                        }\n                    ]\n                }).fetchAll();\n                // Sort on client side to avoid index issues\n                return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n            }\n            const { resources } = await container.items.query(\"SELECT * FROM c\").fetchAll();\n            // Sort on client side to avoid index issues\n            return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n        },\n        async delete (where) {\n            const container = getCosmosDatabase().container(\"sessions\");\n            const { resource } = await container.item(where.id, where.id).delete();\n            return resource;\n        },\n        async count () {\n            const container = getCosmosDatabase().container(\"sessions\");\n            const { resources } = await container.items.query(\"SELECT VALUE COUNT(1) FROM c\").fetchAll();\n            return resources[0] || 0;\n        }\n    },\n    // Login attempt operations\n    loginAttempt: {\n        async create (data) {\n            const container = getCosmosDatabase().container(\"login_attempts\");\n            const loginAttempt = {\n                id: generateId(),\n                ...data,\n                createdAt: new Date().toISOString()\n            };\n            const { resource } = await container.items.create(loginAttempt);\n            return resource;\n        },\n        async findMany (where) {\n            const container = getCosmosDatabase().container(\"login_attempts\");\n            if (where?.email) {\n                const { resources } = await container.items.query({\n                    query: \"SELECT * FROM c WHERE c.email = @email\",\n                    parameters: [\n                        {\n                            name: \"@email\",\n                            value: where.email\n                        }\n                    ]\n                }).fetchAll();\n                // Sort on client side to avoid index issues\n                return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n            }\n            const { resources } = await container.items.query(\"SELECT * FROM c\").fetchAll();\n            // Sort on client side to avoid index issues\n            return resources.sort((a, b)=>new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime());\n        },\n        async count () {\n            const container = getCosmosDatabase().container(\"login_attempts\");\n            const { resources } = await container.items.query(\"SELECT VALUE COUNT(1) FROM c\").fetchAll();\n            return resources[0] || 0;\n        }\n    },\n    // Page content operations\n    pageContent: {\n        async create (data) {\n            const container = getCosmosDatabase().container(\"page_contents\");\n            const pageContent = {\n                id: generateId(),\n                ...addTimestamps(data)\n            };\n            const { resource } = await container.items.create(pageContent);\n            return resource;\n        },\n        async findMany (where) {\n            const container = getCosmosDatabase().container(\"page_contents\");\n            let query = \"SELECT * FROM c\";\n            const parameters = [];\n            if (where?.pageType !== undefined || where?.isActive !== undefined) {\n                const conditions = [];\n                if (where.pageType !== undefined) {\n                    conditions.push(\"c.pageType = @pageType\");\n                    parameters.push({\n                        name: \"@pageType\",\n                        value: where.pageType\n                    });\n                }\n                if (where.isActive !== undefined) {\n                    conditions.push(\"c.isActive = @isActive\");\n                    parameters.push({\n                        name: \"@isActive\",\n                        value: where.isActive\n                    });\n                }\n                query += \" WHERE \" + conditions.join(\" AND \");\n            }\n            // Remove ORDER BY to avoid index issues - sort on client side\n            const { resources } = await container.items.query({\n                query,\n                parameters\n            }).fetchAll();\n            // Sort on client side to avoid index issues\n            return resources.sort((a, b)=>{\n                // Sort by order first, then by createdAt\n                const orderA = a.order || 0;\n                const orderB = b.order || 0;\n                if (orderA !== orderB) return orderA - orderB;\n                return new Date(b.createdAt || \"\").getTime() - new Date(a.createdAt || \"\").getTime();\n            });\n        },\n        async count () {\n            const container = getCosmosDatabase().container(\"page_contents\");\n            const { resources } = await container.items.query(\"SELECT VALUE COUNT(1) FROM c\").fetchAll();\n            return resources[0] || 0;\n        }\n    },\n    // Site settings operations\n    siteSettings: {\n        async create (data) {\n            const container = getCosmosDatabase().container(\"site_settings\");\n            const settings = {\n                id: generateId(),\n                ...addTimestamps(data)\n            };\n            const { resource } = await container.items.create(settings);\n            return resource;\n        },\n        async findUnique (where) {\n            const container = getCosmosDatabase().container(\"site_settings\");\n            const { resources } = await container.items.query({\n                query: \"SELECT * FROM c WHERE c.key = @key\",\n                parameters: [\n                    {\n                        name: \"@key\",\n                        value: where.key\n                    }\n                ]\n            }).fetchAll();\n            return resources[0];\n        },\n        async findMany () {\n            const container = getCosmosDatabase().container(\"site_settings\");\n            const { resources } = await container.items.query(\"SELECT * FROM c\").fetchAll();\n            // Sort on client side to avoid index issues\n            return resources.sort((a, b)=>(a.key || \"\").localeCompare(b.key || \"\"));\n        },\n        async count () {\n            const container = getCosmosDatabase().container(\"site_settings\");\n            const { resources } = await container.items.query(\"SELECT VALUE COUNT(1) FROM c\").fetchAll();\n            return resources[0] || 0;\n        }\n    },\n    // Utility function to disconnect (no-op for Cosmos DB)\n    async $disconnect () {\n        // Cosmos DB SDK handles connection pooling automatically\n        return;\n    }\n};\n// Export the db client as default (replaces Prisma)\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (db);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@azure","vendor-chunks/@typespec","vendor-chunks/debug","vendor-chunks/tslib","vendor-chunks/https-proxy-agent","vendor-chunks/agent-base","vendor-chunks/@azure-rest","vendor-chunks/http-proxy-agent","vendor-chunks/priorityqueuejs","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/semaphore","vendor-chunks/fast-json-stable-stringify","vendor-chunks/has-flag","vendor-chunks/semver","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpuspa%5COneDrive%5CDocuments%5CWork%5Cluxylyfe_project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();